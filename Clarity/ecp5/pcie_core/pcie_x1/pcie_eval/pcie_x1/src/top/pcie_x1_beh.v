
// pcie_beh.v generated by Lattice IP Model Creator version 1
// created on Wed, May 24, 2017  3:39:10 PM
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top































`timescale 1 ns / 100 ps
module pcie_x1_twa711c 
   (
   
   sys_clk,            
   rst_n,              
   pcie_x1_dgrx_data,          
   pcie_x1_dgrx_kcntl,         
   pcie_x1_dgrx_err,           

   
   dfrm_ddata,         
   dfrm_dllp_st,       
   dfrm_dllp_end,      
   dfrm_tdata,         
   dfrm_tval,          
   dfrm_st,            
   dfrm_end,           
   dfrm_edb,           
   dfrm_perr           
   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam uk2152c = 2'd0 ;
localparam yma961 = 2'd1 ;
localparam qt54b08 = 2'd0 ;
localparam jra5844 = 2'd1 ;
input                     sys_clk;
input                     rst_n;
input  [15:0]             pcie_x1_dgrx_data;
input  [1:0]              pcie_x1_dgrx_kcntl;
input  [1:0]              pcie_x1_dgrx_err;
output [15:0]             dfrm_ddata;
output                    dfrm_dllp_st;
output                    dfrm_dllp_end;
output [15:0]             dfrm_tdata;
output                    dfrm_tval;
output                    dfrm_st;
output                    dfrm_end;
output                    dfrm_edb;
output                    dfrm_perr;
wire                      dfrm_st;
wire                      dfrm_end;
wire                      dfrm_edb;
wire                      dfrm_perr;
reg    [1:0]              wybcc34;
reg    [1:0]              dze61a1;
reg                       pu30d0e;
reg                       tw86873;
reg                       wy3439a;
reg                       uxa1cd0;
reg                       vke684;
reg                       vi73423;
reg    [7:0]              qv9a11b;
reg                       lqd08dc;
reg    [15:0]             dfrm_ddata;
reg                       oh23716;
reg                       zm1b8b4;
reg    [15:0]             dfrm_tdata;
reg                       dfrm_tval;
reg                       bn168ed;
reg                       wlb476f;
reg                       swa3b7c;
wire   [15:0]             kf1dbe1;
reg [15 : 0] qtedf0c;
reg [1 : 0] uv6f864;
reg [1 : 0] dm7c325;
reg [1 : 0] bye192a;
reg [1 : 0] bnc952;
reg th64a97;
reg ng254be;
reg vk2a5f3;
reg ho52f9a;
reg qi97cd3;
reg mtbe699;
reg [7 : 0] blf34cd;
reg mt9a66f;
reg gbd337c;
reg fc99be4;
reg dzcdf22;
reg ip6f917;
reg lq7c8bd;
reg [15 : 0] rge45eb;
reg [2047:0] db22f5b;
wire [18:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 19,jceb7ea = 32'hfdffc68b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif






















assign kf1dbe1 = {qtedf0c[15:11], (qtedf0c[10:9] ^ dm7c325), qtedf0c[8:2], (qtedf0c[1:0] ^ dm7c325)};

assign byc0a5c = ((rge45eb[7:0]   == K28_2) & uv6f864[0]);
assign kq5c62c = ((rge45eb[15:8]  == K28_2) & uv6f864[1]);

assign cb2c3a3 = ((rge45eb[7:0]   == K27_7) & uv6f864[0]);
assign swa3b96 = ((rge45eb[15:8]  == K27_7) & uv6f864[1]);

assign ba96310 =  ((rge45eb[7:0]   == K29_7) & uv6f864[0]);
assign sw10550 =  ((rge45eb[15:8]  == K29_7) & uv6f864[1]);


assign nr5020e = ((rge45eb[7:0]   == K30_7) & uv6f864[0]);
assign jeefa5 = ((rge45eb[15:8]  == K30_7) & uv6f864[1]);



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qv9a11b  <= 8'd0;      lqd08dc   <= 1'd0;   end   else begin      qv9a11b  <= rge45eb[7:0];      lqd08dc   <= dm7c325[0];   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      wybcc34      <= uk2152c;      pu30d0e    <= 1'b0;      dfrm_ddata   <= 16'd0;      oh23716    <= 1'b0;      wy3439a         <= 1'b0;      vke684    <= 1'b0;   end   else begin      case(bye192a)         uk2152c: begin            oh23716    <= 1'b0;            wy3439a         <= 1'b0;            if (kq5c62c) begin               wybcc34   <= yma961;               pu30d0e <= 1'b1;               vke684 <= dm7c325[1];            end            else if (byc0a5c) begin               wybcc34   <= yma961;               pu30d0e <= 1'b0;               vke684 <= dm7c325[0];            end            else  begin               wybcc34   <= uk2152c;               pu30d0e <= 1'b0;               vke684 <= 1'b0;            end          end         yma961: begin            vke684     <= 1'b0;            if (sw10550 && byc0a5c) begin               wybcc34    <= yma961;               pu30d0e  <= 1'b0;               oh23716  <= 1'b0;               wy3439a       <= 1'b0;            end            else if (sw10550 && ~byc0a5c) begin               wybcc34    <= uk2152c;               pu30d0e  <= 1'b0;               oh23716  <= 1'b0;               wy3439a       <= 1'b0;            end            else if (ba96310) begin               wybcc34    <= uk2152c;               dfrm_ddata <= {blf34cd[7:0],rge45eb[15:8]};               pu30d0e  <= 1'b0;               oh23716  <= 1'b1;               wy3439a       <= |{mt9a66f,dm7c325[1], qi97cd3};            end            else begin               wybcc34    <= yma961;               dfrm_ddata <= (th64a97) ? {blf34cd[7:0],rge45eb[15:8]} : rge45eb;               oh23716  <= 1'b1;               wy3439a       <= (th64a97) ? |{mt9a66f,dm7c325[1],qi97cd3} : |{|dm7c325, qi97cd3};            end          end          default: begin               wybcc34   <= uk2152c;               pu30d0e <= 1'b0;               oh23716 <= 1'b0;               wy3439a      <= 1'b0;          end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      dze61a1    <= qt54b08;      tw86873  <= 1'b0;      dfrm_tdata <= 16'd0;      dfrm_tval  <= 1'b0;      uxa1cd0       <= 1'b0;      vi73423  <= 1'b0;   end   else begin      case(bnc952)         qt54b08: begin            dfrm_tval    <= 1'b0;            uxa1cd0         <= 1'b0;            if (swa3b96) begin               dze61a1   <= jra5844;               tw86873 <= 1'b1;               vi73423 <= dm7c325[1];            end            else if (cb2c3a3) begin               dze61a1   <= jra5844;               tw86873 <= 1'b0;               vi73423 <= dm7c325[0];            end            else  begin               dze61a1   <= qt54b08;               tw86873 <= 1'b0;               vi73423 <= 1'b0;            end         end         jra5844: begin               vi73423 <= 1'b0;            if ((sw10550 || jeefa5) && cb2c3a3) begin               dze61a1    <= jra5844;               tw86873  <= 1'b0;               dfrm_tval  <= 1'b0;               uxa1cd0       <= 1'b0;            end            else if ((sw10550 || jeefa5) && ~cb2c3a3) begin               dze61a1    <= qt54b08;               tw86873  <= 1'b0;               dfrm_tval  <= 1'b0;               uxa1cd0       <= 1'b0;            end            else if (ba96310 || nr5020e) begin               dze61a1    <= qt54b08;               dfrm_tdata <= {blf34cd[7:0],rge45eb[15:8]};               dfrm_tval  <= 1'b1;               uxa1cd0       <= |{mt9a66f,dm7c325[1],mtbe699};            end            else begin               dze61a1    <= jra5844;               dfrm_tdata <= (ng254be) ? {blf34cd[7:0],rge45eb[15:8]} : rge45eb;               dfrm_tval  <= 1'b1;               uxa1cd0       <= (ng254be) ? |{mt9a66f,dm7c325[1],mtbe699} : |{|dm7c325,mtbe699};            end          end          default: begin               dze61a1    <= qt54b08;               tw86873  <= 1'b0;               dfrm_tval  <= 1'b0;               uxa1cd0       <= 1'b0;          end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zm1b8b4 <= 1'd0;      bn168ed <= 1'd0;      wlb476f  <= 1'd0;      swa3b7c  <= 1'd0;   end   else begin      zm1b8b4 <= gbd337c;      bn168ed <= dfrm_tval;      wlb476f  <= ba96310;      swa3b7c  <= nr5020e;   end
end
assign  dfrm_dllp_st    = gbd337c & !fc99be4;
assign  dfrm_dllp_end   = (gbd337c) ? (ip6f917 | sw10550) : 1'b0;
assign  dfrm_st         = dfrm_tval & !dzcdf22;
assign  dfrm_end        = (dfrm_tval) ? (ip6f917 | sw10550) : 1'b0;
assign  dfrm_edb        = (dfrm_tval) ? (lq7c8bd | jeefa5) : 1'b0;
assign  dfrm_perr       = (vk2a5f3 | ho52f9a);


always@* begin qtedf0c<={pcie_x1_dgrx_data>>1,ux17adf[0]};uv6f864<={pcie_x1_dgrx_kcntl>>1,ux17adf[1]};dm7c325<={pcie_x1_dgrx_err>>1,ux17adf[2]};bye192a<={wybcc34>>1,ux17adf[3]};bnc952<={dze61a1>>1,ux17adf[4]};th64a97<=ux17adf[5];ng254be<=ux17adf[6];vk2a5f3<=ux17adf[7];ho52f9a<=ux17adf[8];qi97cd3<=ux17adf[9];mtbe699<=ux17adf[10];blf34cd<={qv9a11b>>1,ux17adf[11]};mt9a66f<=ux17adf[12];gbd337c<=ux17adf[13];fc99be4<=ux17adf[14];dzcdf22<=ux17adf[15];ip6f917<=ux17adf[16];lq7c8bd<=ux17adf[17];rge45eb<={kf1dbe1>>1,ux17adf[18]};end
always@* begin db22f5b[2047]<=pcie_x1_dgrx_kcntl[0];db22f5b[2046]<=pcie_x1_dgrx_err[0];db22f5b[2044]<=wybcc34[0];db22f5b[2040]<=dze61a1[0];db22f5b[2032]<=pu30d0e;db22f5b[2017]<=tw86873;db22f5b[1987]<=wy3439a;db22f5b[1926]<=uxa1cd0;db22f5b[1805]<=vke684;db22f5b[1679]<=wlb476f;db22f5b[1562]<=vi73423;db22f5b[1310]<=swa3b7c;db22f5b[1076]<=qv9a11b[0];db22f5b[1023]<=pcie_x1_dgrx_data[0];db22f5b[839]<=bn168ed;db22f5b[572]<=kf1dbe1[0];db22f5b[419]<=zm1b8b4;db22f5b[209]<=oh23716;db22f5b[104]<=lqd08dc;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule


























































`timescale 1 ns / 100 ps
module pcie_x1_zm99d2e #(
   parameter D_WIDTH      = 64 ) (
   input wire                   sys_clk,        
   input wire                   rst_n,          
   input wire [D_WIDTH -1:0]    tdmux_data,     
   input wire                   tdmux_st,       
   input wire                   tdmux_end,      
   input wire                   tdmux_edb,      
   `ifdef X4
      input wire                suf0301,     
      input wire                tdmux_val,      
      input wire                xlc047,     
   `endif 
   `ifdef X1
      input wire                tdmux_dllp_st,  
      input wire                tdmux_dllp_end, 
   `endif 
   input wire                   tdmux_skp,      

   output reg [D_WIDTH -1:0]   ou3eaaa,       
   output reg [D_WIDTH/8-1:0]  dbaaa80,      
   output reg                  zx55407,        
   output reg                  hdaa03f            );
localparam K27_7 = 8'hFB ;
localparam K28_2 = 8'h5C ;
localparam K29_7 = 8'hFD ;
localparam K30_7 = 8'hFE ;

`ifdef X4
reg [7:0]              lqfef62;

`endif

`ifdef X1

`endif
reg [D_WIDTH - 1 : 0] hqbd894;
reg nrec4a3;
reg yk6251f;
reg cb128f8;
reg fp947c5;
reg [2047:0] db22f5b;
wire [4:0] ux17adf;

`ifdef X4

`endif

`ifdef X1

`endif

localparam ribd6fd = 5,jceb7ea = 32'hfdffc68b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X1


`endif













`ifdef X4
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         ou3eaaa  <= 'd0;         dbaaa80 <= 'd0;         hdaa03f   <= 'd0;      end      else if (tdmux_val) begin         hdaa03f   <= fp947c5;         case(1'b1)            xlc047 : begin               ou3eaaa  <= {K28_2, hqbd894[55:8],K29_7};               dbaaa80 <= 8'b1000_0001;            end            nrec4a3 : begin               ou3eaaa  <= {K27_7, hqbd894[63:8]};               dbaaa80 <= 8'b1000_0000;            end            yk6251f : begin               if(suf0301) begin                  ou3eaaa  <= {lqfef62[7:0], hqbd894[63:48],K29_7, 32'd0};                  dbaaa80 <= 8'b0001_0000;               end               else begin                  ou3eaaa  <= {lqfef62[7:0], hqbd894[63:16], K29_7};                  dbaaa80 <= 8'b0000_0001;               end            end            cb128f8 : begin               if(suf0301) begin                  ou3eaaa  <= {lqfef62[7:0], hqbd894[63:48],K30_7, 32'd0};                  dbaaa80 <= 8'b0001_0000;               end               else begin                  ou3eaaa  <= {lqfef62[7:0], hqbd894[63:16], K30_7};                  dbaaa80 <= 8'b0000_0001;               end            end            default : begin               ou3eaaa  <= {lqfef62[7:0], hqbd894[63:8]};               dbaaa80 <= 8'b0000_0000;            end         endcase      end      else begin         hdaa03f <= 1'b0;      end   end      always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         lqfef62 <= 'd0;      else if (tdmux_val)         lqfef62 <= hqbd894[7:0];   end      always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         zx55407   <= 1'b0;      else if (fp947c5)         zx55407   <= 1'b0;      else         zx55407   <= tdmux_val;   end

`endif




`ifdef X1
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         ou3eaaa  <= 16'd0;         dbaaa80 <= 2'd0;         hdaa03f   <= 1'd0;         zx55407   <= 1'd0;      end      else begin         hdaa03f   <= fp947c5;         case(1'b1)            tdmux_dllp_st : begin               zx55407   <= 1'b1;               ou3eaaa  <= {K28_2, hqbd894[7:0]};               dbaaa80 <= 2'b10;            end            tdmux_dllp_end : begin               zx55407   <= 1'b1;               ou3eaaa  <= {hqbd894[15:8],K29_7};               dbaaa80 <= 2'b01;            end            nrec4a3 : begin               zx55407   <= 1'b1;               ou3eaaa  <= {K27_7, hqbd894[7:0]};               dbaaa80 <= 2'b10;            end            yk6251f : begin               zx55407   <= 1'b1;               ou3eaaa  <= {hqbd894[15:8], K29_7};               dbaaa80 <= 2'b01;            end            cb128f8 : begin               zx55407   <= 1'b1;               ou3eaaa  <= {hqbd894[15:8], K30_7};               dbaaa80 <= 2'b01;            end            fp947c5 : begin               zx55407   <= 1'b0;            end            default : begin               zx55407   <= 1'b1;               ou3eaaa  <= hqbd894;               dbaaa80 <= 2'b00;            end         endcase      end   end

`endif



always@* begin hqbd894<={tdmux_data>>1,ux17adf[0]};nrec4a3<=ux17adf[1];yk6251f<=ux17adf[2];cb128f8<=ux17adf[3];fp947c5<=ux17adf[4];end
always@* begin db22f5b[2047]<=tdmux_st;db22f5b[2046]<=tdmux_end;db22f5b[2044]<=tdmux_edb;db22f5b[2040]<=tdmux_skp;db22f5b[1023]<=tdmux_data[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule

































































`timescale 1 ns / 100 ps
module pcie_x1_zk577b4 #(
   parameter LANE_WIDTH   = 4 ,   parameter D_WIDTH      = 64 ) (
   input wire                     sys_clk,         
   input wire                     rst_n,           
   input wire [D_WIDTH -1:0]      ou3eaaa,       
   input wire [D_WIDTH/8-1:0]     dbaaa80,      
   input wire                     zx55407,        
   input wire                     hdaa03f,        
   input wire [D_WIDTH -1:0]      mrdc583,        
   input wire [D_WIDTH/8-1:0]     zz160ed,       
   input wire [D_WIDTH/8-1:0]     xy83b76,      
   input wire [LANE_WIDTH-1:0]    uvedd94,         
   input wire [LANE_WIDTH-1:0]    ho76527,    
   `ifdef X4
      input wire [2:0]            ltssm_cfgln_sum, 
   `endif

   output reg [D_WIDTH -1:0]      frm_data,         
   output reg [D_WIDTH/8-1:0]     frm_kcntl,        
   output reg [D_WIDTH/8-1:0]     frm_fndisp,       
   output reg [LANE_WIDTH-1:0]    frm_eidle_tx,     
   output reg                     frm_val              );
reg [D_WIDTH -1:0]     ho5da06;
reg [D_WIDTH -1:0]     me68195;
reg                    th40ca9;
reg                    db654f;
localparam K28_0 = 8'h1C ;
localparam K28_5 = 8'hBC ;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif
reg [D_WIDTH - 1 : 0] bl4ffa8;
reg [D_WIDTH / 8 - 1 : 0] lqfea34;
reg mef51a2;
reg ria8d10;
reg [D_WIDTH - 1 : 0] aa34410;
reg [D_WIDTH / 8 - 1 : 0] ie10402;
reg [D_WIDTH / 8 - 1 : 0] ou10089;
reg [LANE_WIDTH - 1 : 0] wl224c;
reg [LANE_WIDTH - 1 : 0] fc8932b;
reg [D_WIDTH - 1 : 0] ww4cad1;
reg en65689;
reg aa2b44d;
reg [2047:0] db22f5b;
wire [11:0] ux17adf;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

localparam ribd6fd = 12,jceb7ea = 32'hfdffca8b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif





















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      frm_data     <= {(D_WIDTH){1'b0}};      frm_kcntl    <= 'd0;      frm_fndisp   <= 'd0;      frm_eidle_tx <= 'd0;      frm_val      <= 'd0;      db654f   <= 'd0;   end   else begin      frm_eidle_tx    <= fc8932b;



`ifdef X1
         case (1'b1)            |wl224c :  begin               frm_data[15:0]  <= wl224c ? aa34410[15:0] : 16'h0000;               frm_kcntl[1:0]  <= wl224c ? ie10402[1:0] : 2'b00;               frm_fndisp[1:0] <= wl224c ? ou10089[1:0] : 2'b00;               frm_val         <= 1'b1;            end            mef51a2 : begin               frm_data  <= bl4ffa8;               frm_kcntl <= lqfea34;               frm_fndisp<= 'd0;               frm_val   <= 1'b1;            end    ria8d10: begin               frm_data  <= (en65689) ? ho5da06 : ww4cad1;               frm_kcntl  <= {(D_WIDTH/8){1'b1}};               frm_fndisp <= 'd0;               frm_val    <= 1'b1;            end            default :  begin               frm_data   <= {(D_WIDTH){1'b0}};               frm_kcntl  <= 'd0;               frm_fndisp <= 'd0;               frm_val <= 'd0;            end         endcase


`endif



`ifdef X4
         if (!mef51a2 && |wl224c)            db654f <= 'b1;         else if (!(|wl224c))            db654f <= 'b0; casex ({(mef51a2 & ~aa2b44d),ria8d10,|wl224c})            3'b1xx : begin               frm_data  <= bl4ffa8;               frm_kcntl <= lqfea34;               frm_fndisp<= 'd0;               frm_val   <= 1'b1;            end            3'b01x : begin               frm_data  <= (en65689) ? ww4cad1 : ho5da06;               frm_kcntl  <= {(D_WIDTH/8){1'b1}};               frm_fndisp <= 'd0;               frm_val    <= 1'b1;            end            3'b001 : begin               frm_data[63:48] <= wl224c[3] ? aa34410[63:48] : 16'h0000;               frm_data[47:32] <= wl224c[2] ? aa34410[47:32] : 16'h0000;               frm_data[31:16] <= wl224c[1] ? aa34410[31:16] : 16'h0000;               frm_data[15:0]  <= wl224c[0] ? aa34410[15:0] : 16'h0000;               frm_kcntl[7:6]  <= wl224c[3] ? ie10402[7:6] : 2'b00;               frm_kcntl[5:4]  <= wl224c[2] ? ie10402[5:4] : 2'b00;               frm_kcntl[3:2]  <= wl224c[1] ? ie10402[3:2] : 2'b00;               frm_kcntl[1:0]  <= wl224c[0] ? ie10402[1:0] : 2'b00;               frm_fndisp[7:6] <= wl224c[3] ? ou10089[7:6] : 2'b00;               frm_fndisp[5:4] <= wl224c[2] ? ou10089[5:4] : 2'b00;               frm_fndisp[3:2] <= wl224c[1] ? ou10089[3:2] : 2'b00;               frm_fndisp[1:0] <= wl224c[0] ? ou10089[1:0] : 2'b00;               frm_val    <= 1'b1;            end            default :  begin               frm_data   <= {(D_WIDTH){1'b0}};               frm_kcntl  <= 'd0;               frm_fndisp <= 'd0;               frm_val <= (ltssm_cfgln_sum == 3'd4) ? 1'b1 : 1'b0;            end         endcase


`endif
   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      th40ca9 <= 1'b0;   else if (ria8d10)      th40ca9 <= ~en65689;
end













always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ho5da06 <= {(D_WIDTH){1'b0}};      me68195 <= {(D_WIDTH){1'b0}};   end   else begin


`ifdef X4
         case(ltssm_cfgln_sum)            3'd1: begin                ho5da06 <= {K28_5,  K28_0, K28_0, K28_0,K28_5, K28_0, K28_0, K28_0};                me68195 <= {K28_5,  K28_0, K28_0, K28_0,K28_5, K28_0, K28_0, K28_0};            end            3'd2: begin                ho5da06 <= {K28_5,  K28_5, K28_0, K28_0,K28_0, K28_0, K28_0, K28_0};                me68195 <= {K28_5,  K28_5, K28_0, K28_0,K28_0, K28_0, K28_0, K28_0};            end            3'd4: begin                ho5da06 <= {K28_5,  K28_5, K28_5, K28_5,K28_0, K28_0, K28_0, K28_0};                me68195 <= {K28_0,  K28_0, K28_0, K28_0,K28_0, K28_0, K28_0, K28_0};            end         endcase


`endif



`ifdef X1
         me68195 <= {K28_5, K28_0};         ho5da06 <= {K28_0, K28_0};


`endif
   end
end
always@* begin bl4ffa8<={ou3eaaa>>1,ux17adf[0]};lqfea34<={dbaaa80>>1,ux17adf[1]};mef51a2<=ux17adf[2];ria8d10<=ux17adf[3];aa34410<={mrdc583>>1,ux17adf[4]};ie10402<={zz160ed>>1,ux17adf[5]};ou10089<={xy83b76>>1,ux17adf[6]};wl224c<={uvedd94>>1,ux17adf[7]};fc8932b<={ho76527>>1,ux17adf[8]};ww4cad1<={me68195>>1,ux17adf[9]};en65689<=ux17adf[10];aa2b44d<=ux17adf[11];end
always@* begin db22f5b[2047]<=dbaaa80[0];db22f5b[2046]<=zx55407;db22f5b[2044]<=hdaa03f;db22f5b[2040]<=mrdc583[0];db22f5b[2032]<=zz160ed[0];db22f5b[2017]<=xy83b76[0];db22f5b[1987]<=uvedd94[0];db22f5b[1926]<=ho76527[0];db22f5b[1804]<=me68195[0];db22f5b[1560]<=th40ca9;db22f5b[1072]<=db654f;db22f5b[1023]<=ou3eaaa[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






































































`timescale 1 ns / 100 ps
module pcie_x1_tj94dcd (
   input wire                sys_clk,           
   input wire                rst_n,             
   input wire [9:0]          SKP_INS_CNT,       
   input wire                jpcdc79,           
   input wire [3:0]          fn6e3cf,       
   input wire                pol_compliance,    
   `ifdef X4
      input wire [2:0]       ltssm_cfgln_sum,   
   `endif

   `ifdef X1
      output wire [1:0]      rg79fbd,        
      output wire            necfdeb,           
   `endif
   `ifdef X4
      output reg [1:0]       rg79fbd,        
      output reg             necfdeb,           
   `endif
   output reg [3:0]          lsbd6b4            
) ;
reg [10:0]                 neeb5a2;
reg                        xj5ad12;
localparam L0s       = 4'd4 ;
localparam L1        = 4'd5 ;
localparam L2        = 4'd6 ;

`ifdef X1

`endif

`ifdef X4

`endif
reg [9 : 0] sj12f62;
reg aa97b15;
reg [3 : 0] ngbd8a9;
reg jpec54b;
reg su62a5f;
reg [2047:0] db22f5b;
wire [4:0] ux17adf;

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 5,jceb7ea = 32'hfdffe06b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif


`ifdef X4


`endif


















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      neeb5a2 <= 11'h000 ;   else if (neeb5a2 == {1'b0,sj12f62} || ngbd8a9 == L0s || ngbd8a9 == L1 || ngbd8a9 == L2 || jpec54b )      neeb5a2 <= 11'h000 ;   else      neeb5a2 <= neeb5a2 + 11'h001 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      xj5ad12   <= 1'b0 ;   else if (neeb5a2 == 11'd1)      xj5ad12   <= 1'b1 ;   else      xj5ad12   <= 1'b0 ;
end





`ifdef X1
   assign rg79fbd = su62a5f;   assign necfdeb   = su62a5f;


`endif



`ifdef X4
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         necfdeb   <= 1'b0;         rg79fbd <= 'd0;      end      else begin         necfdeb   <= su62a5f;         if (ltssm_cfgln_sum == 3'd1)             rg79fbd <= 2'd1;         else             rg79fbd <= 2'd2;      end   end

`endif





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      lsbd6b4 <= 4'd0;   end   else if (aa97b15) begin      lsbd6b4 <= 4'd0;   end   else if (necfdeb) begin      lsbd6b4 <= lsbd6b4 + 1'b1;   end
end
always@* begin sj12f62<={SKP_INS_CNT>>1,ux17adf[0]};aa97b15<=ux17adf[1];ngbd8a9<={fn6e3cf>>1,ux17adf[2]};jpec54b<=ux17adf[3];su62a5f<=ux17adf[4];end
always@* begin db22f5b[2047]<=jpcdc79;db22f5b[2046]<=fn6e3cf[0];db22f5b[2044]<=pol_compliance;db22f5b[2041]<=xj5ad12;db22f5b[1023]<=SKP_INS_CNT[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule


















































`timescale 1 ns / 100 ps
module pcie_x1_twbd13a #(
   parameter LANE_WIDTH   = 4 ,   parameter D_WIDTH      = 64 ) (
   input wire                   sys_clk,        
   input wire                   rst_n,          
   input wire [9:0]             SKP_INS_CNT,    
   input wire [D_WIDTH -1:0]    tdmux_data,     
   input wire                   tdmux_st,       
   input wire                   tdmux_end,      
   input wire                   tdmux_edb,      
   `ifdef X4
      input wire                suf0301,     
      input wire                tdmux_val,      
      input wire                xlc047,     
      input wire [2:0]          ltssm_cfgln_sum,
   `endif 
   `ifdef X1
      input wire                tdmux_dllp_st,  
      input wire                tdmux_dllp_end, 
   `endif 
   input wire                   tdmux_skp,      
   input wire [D_WIDTH -1:0]    mrdc583,       
   input wire [D_WIDTH/8-1:0]   zz160ed,      
   input wire [D_WIDTH/8-1:0]   xy83b76,     
   input wire [LANE_WIDTH-1:0]  uvedd94,        
   input wire [LANE_WIDTH-1:0]  ho76527,   
   input wire [LANE_WIDTH-1:0]  ukbc740,    
   input wire [3:0]             fn6e3cf,    
   input wire                   pol_compliance, 

   output wire [3:0]            qte803d,    
   output wire [1:0]            zx401ed, 
   output wire                  swf6e,   
   output wire [D_WIDTH -1:0]   frm_data,       
   output wire [D_WIDTH/8-1:0]  frm_kcntl,      
   output wire [D_WIDTH/8-1:0]  frm_fndisp,     
   output wire [LANE_WIDTH-1:0] frm_eidle_tx,   
   output wire                  frm_val            );
wire [D_WIDTH -1:0]     ou3eaaa;
wire [D_WIDTH/8-1:0]    dbaaa80;
wire [1:0]              rg79fbd;
wire                    kd7fb3d;

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif 

`ifdef X4

`endif
reg rst_n_split;
reg [9 : 0] sj12f62;
reg [D_WIDTH - 1 : 0] hqbd894;
reg nrec4a3;
reg yk6251f;
reg cb128f8;
reg fp947c5;
reg [D_WIDTH - 1 : 0] aa34410;
reg [D_WIDTH / 8 - 1 : 0] ie10402;
reg [D_WIDTH / 8 - 1 : 0] ou10089;
reg [LANE_WIDTH - 1 : 0] wl224c;
reg [LANE_WIDTH - 1 : 0] fc8932b;
reg [LANE_WIDTH - 1 : 0] ie2ecee;
reg [3 : 0] ngbd8a9;
reg jpec54b;
reg [D_WIDTH / 8 - 1 : 0] lqfea34;
reg [1 : 0] hb71602;
reg fp8b016;
reg [2047:0] db22f5b;
wire [17:0] ux17adf;


`ifdef X4

`endif

`ifdef X1

`endif


`ifdef X4

`endif 


`ifdef X4

`endif

localparam ribd6fd = 18,jceb7ea = 32'hfdffca8b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif 


`ifdef X4


`endif





pcie_x1_zm99d2e #(   .D_WIDTH        ( D_WIDTH ))   thec812 (      .sys_clk        (sys_clk),   .rst_n          (rst_n_split),   .tdmux_data     (hqbd894),   .tdmux_st       (nrec4a3),   .tdmux_end      (yk6251f),   .tdmux_edb      (cb128f8),


`ifdef X4
      .suf0301  (suf0301),      .tdmux_val   (tdmux_val),      .xlc047  (xlc047),


`endif



`ifdef X1
      .tdmux_dllp_st  (tdmux_dllp_st),      .tdmux_dllp_end (tdmux_dllp_end),


`endif
   .tdmux_skp      (fp947c5),      .ou3eaaa      (ou3eaaa),   .dbaaa80     (dbaaa80),   .zx55407       (zx55407),   .hdaa03f       (hdaa03f)   );



pcie_x1_tj94dcd fc2fe65 (      .sys_clk            (sys_clk),   .rst_n              (rst_n_split),   .SKP_INS_CNT        (sj12f62),   .jpcdc79            (|ie2ecee),   .fn6e3cf        (ngbd8a9),   .pol_compliance     (jpec54b),


`ifdef X4
      .ltssm_cfgln_sum (ltssm_cfgln_sum),


`endif 

      .lsbd6b4             (qte803d),   .rg79fbd          (zx401ed),   .necfdeb            (swf6e)   );



pcie_x1_zk577b4 # (   .LANE_WIDTH      ( LANE_WIDTH ),   .D_WIDTH         ( D_WIDTH ))   nefed6e (      .sys_clk         (sys_clk),   .rst_n           (rst_n_split),   .ou3eaaa       (ou3eaaa),   .zx55407        (zx55407),   .dbaaa80      (lqfea34),   .hdaa03f        (hdaa03f),   .mrdc583        (aa34410),   .uvedd94         (wl224c),   .zz160ed       (ie10402),   .xy83b76      (ou10089),   .ho76527    (fc8932b),


`ifdef X4
      .ltssm_cfgln_sum (ltssm_cfgln_sum),


`endif

      .frm_data        (frm_data),   .frm_kcntl       (frm_kcntl),   .frm_fndisp      (frm_fndisp),   .frm_eidle_tx    (frm_eidle_tx),   .frm_val         (frm_val)   );
always@* begin rst_n_split<=ux17adf[0];sj12f62<={SKP_INS_CNT>>1,ux17adf[1]};hqbd894<={tdmux_data>>1,ux17adf[2]};nrec4a3<=ux17adf[3];yk6251f<=ux17adf[4];cb128f8<=ux17adf[5];fp947c5<=ux17adf[6];aa34410<={mrdc583>>1,ux17adf[7]};ie10402<={zz160ed>>1,ux17adf[8]};ou10089<={xy83b76>>1,ux17adf[9]};wl224c<={uvedd94>>1,ux17adf[10]};fc8932b<={ho76527>>1,ux17adf[11]};ie2ecee<={ukbc740>>1,ux17adf[12]};ngbd8a9<={fn6e3cf>>1,ux17adf[13]};jpec54b<=ux17adf[14];lqfea34<={dbaaa80>>1,ux17adf[15]};hb71602<={rg79fbd>>1,ux17adf[16]};fp8b016<=ux17adf[17];end
always@* begin db22f5b[2047]<=SKP_INS_CNT[0];db22f5b[2046]<=tdmux_data[0];db22f5b[2044]<=tdmux_st;db22f5b[2040]<=tdmux_end;db22f5b[2032]<=tdmux_edb;db22f5b[2017]<=tdmux_skp;db22f5b[1987]<=mrdc583[0];db22f5b[1926]<=zz160ed[0];db22f5b[1804]<=xy83b76[0];db22f5b[1560]<=uvedd94[0];db22f5b[1550]<=rg79fbd[0];db22f5b[1072]<=ho76527[0];db22f5b[1052]<=kd7fb3d;db22f5b[1023]<=rst_n;db22f5b[775]<=dbaaa80[0];db22f5b[387]<=pol_compliance;db22f5b[193]<=fn6e3cf[0];db22f5b[96]<=ukbc740[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






































































`timescale 1 ns / 100 ps
module pcie_x1_dgtx 
   (
   
   sys_clk,            
   rst_n,              

   frm_data,           
   frm_kcntl,          
   frm_eidle_tx,       
   frm_fndisp,         
   frm_val,            
   ltssm_config_ln,    
   ltssm_cfgln_sum,    
   ltssm_l0,           

   
   pcie_x1_dgtx_data,          
   pcie_x1_dgtx_kcntl,         
   pcie_x1_dgtx_eidle_tx,      
   pcie_x1_dgtx_fndisp         
   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                     sys_clk;
input                     rst_n;
input  [D_WIDTH-1:0]      frm_data;
input  [(D_WIDTH/8)-1:0]  frm_kcntl;
input  [LANE_WIDTH-1:0]   frm_eidle_tx;
input  [7:0]              frm_fndisp;
input                     frm_val;
input  [LANE_WIDTH-1:0]   ltssm_config_ln;
input  [2:0]              ltssm_cfgln_sum;
input                     ltssm_l0;
output [D_WIDTH-1:0]      pcie_x1_dgtx_data;
output [(D_WIDTH/8)-1:0]  pcie_x1_dgtx_kcntl;
output [LANE_WIDTH-1:0]   pcie_x1_dgtx_eidle_tx;
output [7:0]              pcie_x1_dgtx_fndisp;
reg   [D_WIDTH-1:0]       pcie_x1_dgtx_data;
reg   [(D_WIDTH/8)-1:0]   pcie_x1_dgtx_kcntl;
reg   [LANE_WIDTH-1:0]    pcie_x1_dgtx_eidle_tx;
reg   [7:0]               pcie_x1_dgtx_fndisp;
reg   [D_WIDTH-1:0]       cm56b5e;
reg   [(D_WIDTH/8)-1:0]   riad78f;
reg   [LANE_WIDTH-1:0]    en5e3df;
reg   [7:0]               tuf1efc;
reg an8f7e3, ld7bf1d;

`ifdef ALL_MODES

`endif
reg [D_WIDTH - 1 : 0] thfc773;
reg [(D_WIDTH / 8) - 1 : 0] ep1dcf7;
reg [LANE_WIDTH - 1 : 0] rg73de2;
reg [7 : 0] hd9ef12;
reg wjf7897;
reg [LANE_WIDTH - 1 : 0] she25e0;
reg [2 : 0] gd12f04;
reg ie97825;
reg [D_WIDTH - 1 : 0] mee0948;
reg [(D_WIDTH / 8) - 1 : 0] zm25203;
reg [LANE_WIDTH - 1 : 0] ho480dd;
reg [7 : 0] ld406ea;
reg nt3756;
reg fc1bab7;
reg [2047:0] db22f5b;
wire [13:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef ALL_MODES

`endif

localparam ribd6fd = 14,jceb7ea = 32'hfdffd42b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef ALL_MODES


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cm56b5e     <= 'd0;      riad78f    <= 'd0;      en5e3df <= 'hF;      tuf1efc   <= 'd0;   end   else begin      en5e3df <= rg73de2;      tuf1efc   <= hd9ef12;      if (wjf7897) begin         cm56b5e     <= thfc773;         riad78f    <= ep1dcf7;                        end      else begin         case (gd12f04)            'd1: begin               cm56b5e     <= {mee0948[47:0],16'h0};               riad78f    <= {zm25203[5:0],2'h0};            end            'd2: begin               cm56b5e     <= {mee0948[31:0],32'h0};               riad78f    <= {zm25203[3:0],4'h0};            end            'd4: begin               cm56b5e     <= mee0948;               riad78f    <= zm25203;            end            default: begin                  cm56b5e     <= {mee0948[47:0],16'h0};               riad78f    <= {zm25203[5:0],2'h0};            end         endcase      end   end
end
























always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      an8f7e3  <= 1'b0;      ld7bf1d  <= 1'b0;   end   else begin      an8f7e3  <= ie97825;      ld7bf1d  <= nt3756;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pcie_x1_dgtx_data     <= 'd0;      pcie_x1_dgtx_kcntl    <= 'd0;      pcie_x1_dgtx_eidle_tx <= 'hF;      pcie_x1_dgtx_fndisp   <= 'd0;   end      else if (fc1bab7) begin      case(she25e0)                  4'b1000: begin            pcie_x1_dgtx_data     <=  {mee0948[63:48],16'h0,16'h0,16'h0};            pcie_x1_dgtx_kcntl    <=  {zm25203[7:6],2'h0,2'h0,2'h0};            pcie_x1_dgtx_eidle_tx <=  {ho480dd[3],1'h1,1'h1,1'h1};            pcie_x1_dgtx_fndisp   <=  {ld406ea[7:6],2'h0,2'h0,2'h0};         end          4'b1100: begin            pcie_x1_dgtx_data     <=  {mee0948[63:56],mee0948[47:40],                               mee0948[55:48],mee0948[39:32],                               16'h0,                               16'h0};            pcie_x1_dgtx_kcntl    <=  {zm25203[7],zm25203[5],                               zm25203[6],zm25203[4],                               2'h0,                               2'h0};            pcie_x1_dgtx_eidle_tx <=  {ho480dd[3]|ho480dd[2],                               ho480dd[3]|ho480dd[2],                               1'h1,                               1'h1};            pcie_x1_dgtx_fndisp   <=  {ld406ea[7],ld406ea[5],                               ld406ea[6],ld406ea[4],                               2'h0,                               2'h0};         end


`ifdef ALL_MODES
                  4'b0001: begin            pcie_x1_dgtx_data     <=  {16'h0,16'h0,16'h0,mee0948[63:48]};            pcie_x1_dgtx_kcntl    <=  {2'h0,2'h0,2'h0,zm25203[7:6]};            pcie_x1_dgtx_eidle_tx <=  {1'h1,1'h1,1'h1,ho480dd[3]};            pcie_x1_dgtx_fndisp   <=  {2'h0,2'h0,2'h0,ld406ea[7:6]};         end         4'b0010: begin            pcie_x1_dgtx_data     <=  {16'h0,16'h0,mee0948[63:48],16'h0};            pcie_x1_dgtx_kcntl    <=  {2'h0,2'h0,zm25203[7:6],2'h0};            pcie_x1_dgtx_eidle_tx <=  {1'h1,1'h1,ho480dd[3],1'h1};            pcie_x1_dgtx_fndisp   <=  {2'h0,2'h0,ld406ea[7:6],2'h0};         end         4'b0100: begin            pcie_x1_dgtx_data     <=  {16'h0,mee0948[63:48],16'h0,16'h0};            pcie_x1_dgtx_kcntl    <=  {2'h0,zm25203[7:6],2'h0,2'h0};            pcie_x1_dgtx_eidle_tx <=  {1'h1,ho480dd[3],1'h1,1'h1};            pcie_x1_dgtx_fndisp   <=  {2'h0,ld406ea[7:6],2'h0,2'h0};         end                  4'b1010: begin            pcie_x1_dgtx_data     <=  {mee0948[63:56],mee0948[47:40],                               16'h0,                               mee0948[55:48],mee0948[39:32],                               16'h0};            pcie_x1_dgtx_kcntl    <=  {zm25203[7],zm25203[5],                               2'h0,                               zm25203[6],zm25203[4],                               2'h0};            pcie_x1_dgtx_eidle_tx <=  {ho480dd[3]|ho480dd[2],                               1'h1,                               ho480dd[3]|ho480dd[2],                               1'h1};            pcie_x1_dgtx_fndisp   <=  {ld406ea[7],ld406ea[5],                               2'h0,                               ld406ea[6],ld406ea[4],                               2'h0};         end         4'b1001: begin            pcie_x1_dgtx_data     <=  {mee0948[63:56],mee0948[47:40],                               16'h0,                               16'h0,                               mee0948[55:48],mee0948[39:32]};            pcie_x1_dgtx_kcntl    <=  {zm25203[7],zm25203[5],                               2'h0,                               2'h0,                               zm25203[6],zm25203[4]};            pcie_x1_dgtx_eidle_tx <=  {ho480dd[3]|ho480dd[2],                               1'h1,                               1'h1,                               ho480dd[3]|ho480dd[2]};            pcie_x1_dgtx_fndisp   <=  {ld406ea[7],ld406ea[5],                               2'h0,                               2'h0,                               ld406ea[6],ld406ea[4]};         end         4'b0110: begin            pcie_x1_dgtx_data     <=  {16'h0,                               mee0948[63:56],mee0948[47:40],                               mee0948[55:48],mee0948[39:32],                               16'h0};            pcie_x1_dgtx_kcntl    <=  {2'h0,                               zm25203[7],zm25203[5],                               zm25203[6],zm25203[4],                               2'h0};            pcie_x1_dgtx_eidle_tx <=  {1'h1,                               ho480dd[3]|ho480dd[2],                               ho480dd[3]|ho480dd[2],                               1'h1};            pcie_x1_dgtx_fndisp   <=  {2'h0,                               ld406ea[7],ld406ea[5],                               ld406ea[6],ld406ea[4],                               2'h0};         end         4'b0101: begin            pcie_x1_dgtx_data     <=  {16'h0,                               mee0948[63:56],mee0948[47:40],                               16'h0,                               mee0948[55:48],mee0948[39:32]};            pcie_x1_dgtx_kcntl    <=  {2'h0,                               zm25203[7],zm25203[5],                               2'h0,                               zm25203[6],zm25203[4]};            pcie_x1_dgtx_eidle_tx <=  {1'h1,                               ho480dd[3]|ho480dd[2],                               1'h1,                               ho480dd[3]|ho480dd[2]};            pcie_x1_dgtx_fndisp   <=  {2'h0,                               ld406ea[7],ld406ea[5],                               2'h0,                               ld406ea[6],ld406ea[4]};         end         4'b0011: begin            pcie_x1_dgtx_data     <=  {16'h0,                               16'h0,                               mee0948[63:56],mee0948[47:40],                               mee0948[55:48],mee0948[39:32]};            pcie_x1_dgtx_kcntl    <=  {2'h0,                               2'h0,                               zm25203[7],zm25203[5],                               zm25203[6],zm25203[4]};            pcie_x1_dgtx_eidle_tx <=  {1'h1,                               1'h1,                               ho480dd[3]|ho480dd[2],                               ho480dd[3]|ho480dd[2]};            pcie_x1_dgtx_fndisp   <=  {2'h0,                               2'h0,                               ld406ea[7],ld406ea[5],                               ld406ea[6],ld406ea[4]};         end


`endif
                  4'b1111: begin            pcie_x1_dgtx_data     <= {mee0948[63:56],mee0948[31:24],                              mee0948[55:48],mee0948[23:16],                              mee0948[47:40],mee0948[15:8],                              mee0948[39:32],mee0948[7:0]};            pcie_x1_dgtx_kcntl    <= {zm25203[7],zm25203[3],                              zm25203[6],zm25203[2],                              zm25203[5],zm25203[1],                              zm25203[4],zm25203[0]};            pcie_x1_dgtx_eidle_tx <= {ho480dd[3]|ho480dd[1],                              ho480dd[3]|ho480dd[1],                              ho480dd[2]|ho480dd[0],                              ho480dd[2]|ho480dd[0]};            pcie_x1_dgtx_fndisp   <= {ld406ea[7],ld406ea[3],                              ld406ea[6],ld406ea[2],                              ld406ea[5],ld406ea[1],                              ld406ea[4],ld406ea[0]};         end                                             default: begin               pcie_x1_dgtx_data     <=  {mee0948[63:48],16'h0,16'h0,16'h0};            pcie_x1_dgtx_kcntl    <=  {zm25203[7:6],2'h0,2'h0,2'h0};            pcie_x1_dgtx_eidle_tx <=  {ho480dd[3],1'h1,1'h1,1'h1};            pcie_x1_dgtx_fndisp   <=  {ld406ea[7:6],2'h0,2'h0,2'h0};         end      endcase   end   else begin      pcie_x1_dgtx_data     <= mee0948;      pcie_x1_dgtx_kcntl    <= zm25203;      pcie_x1_dgtx_eidle_tx <= ho480dd;      pcie_x1_dgtx_fndisp   <= ld406ea;   end
end
always@* begin thfc773<={frm_data>>1,ux17adf[0]};ep1dcf7<={frm_kcntl>>1,ux17adf[1]};rg73de2<={frm_eidle_tx>>1,ux17adf[2]};hd9ef12<={frm_fndisp>>1,ux17adf[3]};wjf7897<=ux17adf[4];she25e0<={ltssm_config_ln>>1,ux17adf[5]};gd12f04<={ltssm_cfgln_sum>>1,ux17adf[6]};ie97825<=ux17adf[7];mee0948<={cm56b5e>>1,ux17adf[8]};zm25203<={riad78f>>1,ux17adf[9]};ho480dd<={en5e3df>>1,ux17adf[10]};ld406ea<={tuf1efc>>1,ux17adf[11]};nt3756<=ux17adf[12];fc1bab7<=ux17adf[13];end
always@* begin db22f5b[2047]<=frm_kcntl[0];db22f5b[2046]<=frm_eidle_tx[0];db22f5b[2044]<=frm_fndisp[0];db22f5b[2041]<=frm_val;db22f5b[2035]<=ltssm_config_ln[0];db22f5b[2022]<=ltssm_cfgln_sum[0];db22f5b[1996]<=ltssm_l0;db22f5b[1945]<=cm56b5e[0];db22f5b[1842]<=riad78f[0];db22f5b[1637]<=en5e3df[0];db22f5b[1226]<=tuf1efc[0];db22f5b[1023]<=frm_data[0];db22f5b[811]<=ld7bf1d;db22f5b[405]<=an8f7e3;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule


































`timescale 1 ns / 100 ps
module pcie_x1_dgrx 
   (
   
   sys_clk,            
   rst_n,              

   asb_data,           
   asb_kcntl,          
   asb_err,            
   ltssm_config_ln,    
   ltssm_cfgln_sum,    

   
   pcie_x1_dgrx_width,         
   pcie_x1_dgrx_data,          
   pcie_x1_dgrx_kcntl,         
   pcie_x1_dgrx_val,           
   pcie_x1_dgrx_err            
   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                     sys_clk;
input                     rst_n;
input  [D_WIDTH-1:0]      asb_data;
input  [(D_WIDTH/8)-1:0]  asb_kcntl;
input  [3:0]              asb_err;
input  [LANE_WIDTH-1:0]   ltssm_config_ln;
input  [2:0]              ltssm_cfgln_sum;
output [2:0]              pcie_x1_dgrx_width;
output [D_WIDTH-1:0]      pcie_x1_dgrx_data;
output [(D_WIDTH/8)-1:0]  pcie_x1_dgrx_kcntl;
output                    pcie_x1_dgrx_val;
output [3:0]              pcie_x1_dgrx_err;
reg   [15:0]              wl1d1a2;
reg   [15:0]              mre8d15;
reg   [15:0]              me468ac;
reg   [15:0]              sw34560;
reg   [1:0]               nga2b00;
reg   [1:0]               uk15803;
reg   [1:0]               mgac018;
reg   [1:0]               sh600c1;
reg                       ie60d;
reg                       ph3068;
reg                       wl18347;
reg                       kqc1a3d;
reg   [15:0]              ird1e9;
reg   [15:0]              qg68f4c;
reg   [15:0]              tu47a60;
reg   [15:0]              zz3d302;
reg   [1:0]               xje9816;
reg   [1:0]               ww4c0b6;
reg   [1:0]               al605b0;
reg   [1:0]               wl2d85;
reg                       xl16c2c;
reg                       oub6167;
reg                       ntb0b39;
reg                       ep859cf;
reg   [15:0]              mt2ce7d;
reg   [15:0]              me673ec;
reg   [15:0]              kf39f60;
reg   [15:0]              jccfb05;
reg   [1:0]               yk7d82a;
reg   [1:0]               thec151;
reg   [1:0]               wj60a8f;
reg   [1:0]               ks547c;
reg                       do2a3e0;
reg                       uv51f02;
reg                       oh8f814;
reg                       ne7c0a4;
reg   [15:0]              cme0522;
reg   [15:0]              mt2911;
reg   [15:0]              tw1488c;
reg   [15:0]              gda4462;
reg   [1:0]               tj22315;
reg   [1:0]               ng118ae;
reg   [1:0]               je8c572;
reg   [1:0]               yk62b92;
reg                       ec15c91;
reg                       qvae488;
reg                       su72444;
reg                       qi92221;
reg   [1:0]               jr91108;
reg   [D_WIDTH-1:0]       pcie_x1_dgrx_data;
reg   [(D_WIDTH/8)-1:0]   pcie_x1_dgrx_kcntl;
reg                       pcie_x1_dgrx_val;
reg   [3:0]               pcie_x1_dgrx_err;
reg                       kdcc35d;
reg   [2:0]               pcie_x1_dgrx_width;

`ifdef ALL_MODES

`endif
reg [D_WIDTH - 1 : 0] zx6bb34;
reg [(D_WIDTH / 8) - 1 : 0] vvecd3a;
reg [3 : 0] ho669d6;
reg [LANE_WIDTH - 1 : 0] she25e0;
reg [2 : 0] gd12f04;
reg [15 : 0] kdd6652;
reg [15 : 0] ksb3294;
reg [15 : 0] fc994a1;
reg [15 : 0] faca50b;
reg [1 : 0] xw5285b;
reg [1 : 0] rv942db;
reg [1 : 0] uxa16df;
reg [1 : 0] zmb6fd;
reg cz5b7eb;
reg cmdbf5c;
reg hodfae1;
reg wjfd70b;
reg [15 : 0] xweb85c;
reg [15 : 0] ay5c2e3;
reg [15 : 0] rge1719;
reg [15 : 0] bab8cb;
reg [1 : 0] me5c65a;
reg [1 : 0] lde32d1;
reg [1 : 0] db1968e;
reg [1 : 0] oscb477;
reg th5a3b9;
reg icd1dce;
reg xl8ee70;
reg go77386;
reg [15 : 0] ymb9c31;
reg [15 : 0] qgce189;
reg [15 : 0] ip70c49;
reg [15 : 0] pu8624d;
reg [1 : 0] uk3126b;
reg [1 : 0] do89358;
reg [1 : 0] cm49ac2;
reg [1 : 0] zk4d611;
reg zx6b08a;
reg ne58456;
reg thc22b3;
reg ba1159f;
reg [15 : 0] wl8acfb;
reg [15 : 0] yk567dc;
reg [15 : 0] swb3ee0;
reg [15 : 0] oh9f700;
reg [1 : 0] vifb804;
reg [1 : 0] qtdc022;
reg [1 : 0] ose0115;
reg [1 : 0] co8a9;
reg vk4549;
reg ph22a4a;
reg ks15257;
reg oua92b9;
reg [1 : 0] go495c9;
reg dz4ae48;
reg [2047:0] db22f5b;
wire [54:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef ALL_MODES

`endif

localparam ribd6fd = 55,jceb7ea = 32'hfdffd84b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef ALL_MODES


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      wl1d1a2  <= 'd0;      mre8d15  <= 'd0;      me468ac  <= 'd0;      sw34560  <= 'd0;      nga2b00 <= 'd0;      uk15803 <= 'd0;      mgac018 <= 'd0;      sh600c1 <= 'd0;      ie60d   <= 1'b0;      ph3068   <= 1'b0;      wl18347   <= 1'b0;      kqc1a3d   <= 1'b0;      ird1e9  <= 'd0;      qg68f4c  <= 'd0;      tu47a60  <= 'd0;      zz3d302  <= 'd0;      xje9816 <= 'd0;      ww4c0b6 <= 'd0;      al605b0 <= 'd0;      wl2d85 <= 'd0;      xl16c2c   <= 1'b0;      oub6167   <= 1'b0;      ntb0b39   <= 1'b0;      ep859cf   <= 1'b0;      mt2ce7d  <= 'd0;      me673ec  <= 'd0;      kf39f60  <= 'd0;      jccfb05  <= 'd0;      yk7d82a <= 'd0;      thec151 <= 'd0;      wj60a8f <= 'd0;      ks547c <= 'd0;      do2a3e0   <= 1'b0;      uv51f02   <= 1'b0;      oh8f814   <= 1'b0;      ne7c0a4   <= 1'b0;      cme0522  <= 'd0;      mt2911  <= 'd0;      tw1488c  <= 'd0;      gda4462  <= 'd0;      tj22315 <= 'd0;      ng118ae <= 'd0;      je8c572 <= 'd0;      yk62b92 <= 'd0;      ec15c91   <= 1'b0;      qvae488   <= 1'b0;      su72444   <= 1'b0;      qi92221   <= 1'b0;   end   else begin            wl1d1a2  <= zx6bb34[63:48];      mre8d15  <= kdd6652;      me468ac  <= ksb3294;      sw34560  <= fc994a1;      nga2b00 <= vvecd3a[7:6];      uk15803 <= xw5285b;      mgac018 <= rv942db;      sh600c1 <= uxa16df;      ie60d   <= ho669d6[3];      ph3068   <= cz5b7eb;      wl18347   <= cmdbf5c;      kqc1a3d   <= hodfae1;            ird1e9  <= zx6bb34[47:32];      qg68f4c  <= xweb85c;      tu47a60  <= ay5c2e3;      zz3d302  <= rge1719;      xje9816 <= vvecd3a[5:4];      ww4c0b6 <= me5c65a;      al605b0 <= lde32d1;      wl2d85 <= db1968e;      xl16c2c   <= ho669d6[2];      oub6167   <= th5a3b9;      ntb0b39   <= icd1dce;      ep859cf   <= xl8ee70;            mt2ce7d  <= zx6bb34[31:16];      me673ec  <= ymb9c31;      kf39f60  <= qgce189;      jccfb05  <= ip70c49;      yk7d82a <= vvecd3a[3:2];      thec151 <= uk3126b;      wj60a8f <= do89358;      ks547c <= cm49ac2;      do2a3e0   <= ho669d6[1];      uv51f02   <= zx6b08a;      oh8f814   <= ne58456;      ne7c0a4   <= thc22b3;            cme0522  <= zx6bb34[15:0];      mt2911  <= wl8acfb;      tw1488c  <= yk567dc;      gda4462  <= swb3ee0;      tj22315 <= vvecd3a[1:0];      ng118ae <= vifb804;      je8c572 <= qtdc022;      yk62b92 <= ose0115;      ec15c91   <= ho669d6[0];      qvae488   <= vk4549;      su72444   <= ph22a4a;      qi92221   <= ks15257;   end
end




















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pcie_x1_dgrx_data  <= 'd0;      pcie_x1_dgrx_kcntl <= 'd0;      pcie_x1_dgrx_err   <= 'd0;   end   else if (dz4ae48) begin      case(she25e0)                  4'b1000: begin            pcie_x1_dgrx_data  <= {faca50b,  fc994a1,  ksb3294,  kdd6652};            pcie_x1_dgrx_kcntl <= {zmb6fd, uxa16df, rv942db, xw5285b};            pcie_x1_dgrx_err   <= {wjfd70b , hodfae1 , cmdbf5c , cz5b7eb};         end                  4'b1100: begin            pcie_x1_dgrx_data  <= {ksb3294[15:8],  ay5c2e3[15:8], ksb3294[7:0],  ay5c2e3[7:0],                           kdd6652[15:8],  xweb85c[15:8], kdd6652[7:0],  xweb85c[7:0]};            pcie_x1_dgrx_kcntl <= {rv942db[1], lde32d1[1], rv942db[0], lde32d1[0],                           xw5285b[1], me5c65a[1], xw5285b[0], me5c65a[0]};            pcie_x1_dgrx_err   <= {cmdbf5c , icd1dce , cz5b7eb , th5a3b9};         end


`ifdef ALL_MODES
                  4'b0100: begin            pcie_x1_dgrx_data  <= {bab8cb,  rge1719,  ay5c2e3,  xweb85c};            pcie_x1_dgrx_kcntl <= {oscb477, db1968e, lde32d1, me5c65a};            pcie_x1_dgrx_err   <= {go77386 , xl8ee70 , icd1dce , th5a3b9};         end         4'b0010: begin            pcie_x1_dgrx_data  <= {pu8624d,  ip70c49,  qgce189,  ymb9c31};            pcie_x1_dgrx_kcntl <= {zk4d611, cm49ac2, do89358, uk3126b};            pcie_x1_dgrx_err   <= {ba1159f , thc22b3 , ne58456 , zx6b08a};         end         4'b0001: begin            pcie_x1_dgrx_data  <= {oh9f700,  swb3ee0,  yk567dc,  wl8acfb};            pcie_x1_dgrx_kcntl <= {co8a9, ose0115, qtdc022, vifb804};            pcie_x1_dgrx_err   <= {oua92b9 , ks15257 , ph22a4a , vk4549};         end                  4'b1010: begin            pcie_x1_dgrx_data  <= {ksb3294[15:8],  qgce189[15:8], ksb3294[7:0],  qgce189[7:0],                           kdd6652[15:8],  ymb9c31[15:8], kdd6652[7:0],  ymb9c31[7:0]};            pcie_x1_dgrx_kcntl <= {rv942db[1], do89358[1], rv942db[0], do89358[0],                           xw5285b[1], uk3126b[1], xw5285b[0], uk3126b[0]};            pcie_x1_dgrx_err   <= {cmdbf5c , ne58456 , cz5b7eb , zx6b08a};         end         4'b1001: begin            pcie_x1_dgrx_data  <= {ksb3294[15:8],  yk567dc[15:8], ksb3294[7:0], yk567dc[7:0],                           kdd6652[15:8],  wl8acfb[15:8], kdd6652[7:0], wl8acfb[7:0]};            pcie_x1_dgrx_kcntl <= {rv942db[1], qtdc022[1], rv942db[0], qtdc022[0],                           xw5285b[1], vifb804[1], xw5285b[0], vifb804[0]};            pcie_x1_dgrx_err   <= {cmdbf5c , ph22a4a , cz5b7eb , vk4549};         end         4'b0110: begin            pcie_x1_dgrx_data  <= {ay5c2e3[15:8],  qgce189[15:8],  ay5c2e3[7:0], qgce189[7:0],                           xweb85c[15:8],  ymb9c31[15:8],  xweb85c[7:0], ymb9c31[7:0]};            pcie_x1_dgrx_kcntl <= {lde32d1[1], do89358[1], lde32d1[0], do89358[0],                           me5c65a[1], uk3126b[1], me5c65a[0], uk3126b[0]};            pcie_x1_dgrx_err   <= {icd1dce , ne58456 , th5a3b9 , zx6b08a};         end         4'b0101: begin            pcie_x1_dgrx_data  <= {ay5c2e3[15:8],  yk567dc[15:8],  ay5c2e3[7:0],  yk567dc[7:0],                           xweb85c[15:8],  wl8acfb[15:8],  xweb85c[7:0],  wl8acfb[7:0]};            pcie_x1_dgrx_kcntl <= {lde32d1[1], qtdc022[1], lde32d1[0], qtdc022[0],                           me5c65a[1], vifb804[1], me5c65a[0], vifb804[0]};            pcie_x1_dgrx_err   <= {icd1dce , ph22a4a , th5a3b9 , vk4549};         end         4'b0011: begin            pcie_x1_dgrx_data  <= {qgce189[15:8],  yk567dc[15:8], qgce189[7:0], yk567dc[7:0],                           ymb9c31[15:8],  wl8acfb[15:8], ymb9c31[7:0], wl8acfb[7:0]};            pcie_x1_dgrx_kcntl <= {do89358[1], qtdc022[1], do89358[0], qtdc022[0],                           uk3126b[1], vifb804[1], uk3126b[0], vifb804[0]};            pcie_x1_dgrx_err   <= {ne58456 , ph22a4a , zx6b08a , vk4549};         end


`endif
                           default: begin                pcie_x1_dgrx_data  <= {kdd6652[15:8], xweb85c[15:8], ymb9c31[15:8], wl8acfb[15:8],                           kdd6652[7:0],  xweb85c[7:0],  ymb9c31[7:0],  wl8acfb[7:0]};            pcie_x1_dgrx_kcntl <= {xw5285b[1], me5c65a[1], uk3126b[1], vifb804[1],                           xw5285b[0], me5c65a[0], uk3126b[0], vifb804[0]};            pcie_x1_dgrx_err   <= {cz5b7eb , th5a3b9 , zx6b08a , vk4549};         end      endcase   end
end






always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      jr91108      <= 'd0;      kdcc35d    <= 1'b0;      pcie_x1_dgrx_val      <= 1'b0;      pcie_x1_dgrx_width    <= 3'd0;   end   else begin      jr91108      <= go495c9 +1;            case(gd12f04)         3'd1:    begin            kdcc35d <= (go495c9 == 'd0) ? 1'b1 : 1'b0;            pcie_x1_dgrx_width <= 3'b001;         end         3'd2:    begin            kdcc35d <= (go495c9 == 'd0 || go495c9 == 'd2) ? 1'b1 : 1'b0;            pcie_x1_dgrx_width <= 3'b010;         end         3'd4:    begin            kdcc35d <= 1'b1;            pcie_x1_dgrx_width <= 3'b100;         end         default: begin            kdcc35d <= 1'b0;            pcie_x1_dgrx_width <= 3'b000;         end      endcase      pcie_x1_dgrx_val      <= dz4ae48;   end
end

always@* begin zx6bb34<={asb_data>>1,ux17adf[0]};vvecd3a<={asb_kcntl>>1,ux17adf[1]};ho669d6<={asb_err>>1,ux17adf[2]};she25e0<={ltssm_config_ln>>1,ux17adf[3]};gd12f04<={ltssm_cfgln_sum>>1,ux17adf[4]};kdd6652<={wl1d1a2>>1,ux17adf[5]};ksb3294<={mre8d15>>1,ux17adf[6]};fc994a1<={me468ac>>1,ux17adf[7]};faca50b<={sw34560>>1,ux17adf[8]};xw5285b<={nga2b00>>1,ux17adf[9]};rv942db<={uk15803>>1,ux17adf[10]};uxa16df<={mgac018>>1,ux17adf[11]};zmb6fd<={sh600c1>>1,ux17adf[12]};cz5b7eb<=ux17adf[13];cmdbf5c<=ux17adf[14];hodfae1<=ux17adf[15];wjfd70b<=ux17adf[16];xweb85c<={ird1e9>>1,ux17adf[17]};ay5c2e3<={qg68f4c>>1,ux17adf[18]};rge1719<={tu47a60>>1,ux17adf[19]};bab8cb<={zz3d302>>1,ux17adf[20]};me5c65a<={xje9816>>1,ux17adf[21]};lde32d1<={ww4c0b6>>1,ux17adf[22]};db1968e<={al605b0>>1,ux17adf[23]};oscb477<={wl2d85>>1,ux17adf[24]};th5a3b9<=ux17adf[25];icd1dce<=ux17adf[26];xl8ee70<=ux17adf[27];go77386<=ux17adf[28];ymb9c31<={mt2ce7d>>1,ux17adf[29]};qgce189<={me673ec>>1,ux17adf[30]};ip70c49<={kf39f60>>1,ux17adf[31]};pu8624d<={jccfb05>>1,ux17adf[32]};uk3126b<={yk7d82a>>1,ux17adf[33]};do89358<={thec151>>1,ux17adf[34]};cm49ac2<={wj60a8f>>1,ux17adf[35]};zk4d611<={ks547c>>1,ux17adf[36]};zx6b08a<=ux17adf[37];ne58456<=ux17adf[38];thc22b3<=ux17adf[39];ba1159f<=ux17adf[40];wl8acfb<={cme0522>>1,ux17adf[41]};yk567dc<={mt2911>>1,ux17adf[42]};swb3ee0<={tw1488c>>1,ux17adf[43]};oh9f700<={gda4462>>1,ux17adf[44]};vifb804<={tj22315>>1,ux17adf[45]};qtdc022<={ng118ae>>1,ux17adf[46]};ose0115<={je8c572>>1,ux17adf[47]};co8a9<={yk62b92>>1,ux17adf[48]};vk4549<=ux17adf[49];ph22a4a<=ux17adf[50];ks15257<=ux17adf[51];oua92b9<=ux17adf[52];go495c9<={jr91108>>1,ux17adf[53]};dz4ae48<=ux17adf[54];end
always@* begin db22f5b[2047]<=asb_kcntl[0];db22f5b[2046]<=asb_err[0];db22f5b[2044]<=ltssm_config_ln[0];db22f5b[2040]<=ltssm_cfgln_sum[0];db22f5b[2033]<=wl1d1a2[0];db22f5b[2019]<=mre8d15[0];db22f5b[1999]<=wj60a8f[0];db22f5b[1991]<=me468ac[0];db22f5b[1981]<=su72444;db22f5b[1950]<=ks547c[0];db22f5b[1947]<=mt2911[0];db22f5b[1934]<=sw34560[0];db22f5b[1914]<=qi92221;db22f5b[1892]<=zz3d302[0];db22f5b[1852]<=do2a3e0;db22f5b[1851]<=wl18347;db22f5b[1847]<=tw1488c[0];db22f5b[1820]<=nga2b00[0];db22f5b[1783]<=yk62b92[0];db22f5b[1780]<=jr91108[0];db22f5b[1737]<=xje9816[0];db22f5b[1657]<=uv51f02;db22f5b[1654]<=kqc1a3d;db22f5b[1647]<=gda4462[0];db22f5b[1610]<=wl2d85[0];db22f5b[1593]<=uk15803[0];db22f5b[1523]<=yk7d82a[0];db22f5b[1519]<=ec15c91;db22f5b[1513]<=kdcc35d;db22f5b[1426]<=ww4c0b6[0];db22f5b[1404]<=kf39f60[0];db22f5b[1267]<=oh8f814;db22f5b[1260]<=ird1e9[0];db22f5b[1246]<=tj22315[0];db22f5b[1199]<=ep859cf;db22f5b[1173]<=xl16c2c;db22f5b[1139]<=mgac018[0];db22f5b[1023]<=asb_data[0];db22f5b[999]<=thec151[0];db22f5b[990]<=qvae488;db22f5b[973]<=cme0522[0];db22f5b[946]<=tu47a60[0];db22f5b[925]<=ph3068;db22f5b[891]<=je8c572[0];db22f5b[805]<=al605b0[0];db22f5b[761]<=jccfb05[0];db22f5b[702]<=me673ec[0];db22f5b[599]<=ntb0b39;db22f5b[486]<=ne7c0a4;db22f5b[473]<=qg68f4c[0];db22f5b[462]<=ie60d;db22f5b[445]<=ng118ae[0];db22f5b[351]<=mt2ce7d[0];db22f5b[299]<=oub6167;db22f5b[231]<=sh600c1[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule
































`timescale 1 ns / 100 ps
module pcie_x1_tj3d25e 
   (
    
    sys_clk,           
    rst_n,             
    cz4bdb8,          
    wj5edc4,       
    nrf6e25,   
    zmb712e,           
    vkb8973,           
    suc4b9b,           
    tw25cd9,           
    asb_data,          
    asb_kcntl,         
    asb_err,           
    czd941e,          
    asb_eidle_rx,      
    asb_beacon_rx,     
    asb_lane_sync,     

    
    zm1eafa,            
    icf57d3,           
    mtabe98,            
    th5f4c5,           
    icfa62e,             
    uvd3171,        
    mg98b8c,       
    fac5c60,       
    sw2e303,            
    ld71818,            
    ng8c0c7,        
    gb6063a          
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                       sys_clk;
input                       rst_n;
input                       cz4bdb8;
input                       wj5edc4;
input                       nrf6e25;
input                       vkb8973;
input                       zmb712e;
input                       tw25cd9;
input                       suc4b9b;
input [7:0]                 asb_data;
input                       asb_kcntl;
input                       asb_err;
input                       czd941e;
input                       asb_eidle_rx;
input                       asb_beacon_rx;
input                       asb_lane_sync;
output                      zm1eafa;
output                      icf57d3;
output [7:0]                mtabe98;
output                      th5f4c5;
output                      icfa62e;
output                      uvd3171;
output                      mg98b8c;
output                      fac5c60;
output                      sw2e303;
output [4:0]                ld71818;
output                      ng8c0c7;
output                      gb6063a;
localparam  ened382 = 5'b00000;
localparam  fa69c15  = 5'b11011;
localparam  kd4e0aa   = 5'b10000;
localparam  mr70555    = 1'b0;
localparam  qi82aac      = 1'b1;
reg  [4:0]        ym15560;
wire              gb6063a;
reg  [4:0]        th5580f;
reg  [4:0]        ecac07e;
reg  [4:0]        gb603f1;
reg  [4:0]        ld71818;
reg               ng8c0c7;
reg               jp7e358;
reg               byf1ac7;
reg               zm1eafa;
reg               icf57d3;
localparam TLP_MEM_DEPTH   = 32;
localparam fnc7632  = 5 ;

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef DEBUG
wire        sw3b197   = (asb_data == K28_5 && asb_kcntl == 1'b1);
wire [4:0]  mg973ae = (asb_data == K28_5 && asb_kcntl == 1'b1) ? th5580f :  mg973ae;
wire [4:0]  bn81164  = th5580f + ~gb603f1 + 'd1 ;
wire        gd2c9af  = (gb603f1 ==  th5580f) ? 1'b1 : 1'b0;
wire        do35f35   = (bn81164 == 'd31) ? 1'b1 : 1'b0;

`endif
reg xw7cd5f;
reg lde6afb;
reg fc357df;
reg ohabefa;
reg jp5f7d5;
reg hofbeae;
reg hodf572;
reg [7 : 0] zx6bb34;
reg vvecd3a;
reg ho669d6;
reg ic72414;
reg ou920a1;
reg sj90508;
reg aa82845;
reg [4 : 0] ba14228;
reg [4 : 0] wla1143;
reg [4 : 0] qv8a1d;
reg [4 : 0] jp450ed;
reg xl2876e;
reg ay43b77;
reg [2047:0] db22f5b;
wire [19:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef DEBUG

`endif

localparam ribd6fd = 20,jceb7ea = 32'hfdffc70b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef DEBUG


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif





















always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ym15560 <= 0;   end   else begin      ym15560 <= wla1143 + ~qv8a1d + 1;   end
end
always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      th5580f       <= 'd0;      ecac07e <= 'd0;      ld71818         <= 'd0;      ng8c0c7     <= 1'b0;      jp7e358    <= 1'b0;   end   else begin      casex({(fc357df && xw7cd5f),             (lde6afb && xw7cd5f && xl2876e == 1'b0),             (ohabefa),             (jp5f7d5)})         4'b1xxx: begin            th5580f       <= ba14228;            ld71818         <= ba14228;            ng8c0c7     <= 1'b1;            jp7e358    <= 1'b0;         end         4'bx1xx: begin            ecac07e <= wla1143;            th5580f       <= wla1143 + 1'b1;            ng8c0c7     <= 1'b0;            jp7e358    <= 1'b1;         end         4'bxx1x: begin            th5580f       <= wla1143 + 1'b1 + 1'b1;            ng8c0c7     <= 1'b0;         end         4'bxxx1: begin            th5580f       <= wla1143;            ng8c0c7     <= 1'b0;         end         default: begin            th5580f       <= wla1143 + 1'b1;            ng8c0c7     <= 1'b0;         end      endcase   end
end





always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      gb603f1        <= kd4e0aa;   end      else if (fc357df && xw7cd5f) begin      gb603f1        <= 'd0;   end   else if (hofbeae) begin      gb603f1        <=  jp450ed + 1'b1 + 1'b1;   end   else if (hodf572) begin      gb603f1        <=  jp450ed;   end   else begin      gb603f1        <= jp450ed + 1'b1;   end
end



   
pmi_ram_dp #(   .pmi_wr_addr_depth    (TLP_MEM_DEPTH),   .pmi_wr_addr_width    (fnc7632),   .pmi_wr_data_width    (15),   .pmi_rd_addr_depth    (TLP_MEM_DEPTH),   .pmi_rd_addr_width    (fnc7632),   .pmi_rd_data_width    (15),   .pmi_regmode          ("reg"),   .pmi_gsr              ("enable"),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),      .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_ram_dp")   )   je35e2c (   .Data         ({asb_data,asb_kcntl,asb_err,czd941e,asb_eidle_rx,asb_beacon_rx,asb_lane_sync,zmb712e}),   .WrAddress    (th5580f),   .RdAddress    (gb603f1),   .WrClock      (sys_clk),   .RdClock      (sys_clk),   .WrClockEn    (1'b1),   .RdClockEn    (1'b1),   .WE           (1'b1),   .Reset        (~rst_n),   .Q            ({mtabe98,th5f4c5,icfa62e,sw2e303, uvd3171,mg98b8c,fac5c60,gb6063a})   );



always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zm1eafa  <= 0;      icf57d3 <= 0;   end   else begin      zm1eafa  <=  (wla1143 + ~jp450ed + 'd1) == 'd31 ? 1'b1 : 1'b0 ;      icf57d3 <=  (jp450ed ==  wla1143) ? 1'b1 : 1'b0;   end
end





`ifdef DEBUG



`endif



always@* begin xw7cd5f<=ux17adf[0];lde6afb<=ux17adf[1];fc357df<=ux17adf[2];ohabefa<=ux17adf[3];jp5f7d5<=ux17adf[4];hofbeae<=ux17adf[5];hodf572<=ux17adf[6];zx6bb34<={asb_data>>1,ux17adf[7]};vvecd3a<=ux17adf[8];ho669d6<=ux17adf[9];ic72414<=ux17adf[10];ou920a1<=ux17adf[11];sj90508<=ux17adf[12];aa82845<=ux17adf[13];ba14228<={ym15560>>1,ux17adf[14]};wla1143<={th5580f>>1,ux17adf[15]};qv8a1d<={ecac07e>>1,ux17adf[16]};jp450ed<={gb603f1>>1,ux17adf[17]};xl2876e<=ux17adf[18];ay43b77<=ux17adf[19];end
always@* begin db22f5b[2047]<=wj5edc4;db22f5b[2046]<=nrf6e25;db22f5b[2044]<=zmb712e;db22f5b[2040]<=vkb8973;db22f5b[2032]<=suc4b9b;db22f5b[2016]<=tw25cd9;db22f5b[1985]<=asb_data[0];db22f5b[1922]<=asb_kcntl;db22f5b[1867]<=byf1ac7;db22f5b[1797]<=asb_err;db22f5b[1547]<=czd941e;db22f5b[1490]<=gb603f1[0];db22f5b[1047]<=asb_eidle_rx;db22f5b[1023]<=cz4bdb8;db22f5b[933]<=jp7e358;db22f5b[745]<=ecac07e[0];db22f5b[372]<=th5580f[0];db22f5b[186]<=ym15560[0];db22f5b[93]<=asb_lane_sync;db22f5b[46]<=asb_beacon_rx;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule














































































`timescale 1 ns / 100 ps
module pcie_x1_mca 
   (
    
    sys_clk,           
    rst_n,             
    pcie_x1_mca_disable,       
    ltssm_config_ln,   
    phy_realign_req,   
    skip_added,        
    skip_removed,      
    asb_skip_found,    
    asb_data,          
    asb_kcntl,         
    asb_err,           
    asb_eidle_rx,      
    asb_beacon_rx,     
    asb_lane_sync,     

    
    pcie_x1_mca_aligned,       
    pcie_x1_mca_data,          
    pcie_x1_mca_kcntl,         
    pcie_x1_mca_err,           
    pcie_x1_mca_eidle_rx,      
    pcie_x1_mca_beacon_rx,     
    pcie_x1_mca_lane_sync,     
    pcie_x1_mca_align_done     
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                      sys_clk;
input                      rst_n;
input                      pcie_x1_mca_disable;
input [LANE_WIDTH-1:0]     ltssm_config_ln;
input                      phy_realign_req;
input [LANE_WIDTH-1:0]     skip_added;
input [LANE_WIDTH-1:0]     skip_removed;
input [LANE_WIDTH-1:0]     asb_skip_found;
input [8*LANE_WIDTH-1:0]   asb_data;
input [1*LANE_WIDTH-1:0]   asb_kcntl;
input [1*LANE_WIDTH-1:0]   asb_err;
input [LANE_WIDTH-1:0]     asb_eidle_rx;
input [LANE_WIDTH-1:0]     asb_beacon_rx;
input [LANE_WIDTH-1:0]     asb_lane_sync;
output                     pcie_x1_mca_aligned;
output [8*LANE_WIDTH-1:0]  pcie_x1_mca_data;
output [1*LANE_WIDTH-1:0]  pcie_x1_mca_kcntl;
output [1*LANE_WIDTH-1:0]  pcie_x1_mca_err;
output                     pcie_x1_mca_align_done;
output [LANE_WIDTH-1:0]    pcie_x1_mca_eidle_rx;
output [LANE_WIDTH-1:0]    pcie_x1_mca_beacon_rx;
output [LANE_WIDTH-1:0]    pcie_x1_mca_lane_sync;
localparam TLP_MEM_DEPTH   = 15;
localparam uv7f1fb = 'd0;
localparam mrf8fdd = 'd1;
localparam blc7eed = 'd2;
localparam je3f76e = 'd3;
localparam byfbb73 = 'd4;
localparam nrddb9a     = 'd0;
localparam ofedcd6 = 'd1;
reg [8*LANE_WIDTH-1:0]   mtabe98               ;
reg [LANE_WIDTH-1:0]     th5f4c5              ;
reg [LANE_WIDTH-1:0]     sw2e303               ;
reg [LANE_WIDTH-1:0]     icfa62e                ;
reg [5*LANE_WIDTH-1:0]   ld71818               ;
reg [LANE_WIDTH-1:0]     ng8c0c7           ;
reg [LANE_WIDTH-1:0]     uvd3171           ;
reg [LANE_WIDTH-1:0]     mg98b8c          ;
reg [LANE_WIDTH-1:0]     fac5c60          ;
reg [LANE_WIDTH-1:0]     gb6063a            ;
reg [LANE_WIDTH-1:0]     jc6cd31         ;
reg [LANE_WIDTH-1:0]     ks34c53;
wire [8*LANE_WIDTH-1:0]   wy314c8;
wire [LANE_WIDTH-1:0]     me53205;
wire [LANE_WIDTH-1:0]     blc8143;
wire [LANE_WIDTH-1:0]     uk50f7;
wire [5*LANE_WIDTH-1:0]   cm43dc7;
wire [LANE_WIDTH-1:0]     yxf71c3;
wire [LANE_WIDTH-1:0]     jpc70eb;
wire [LANE_WIDTH-1:0]     mrc3afe;
wire [LANE_WIDTH-1:0]     viebfa5;
wire [LANE_WIDTH-1:0]     rgfe95f;
wire [LANE_WIDTH-1:0]     zza57d3;
reg  [LANE_WIDTH-1:0]     th5f4f9;
reg  [LANE_WIDTH-1:0]     uvd3e71;
reg  [8*LANE_WIDTH-1:0]   pcie_x1_mca_data               ;
reg  [1*LANE_WIDTH-1:0]   pcie_x1_mca_kcntl              ;
reg  [1*LANE_WIDTH-1:0]   pcie_x1_mca_err                ;
reg [LANE_WIDTH-1:0]      pcie_x1_mca_eidle_rx           ;
reg [LANE_WIDTH-1:0]      pcie_x1_mca_beacon_rx          ;
reg [LANE_WIDTH-1:0]      pcie_x1_mca_lane_sync          ;
reg  [LANE_WIDTH-1:0]     sw2b4f4               ;
reg  [LANE_WIDTH-1:0]     yxd3d06               ;
reg  [LANE_WIDTH-1:0]     wj5edc4;
reg  [3:0]                vxa0d7a;
reg                       fp6bd6;
reg                       pu35eb6;
reg                       pcie_x1_mca_align_done;
reg                       ip7ad9e;
reg  [LANE_WIDTH-1:0]     cz4bdb8;
reg  [5*LANE_WIDTH-1:0]   hd9e948;
reg  [3:0]                vif4a47;
reg                       rva523b;
reg                       cb291df           ;
reg                       ps48efd           ;
reg                       zk477eb           ;
reg                       wy3bf5b;
reg                       xwdfad8;
reg                       uvfd6c3;
reg [2:0]                 hoeb61c;
reg                       nrf6e25;
reg                       pfd8714;
reg  [8*LANE_WIDTH-1:0]   ph1c53c             ;
reg  [1*LANE_WIDTH-1:0]   hq14f3d            ;
reg  [1*LANE_WIDTH-1:0]   wl3cf53              ;
reg [LANE_WIDTH-1:0]      nt3d4ed         ;
reg [LANE_WIDTH-1:0]      kq53b70        ;
reg [LANE_WIDTH-1:0]      wjedc08        ;
reg  [8*LANE_WIDTH-1:0]   cz70226             ;
reg  [1*LANE_WIDTH-1:0]   ir89a6            ;
reg  [1*LANE_WIDTH-1:0]   an269ad              ;
reg  [8*LANE_WIDTH-1:0]   gqa6b69             ;
reg  [1*LANE_WIDTH-1:0]   jeada4b            ;
reg  [1*LANE_WIDTH-1:0]   ho692d1              ;
reg  [LANE_WIDTH-1:0]     wj4b458           ;
reg  [LANE_WIDTH-1:0]     ayd162e           ;
reg  [LANE_WIDTH-1:0]     zk58b8f           ;
reg  [LANE_WIDTH-1:0]     sw2e3d3           ;
reg  [LANE_WIDTH-1:0]     oh8f4c7           ;
reg  [LANE_WIDTH-1:0]     wjd31ed         ;
reg  [LANE_WIDTH-1:0]     fnc7b60         ;
reg [LANE_WIDTH-1:0]      ofed837         ;
reg [LANE_WIDTH-1:0]      yx60de3        ;
reg [LANE_WIDTH-1:0]      bn378e6        ;
reg [LANE_WIDTH-1:0]      ble39b0         ;
reg [LANE_WIDTH-1:0]      dze6c3e        ;
reg [LANE_WIDTH-1:0]      jrb0fbd        ;
reg  [LANE_WIDTH-1:0]     zmb712e;
reg  [LANE_WIDTH-1:0]     vkb8973;
reg                       suc4b9b;
reg                       tw25cd9;
reg  [2:0]                rgc08c0;
reg  [2:0]                ls4603;
reg  [2:0]                mt2301a;
reg  [2:0]                kf180d4;
reg  [2:0]                tuc06a5;
reg  [2:0]                zz352a;
reg  [2:0]                wy1a957;
reg  [2:0]                kqd4ab9;
reg                       pcie_x1_mca_aligned;
wire [LANE_WIDTH-1:0]     zm1eafa;
wire [LANE_WIDTH-1:0]     icf57d3;

`ifdef DEBUG
reg fa47687;
reg sw3b43b;

`endif
reg vida1d9;
reg [LANE_WIDTH - 1 : 0] she25e0;
reg ec3b291;
reg [LANE_WIDTH - 1 : 0] zkca44d;
reg [LANE_WIDTH - 1 : 0] tj9135a;
reg [LANE_WIDTH - 1 : 0] dm4d6bb;
reg [8 * LANE_WIDTH - 1 : 0] zx6bb34;
reg [1 * LANE_WIDTH - 1 : 0] vvecd3a;
reg [1 * LANE_WIDTH - 1 : 0] ho669d6;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg [LANE_WIDTH - 1 : 0] sj90508;
reg [LANE_WIDTH - 1 : 0] aa82845;
reg [8 * LANE_WIDTH - 1 : 0] lfa0acd;
reg [LANE_WIDTH - 1 : 0] aa2b370;
reg [LANE_WIDTH - 1 : 0] thcdc00;
reg [LANE_WIDTH - 1 : 0] al7003e;
reg [5 * LANE_WIDTH - 1 : 0] aafa4;
reg [LANE_WIDTH - 1 : 0] wy3e90c;
reg [LANE_WIDTH - 1 : 0] gda4303;
reg [LANE_WIDTH - 1 : 0] rvc0e8;
reg [LANE_WIDTH - 1 : 0] ph3a35;
reg [LANE_WIDTH - 1 : 0] gbe8d75;
reg [LANE_WIDTH - 1 : 0] zm35d60;
reg [LANE_WIDTH - 1 : 0] uv7581d;
reg [8 * LANE_WIDTH - 1 : 0] wj60769;
reg [LANE_WIDTH - 1 : 0] ir1da6e;
reg [LANE_WIDTH - 1 : 0] zk69ba5;
reg [LANE_WIDTH - 1 : 0] ld6e953;
reg [5 * LANE_WIDTH - 1 : 0] pha54ff;
reg [LANE_WIDTH - 1 : 0] ea53ffa;
reg [LANE_WIDTH - 1 : 0] uiffe8d;
reg [LANE_WIDTH - 1 : 0] cmfa341;
reg [LANE_WIDTH - 1 : 0] co8d048;
reg [LANE_WIDTH - 1 : 0] en41201;
reg [LANE_WIDTH - 1 : 0] zk48066;
reg [LANE_WIDTH - 1 : 0] tw1996;
reg [LANE_WIDTH - 1 : 0] ho6659f;
reg [LANE_WIDTH - 1 : 0] ba967d6;
reg [LANE_WIDTH - 1 : 0] yz9f590;
reg [LANE_WIDTH - 1 : 0] lde6afb;
reg [3 : 0] twb2104;
reg an90823;
reg lf8411c;
reg ls208e6;
reg [LANE_WIDTH - 1 : 0] xw7cd5f;
reg [5 * LANE_WIDTH - 1 : 0] hbe64ae;
reg [3 : 0] xl32576;
reg ec92bb7;
reg ux95db9;
reg ohaedcc;
reg ho76e65;
reg dob732a;
reg aab9953;
reg ipcca99;
reg [2 : 0] wj654cd;
reg fc357df;
reg kq5336a;
reg [8 * LANE_WIDTH - 1 : 0] zxcda82;
reg [1 * LANE_WIDTH - 1 : 0] al6a0b9;
reg [1 * LANE_WIDTH - 1 : 0] ou82e67;
reg [LANE_WIDTH - 1 : 0] ksb99c4;
reg [LANE_WIDTH - 1 : 0] kq6710d;
reg [LANE_WIDTH - 1 : 0] suc4347;
reg [8 * LANE_WIDTH - 1 : 0] and1c0;
reg [1 * LANE_WIDTH - 1 : 0] by47020;
reg [1 * LANE_WIDTH - 1 : 0] tuc081e;
reg [8 * LANE_WIDTH - 1 : 0] je2079a;
reg [1 * LANE_WIDTH - 1 : 0] hq1e69e;
reg [1 * LANE_WIDTH - 1 : 0] an9a797;
reg [LANE_WIDTH - 1 : 0] xl9e5e5;
reg [LANE_WIDTH - 1 : 0] wy97974;
reg [LANE_WIDTH - 1 : 0] cme5d09;
reg [LANE_WIDTH - 1 : 0] xj74241;
reg [LANE_WIDTH - 1 : 0] nt9075;
reg [LANE_WIDTH - 1 : 0] uv41d72;
reg [LANE_WIDTH - 1 : 0] al75caa;
reg [LANE_WIDTH - 1 : 0] ay72aac;
reg [LANE_WIDTH - 1 : 0] phaab05;
reg [LANE_WIDTH - 1 : 0] ouac17e;
reg [LANE_WIDTH - 1 : 0] co5f8c;
reg [LANE_WIDTH - 1 : 0] nr7e30b;
reg [LANE_WIDTH - 1 : 0] hq8c2fb;
reg [LANE_WIDTH - 1 : 0] ohabefa;
reg [LANE_WIDTH - 1 : 0] jp5f7d5;
reg hofbeae;
reg hodf572;
reg [2 : 0] vxbacde;
reg [2 : 0] qtd66f6;
reg [2 : 0] gqb37b4;
reg [2 : 0] bn9bda1;
reg [2 : 0] ykded0f;
reg [2 : 0] dzf6879;
reg [2 : 0] yzb43ce;
reg [2 : 0] kfa1e74;
reg [LANE_WIDTH - 1 : 0] xw79d21;
reg [LANE_WIDTH - 1 : 0] th74858;
reg [2047:0] db22f5b;
wire [95:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif


`ifdef DEBUG

`endif

localparam ribd6fd = 96,jceb7ea = 32'hfdffe0cb;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef DEBUG


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cb291df      <= 'd0;      ps48efd      <= 'd0;      zk477eb      <= 'd0;      wy3bf5b      <= 'd0;      uvd3e71 <= 'd0;      ph1c53c        <= 'd0;      hq14f3d       <= 'd0;      wl3cf53         <= 'd0;      cz70226        <= 'd0;      ir89a6       <= 'd0;      an269ad         <= 'd0;      gqa6b69        <= 'd0;      jeada4b       <= 'd0;      ho692d1         <= 'd0;      zk58b8f      <= 'd0;      sw2e3d3      <= 'd0;      oh8f4c7      <= 'd0;      wjd31ed    <= 'd0;      fnc7b60    <= 'd0;      nt3d4ed    <= 'd0;      kq53b70   <= 'd0;      wjedc08   <= 'd0;      ofed837    <= 'd0;      yx60de3   <= 'd0;      bn378e6   <= 'd0;      ble39b0    <= 'd0;      dze6c3e   <= 'd0;      jrb0fbd   <= 'd0;   end   else begin            cb291df      <= ec3b291;      ps48efd      <= ux95db9;      zk477eb      <= ohaedcc;      wy3bf5b      <= ohaedcc & ~ho76e65;      uvd3e71 <= she25e0;      ph1c53c        <= zx6bb34;      hq14f3d       <= vvecd3a;      wl3cf53         <= ho669d6;      cz70226        <= zxcda82;      ir89a6       <= al6a0b9;      an269ad         <= ou82e67;      gqa6b69        <= and1c0;      jeada4b       <= by47020;      ho692d1         <= tuc081e;      zk58b8f      <= zkca44d;      sw2e3d3      <= cme5d09;      oh8f4c7      <= xj74241;      wjd31ed    <= tj9135a;      fnc7b60    <= uv41d72;
      nt3d4ed    <= ou920a1;      kq53b70   <= sj90508;      wjedc08   <= aa82845;
      ofed837    <= ksb99c4;      yx60de3   <= kq6710d;      bn378e6   <= suc4347;      ble39b0    <= ay72aac;      dze6c3e   <= phaab05;      jrb0fbd   <= ouac17e;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ks34c53     <= 'd0;      wj5edc4 <= 'd0;   end      else begin      ks34c53[0]       <= (vvecd3a[0] & (zx6bb34[7:0]    ==K28_5));      ks34c53[1]       <= (vvecd3a[1] & (zx6bb34[15:8]   ==K28_5));      ks34c53[2]       <= (vvecd3a[2] & (zx6bb34[23:16]  ==K28_5));      ks34c53[3]       <= (vvecd3a[3] & (zx6bb34[31:24]  ==K28_5));      if (kq5336a || dob732a) begin         wj5edc4 <= 'd0;      end      else begin         wj5edc4[0] <= (uv7581d[0]) ? 1'b1 : lde6afb[0];         wj5edc4[1] <= (uv7581d[1]) ? 1'b1 : lde6afb[1];         wj5edc4[2] <= (uv7581d[2]) ? 1'b1 : lde6afb[2];         wj5edc4[3] <= (uv7581d[3]) ? 1'b1 : lde6afb[3];      end   end
end









always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      hoeb61c <= 0;      uvfd6c3 <= 1'b0;   end   else begin      if (aab9953) begin         hoeb61c <= wj654cd +1;      end      else begin         hoeb61c <= 0;      end      uvfd6c3 <= (wj654cd == 5) ? 1'b1 : 1'b0;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vxa0d7a        <= uv7f1fb;      pu35eb6      <= 'd0;      ip7ad9e       <= 1'b0;      hd9e948     <= 'd0;      cz4bdb8        <= 'd0;      pfd8714 <= 1'b0;      nrf6e25 <= 1'b0;      xwdfad8         <= 1'b0;   end   else begin      pfd8714 <= 1'b0;      nrf6e25 <= 1'b0;      case(twb2104)                  uv7f1fb: begin            ip7ad9e          <= 1'b0;            cz4bdb8           <= 'd0;            xwdfad8            <= 1'b0;            if (dob732a) begin               if (ho6659f == 4'd8) begin                  vxa0d7a        <= byfbb73;               end       else begin                  vxa0d7a        <= mrf8fdd;                  pu35eb6      <= 'd0;                  cz4bdb8        <= ho6659f;               end            end            else begin               vxa0d7a        <= uv7f1fb;            end         end                  mrf8fdd: begin            if (|lde6afb == 1'b1 && ~kq5336a) begin               vxa0d7a        <= blc7eed;               xwdfad8         <= 1'b1;            end            else begin               vxa0d7a        <= mrf8fdd;            end         end                  blc7eed: begin            if (ipcca99) begin               xwdfad8   <= 1'b0;               if (lde6afb == ho6659f) begin                  vxa0d7a        <= je3f76e;                  nrf6e25 <= 1'b1;                  pfd8714 <= 1'b1;               end               else begin                  vxa0d7a        <= mrf8fdd;                  pfd8714 <= 1'b1;               end            end            else begin               vxa0d7a  <= blc7eed;            end         end          je3f76e:  begin            if (&wy3e90c) begin               hd9e948  <= aafa4;               if (hbe64ae == aafa4) begin                 vxa0d7a  <= byfbb73;                 ip7ad9e <= 1'b0;               end               else begin                 vxa0d7a  <= mrf8fdd;                 ip7ad9e <= 1'b1;               end            end            else begin                 vxa0d7a  <= je3f76e;            end         end                           byfbb73:  begin            cz4bdb8          <= 'd0;            if (ec92bb7) begin               vxa0d7a       <= uv7f1fb;               pu35eb6     <= 1'b1;            end            else begin               vxa0d7a       <= byfbb73;            end         end      endcase   end
end




always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vif4a47 <= 'd0;      rva523b       <= 'd0;   end   else begin      if (twb2104 == byfbb73 && xl32576 < TLP_MEM_DEPTH) begin         vif4a47 <= xl32576 + 1;      end      else begin         vif4a47 <= 'd0;      end      rva523b <= (xl32576 == TLP_MEM_DEPTH) ? 1'b1 : 1'b0;   end
end










always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zmb712e       <= 'd0;      vkb8973       <= 'd0;      rgc08c0 <= 'd0;      mt2301a <= 'd0;      tuc06a5 <= 'd0;      wy1a957 <= 'd0;
      ls4603 <= 'd0;      kf180d4 <= 'd0;      zz352a <= 'd0;      kqd4ab9 <= 'd0;      th5f4f9    <= 'd0;      wj4b458 <= 'd0;      ayd162e <= 'd0;   end   else begin                              th5f4f9    <= (ho6659f == 4'd8) ? 'd0 : (dm4d6bb | tj9135a);      wj4b458 <= tw1996;      ayd162e <= xl9e5e5;      zmb712e[0] <= (xl9e5e5[0] & al75caa[0]) ? 1'b1 : 1'b0;      zmb712e[1] <= (xl9e5e5[1] & al75caa[1]) ? 1'b1 : 1'b0;      zmb712e[2] <= (xl9e5e5[2] & al75caa[2]) ? 1'b1 : 1'b0;      zmb712e[3] <= (xl9e5e5[3] & al75caa[3]) ? 1'b1 : 1'b0;
      vkb8973[0] <= (wy97974[0] & nt9075[0]) ? 1'b1 : 1'b0;      vkb8973[1] <= (wy97974[1] & nt9075[1]) ? 1'b1 : 1'b0;      vkb8973[2] <= (wy97974[2] & nt9075[2]) ? 1'b1 : 1'b0;      vkb8973[3] <= (wy97974[3] & nt9075[3]) ? 1'b1 : 1'b0;
            case ({ohabefa[0],hofbeae})         2'b01:   rgc08c0 <= vxbacde - 1'b1 ;         2'b10:   rgc08c0 <= vxbacde + 1'b1 ;         default: rgc08c0 <= vxbacde;      endcase      case ({ohabefa[1],hofbeae})         2'b01:   mt2301a <= gqb37b4 - 1'b1 ;         2'b10:   mt2301a <= gqb37b4 + 1'b1 ;         default: mt2301a <= gqb37b4;      endcase      case ({ohabefa[2],hofbeae})         2'b01:   tuc06a5 <= ykded0f - 1'b1 ;         2'b10:   tuc06a5 <= ykded0f + 1'b1 ;         default: tuc06a5 <= ykded0f;      endcase      case ({ohabefa[3],hofbeae})         2'b01:   wy1a957 <= yzb43ce - 1'b1 ;         2'b10:   wy1a957 <= yzb43ce + 1'b1 ;         default: wy1a957 <= yzb43ce;      endcase            case ({jp5f7d5[0],hodf572})         2'b01:   ls4603 <= qtd66f6 - 1'b1 ;         2'b10:   ls4603 <= qtd66f6 + 1'b1 ;         default: ls4603 <= qtd66f6;      endcase      case ({jp5f7d5[1],hodf572})         2'b01:   kf180d4 <= bn9bda1 - 1'b1 ;         2'b10:   kf180d4 <= bn9bda1 + 1'b1 ;         default: kf180d4 <= bn9bda1;      endcase      case ({jp5f7d5[2],hodf572})         2'b01:   zz352a <= dzf6879 - 1'b1 ;         2'b10:   zz352a <= dzf6879 + 1'b1 ;         default: zz352a <= dzf6879;      endcase      case ({jp5f7d5[3],hodf572})         2'b01:   kqd4ab9 <= kfa1e74 - 1'b1 ;         2'b10:   kqd4ab9 <= kfa1e74 + 1'b1 ;         default: kqd4ab9 <= kfa1e74;      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fp6bd6  <= nrddb9a;      tw25cd9  <= 1'b0;      suc4b9b  <= 1'b0;   end   else begin      tw25cd9  <= 1'b0;      suc4b9b  <= 1'b0;      case(an90823)         nrddb9a: begin            if (qtd66f6 >= 1 && bn9bda1 >= 1 && dzf6879 >= 1 && kfa1e74 >= 1 && &thcdc00) begin               tw25cd9  <= 1'b1;               fp6bd6  <= ofedcd6;            end            else if (vxbacde >= 1 && gqb37b4 >= 1 && ykded0f >= 1 && yzb43ce >= 1 && &thcdc00) begin               suc4b9b  <= 1'b1;               fp6bd6  <= ofedcd6;            end            else begin               fp6bd6  <= nrddb9a;            end         end         ofedcd6: begin            fp6bd6     <= nrddb9a;         end      endcase   end
end




pcie_x1_tj3d25e cm56102 [LANE_WIDTH-1:0]   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .cz4bdb8          (xw7cd5f),    .wj5edc4       (uv7581d),    .nrf6e25   (fc357df),
    .zmb712e           (ohabefa),    .vkb8973           (jp5f7d5),    .suc4b9b           (hofbeae),    .tw25cd9           (hodf572),    .asb_data          (je2079a),    .asb_kcntl         (hq1e69e),    .asb_err           (an9a797),    .czd941e          (tw1996),
    .asb_eidle_rx      (co5f8c),    .asb_beacon_rx     (nr7e30b),    .asb_lane_sync     (hq8c2fb),        .zm1eafa             (zm1eafa),    .icf57d3            (icf57d3),    .mtabe98             (wy314c8),    .th5f4c5            (me53205),    .icfa62e              (uk50f7),    .uvd3171         (mrc3afe),    .mg98b8c        (viebfa5),    .fac5c60        (rgfe95f),    .sw2e303             (blc8143),    .ld71818             (cm43dc7),    .ng8c0c7         (yxf71c3),    .gb6063a          (jpc70eb)    );
always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      mtabe98        <= 'd0;      th5f4c5       <= 'd0;      icfa62e         <= 'd0;      sw2e303        <= 'd0;      ld71818        <= 'd0;      ng8c0c7    <= 'd0;      gb6063a     <= 'd0;      jc6cd31  <= 'd0;      uvd3171    <= 'd0;      mg98b8c   <= 'd0;      fac5c60   <= 'd0;   end   else begin      mtabe98        <= wj60769 ;      th5f4c5       <= ir1da6e;      icfa62e         <= ld6e953;      sw2e303        <= (ho6659f != 'd0) ? (zk69ba5 | ~ho6659f) : 'd0;      ld71818        <= pha54ff;      gb6063a     <= uiffe8d;      jc6cd31  <= gbe8d75;      ng8c0c7    <= (ho6659f != 'd0) ? (ea53ffa | ~ho6659f) : 'd0;      uvd3171    <= cmfa341;      mg98b8c   <= co8d048;      fac5c60   <= en41201;   end
end



always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pcie_x1_mca_data      <= 'd0;      pcie_x1_mca_kcntl     <= 'd0;      pcie_x1_mca_err       <= 'd0;      pcie_x1_mca_eidle_rx  <= 'd0;      pcie_x1_mca_beacon_rx <= 'd0;      pcie_x1_mca_lane_sync <= 'd0;      pcie_x1_mca_align_done<= 'd0;   end   else if (vida1d9) begin      pcie_x1_mca_data      <= zx6bb34;      pcie_x1_mca_kcntl     <= vvecd3a;      pcie_x1_mca_err       <= ho669d6;      pcie_x1_mca_eidle_rx  <= ou920a1;      pcie_x1_mca_beacon_rx <= sj90508;      pcie_x1_mca_lane_sync <= aa82845;      pcie_x1_mca_align_done<= 1'b1;   end   else begin                  pcie_x1_mca_data[7:0]    <= (zm35d60[0]) ? 8'h1C : lfa0acd[7:0];      pcie_x1_mca_kcntl[0]     <= (zm35d60[0]) ? 1'b1  : aa2b370[0];      pcie_x1_mca_data[15:8]   <= (zm35d60[1]) ? 8'h1C : lfa0acd[15:8];      pcie_x1_mca_kcntl[1]     <= (zm35d60[1]) ? 1'b1  : aa2b370[1];      pcie_x1_mca_data[23:16]  <= (zm35d60[2]) ? 8'h1C : lfa0acd[23:16];      pcie_x1_mca_kcntl[2]     <= (zm35d60[2]) ? 1'b1  : aa2b370[2];      pcie_x1_mca_data[31:24]  <= (zm35d60[3]) ? 8'h1C : lfa0acd[31:24];      pcie_x1_mca_kcntl[3]     <= (zm35d60[3]) ? 1'b1  : aa2b370[3];
      pcie_x1_mca_err       <= al7003e;      pcie_x1_mca_eidle_rx  <= gda4303;      pcie_x1_mca_beacon_rx <= rvc0e8;      pcie_x1_mca_lane_sync <= ph3a35;      pcie_x1_mca_align_done<= lf8411c;   end
end



assign gq3bfcc = (pcie_x1_mca_data[31:24] == 8'hBC) & (pcie_x1_mca_kcntl[3] == 1'b1) ;
assign vvf9819 = (pcie_x1_mca_data[23:16] == 8'hBC) & (pcie_x1_mca_kcntl[2] == 1'b1) ;
assign zz33e5 = (pcie_x1_mca_data[15:8]  == 8'hBC) & (pcie_x1_mca_kcntl[1] == 1'b1) ;
assign tu7cbf2 = (pcie_x1_mca_data[7:0]   == 8'hBC) & (pcie_x1_mca_kcntl[0] == 1'b1) ;

assign fn7e4c3 = (ho6659f == 4'h8) & gq3bfcc ;
assign ks987ea = (ho6659f == 4'hC) & gq3bfcc & vvf9819 ;
assign meea30c = (ho6659f == 4'hF) & gq3bfcc & vvf9819 & zz33e5 & tu7cbf2 ;

always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n)      pcie_x1_mca_aligned   <= 'd0;   else if (dob732a)      pcie_x1_mca_aligned <= 'd0;   else if (fn7e4c3 || ks987ea || meea30c)      pcie_x1_mca_aligned <= 1'b1 ;   else      pcie_x1_mca_aligned <= pcie_x1_mca_aligned;
end





`ifdef DEBUG

always @(posedge sys_clk) begin   fa47687 <= thcdc00[0];   sw3b43b <= fa47687;
end
always @(posedge sys_clk) begin   if (pcie_x1_mca_data[7:0] == K28_5 && pcie_x1_mca_kcntl[0] == 1'b1 && pcie_x1_mca_align_done == 1'b1 && !sw3b43b) begin      if (pcie_x1_mca_data[31:8] != {K28_5,K28_5,K28_5} && pcie_x1_mca_kcntl[3:1] != 3'b111)      $display("ERROR: From RTL align_fifo.v the fifo data is MIS-ALIGNED after ALignment was completed pcie_x1_mca_data = %h %t",pcie_x1_mca_data,$time);   end
end

`endif


always@* begin vida1d9<=ux17adf[0];she25e0<={ltssm_config_ln>>1,ux17adf[1]};ec3b291<=ux17adf[2];zkca44d<={skip_added>>1,ux17adf[3]};tj9135a<={skip_removed>>1,ux17adf[4]};dm4d6bb<={asb_skip_found>>1,ux17adf[5]};zx6bb34<={asb_data>>1,ux17adf[6]};vvecd3a<={asb_kcntl>>1,ux17adf[7]};ho669d6<={asb_err>>1,ux17adf[8]};ou920a1<={asb_eidle_rx>>1,ux17adf[9]};sj90508<={asb_beacon_rx>>1,ux17adf[10]};aa82845<={asb_lane_sync>>1,ux17adf[11]};lfa0acd<={mtabe98>>1,ux17adf[12]};aa2b370<={th5f4c5>>1,ux17adf[13]};thcdc00<={sw2e303>>1,ux17adf[14]};al7003e<={icfa62e>>1,ux17adf[15]};aafa4<={ld71818>>1,ux17adf[16]};wy3e90c<={ng8c0c7>>1,ux17adf[17]};gda4303<={uvd3171>>1,ux17adf[18]};rvc0e8<={mg98b8c>>1,ux17adf[19]};ph3a35<={fac5c60>>1,ux17adf[20]};gbe8d75<={gb6063a>>1,ux17adf[21]};zm35d60<={jc6cd31>>1,ux17adf[22]};uv7581d<={ks34c53>>1,ux17adf[23]};wj60769<={wy314c8>>1,ux17adf[24]};ir1da6e<={me53205>>1,ux17adf[25]};zk69ba5<={blc8143>>1,ux17adf[26]};ld6e953<={uk50f7>>1,ux17adf[27]};pha54ff<={cm43dc7>>1,ux17adf[28]};ea53ffa<={yxf71c3>>1,ux17adf[29]};uiffe8d<={jpc70eb>>1,ux17adf[30]};cmfa341<={mrc3afe>>1,ux17adf[31]};co8d048<={viebfa5>>1,ux17adf[32]};en41201<={rgfe95f>>1,ux17adf[33]};zk48066<={zza57d3>>1,ux17adf[34]};tw1996<={th5f4f9>>1,ux17adf[35]};ho6659f<={uvd3e71>>1,ux17adf[36]};ba967d6<={sw2b4f4>>1,ux17adf[37]};yz9f590<={yxd3d06>>1,ux17adf[38]};lde6afb<={wj5edc4>>1,ux17adf[39]};twb2104<={vxa0d7a>>1,ux17adf[40]};an90823<=ux17adf[41];lf8411c<=ux17adf[42];ls208e6<=ux17adf[43];xw7cd5f<={cz4bdb8>>1,ux17adf[44]};hbe64ae<={hd9e948>>1,ux17adf[45]};xl32576<={vif4a47>>1,ux17adf[46]};ec92bb7<=ux17adf[47];ux95db9<=ux17adf[48];ohaedcc<=ux17adf[49];ho76e65<=ux17adf[50];dob732a<=ux17adf[51];aab9953<=ux17adf[52];ipcca99<=ux17adf[53];wj654cd<={hoeb61c>>1,ux17adf[54]};fc357df<=ux17adf[55];kq5336a<=ux17adf[56];zxcda82<={ph1c53c>>1,ux17adf[57]};al6a0b9<={hq14f3d>>1,ux17adf[58]};ou82e67<={wl3cf53>>1,ux17adf[59]};ksb99c4<={nt3d4ed>>1,ux17adf[60]};kq6710d<={kq53b70>>1,ux17adf[61]};suc4347<={wjedc08>>1,ux17adf[62]};and1c0<={cz70226>>1,ux17adf[63]};by47020<={ir89a6>>1,ux17adf[64]};tuc081e<={an269ad>>1,ux17adf[65]};je2079a<={gqa6b69>>1,ux17adf[66]};hq1e69e<={jeada4b>>1,ux17adf[67]};an9a797<={ho692d1>>1,ux17adf[68]};xl9e5e5<={wj4b458>>1,ux17adf[69]};wy97974<={ayd162e>>1,ux17adf[70]};cme5d09<={zk58b8f>>1,ux17adf[71]};xj74241<={sw2e3d3>>1,ux17adf[72]};nt9075<={oh8f4c7>>1,ux17adf[73]};uv41d72<={wjd31ed>>1,ux17adf[74]};al75caa<={fnc7b60>>1,ux17adf[75]};ay72aac<={ofed837>>1,ux17adf[76]};phaab05<={yx60de3>>1,ux17adf[77]};ouac17e<={bn378e6>>1,ux17adf[78]};co5f8c<={ble39b0>>1,ux17adf[79]};nr7e30b<={dze6c3e>>1,ux17adf[80]};hq8c2fb<={jrb0fbd>>1,ux17adf[81]};ohabefa<={zmb712e>>1,ux17adf[82]};jp5f7d5<={vkb8973>>1,ux17adf[83]};hofbeae<=ux17adf[84];hodf572<=ux17adf[85];vxbacde<={rgc08c0>>1,ux17adf[86]};qtd66f6<={ls4603>>1,ux17adf[87]};gqb37b4<={mt2301a>>1,ux17adf[88]};bn9bda1<={kf180d4>>1,ux17adf[89]};ykded0f<={tuc06a5>>1,ux17adf[90]};dzf6879<={zz352a>>1,ux17adf[91]};yzb43ce<={wy1a957>>1,ux17adf[92]};kfa1e74<={kqd4ab9>>1,ux17adf[93]};xw79d21<={zm1eafa>>1,ux17adf[94]};th74858<={icf57d3>>1,ux17adf[95]};end
always@* begin db22f5b[2047]<=ltssm_config_ln[0];db22f5b[2046]<=phy_realign_req;db22f5b[2044]<=skip_added[0];db22f5b[2041]<=uvfd6c3;db22f5b[2040]<=skip_removed[0];db22f5b[2035]<=hoeb61c[0];db22f5b[2033]<=asb_skip_found[0];db22f5b[2024]<=gb6063a[0];db22f5b[2022]<=nrf6e25;db22f5b[2018]<=asb_data[0];db22f5b[2004]<=yx60de3[0];db22f5b[2001]<=jc6cd31[0];db22f5b[1997]<=pfd8714;db22f5b[1988]<=asb_kcntl[0];db22f5b[1961]<=bn378e6[0];db22f5b[1954]<=ks34c53[0];db22f5b[1946]<=ph1c53c[0];db22f5b[1929]<=asb_err[0];db22f5b[1917]<=oh8f4c7[0];db22f5b[1875]<=ble39b0[0];db22f5b[1874]<=th5f4f9[0];db22f5b[1860]<=wy314c8[0];db22f5b[1851]<=ho692d1[0];db22f5b[1845]<=hq14f3d[0];db22f5b[1811]<=asb_eidle_rx[0];db22f5b[1789]<=uvd3171[0];db22f5b[1786]<=wjd31ed[0];db22f5b[1736]<=mt2301a[0];db22f5b[1721]<=cz70226[0];db22f5b[1702]<=dze6c3e[0];db22f5b[1700]<=uvd3e71[0];db22f5b[1673]<=me53205[0];db22f5b[1655]<=wj4b458[0];db22f5b[1643]<=wl3cf53[0];db22f5b[1607]<=zz352a[0];db22f5b[1574]<=asb_beacon_rx[0];db22f5b[1530]<=mg98b8c[0];db22f5b[1525]<=fnc7b60[0];db22f5b[1486]<=gqa6b69[0];db22f5b[1425]<=kf180d4[0];db22f5b[1395]<=ir89a6[0];db22f5b[1357]<=jrb0fbd[0];db22f5b[1353]<=sw2b4f4[0];db22f5b[1334]<=vkb8973[0];db22f5b[1317]<=wj5edc4[0];db22f5b[1311]<=rva523b;db22f5b[1299]<=blc8143[0];db22f5b[1263]<=ayd162e[0];db22f5b[1258]<=viebfa5[0];db22f5b[1247]<=icfa62e[0];db22f5b[1241]<=tw25cd9;db22f5b[1239]<=nt3d4ed[0];db22f5b[1187]<=cz4bdb8[0];db22f5b[1172]<=fp6bd6;db22f5b[1167]<=wy1a957[0];db22f5b[1151]<=ps48efd;db22f5b[1149]<=icf57d3[0];db22f5b[1102]<=cm43dc7[0];db22f5b[1101]<=asb_lane_sync[0];db22f5b[1023]<=pcie_x1_mca_disable;db22f5b[1020]<=xwdfad8;db22f5b[1012]<=fac5c60[0];db22f5b[1002]<=ofed837[0];db22f5b[958]<=sw2e3d3[0];db22f5b[937]<=zza57d3[0];db22f5b[925]<=jeada4b[0];db22f5b[894]<=ng8c0c7[0];db22f5b[868]<=ls4603[0];db22f5b[860]<=wjedc08[0];db22f5b[803]<=tuc06a5[0];db22f5b[743]<=an269ad[0];db22f5b[667]<=zmb712e[0];db22f5b[658]<=yxd3d06[0];db22f5b[655]<=vif4a47[0];db22f5b[629]<=mrc3afe[0];db22f5b[623]<=sw2e303[0];db22f5b[620]<=suc4b9b;db22f5b[593]<=ip7ad9e;db22f5b[586]<=vxa0d7a[0];db22f5b[575]<=cb291df;db22f5b[574]<=zm1eafa[0];db22f5b[551]<=uk50f7[0];db22f5b[510]<=wy3bf5b;db22f5b[479]<=zk58b8f[0];db22f5b[468]<=rgfe95f[0];db22f5b[447]<=ld71818[0];db22f5b[434]<=rgc08c0[0];db22f5b[430]<=kq53b70[0];db22f5b[327]<=hd9e948[0];db22f5b[314]<=jpc70eb[0];db22f5b[311]<=th5f4c5[0];db22f5b[296]<=pu35eb6;db22f5b[287]<=kqd4ab9[0];db22f5b[255]<=zk477eb;db22f5b[157]<=yxf71c3[0];db22f5b[155]<=mtabe98[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule

























































































`timescale 1 ns / 100 ps
module pcie_x1_cbab1ea (
   input wire        lq58f54 ,        
   input wire        rst_n ,          

   input wire [7:0]  data_in ,        
   input wire        osea8b6 ,       
   input wire        ip545b1 ,  

   output reg [7:0]  zma2d8d ,       
   output reg        ph16c6b           );
reg [15:0]   cob635f;
reg          uxb1af9;
reg [3:0]    gq8d7cd;
reg          dz6be68 ;
reg          zx5f347;
reg          hbf9a3e ;
reg [7:0]    nrcd1f7;
reg          ea68fbe;
reg          by47df0;
reg          ie3ef82;
reg [7 : 0] qtf7c10;
reg yzbe084;
reg qgf0425;
reg wy82128;
reg [3 : 0] ym10941;
reg vx84a08;
reg ri25047;
reg db2823b;
reg [7 : 0] yx411df;
reg mt8efc;
reg by477e5;
reg mg3bf2b;
reg [2047:0] db22f5b;
wire [11:0] ux17adf;

localparam ribd6fd = 12,jceb7ea = 32'hfdffd48b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;









always @(posedge lq58f54, negedge rst_n) begin      if(!rst_n) begin      dz6be68 <= 1'b0 ;      zx5f347 <= 1'b0 ;      hbf9a3e <= 1'b0 ;
      nrcd1f7  <= 8'h0 ;      ea68fbe <= 1'b0 ;   end   else  begin      dz6be68 <= yzbe084 & (qtf7c10[7:0] == 8'hbc);       zx5f347 <= yzbe084 & (qtf7c10[7:0] == 8'h1c);       hbf9a3e <= yzbe084 & (qtf7c10[7:0] == 8'hf7);       nrcd1f7  <= qtf7c10 ;      ea68fbe <= yzbe084 ;   end
end

always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n) begin      by47df0 <= 1'b0;      ie3ef82 <= 1'b0;   end   else begin      by47df0 <= qgf0425;      ie3ef82 <= by477e5;   end
end
























always @(posedge lq58f54, negedge rst_n) begin   if(!rst_n)      uxb1af9 <= 1'b0;   else if(vx84a08 || (wy82128 && db2823b))      uxb1af9 <= 1'b1;      else if ((ym10941 == 4'b1111) || mt8efc)       uxb1af9 <= 1'b0;   else      uxb1af9 <= wy82128;
end
always @(posedge lq58f54, negedge rst_n) begin   if(!rst_n)      gq8d7cd <= 4'b0000;   else if(vx84a08)      gq8d7cd <= 4'b0001;   else if (wy82128)      gq8d7cd <= ym10941 + 4'b0001;   else      gq8d7cd <= 4'b0000;
end








always @(posedge lq58f54, negedge rst_n) begin   if(!rst_n) begin      zma2d8d  <= 8'd0;      ph16c6b <= 1'd0;   end   else begin


      ph16c6b <= mt8efc;      if(wy82128 || mt8efc || mg3bf2b)          zma2d8d[7:0]  <= yx411df[7:0];      else begin            zma2d8d[0] <= yx411df[0] ^ cob635f[15];            zma2d8d[1] <= yx411df[1] ^ cob635f[14];            zma2d8d[2] <= yx411df[2] ^ cob635f[13];            zma2d8d[3] <= yx411df[3] ^ cob635f[12];            zma2d8d[4] <= yx411df[4] ^ cob635f[11];            zma2d8d[5] <= yx411df[5] ^ cob635f[10];            zma2d8d[6] <= yx411df[6] ^ cob635f[ 9];            zma2d8d[7] <= yx411df[7] ^ cob635f[ 8];      end   end
end




always @(posedge lq58f54, negedge rst_n) begin   if(!rst_n)      cob635f <= 16'hffff;   else if(vx84a08)      cob635f <= 16'hffff;   else if(ri25047)      cob635f <= cob635f;   else begin      cob635f[ 0] <= cob635f[ 8];      cob635f[ 1] <= cob635f[ 9];      cob635f[ 2] <= cob635f[10];      cob635f[ 3] <= cob635f[11] ^ cob635f[ 8];      cob635f[ 4] <= cob635f[12] ^ cob635f[ 9] ^ cob635f[ 8];      cob635f[ 5] <= cob635f[13] ^ cob635f[10] ^ cob635f[ 9] ^ cob635f[ 8];      cob635f[ 6] <= cob635f[14] ^ cob635f[11] ^ cob635f[10] ^ cob635f[ 9];      cob635f[ 7] <= cob635f[15] ^ cob635f[12] ^ cob635f[11] ^ cob635f[10];      cob635f[ 8] <= cob635f[ 0] ^ cob635f[13] ^ cob635f[12] ^ cob635f[11];      cob635f[ 9] <= cob635f[ 1] ^ cob635f[14] ^ cob635f[13] ^ cob635f[12];      cob635f[10] <= cob635f[ 2] ^ cob635f[15] ^ cob635f[14] ^ cob635f[13];      cob635f[11] <= cob635f[ 3]            ^ cob635f[15] ^ cob635f[14];      cob635f[12] <= cob635f[ 4]                       ^ cob635f[15];      cob635f[13] <= cob635f[ 5];      cob635f[14] <= cob635f[ 6];      cob635f[15] <= cob635f[ 7];   end
end
always@* begin qtf7c10<={data_in>>1,ux17adf[0]};yzbe084<=ux17adf[1];qgf0425<=ux17adf[2];wy82128<=ux17adf[3];ym10941<={gq8d7cd>>1,ux17adf[4]};vx84a08<=ux17adf[5];ri25047<=ux17adf[6];db2823b<=ux17adf[7];yx411df<={nrcd1f7>>1,ux17adf[8]};mt8efc<=ux17adf[9];by477e5<=ux17adf[10];mg3bf2b<=ux17adf[11];end
always@* begin db22f5b[2047]<=osea8b6;db22f5b[2046]<=ip545b1;db22f5b[2044]<=uxb1af9;db22f5b[2040]<=gq8d7cd[0];db22f5b[2032]<=dz6be68;db22f5b[2017]<=zx5f347;db22f5b[1987]<=hbf9a3e;db22f5b[1927]<=nrcd1f7[0];db22f5b[1806]<=ea68fbe;db22f5b[1565]<=by47df0;db22f5b[1082]<=ie3ef82;db22f5b[1023]<=data_in[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_swac199 (
   input wire        of60cc9 ,    
   input wire        lq58f54 ,    
   input wire        rst_n ,      
   input wire        ls9933d , 

   input wire [21:0] data_in ,    

   output reg [10:0] zma2d8d        );
reg [1:0]         su67ae9;
reg [1:0]         lf3d749;
reg               neeba4e;
wire [10:0]       zk5d273;
wire [10:0]       lde939b;
reg               ic49cdf  ;
reg               wj4e6f9  ;
reg               dm737cd  ;
integer           db9be6b ;
integer           psdf35f ;
reg [10:0] fnf9afa[0:3] ;
reg [10:0] xjcd7d7[0:3] ;
reg jp6bebe;
reg [21 : 0] qtf7c10;
reg [1 : 0] ykfafbe;
reg pfd7df0;
reg [10 : 0] epbef87;
reg [10 : 0] kdf7c3c;
reg cbbe1e4;
reg wwf0f25;
reg wy87929;
reg [2047:0] db22f5b;
wire [8:0] ux17adf;

localparam ribd6fd = 9,jceb7ea = 32'hfdffe44b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;








always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n) begin      ic49cdf <= 1'b0;      wj4e6f9 <= 1'b0;   end   else begin      ic49cdf <= jp6bebe;      wj4e6f9 <= cbbe1e4;   end
end


always @(posedge of60cc9, negedge rst_n) begin   if (!rst_n) begin      dm737cd <= 1'b0;   end   else begin      dm737cd <= jp6bebe;   end
end






always @(posedge of60cc9, negedge rst_n) begin   if (!rst_n)      su67ae9 <= 2'b00;   else if (wy87929)      su67ae9 <= su67ae9 + 2'd1;
end

always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n)      neeba4e <= 1'b0;   else if (!wwf0f25)      neeba4e <= 1'b0;   else      neeba4e <= ~pfd7df0;
end

always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n)      lf3d749 <= 2'b10;   else if (pfd7df0 && wwf0f25)      lf3d749 <= ykfafbe + 2'd1;
end

always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n) begin      zma2d8d[9:0] <= 10'd0;      zma2d8d[10]  <= 1'b1;   end   else begin      zma2d8d[9:0] <= pfd7df0 ? epbef87[9:0] : kdf7c3c[9:0];      zma2d8d[10]  <= wwf0f25 ? (pfd7df0 ? epbef87[10] : kdf7c3c[10]) : 1'b1 ;   end
end


always @(posedge of60cc9, negedge rst_n) begin   if (!rst_n)      for (db9be6b=0;db9be6b<=3;db9be6b=db9be6b+1)         fnf9afa[db9be6b] <= 11'd0;   else      fnf9afa[su67ae9] <= qtf7c10[10:0] ;
end
assign zk5d273 = fnf9afa[ykfafbe] ;
always @(posedge of60cc9, negedge rst_n) begin   if (!rst_n)      for (psdf35f=0;psdf35f<=3;psdf35f=psdf35f+1)         xjcd7d7[psdf35f] <= 11'd0;   else      xjcd7d7[su67ae9] <= qtf7c10[21:11] ;
end
assign lde939b = xjcd7d7[ykfafbe] ;

always@* begin jp6bebe<=ux17adf[0];qtf7c10<={data_in>>1,ux17adf[1]};ykfafbe<={lf3d749>>1,ux17adf[2]};pfd7df0<=ux17adf[3];epbef87<={zk5d273>>1,ux17adf[4]};kdf7c3c<={lde939b>>1,ux17adf[5]};cbbe1e4<=ux17adf[6];wwf0f25<=ux17adf[7];wy87929<=ux17adf[8];end
always@* begin db22f5b[2047]<=data_in[0];db22f5b[2046]<=lf3d749[0];db22f5b[2044]<=neeba4e;db22f5b[2040]<=zk5d273[0];db22f5b[2033]<=lde939b[0];db22f5b[2019]<=ic49cdf;db22f5b[1991]<=wj4e6f9;db22f5b[1934]<=dm737cd;db22f5b[1023]<=ls9933d;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule




























`timescale 1 ns / 100 ps
module pcie_x1_tj68d4 (
   input wire         lq58f54 ,    
   input wire         of60cc9 ,    
   input wire         rst_n ,      
   input wire         ls9933d , 

   input wire [12:0]   data_in ,    

   output wire [25:0] zma2d8d        );
reg [1:0]         su67ae9  ;
reg [1:0]         lf3d749  ;
reg               gd80a2    ;
reg [12:0]        zk5d273  ;
reg [12:0]        lde939b  ;
reg               ic49cdf  ;
reg               wj4e6f9  ;
reg               dm737cd  ;
integer           db9be6b ;
integer           psdf35f ;
reg [12:0] fnf9afa[0:3] ;
reg [12:0] xjcd7d7[0:3] ;
reg jp6bebe;
reg [12 : 0] qtf7c10;
reg [1 : 0] ykfafbe;
reg pf40488;
reg [12 : 0] epbef87;
reg [12 : 0] kdf7c3c;
reg cbbe1e4;
reg wwf0f25;
reg wy87929;
reg [2047:0] db22f5b;
wire [8:0] ux17adf;

localparam ribd6fd = 9,jceb7ea = 32'hfdffd14b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;








always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n) begin      ic49cdf <= 1'b0;      wj4e6f9 <= 1'b0;   end   else begin      ic49cdf <= jp6bebe;      wj4e6f9 <= cbbe1e4;   end
end


always @(posedge of60cc9, negedge rst_n) begin   if (!rst_n) begin      dm737cd <= 1'b0;   end   else begin      dm737cd <= jp6bebe;   end
end






always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n)      su67ae9 <= 2'b00;   else if (pf40488 && wwf0f25)      su67ae9 <= su67ae9 + 2'd1;   else      su67ae9 <= su67ae9;
end

always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n)      gd80a2 <= 1'b0;   else if (!wwf0f25)      gd80a2 <= 1'b0;   else      gd80a2 <= ~pf40488;
end

always @(posedge of60cc9, negedge rst_n) begin   if (!rst_n)      lf3d749 <= 2'b10;   else if (wy87929)      lf3d749 <= ykfafbe + 2'd1;
end

assign zma2d8d = {epbef87,kdf7c3c};


always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n)      for (db9be6b=0;db9be6b<=3;db9be6b=db9be6b+1) begin         fnf9afa[db9be6b] <= 13'd0;      end   else if (!pf40488)      fnf9afa[su67ae9] <= qtf7c10 ;
end

always @(posedge of60cc9, negedge rst_n) begin   if (!rst_n)      zk5d273 <= 'd0 ;   else      zk5d273 <= fnf9afa[ykfafbe] ;
end
always @(posedge lq58f54, negedge rst_n) begin   if (!rst_n)      for (psdf35f=0;psdf35f<=3;psdf35f=psdf35f+1) begin         xjcd7d7[psdf35f] <= 13'd0;      end   else if (pf40488)      xjcd7d7[su67ae9] <= qtf7c10 ;
end

always @(posedge of60cc9, negedge rst_n) begin   if (!rst_n)      lde939b <= 'd0 ;   else      lde939b <= xjcd7d7[ykfafbe] ;
end

always@* begin jp6bebe<=ux17adf[0];qtf7c10<={data_in>>1,ux17adf[1]};ykfafbe<={lf3d749>>1,ux17adf[2]};pf40488<=ux17adf[3];epbef87<={zk5d273>>1,ux17adf[4]};kdf7c3c<={lde939b>>1,ux17adf[5]};cbbe1e4<=ux17adf[6];wwf0f25<=ux17adf[7];wy87929<=ux17adf[8];end
always@* begin db22f5b[2047]<=data_in[0];db22f5b[2046]<=lf3d749[0];db22f5b[2044]<=gd80a2;db22f5b[2040]<=zk5d273[0];db22f5b[2033]<=lde939b[0];db22f5b[2019]<=ic49cdf;db22f5b[1990]<=wj4e6f9;db22f5b[1933]<=dm737cd;db22f5b[1023]<=ls9933d;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_an23b02 (
   input wire         wl1d815 ,      
   input wire         clk_250_tx ,      
   input wire         uv60567 ,      
   input wire         clk_250_rx ,      
   input wire         rst_n ,           

   input wire         ieacf60, 
   input wire         ip545b1 ,   
   input wire         ls9933d ,    
   input wire [15:0]  fnec00f ,   
   input wire [1:0]   of6007f ,  
   input wire [1:0]   co3fd , 
   input wire         ri1fe8,
   input wire [7:0]   ksff43 ,      
   input wire         ip7fa18 ,     
   input wire         qtfd0c4 ,       
   input wire         cze8624,
   input wire         os43125,
   input wire         oh18929, 

   output wire [15:0] uic494c ,     
   output wire [1:0]  ie24a61 ,    
   output wire [1:0]  do25308 ,      
   output wire [1:0]  ux29843,
   output wire [1:0]  yk4c21c,
   output wire [1:0]  rt610e0, 
   output wire [7:0]  cb8707 ,    
   output wire        ui4383c ,   
   output reg         hd1c1e0 ,  
   output reg         uie0f07     );
wire [10:0]   wl7838 ;
wire [8:0]    wl3c1c4 ;
wire [1:0]    wwe0e24;
reg [7:0]     mt7120               ;
reg           zz38905              ;
reg [7:0]     ykc482f               ;
reg           ou24179              ;
reg           do20bc9                ;
reg           ou5e4a                ;
reg           ng2f251                ;
reg           vi7928a                ;
reg           qtc9452           ;
reg           fn4a294           ;
reg           yx514a7           ;
reg           yz8a53d           ;
reg           tu529ed          ;
reg           lf94f6b          ;
reg           twa7b5e          ;
reg           tj3daf3          ;
reg           ened79f          ;
reg           hb6bcfd          ;
reg           en5e7ef          ;
reg           vvf3f7c          ;
reg           ic49cdf                    ;
reg           wj4e6f9                    ;
reg           icef9ad                    ;
reg           lq7cd69                    ;
reg           the6b4b                    ;
reg           ri35a5f                    ;
reg           jead2fb                    ;
reg           tu697db                ;
reg           wj4bedb            ;
reg           bl5f6dc           ;
reg           vifb6e6           ;
reg           sudb733           ;
reg           aydb998          ;
reg           shdccc1          ;
reg           dze660c          ;
reg           qv33066           ;
reg           aa98335           ;
reg           qgc19a9           ;
reg           fpcd49           ;
reg xw66a4f;
reg xy3527b;
reg qgf0425;
reg jp6bebe;
reg [15 : 0] vv4f689;
reg [1 : 0] xj7b44f;
reg [1 : 0] jcda27f;
reg god13fa;
reg [7 : 0] je89fd1;
reg fn4fe8b;
reg uv7f45e;
reg kqfa2f5;
reg icd17a9;
reg bn8bd49;
reg [8 : 0] of5ea4e;
reg [1 : 0] ykf5275;
reg [7 : 0] iea93a8;
reg kq49d41;
reg [7 : 0] mr4ea09;
reg yx7504c;
reg jea8264;
reg uv41323;
reg hd991c;
reg me4c8e7;
reg dz64739;
reg ux239cf;
reg bn1ce7d;
reg wje73ee;
reg mt39f74;
reg zkcfba5;
reg ww7dd2a;
reg byee951;
reg jp74a8b;
reg zza545f;
reg ng2a2ff;
reg wj517fa;
reg cbbe1e4;
reg wwf0f25;
reg ykff577;
reg qgfabb9;
reg byd5dc8;
reg sjaee42;
reg me77215;
reg ukb90a9;
reg jpc8548;
reg zk42a46;
reg sw15232;
reg aaa9191;
reg zk48c89;
reg ay4644b;
reg hd32259;
reg jr912cf;
reg hq8967f;
reg kd4b3fa;
reg kq59fd5;
reg [2047:0] db22f5b;
wire [54:0] ux17adf;





localparam ribd6fd = 55,jceb7ea = 32'hfdffd48b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;





pcie_x1_swac199 ipd6a8f (      .of60cc9        ( xw66a4f ),   .lq58f54        ( clk_250_tx ),   .rst_n          ( rst_n ),   .ls9933d   ( jp6bebe ),      .data_in        ( {god13fa, jcda27f[1], xj7b44f[1], vv4f689[15:8],                      god13fa, jcda27f[0], xj7b44f[0], vv4f689[7:0]} ),      .zma2d8d       ( wl7838 )   );

pcie_x1_cbab1ea wjdcc67 (      .lq58f54        ( clk_250_tx ),   .rst_n          ( rst_n ),      .data_in        ( wl7838[7:0]),   .osea8b6       ( wl7838[8]),   .ip545b1  ( qgf0425 ),      .zma2d8d       ( cb8707 ),   .ph16c6b      ( ui4383c )   );


always @(posedge clk_250_tx, negedge rst_n) begin   if (!rst_n) begin      tu697db <= 1'b0;      hd1c1e0 <= 1'b0;   end   else begin      tu697db <= wl7838[9];      hd1c1e0 <= ukb90a9;   end
end

always @(posedge clk_250_tx, negedge rst_n) begin   if (!rst_n) begin      ic49cdf <= 1'b0;      wj4e6f9 <= 1'b0;      icef9ad <= 1'b0;      lq7cd69 <= 1'b0;      the6b4b <= 1'b0;      ri35a5f <= 1'b0;      jead2fb <= 1'b0;      wj4bedb <= 1'b1;      bl5f6dc <= 1'b1;      vifb6e6 <= 1'b1;      sudb733 <= 1'b1;   end   else begin      ic49cdf <= jp6bebe;      wj4e6f9 <= cbbe1e4;      icef9ad <= wwf0f25;      lq7cd69 <= ykff577;      the6b4b <= qgfabb9;      ri35a5f <= byd5dc8;      jead2fb <= sjaee42;      wj4bedb <= wl7838[10];      bl5f6dc <= god13fa;      vifb6e6 <= zk42a46;      sudb733 <= sw15232;   end
end




always @(posedge clk_250_tx, negedge rst_n) begin   if (!rst_n)      uie0f07 <= 1'b1;   else      uie0f07 <= (xy3527b) ? 1'b0: me77215 ? jpc8548 : aaa9191 ;
end




always @(posedge clk_250_rx, negedge rst_n) begin   if (!rst_n) begin      mt7120  <= 8'd0;      zz38905 <= 1'b0;      ykc482f  <= 8'd0;      ou24179 <= 1'b0;   end   else begin      mt7120  <= je89fd1;      zz38905 <= fn4fe8b;      ykc482f  <= iea93a8;      ou24179 <= kq49d41;   end
end

pcie_x1_cbab1ea jp7ea33 (      .lq58f54        ( clk_250_rx ),   .rst_n          ( rst_n ),      .data_in        ( mr4ea09 ),   .osea8b6       ( yx7504c),   .ip545b1  ( qgf0425 ),      .zma2d8d       ( wl3c1c4[7:0]),   .ph16c6b      ( wl3c1c4[8] )   );


always @(posedge clk_250_rx, negedge rst_n) begin   if (!rst_n) begin      do20bc9         <= 1'b0;      ou5e4a         <= 1'b0;      ng2f251         <= 1'b0;      vi7928a         <= 1'b0;      qtc9452    <= 1'b1;      fn4a294    <= 1'b1;      yx514a7    <= 1'b1;      yz8a53d    <= 1'b1;      tu529ed   <= 1'b0;      lf94f6b   <= 1'b0;      twa7b5e   <= 1'b0;      tj3daf3   <= 1'b0;      ened79f   <= 1'b0;      hb6bcfd   <= 1'b0;      en5e7ef   <= 1'b0;      vvf3f7c   <= 1'b0;   end   else begin      do20bc9         <= uv7f45e;      ou5e4a         <= jea8264;      ng2f251         <= uv41323;      vi7928a         <= hd991c;      qtc9452    <= kqfa2f5;      fn4a294    <= dz64739;      yx514a7    <= ux239cf;      yz8a53d    <= bn1ce7d;      tu529ed   <= icd17a9;      lf94f6b   <= mt39f74;      twa7b5e   <= zkcfba5;      tj3daf3   <= ww7dd2a;      ened79f   <= bn8bd49;      hb6bcfd   <= jp74a8b;      en5e7ef   <= zza545f;      vvf3f7c   <= ng2a2ff;   end
end
always @(posedge uv60567, negedge rst_n) begin   if (!rst_n) begin      aydb998 <= 1'b1;      shdccc1 <= 1'b1;      dze660c <= 1'b1;      qv33066  <= 1'b0;      aa98335  <= 1'b0;      qgc19a9  <= 1'b0;      fpcd49  <= 1'b0;   end   else begin      aydb998 <= kqfa2f5;      shdccc1 <= dz64739;      dze660c <= ux239cf | dz64739;      qv33066  <= jp6bebe;      aa98335  <= jr912cf;      qgc19a9  <= hq8967f;      fpcd49  <= kd4b3fa;   end
end
assign ux29843[1] =  kq59fd5 ? ykf5275[1] :  hd32259 ;
assign ux29843[0] =  kq59fd5 ? ykf5275[0] :  hd32259 ;

pcie_x1_tj68d4 hof1cd7 (      .lq58f54        ( clk_250_rx ),   .of60cc9        ( uv60567 ),   .rst_n          ( rst_n ),   .ls9933d   ( jp6bebe ),         .data_in        ( {wj517fa, byee951, wje73ee, me4c8e7, of5ea4e} ),       .zma2d8d       ( {rt610e0[1], yk4c21c[1], wwe0e24[1], do25308[1], ie24a61[1], uic494c[15:8],                      rt610e0[0], yk4c21c[0], wwe0e24[0], do25308[0], ie24a61[0], uic494c[7:0]} )   );

always@* begin xw66a4f<=ux17adf[0];xy3527b<=ux17adf[1];qgf0425<=ux17adf[2];jp6bebe<=ux17adf[3];vv4f689<={fnec00f>>1,ux17adf[4]};xj7b44f<={of6007f>>1,ux17adf[5]};jcda27f<={co3fd>>1,ux17adf[6]};god13fa<=ux17adf[7];je89fd1<={ksff43>>1,ux17adf[8]};fn4fe8b<=ux17adf[9];uv7f45e<=ux17adf[10];kqfa2f5<=ux17adf[11];icd17a9<=ux17adf[12];bn8bd49<=ux17adf[13];of5ea4e<={wl3c1c4>>1,ux17adf[14]};ykf5275<={wwe0e24>>1,ux17adf[15]};iea93a8<={mt7120>>1,ux17adf[16]};kq49d41<=ux17adf[17];mr4ea09<={ykc482f>>1,ux17adf[18]};yx7504c<=ux17adf[19];jea8264<=ux17adf[20];uv41323<=ux17adf[21];hd991c<=ux17adf[22];me4c8e7<=ux17adf[23];dz64739<=ux17adf[24];ux239cf<=ux17adf[25];bn1ce7d<=ux17adf[26];wje73ee<=ux17adf[27];mt39f74<=ux17adf[28];zkcfba5<=ux17adf[29];ww7dd2a<=ux17adf[30];byee951<=ux17adf[31];jp74a8b<=ux17adf[32];zza545f<=ux17adf[33];ng2a2ff<=ux17adf[34];wj517fa<=ux17adf[35];cbbe1e4<=ux17adf[36];wwf0f25<=ux17adf[37];ykff577<=ux17adf[38];qgfabb9<=ux17adf[39];byd5dc8<=ux17adf[40];sjaee42<=ux17adf[41];me77215<=ux17adf[42];ukb90a9<=ux17adf[43];jpc8548<=ux17adf[44];zk42a46<=ux17adf[45];sw15232<=ux17adf[46];aaa9191<=ux17adf[47];zk48c89<=ux17adf[48];ay4644b<=ux17adf[49];hd32259<=ux17adf[50];jr912cf<=ux17adf[51];hq8967f<=ux17adf[52];kd4b3fa<=ux17adf[53];kq59fd5<=ux17adf[54];end
always@* begin db22f5b[2047]<=ieacf60;db22f5b[2046]<=ip545b1;db22f5b[2044]<=ls9933d;db22f5b[2040]<=fnec00f[0];db22f5b[2032]<=of6007f[0];db22f5b[2018]<=jead2fb;db22f5b[2017]<=co3fd[0];db22f5b[1989]<=tu697db;db22f5b[1987]<=ri1fe8;db22f5b[1931]<=wj4bedb;db22f5b[1927]<=ksff43[0];db22f5b[1865]<=mt7120[0];db22f5b[1859]<=hb6bcfd;db22f5b[1844]<=qgc19a9;db22f5b[1815]<=bl5f6dc;db22f5b[1806]<=ip7fa18;db22f5b[1682]<=zz38905;db22f5b[1671]<=en5e7ef;db22f5b[1640]<=fpcd49;db22f5b[1582]<=vifb6e6;db22f5b[1565]<=qtfd0c4;db22f5b[1488]<=tj3daf3;db22f5b[1485]<=qv33066;db22f5b[1326]<=yx514a7;db22f5b[1317]<=ykc482f[0];db22f5b[1295]<=vvf3f7c;db22f5b[1210]<=tu529ed;db22f5b[1189]<=vi7928a;db22f5b[1172]<=do20bc9;db22f5b[1116]<=sudb733;db22f5b[1087]<=wj4e6f9;db22f5b[1082]<=cze8624;db22f5b[1023]<=wl1d815;db22f5b[1009]<=ri35a5f;db22f5b[932]<=wwe0e24[0];db22f5b[929]<=ened79f;db22f5b[922]<=aa98335;db22f5b[744]<=twa7b5e;db22f5b[742]<=dze660c;db22f5b[663]<=fn4a294;db22f5b[605]<=yz8a53d;db22f5b[594]<=ng2f251;db22f5b[586]<=ou24179;db22f5b[543]<=ic49cdf;db22f5b[504]<=the6b4b;db22f5b[466]<=wl3c1c4[0];db22f5b[372]<=lf94f6b;db22f5b[371]<=shdccc1;db22f5b[331]<=qtc9452;db22f5b[297]<=ou5e4a;db22f5b[252]<=lq7cd69;db22f5b[233]<=oh18929;db22f5b[185]<=aydb998;db22f5b[126]<=icef9ad;db22f5b[116]<=os43125;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule
































`timescale 1 ns / 100 ps
module pcie_x1_ls302be 
   (
    
    sys_clk,            
    rst_n,            

    ho57cb0,         
    sjbe583,          
    hl_disable_scr,     
    hl_gto_dis,         
    hl_gto_lbk,         
    do83b16,      
    an1d8b2,       
    pfec594,     
    os62ca7,        
    fp16539,           
    xyb29ce,     
    db94e72,      
    hqa7396,      
    wl39cb2,    
    ayce595,     
    ic72ca9,     
    ls96548,            
    twb2a42,        
    wl95212,       
    gqa9095,          
    vi484a9,        
    rg4254a,    
    asb_dskew_rx,       
    
    
    gd9529d,        
    iea94ed,     
    nr4a769,       
    ic53b4f,        
    ym9da79,       
    yxed3c8,          
    jc69e45,      
    rt4f22a,        
    ps79157,        
    vvc8aba,         
    xj455d7,         
    do2aebe,         
    xw575f3,          
    ntbaf9a,           
    fnd7cd6            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam fp16129           = 3'd0 ;
localparam zzb094e  = 3'd1 ;
localparam xl84a77 = 3'd2 ;
localparam hq253bf  = 3'd3 ;
localparam an29dfb   = 3'd4 ;
localparam wj4efdc       = 3'd5 ;
localparam yk77ee4           = 3'd6 ;
localparam lfbf720           = 3'd7 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  sjbe583;
input                     hl_disable_scr;
input                     hl_gto_dis;
input   [LANE_WIDTH-1:0]  hl_gto_lbk;
input                     do83b16;
input                     an1d8b2;
input                     pfec594;
input   [LANE_WIDTH-1:0]  os62ca7;
input   [LANE_WIDTH-1:0]  twb2a42;
input   [LANE_WIDTH-1:0]  wl95212;
input   [LANE_WIDTH-1:0]  fp16539;
input   [LANE_WIDTH-1:0]  xyb29ce;
input   [LANE_WIDTH-1:0]  db94e72;
input   [LANE_WIDTH-1:0]  hqa7396;
input   [LANE_WIDTH-1:0]  wl39cb2;
input   [LANE_WIDTH-1:0]  ayce595;
input   [LANE_WIDTH-1:0]  ic72ca9;
input   [LANE_WIDTH-1:0]  ls96548;
input   [LANE_WIDTH-1:0]  gqa9095;
input   [LANE_WIDTH-1:0]  vi484a9;
input   [LANE_WIDTH-1:0]  rg4254a;
input   [LANE_WIDTH-1:0]  asb_dskew_rx;
output                    gd9529d;
output                    iea94ed;
output                    nr4a769;
output  [LANE_WIDTH-1:0]  ic53b4f;
output                    ym9da79;
output  [LANE_WIDTH-1:0]  yxed3c8;
output  [OS_WIDTH -1:0]   jc69e45;
output  [LANE_WIDTH-1:0]  rt4f22a;
output  [LANE_WIDTH-1:0]  ps79157;
output                    vvc8aba;
output                    xj455d7;
output                    do2aebe;
output                    xw575f3;
output  [LANE_WIDTH-1:0]  ntbaf9a;
output  [CFGSM_WIDTH:0]   fnd7cd6;
wire [LANE_WIDTH-1:0]  uvfd71e;
wire [LANE_WIDTH-1:0]  cm5c7a3;
wire [LANE_WIDTH-1:0]  pu1e8cf;
wire [LANE_WIDTH-1:0]  coa33da;
wire [LANE_WIDTH-1:0]  hocf686;
wire [LANE_WIDTH-1:0]  xwda19f;
wire [LANE_WIDTH-1:0]  zm867d2;
wire [LANE_WIDTH-1:0]  kf9f49c;
wire [LANE_WIDTH-1:0]  rtd2721;
wire [LANE_WIDTH-1:0]  do9c873;
wire [LANE_WIDTH-1:0]  ec21cd3;
wire [LANE_WIDTH-1:0]  lq734c3;
reg                     nr4a769;
reg                     ym9da79;
reg  [CFGSM_WIDTH:0]    fnd7cd6;
reg  [LANE_WIDTH-1:0]   yxed3c8;
reg  [OS_WIDTH-1:0]     jc69e45;
reg  [LANE_WIDTH-1:0]   rt4f22a;
reg  [LANE_WIDTH-1:0]   ps79157;
reg  [LANE_WIDTH-1:0]   wwc4e74;
reg                     vvc8aba;
reg                     xj455d7;
reg                     do2aebe;
reg                     xw575f3;
reg  [LANE_WIDTH-1:0]   ntbaf9a;
reg                     of751a2;

`ifdef LW4
reg  [3:0]              hqa8d14;
reg  [3:0]              yk468a2;

`endif

`ifdef LW2
reg  [1:0]              hqa8d14;
reg  [1:0]              yk468a2;

`endif

`ifdef LW1
reg                     hqa8d14;
reg                     yk468a2;

`endif
reg  [LANE_WIDTH-1:0]   oh806d1;
reg  [LANE_WIDTH-1:0]   ic53b4f;
reg                     gd9529d;
reg                     iea94ed;
reg                     ls8ce90;
reg                     su67483;
reg                     fc3a418;

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif
parameter xjd20c3 = {(LANE_WIDTH){1'b1}};
parameter fc830f5    = {(LANE_WIDTH){1'b0}};

`ifdef LW4

`else

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] qvabb18;
reg xw5d8c5;
reg rtec62a;
reg [LANE_WIDTH - 1 : 0] gd18aba;
reg jcc55d4;
reg vk2aea2;
reg lq57513;
reg [LANE_WIDTH - 1 : 0] osd44d6;
reg [LANE_WIDTH - 1 : 0] fp1358a;
reg [LANE_WIDTH - 1 : 0] czd62b5;
reg [LANE_WIDTH - 1 : 0] an8ad64;
reg [LANE_WIDTH - 1 : 0] vxb5921;
reg [LANE_WIDTH - 1 : 0] fn64878;
reg [LANE_WIDTH - 1 : 0] aa21e31;
reg [LANE_WIDTH - 1 : 0] go78c41;
reg [LANE_WIDTH - 1 : 0] ks3104d;
reg [LANE_WIDTH - 1 : 0] gb41340;
reg [LANE_WIDTH - 1 : 0] by4d027;
reg [LANE_WIDTH - 1 : 0] th409d1;
reg [LANE_WIDTH - 1 : 0] ph2747b;
reg [LANE_WIDTH - 1 : 0] kqd1ef3;
reg [LANE_WIDTH - 1 : 0] dz7bcc5;
reg [LANE_WIDTH - 1 : 0] pff3170;
reg [LANE_WIDTH - 1 : 0] byc5c38;
reg [LANE_WIDTH - 1 : 0] of70e18;
reg [LANE_WIDTH - 1 : 0] jr38629;
reg [LANE_WIDTH - 1 : 0] qv18a75;
reg [LANE_WIDTH - 1 : 0] mt29d62;
reg [LANE_WIDTH - 1 : 0] of758a4;
reg [LANE_WIDTH - 1 : 0] ay62929;
reg [LANE_WIDTH - 1 : 0] wla4a4a;
reg [LANE_WIDTH - 1 : 0] gd292a3;
reg [LANE_WIDTH - 1 : 0] ld4a8e8;
reg [LANE_WIDTH - 1 : 0] ksa3a35;
reg [LANE_WIDTH - 1 : 0] cze8d4d;
reg kq46a6c;
reg [LANE_WIDTH - 1 : 0] wya9b02;
reg ps4d810;
reg zk6c083;
reg sh6041b;
reg [2047:0] db22f5b;
wire [40:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`else

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

localparam ribd6fd = 41,jceb7ea = 32'hfdffd30b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`else


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif














`ifdef LW4



`endif



`ifdef LW2



`endif



`ifdef LW1



`endif







assign uvfd71e     = gb41340 & qvabb18;


assign cm5c7a3  = an8ad64 & qvabb18;


assign pu1e8cf  = fn64878 & qvabb18;


assign coa33da   = vxb5921 & ntbaf9a;


assign kf9f49c  = go78c41 & ntbaf9a;

assign xwda19f        = ks3104d & qvabb18;


assign zm867d2  = aa21e31 & ntbaf9a;

assign rtd2721= dz7bcc5 & ntbaf9a;

assign do9c873       = th409d1 & ntbaf9a;

assign hocf686    = by4d027 & ntbaf9a;

assign ec21cd3  = kqd1ef3 & ntbaf9a;

assign lq734c3      = ph2747b & ntbaf9a;











always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yk468a2 <= 0;      hqa8d14  <= 0;   end   else if (fnd7cd6 == xl84a77 || fnd7cd6 == an29dfb) begin      


`ifdef LW4
       yk468a2 <= wya9b02[3] + wya9b02[2] + wya9b02[1] + wya9b02[0];


`endif




`ifdef LW2
       yk468a2 <= wya9b02[1] + wya9b02[0];


`endif




`ifdef LW1
       yk468a2 <= wya9b02[0];


`endif




`ifdef LW4
            case(wya9b02)         4'b0111, 4'b1011 : begin            hqa8d14 <= 4'b0011;         end         4'b1101, 4'b1110 : begin            hqa8d14 <= 4'b1100;         end         default: begin            hqa8d14 <= 4'b0000;         end      endcase


`endif




`ifdef LW2
                  hqa8d14 <= wya9b02;


`endif




`ifdef LW1
                  hqa8d14 <= wya9b02;


`endif
   end   else begin      yk468a2 <= 0;      hqa8d14  <= 0;   end
end

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fnd7cd6      <= fp16129;      yxed3c8     <= {(LANE_WIDTH){1'b0}};      jc69e45 <= OS_IDLE;      rt4f22a   <= fc830f5;      ps79157   <= fc830f5;      wwc4e74     <= fc830f5;      ntbaf9a      <= {(LANE_WIDTH){1'b0}};      ym9da79  <= 1'b0;      of751a2   <= 1'b0;      do2aebe    <= 1'b0;      vvc8aba    <= 1'b0;      xj455d7    <= 1'b0;      xw575f3     <= 1'b0;      ic53b4f   <= {(LANE_WIDTH){1'b0}};      oh806d1   <= {(LANE_WIDTH){1'b0}};      nr4a769  <= 1'b0;      gd9529d   <= 0;      iea94ed<= 0;      ls8ce90          <= 1'b0;      su67483       <= 1'b0;      fc3a418      <= 1'b0;   end   else begin      do2aebe    <= 1'b0;      vvc8aba    <= 1'b0;      xj455d7    <= 1'b0;      xw575f3     <= 1'b0;      ym9da79  <= 1'b0;      nr4a769  <= 1'b0;      iea94ed<= 0;      ls8ce90          <= 1'b0;      su67483       <= 1'b0;      fc3a418      <= 1'b0;      case(fnd7cd6)                                    fp16129: begin            gd9529d   <= 0;            if (vk1eaec == CONFIG) begin               fnd7cd6     <= zzb094e;               yxed3c8    <= qvabb18;               jc69e45<= OS_T1;               rt4f22a  <= fc830f5;               ps79157  <= fc830f5;               ym9da79 <= 1'b1;               ic53b4f  <= ~qvabb18;            end            else begin               fnd7cd6     <= fp16129;               ic53b4f  <= 0;            end         end                  zzb094e: begin                        oh806d1      <= 0;            of751a2      <= 1'b0;            if (rtec62a == 1'b0 && |osd44d6== 1'b1 && ~ym9da79) begin               fnd7cd6      <= lfbf720;               do2aebe    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else if ((|gd18aba == 1'b1 || pff3170 == qvabb18) && ~ym9da79) begin               fnd7cd6      <= lfbf720;               vvc8aba    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end                                    else if ((|an8ad64 || lq57513)  && ~ym9da79) begin                  fnd7cd6     <= xl84a77;                  yxed3c8    <= byc5c38;                  jc69e45<= OS_T1;                  rt4f22a  <= xjd20c3;                  ps79157  <= fc830f5;                  ym9da79 <= 1'b1;                        end            else if (jcc55d4 && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else begin               fnd7cd6      <= zzb094e;            end         end                  xl84a77: begin                                                       if ((|an8ad64 || lq57513)  && ~ym9da79) begin


`ifdef LW4
                     if(byc5c38 == 4'b1111)                              oh806d1  <= 4'b1111;                     else if(byc5c38 == 4'b1100)                         oh806d1  <= 4'b1100;                                          else                                                         oh806d1  <= 4'b1000;


`else
                     oh806d1  <= byc5c38;


`endif
                  ls8ce90         <= 1'b1;                        end            su67483  <= ps4d810;            fc3a418 <= zk6c083;            


`ifdef LW4
             case(yk468a2)               4'd4: begin                  wwc4e74    <= {(LANE_WIDTH){1'b1}};                  ntbaf9a     <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               4'd1,4'd2: begin                  wwc4e74    <= wya9b02;                  ntbaf9a     <= wya9b02;                  of751a2  <= 1'b1;               end               4'd3: begin                  wwc4e74    <= hqa8d14;                  ntbaf9a     <= hqa8d14;                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

             


`ifdef LW2
            case(yk468a2)               2'd2: begin                  wwc4e74    <= {(LANE_WIDTH){1'b1}};                  ntbaf9a     <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               2'd1: begin                  wwc4e74    <= wya9b02;                  ntbaf9a     <= wya9b02;                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            


`ifdef LW1
            case(yk468a2)               1'b1: begin                  wwc4e74    <= {(LANE_WIDTH){1'b1}};                  ntbaf9a     <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            if ((kq46a6c && sh6041b) && (vxb5921 & cze8d4d) == cze8d4d && ~ym9da79) begin               fnd7cd6      <= hq253bf;               rt4f22a   <= cze8d4d;               ps79157   <= cze8d4d;               ym9da79  <= 1'b1;            end                        else if ((vk2aea2 || czd62b5 == qvabb18) && ~ym9da79 || (!kq46a6c && sh6041b)) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else begin               fnd7cd6      <= xl84a77;            end         end                           hq253bf: begin                        oh806d1      <= 0;            of751a2      <= 1'b0;                        if ((czd62b5 == qvabb18 || vk2aea2) && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end                        else if (|vxb5921 == 1'b1 && ~ym9da79) begin               fnd7cd6      <= an29dfb;               ym9da79  <= 1'b1;            end            else if (|mt29d62 == 1'b1 && ~ym9da79) begin               fnd7cd6      <= an29dfb;               ym9da79  <= 1'b1;            end            else begin               fnd7cd6      <= hq253bf;            end         end                  an29dfb: begin                         if (|vxb5921  && ~ym9da79) begin               if (vxb5921 == ntbaf9a | lq57513) begin                  oh806d1  <= jr38629;                  ls8ce90         <= 1'b1;               end            end            su67483  <= ps4d810;            fc3a418 <= zk6c083;            


`ifdef LW4
            case(yk468a2)               4'd4: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               4'd1,4'd2: begin                  rt4f22a  <= wya9b02;                  ps79157  <= wya9b02;                  of751a2  <= 1'b1;               end               4'd3: begin                  rt4f22a  <= hqa8d14;                  ps79157  <= hqa8d14;                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            


`ifdef LW2
            case(yk468a2)               2'd2: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               2'd1: begin                  rt4f22a  <= wya9b02;                  ps79157  <= wya9b02;                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            


`ifdef LW1
            case(yk468a2)               1'b1: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

                        if (of758a4 == ntbaf9a && (kq46a6c && sh6041b) && ~ym9da79) begin               fnd7cd6      <= wj4efdc;               yxed3c8     <= ntbaf9a;               jc69e45 <= OS_T2;               ym9da79  <= 1'b1;               ic53b4f   <= ~ntbaf9a;               gd9529d   <= 1'b1;            end                        else if (|of70e18 && (kq46a6c && sh6041b) && ~ym9da79) begin               fnd7cd6      <= hq253bf;               yxed3c8     <= qvabb18;               jc69e45 <= OS_T1;               ym9da79  <= 1'b1;               ntbaf9a      <= ps79157;            end                        else if (czd62b5 == qvabb18 && ~ym9da79 || (!kq46a6c && sh6041b)) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else if (vk2aea2 && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else begin               fnd7cd6      <= an29dfb;            end         end                  wj4efdc: begin            iea94ed <= ((qv18a75 == ntbaf9a) || xw5d8c5) ? 1'b1: 1'b0;            if (ay62929 == ntbaf9a  && ksa3a35 == ntbaf9a && wla4a4a == ntbaf9a && ~ym9da79) begin               fnd7cd6      <= yk77ee4;               yxed3c8     <= ntbaf9a;               jc69e45 <= OS_IDLE;               ym9da79  <= 1'b1;               nr4a769  <= 1'b1;            end            else if (vk2aea2 && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};               nr4a769  <= 1'b1;            end            else begin               fnd7cd6      <= wj4efdc;            end         end                  yk77ee4: begin            if (gd292a3 == ntbaf9a  && ld4a8e8 == ntbaf9a && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xw575f3     <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else if (vk2aea2 && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else begin               fnd7cd6      <= yk77ee4;            end         end                  lfbf720: begin            gd9529d   <= 1'b0;            if (vk1eaec != CONFIG) begin               fnd7cd6   <= fp16129;            end            else begin               fnd7cd6   <= lfbf720;            end         end         default: begin            fnd7cd6   <= fp16129;         end      endcase   end
end
always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};qvabb18<={sjbe583>>1,ux17adf[1]};xw5d8c5<=ux17adf[2];rtec62a<=ux17adf[3];gd18aba<={hl_gto_lbk>>1,ux17adf[4]};jcc55d4<=ux17adf[5];vk2aea2<=ux17adf[6];lq57513<=ux17adf[7];osd44d6<={os62ca7>>1,ux17adf[8]};fp1358a<={fp16539>>1,ux17adf[9]};czd62b5<={xyb29ce>>1,ux17adf[10]};an8ad64<={db94e72>>1,ux17adf[11]};vxb5921<={hqa7396>>1,ux17adf[12]};fn64878<={wl39cb2>>1,ux17adf[13]};aa21e31<={ayce595>>1,ux17adf[14]};go78c41<={ic72ca9>>1,ux17adf[15]};ks3104d<={ls96548>>1,ux17adf[16]};gb41340<={twb2a42>>1,ux17adf[17]};by4d027<={wl95212>>1,ux17adf[18]};th409d1<={gqa9095>>1,ux17adf[19]};ph2747b<={vi484a9>>1,ux17adf[20]};kqd1ef3<={rg4254a>>1,ux17adf[21]};dz7bcc5<={asb_dskew_rx>>1,ux17adf[22]};pff3170<={uvfd71e>>1,ux17adf[23]};byc5c38<={cm5c7a3>>1,ux17adf[24]};of70e18<={pu1e8cf>>1,ux17adf[25]};jr38629<={coa33da>>1,ux17adf[26]};qv18a75<={hocf686>>1,ux17adf[27]};mt29d62<={xwda19f>>1,ux17adf[28]};of758a4<={zm867d2>>1,ux17adf[29]};ay62929<={kf9f49c>>1,ux17adf[30]};wla4a4a<={rtd2721>>1,ux17adf[31]};gd292a3<={do9c873>>1,ux17adf[32]};ld4a8e8<={ec21cd3>>1,ux17adf[33]};ksa3a35<={lq734c3>>1,ux17adf[34]};cze8d4d<={wwc4e74>>1,ux17adf[35]};kq46a6c<=ux17adf[36];wya9b02<={oh806d1>>1,ux17adf[37]};ps4d810<=ux17adf[38];zk6c083<=ux17adf[39];sh6041b<=ux17adf[40];end
always@* begin db22f5b[2047]<=sjbe583[0];db22f5b[2046]<=hl_disable_scr;db22f5b[2044]<=hl_gto_dis;db22f5b[2040]<=hl_gto_lbk[0];db22f5b[2032]<=do83b16;db22f5b[2016]<=an1d8b2;db22f5b[1985]<=pfec594;db22f5b[1922]<=os62ca7[0];db22f5b[1796]<=fp16539[0];db22f5b[1732]<=zm867d2[0];db22f5b[1572]<=do9c873[0];db22f5b[1544]<=xyb29ce[0];db22f5b[1457]<=hocf686[0];db22f5b[1417]<=kf9f49c[0];db22f5b[1302]<=rg4254a[0];db22f5b[1164]<=oh806d1[0];db22f5b[1124]<=fc3a418;db22f5b[1115]<=uvfd71e[0];db22f5b[1105]<=twb2a42[0];db22f5b[1096]<=ec21cd3[0];db22f5b[1041]<=db94e72[0];db22f5b[1023]<=ho57cb0[0];db22f5b[866]<=xwda19f[0];db22f5b[786]<=rtd2721[0];db22f5b[728]<=coa33da[0];db22f5b[651]<=vi484a9[0];db22f5b[582]<=of751a2;db22f5b[562]<=su67483;db22f5b[557]<=asb_dskew_rx[0];db22f5b[552]<=ls96548[0];db22f5b[364]<=pu1e8cf[0];db22f5b[325]<=gqa9095[0];db22f5b[291]<=wwc4e74[0];db22f5b[281]<=ls8ce90;db22f5b[276]<=ic72ca9[0];db22f5b[182]<=cm5c7a3[0];db22f5b[162]<=wl95212[0];db22f5b[145]<=lq734c3[0];db22f5b[138]<=ayce595[0];db22f5b[69]<=wl39cb2[0];db22f5b[34]<=hqa7396[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






















































































































`timescale 1 ns / 100 ps
module pcie_x1_nr4ae92 
   (
    
    sys_clk,            
    rst_n,              

    ho57cb0,         
    sjbe583,          
    hl_disable_scr,     
    hl_gto_dis,         
    hl_gto_lbk,         
    do83b16,      
    an1d8b2,       
    pfec594,     
    fp16539,           
    xyb29ce,     
    ec8d556,     
    hqa7396,      
    wl39cb2,    
    lfaac2f,     
    ic72ca9,     
    twb2a42,        
    wl95212,       
    gqa9095,          
    vi484a9,        
    rg4254a,    
    asb_dskew_rx,       
    
    
    gd9529d,        
    iea94ed,     
    nr4a769,       
    ic53b4f,        
    ym9da79,       
    yxed3c8,          
    jc69e45,      
    rt4f22a,        
    ps79157,        
    vvc8aba,         
    xj455d7,         
    do2aebe,         
    xw575f3,          
    ntbaf9a,           
    fnd7cd6            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam fp16129           = 3'd0 ;
localparam zzb094e  = 3'd1 ;
localparam xl84a77 = 3'd2 ;
localparam hq253bf  = 3'd3 ;
localparam an29dfb   = 3'd4 ;
localparam wj4efdc       = 3'd5 ;
localparam yk77ee4           = 3'd6 ;
localparam lfbf720           = 3'd7 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  sjbe583;
input                     hl_disable_scr;
input                     hl_gto_dis;
input   [LANE_WIDTH-1:0]  hl_gto_lbk;
input                     do83b16;
input                     an1d8b2;
input                     pfec594;
input   [LANE_WIDTH-1:0]  twb2a42;
input   [LANE_WIDTH-1:0]  wl95212;
input   [LANE_WIDTH-1:0]  fp16539;
input   [LANE_WIDTH-1:0]  xyb29ce;
input   [LANE_WIDTH-1:0]  ec8d556;
input   [LANE_WIDTH-1:0]  hqa7396;
input   [LANE_WIDTH-1:0]  wl39cb2;
input   [LANE_WIDTH-1:0]  lfaac2f;
input   [LANE_WIDTH-1:0]  ic72ca9;
input   [LANE_WIDTH-1:0]  gqa9095;
input   [LANE_WIDTH-1:0]  vi484a9;
input   [LANE_WIDTH-1:0]  rg4254a;
input   [LANE_WIDTH-1:0]  asb_dskew_rx;
output                    gd9529d;
output                    iea94ed;
output                    nr4a769;
output  [LANE_WIDTH-1:0]  ic53b4f;
output                    ym9da79;
output  [LANE_WIDTH-1:0]  yxed3c8;
output  [OS_WIDTH -1:0]   jc69e45;
output  [LANE_WIDTH-1:0]  rt4f22a;
output  [LANE_WIDTH-1:0]  ps79157;
output                    vvc8aba;
output                    xj455d7;
output                    do2aebe;
output                    xw575f3;
output  [LANE_WIDTH-1:0]  ntbaf9a;
output  [CFGSM_WIDTH:0]   fnd7cd6;
wire [LANE_WIDTH-1:0]   uvfd71e;
wire [LANE_WIDTH-1:0]   hbfccab;
wire [LANE_WIDTH-1:0]   pu1e8cf;
wire [LANE_WIDTH-1:0]   irabfb5;
wire [LANE_WIDTH-1:0]   coa33da;
wire [LANE_WIDTH-1:0]   lfb5bd6;
wire [LANE_WIDTH-1:0]   kf9f49c;
wire [LANE_WIDTH-1:0]   hocf686;
wire [LANE_WIDTH-1:0]   rtd2721;
wire [LANE_WIDTH-1:0]   do9c873;
wire [LANE_WIDTH-1:0]   ec21cd3;
wire [LANE_WIDTH-1:0]   lq734c3;
reg                     nr4a769;
reg                     ym9da79;
reg  [CFGSM_WIDTH:0]    fnd7cd6;
reg  [LANE_WIDTH-1:0]   yxed3c8;
reg  [OS_WIDTH -1:0]    jc69e45;
reg  [LANE_WIDTH-1:0]   rt4f22a;
reg  [LANE_WIDTH-1:0]   ps79157;
reg                     vvc8aba;
reg                     xj455d7;
reg                     do2aebe;
reg                     xw575f3;
reg  [LANE_WIDTH-1:0]   ntbaf9a;
reg                     of751a2;

`ifdef LW4
reg  [3:0]              hqa8d14;
reg  [3:0]              yk468a2;

`endif

`ifdef LW2
reg  [1:0]              hqa8d14;
reg  [1:0]              yk468a2;

`endif

`ifdef LW1
reg                     hqa8d14;
reg                     yk468a2;

`endif
reg  [LANE_WIDTH-1:0]   oh806d1;
reg  [LANE_WIDTH-1:0]   ic53b4f;
reg                     gd9529d;
reg                     iea94ed;
reg                     ls8ce90;
reg                     su67483;
reg                     fc3a418;

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif
parameter xjd20c3= {(LANE_WIDTH){1'b1}};
parameter fc830f5   = {(LANE_WIDTH){1'b0}};

`ifdef LW4

`else

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] qvabb18;
reg xw5d8c5;
reg rtec62a;
reg [LANE_WIDTH - 1 : 0] gd18aba;
reg jcc55d4;
reg vk2aea2;
reg lq57513;
reg [LANE_WIDTH - 1 : 0] fp1358a;
reg [LANE_WIDTH - 1 : 0] czd62b5;
reg [LANE_WIDTH - 1 : 0] ui67e23;
reg [LANE_WIDTH - 1 : 0] vxb5921;
reg [LANE_WIDTH - 1 : 0] fn64878;
reg [LANE_WIDTH - 1 : 0] oscba27;
reg [LANE_WIDTH - 1 : 0] go78c41;
reg [LANE_WIDTH - 1 : 0] gb41340;
reg [LANE_WIDTH - 1 : 0] by4d027;
reg [LANE_WIDTH - 1 : 0] th409d1;
reg [LANE_WIDTH - 1 : 0] ph2747b;
reg [LANE_WIDTH - 1 : 0] kqd1ef3;
reg [LANE_WIDTH - 1 : 0] dz7bcc5;
reg [LANE_WIDTH - 1 : 0] pff3170;
reg [LANE_WIDTH - 1 : 0] by42c3b;
reg [LANE_WIDTH - 1 : 0] of70e18;
reg [LANE_WIDTH - 1 : 0] mg3b5b9;
reg [LANE_WIDTH - 1 : 0] jr38629;
reg [LANE_WIDTH - 1 : 0] swb92eb;
reg [LANE_WIDTH - 1 : 0] ay62929;
reg [LANE_WIDTH - 1 : 0] qv18a75;
reg [LANE_WIDTH - 1 : 0] wla4a4a;
reg [LANE_WIDTH - 1 : 0] gd292a3;
reg [LANE_WIDTH - 1 : 0] ld4a8e8;
reg [LANE_WIDTH - 1 : 0] ksa3a35;
reg kq46a6c;
reg [LANE_WIDTH - 1 : 0] wya9b02;
reg ps4d810;
reg zk6c083;
reg sh6041b;
reg [2047:0] db22f5b;
wire [37:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`else

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

localparam ribd6fd = 38,jceb7ea = 32'hfdffca8b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`else


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif














`ifdef LW4



`endif



`ifdef LW2



`endif



`ifdef LW1



`endif







assign uvfd71e     = gb41340 & qvabb18;


assign hbfccab  = ui67e23 & qvabb18;


assign pu1e8cf = fn64878 & qvabb18;


assign irabfb5  = oscba27 & qvabb18;
assign coa33da   = vxb5921 & qvabb18;


assign kf9f49c  = go78c41 & ntbaf9a;

assign rtd2721= dz7bcc5 & ntbaf9a;

assign do9c873       = th409d1 & ntbaf9a;

assign hocf686    = by4d027 & ntbaf9a;

assign ec21cd3  = kqd1ef3 & ntbaf9a;

assign lq734c3      = ph2747b & ntbaf9a;











always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yk468a2 <= 0;      hqa8d14  <= 0;   end   else if (fnd7cd6 == xl84a77 || fnd7cd6 == an29dfb) begin      


`ifdef LW4
      yk468a2 <= wya9b02[3] + wya9b02[2] + wya9b02[1] + wya9b02[0];


`endif




`ifdef LW2
      yk468a2 <= wya9b02[1] + wya9b02[0];


`endif




`ifdef LW1
      yk468a2 <= wya9b02[0];


`endif




`ifdef LW4
            case(wya9b02)         4'b0111, 4'b1011 : begin            hqa8d14 <= 4'b0011;         end         4'b1101, 4'b1110 : begin            hqa8d14 <= 4'b1100;         end         default: begin            hqa8d14 <= 4'b0000;         end      endcase


`endif




`ifdef LW2
                  hqa8d14 <= wya9b02;


`endif




`ifdef LW1
                  hqa8d14 <= wya9b02;


`endif
   end   else begin      yk468a2 <= 0;      hqa8d14  <= 0;   end
end

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fnd7cd6      <= fp16129;      yxed3c8     <= {(LANE_WIDTH){1'b0}};      jc69e45 <= OS_IDLE;      rt4f22a   <= fc830f5;      ps79157   <= fc830f5;      ntbaf9a      <= {(LANE_WIDTH){1'b0}};      ym9da79  <= 1'b0;      of751a2   <= 1'b0;      do2aebe    <= 1'b0;      vvc8aba    <= 1'b0;      xj455d7    <= 1'b0;      xw575f3     <= 1'b0;      ic53b4f   <= {(LANE_WIDTH){1'b0}};      oh806d1   <= {(LANE_WIDTH){1'b0}};      nr4a769  <= 1'b0;      gd9529d   <= 0;      iea94ed<= 0;      ls8ce90          <= 1'b0;      su67483       <= 1'b0;      fc3a418      <= 1'b0;   end   else begin      do2aebe    <= 1'b0;      vvc8aba    <= 1'b0;      xj455d7    <= 1'b0;      xw575f3     <= 1'b0;      ym9da79  <= 1'b0;      nr4a769  <= 1'b0;      iea94ed<= 0;      ls8ce90          <= 1'b0;      su67483       <= 1'b0;      fc3a418      <= 1'b0;      case(fnd7cd6)                                    fp16129: begin            gd9529d     <= 0;            if (vk1eaec == CONFIG) begin               fnd7cd6     <= zzb094e;               yxed3c8    <= qvabb18;               jc69e45<= OS_T1;               rt4f22a  <= xjd20c3;               ps79157  <= fc830f5;               ym9da79 <= 1'b1;               ic53b4f  <= ~qvabb18;            end            else begin               fnd7cd6     <= fp16129;               ic53b4f  <= 0;            end         end                  zzb094e: begin                        oh806d1      <= 0;            of751a2      <= 1'b0;            if (rtec62a && ~ym9da79) begin               fnd7cd6      <= lfbf720;               do2aebe    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else if ((|gd18aba == 1'b1 || pff3170 == qvabb18) && ~ym9da79) begin               fnd7cd6      <= lfbf720;               vvc8aba    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else if (|by42c3b == 1'b1 && ~ym9da79) begin               fnd7cd6      <= xl84a77;               yxed3c8     <= qvabb18;               jc69e45 <= OS_T1;               rt4f22a   <= xjd20c3;               ps79157   <= xjd20c3;               ym9da79  <= 1'b1;            end            else if (jcc55d4 && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else begin               fnd7cd6      <= zzb094e;            end         end                  xl84a77: begin                    if (|ui67e23 && ~ym9da79) begin       if (ui67e23 == qvabb18 | lq57513) begin


`ifdef LW4
                     if(by42c3b == 4'b1111)                              oh806d1  <= 4'b1111;             else if(by42c3b == 4'b1100)                         oh806d1  <= 4'b1100;                     else if(by42c3b[3] == 1'b1)                         oh806d1  <= 4'b1000;


`else
                     oh806d1  <= by42c3b;


`endif
                  ls8ce90         <= 1'b1;               end            end            su67483  <= ps4d810;            fc3a418 <= zk6c083;            


`ifdef LW4
            case(yk468a2)               4'd4: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  ntbaf9a     <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               4'd1,4'd2: begin                  rt4f22a  <= wya9b02;                  ps79157  <= wya9b02;                  ntbaf9a     <= wya9b02;                  of751a2  <= 1'b1;               end               4'd3: begin                  rt4f22a  <= hqa8d14;                  ps79157  <= hqa8d14;                  ntbaf9a     <= hqa8d14;                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            


`ifdef LW2
            case(yk468a2)               2'd2: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  ntbaf9a     <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               2'd1: begin                  rt4f22a  <= wya9b02;                  ps79157  <= wya9b02;                  ntbaf9a     <= wya9b02;                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            


`ifdef LW1
            case(yk468a2)               1'b1: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  ntbaf9a     <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            if ((kq46a6c && sh6041b) && ~ym9da79) begin               fnd7cd6      <= hq253bf;               ym9da79  <= 1'b1;            end                        else if ((vk2aea2 || czd62b5 == qvabb18) && ~ym9da79 || (!kq46a6c && sh6041b)) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else begin               fnd7cd6      <= xl84a77;            end         end                           hq253bf: begin                        oh806d1      <= 0;            of751a2      <= 1'b0;                        if ((czd62b5 == qvabb18 || vk2aea2) && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else if (|jr38629 == 1'b1 && ~ym9da79) begin               fnd7cd6      <= an29dfb;               ym9da79  <= 1'b1;            end            else begin               fnd7cd6      <= hq253bf;            end         end                           an29dfb: begin                    if (|oscba27 && ~ym9da79) begin       if (oscba27 == qvabb18 | lq57513) begin                  oh806d1  <= mg3b5b9;                  ls8ce90         <= 1'b1;               end            end            su67483  <= ps4d810;            fc3a418 <= zk6c083;            


`ifdef LW4
            case(yk468a2)               4'd4: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               4'd1,4'd2: begin                  rt4f22a  <= wya9b02;                  ps79157  <= wya9b02;                  of751a2  <= 1'b1;               end               4'd3: begin                  rt4f22a  <= hqa8d14;                  ps79157  <= hqa8d14;                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            


`ifdef LW2
            case(yk468a2)               2'd2: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               2'd1: begin                  rt4f22a  <= wya9b02;                  ps79157  <= wya9b02;                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

            


`ifdef LW1
            case(yk468a2)               1'b1: begin                  rt4f22a  <= {(LANE_WIDTH){1'b1}};                  ps79157  <= {(LANE_WIDTH){1'b1}};                  of751a2  <= 1'b1;               end               default: begin                  of751a2  <= 1'b0;               end            endcase


`endif

                        if (mg3b5b9 == ntbaf9a && (kq46a6c && sh6041b) && ~ym9da79) begin               fnd7cd6      <= wj4efdc;               yxed3c8     <= ntbaf9a;               jc69e45 <= OS_T2;               ym9da79  <= 1'b1;               ic53b4f   <= ~ntbaf9a;               gd9529d   <= 1'b1;            end                        else if (|of70e18 && (kq46a6c && sh6041b) && ~ym9da79) begin               fnd7cd6      <= hq253bf;               yxed3c8     <= qvabb18;               jc69e45 <= OS_T1;               ym9da79  <= 1'b1;               ntbaf9a      <= ps79157;            end                        else if (czd62b5 == qvabb18 && ~ym9da79 || (!kq46a6c && sh6041b)) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else begin               fnd7cd6      <= an29dfb;            end         end                  wj4efdc: begin            iea94ed <= ((qv18a75 == ntbaf9a) || xw5d8c5) ? 1'b1: 1'b0;            if (ay62929 == ntbaf9a  && ksa3a35 == ntbaf9a && wla4a4a == ntbaf9a && ~ym9da79) begin               fnd7cd6      <= yk77ee4;               yxed3c8     <= ntbaf9a;               jc69e45 <= OS_IDLE;               ym9da79  <= 1'b1;               nr4a769  <= 1'b1;            end            else if (vk2aea2 && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};               nr4a769  <= 1'b1;            end            else begin               fnd7cd6      <= wj4efdc;            end         end                  yk77ee4: begin            if (gd292a3 == ntbaf9a  && ld4a8e8 == ntbaf9a && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xw575f3     <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else if (vk2aea2 && ~ym9da79) begin               fnd7cd6      <= lfbf720;               xj455d7    <= 1'b1;               yxed3c8     <= {(LANE_WIDTH){1'b0}};            end            else begin               fnd7cd6      <= yk77ee4;            end         end                  lfbf720: begin            gd9529d   <= 1'b0;            if (vk1eaec != CONFIG) begin               fnd7cd6   <= fp16129;            end            else begin               fnd7cd6   <= lfbf720;            end         end         default: begin            fnd7cd6   <= fp16129;         end      endcase   end
end
always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};qvabb18<={sjbe583>>1,ux17adf[1]};xw5d8c5<=ux17adf[2];rtec62a<=ux17adf[3];gd18aba<={hl_gto_lbk>>1,ux17adf[4]};jcc55d4<=ux17adf[5];vk2aea2<=ux17adf[6];lq57513<=ux17adf[7];fp1358a<={fp16539>>1,ux17adf[8]};czd62b5<={xyb29ce>>1,ux17adf[9]};ui67e23<={ec8d556>>1,ux17adf[10]};vxb5921<={hqa7396>>1,ux17adf[11]};fn64878<={wl39cb2>>1,ux17adf[12]};oscba27<={lfaac2f>>1,ux17adf[13]};go78c41<={ic72ca9>>1,ux17adf[14]};gb41340<={twb2a42>>1,ux17adf[15]};by4d027<={wl95212>>1,ux17adf[16]};th409d1<={gqa9095>>1,ux17adf[17]};ph2747b<={vi484a9>>1,ux17adf[18]};kqd1ef3<={rg4254a>>1,ux17adf[19]};dz7bcc5<={asb_dskew_rx>>1,ux17adf[20]};pff3170<={uvfd71e>>1,ux17adf[21]};by42c3b<={hbfccab>>1,ux17adf[22]};of70e18<={pu1e8cf>>1,ux17adf[23]};mg3b5b9<={irabfb5>>1,ux17adf[24]};jr38629<={coa33da>>1,ux17adf[25]};swb92eb<={lfb5bd6>>1,ux17adf[26]};ay62929<={kf9f49c>>1,ux17adf[27]};qv18a75<={hocf686>>1,ux17adf[28]};wla4a4a<={rtd2721>>1,ux17adf[29]};gd292a3<={do9c873>>1,ux17adf[30]};ld4a8e8<={ec21cd3>>1,ux17adf[31]};ksa3a35<={lq734c3>>1,ux17adf[32]};kq46a6c<=ux17adf[33];wya9b02<={oh806d1>>1,ux17adf[34]};ps4d810<=ux17adf[35];zk6c083<=ux17adf[36];sh6041b<=ux17adf[37];end
always@* begin db22f5b[2047]<=sjbe583[0];db22f5b[2046]<=hl_disable_scr;db22f5b[2044]<=hl_gto_dis;db22f5b[2040]<=hl_gto_lbk[0];db22f5b[2032]<=do83b16;db22f5b[2017]<=an1d8b2;db22f5b[1987]<=pfec594;db22f5b[1926]<=fp16539[0];db22f5b[1805]<=ls8ce90;db22f5b[1804]<=xyb29ce[0];db22f5b[1803]<=pu1e8cf[0];db22f5b[1761]<=lq734c3[0];db22f5b[1562]<=su67483;db22f5b[1560]<=ec8d556[0];db22f5b[1558]<=irabfb5[0];db22f5b[1550]<=wl95212[0];db22f5b[1475]<=of751a2;db22f5b[1464]<=do9c873[0];db22f5b[1076]<=fc3a418;db22f5b[1072]<=hqa7396[0];db22f5b[1069]<=coa33da[0];db22f5b[1052]<=gqa9095[0];db22f5b[1023]<=ho57cb0[0];db22f5b[902]<=oh806d1[0];db22f5b[901]<=hbfccab[0];db22f5b[880]<=ec21cd3[0];db22f5b[775]<=twb2a42[0];db22f5b[732]<=rtd2721[0];db22f5b[450]<=uvfd71e[0];db22f5b[387]<=ic72ca9[0];db22f5b[366]<=hocf686[0];db22f5b[225]<=asb_dskew_rx[0];db22f5b[193]<=lfaac2f[0];db22f5b[183]<=kf9f49c[0];db22f5b[112]<=rg4254a[0];db22f5b[96]<=wl39cb2[0];db22f5b[91]<=lfb5bd6[0];db22f5b[56]<=vi484a9[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule












































































































`timescale 1 ns / 100 ps
module pcie_x1_lf8ba2c 
   (
    
    sys_clk,                    
    rst_n,                      
    normal_time,                

    ho57cb0,                 
    vi6673c,              
    asb_detdone_rx,             
    asb_detres_rx,              
    asb_eidle_rx,               


    
    mt3c515,               
    wje28ac,               
    pu14565,              
    doa2b2b,                
    sjbe583,                  
    wyacad8                   
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam xwf160d     = 3'd0 ;
localparam db8b06a    = 3'd1 ;
localparam ho58357   = 3'd2 ;
localparam uic1abb  = 3'd3 ;
localparam kfd5d9 = 3'd4 ;
localparam ip6aecc   = 3'd5 ;
localparam lq57665  = 3'd6 ;
localparam uxbb32a     = 3'd7 ;
input                    sys_clk;
input                    rst_n;
input                    normal_time;
input   [MSM_WIDTH:0]    ho57cb0;
input                    vi6673c;
input   [LANE_WIDTH-1:0] asb_detdone_rx;
input   [LANE_WIDTH-1:0] asb_detres_rx;
input   [LANE_WIDTH-1:0] asb_eidle_rx;
output  [LANE_WIDTH-1:0] mt3c515;
output  [LANE_WIDTH-1:0] wje28ac;
output                   pu14565;
output                   doa2b2b;
output  [LANE_WIDTH-1:0] sjbe583;
output  [DSM_WIDTH:0]    wyacad8;
reg [DSM_WIDTH:0]      wyacad8;
reg [4:0]              gb44726;
reg [LANE_WIDTH-1:0]   mt3c515;
reg [LANE_WIDTH-1:0]   wje28ac;
reg                    pu14565;
reg                    doa2b2b;
reg [LANE_WIDTH-1:0]   sjbe583;
reg  [15*8:0] ep95380;
reg swa9c05;
reg [MSM_WIDTH : 0] vk1eaec;
reg sj80a2c;
reg [LANE_WIDTH - 1 : 0] rv28b28;
reg [LANE_WIDTH - 1 : 0] ep2ca37;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg [4 : 0] ui46f2e;
reg [15 * 8 : 0] hd37970;
reg [2047:0] db22f5b;
wire [7:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 8,jceb7ea = 32'hfdffe30b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      wyacad8     <= xwf160d;      mt3c515  <= {(LANE_WIDTH){1'b1}};      pu14565 <= 1'b0;      wje28ac  <= {(LANE_WIDTH){1'b0}};      sjbe583     <= {(LANE_WIDTH){1'b0}};      doa2b2b   <= 1'b0;   end   else begin      pu14565 <= 1'b0;      wje28ac  <= {(LANE_WIDTH){1'b0}};      doa2b2b   <= 1'b0;      case(wyacad8)                  xwf160d: begin            if (vk1eaec == DETECT) begin               wyacad8    <= db8b06a;               mt3c515 <= {(LANE_WIDTH){1'b1}};               pu14565<= 1'b1;               sjbe583    <= {(LANE_WIDTH){1'b0}};            end            else begin               wyacad8    <= xwf160d;                           end         end                  db8b06a: begin    if ((sj80a2c == 1'b1 || ((&ou920a1 == 1'b0) & ~swa9c05)) && ~pu14565) begin                           wyacad8    <= ho58357;               wje28ac <= {(LANE_WIDTH){1'b1}};            end            else begin               wyacad8    <= db8b06a;            end         end                  ho58357: begin            if (ui46f2e == 5'd15) begin               wyacad8    <= uic1abb;               wje28ac <= {(LANE_WIDTH){1'b0}};            end            else begin               wyacad8    <= ho58357;               wje28ac <= {(LANE_WIDTH){1'b1}};            end         end                  uic1abb: begin            if (rv28b28 =={(LANE_WIDTH){1'b1}}) begin               sjbe583  <= ep2ca37;               case(ep2ca37)                  {(LANE_WIDTH){1'b1}} :  begin                       wyacad8    <= uxbb32a;                     doa2b2b  <= 1'b1;                     mt3c515 <= {(LANE_WIDTH){1'b0}};                  end                  {(LANE_WIDTH){1'b0}} :  begin                       wyacad8    <= db8b06a;                     pu14565<= 1'b1;                  end                  default: begin                                       wyacad8    <= kfd5d9;                     pu14565<= 1'b1;                  end               endcase            end            else begin               wyacad8   <= uic1abb;            end         end                  kfd5d9: begin            if (sj80a2c == 1'b1 && ~pu14565) begin               wyacad8    <= ip6aecc;               wje28ac <= {(LANE_WIDTH){1'b1}};            end            else begin               wyacad8    <= kfd5d9;            end         end                  ip6aecc: begin            if (ui46f2e == 5'd15) begin               wyacad8    <= lq57665;               wje28ac <= {(LANE_WIDTH){1'b0}};            end            else begin               wyacad8    <= ip6aecc;               wje28ac <= {(LANE_WIDTH){1'b1}};            end         end                  lq57665: begin            if (rv28b28 =={(LANE_WIDTH){1'b1}}) begin               if (ep2ca37 == sjbe583) begin                  wyacad8    <= uxbb32a;                  doa2b2b  <= 1'b1;                  mt3c515 <= ~sjbe583;               end               else begin                  wyacad8    <= db8b06a;                  pu14565<= 1'b1;               end            end            else begin               wyacad8       <= lq57665;            end         end         uxbb32a: begin            if (vk1eaec != DETECT) begin               wyacad8    <= xwf160d;            end            else begin               wyacad8    <= uxbb32a;            end         end         default: begin            wyacad8   <= xwf160d;         end      endcase   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      gb44726 <= 5'd0;   else if ((wyacad8 ==ho58357) || (wyacad8 ==ip6aecc))      gb44726 <= ui46f2e + 5'd1;   else      gb44726 <= 5'd0;
end



always @ (wyacad8)
begin   case(wyacad8)      xwf160d     : ep95380 = "DET_WAIT";      db8b06a    : ep95380 = "DET_Q";      ho58357   : ep95380 = "DET_GODET1";      uic1abb  : ep95380 = "DET_ACTIVE1";      kfd5d9 : ep95380 = "DET_WAIT12MS";      ip6aecc   : ep95380 = "DET_GODET2";      lq57665  : ep95380 = "DET_ACTIVE2";      uxbb32a     : ep95380 = "DET_EXIT";      default      : ep95380 = "ERROR";   endcase
end

always@* begin swa9c05<=ux17adf[0];vk1eaec<={ho57cb0>>1,ux17adf[1]};sj80a2c<=ux17adf[2];rv28b28<={asb_detdone_rx>>1,ux17adf[3]};ep2ca37<={asb_detres_rx>>1,ux17adf[4]};ou920a1<={asb_eidle_rx>>1,ux17adf[5]};ui46f2e<={gb44726>>1,ux17adf[6]};hd37970<={ep95380>>1,ux17adf[7]};end
always@* begin db22f5b[2047]<=ho57cb0[0];db22f5b[2046]<=vi6673c;db22f5b[2044]<=asb_detdone_rx[0];db22f5b[2040]<=asb_detres_rx[0];db22f5b[2032]<=asb_eidle_rx[0];db22f5b[2016]<=gb44726[0];db22f5b[1985]<=ep95380[0];db22f5b[1023]<=normal_time;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





















































































`timescale 1 ns / 100 ps
module pcie_x1_nt8eb0d 
   (
    
    sys_clk,            
    rst_n,              

    ho57cb0,         
    asb_eidle_rx,       
    bl6ea75,      
    ip753af,      
    an1d8b2,       
    hl_gto_det,         
    qt75f04,          
    
    
    dbaf825,        
    xw7c12f,          
    eae097a,      
    xy4bd0,       
    hq25e83,         
    vk2f41a,      
    ip7a0d2            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam ks2e704    = 3'd0 ;
localparam xw73820     = 3'd1 ;
localparam ba9c102 = 3'd2 ;
localparam yke0813 = 3'd3 ;
localparam ba4098    = 3'd4 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input                     bl6ea75;
input                     ip753af;
input                     an1d8b2;
input                     hl_gto_det;
input   [LANE_WIDTH-1:0]  qt75f04;
output  [LANE_WIDTH-1:0]  dbaf825;
output  [LANE_WIDTH-1:0]  xw7c12f;
output  [OS_WIDTH -1:0]   eae097a;
output                    xy4bd0;
output                    hq25e83;
output                    vk2f41a;
output  [DISM_WIDTH:0]    ip7a0d2;
reg  [DISM_WIDTH:0]     ip7a0d2;
reg  [LANE_WIDTH-1:0]   dbaf825;
reg                     xy4bd0;
reg                     hq25e83;
reg  [LANE_WIDTH-1:0]   xw7c12f;
reg  [OS_WIDTH -1:0]    eae097a;
reg                     vk2f41a;
reg                     wwdb71a;
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg xwd0370;
reg rv81b83;
reg vk2aea2;
reg dz6e0fd;
reg [LANE_WIDTH - 1 : 0] do83f74;
reg ym1fba2;
reg [2047:0] db22f5b;
wire [7:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 8,jceb7ea = 32'hfdffd28b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ip7a0d2      <= ks2e704;      xw7c12f     <= {(LANE_WIDTH){1'b0}};      dbaf825   <= {(LANE_WIDTH){1'b0}};      eae097a <= OS_T1;      xy4bd0  <= 1'b0;      hq25e83    <= 1'b0;      vk2f41a <= 1'b0;      wwdb71a     <= 1'b0;   end   else begin      xy4bd0  <= 1'b0;      hq25e83    <= 1'b0;      vk2f41a <= 1'b0;      dbaf825   <= {(LANE_WIDTH){1'b0}};      case(ip7a0d2)                  ks2e704: begin            wwdb71a     <= 1'b0;            if (vk1eaec == DISABLED) begin               ip7a0d2     <= xw73820;               xy4bd0 <= 1'b1;               xw7c12f    <= {(LANE_WIDTH){1'b1}};               eae097a<= OS_T1;            end            else begin               ip7a0d2     <= ks2e704;            end         end                  xw73820: begin            wwdb71a       <= (|do83f74== 1'b1) ? 1'b1 : ym1fba2;            if (rv81b83 && ~xy4bd0) begin               ip7a0d2     <= ba9c102;               xw7c12f    <= {(LANE_WIDTH){1'b1}};               eae097a<= OS_EIDLE;            end            else begin               ip7a0d2     <= xw73820;            end         end         ba9c102: begin                        wwdb71a    <= (|do83f74== 1'b1) ? 1'b1 : ym1fba2;            ip7a0d2     <= yke0813;         end                  yke0813: begin            wwdb71a    <= (|do83f74== 1'b1) ? 1'b1 : ym1fba2;            xw7c12f    <= {(LANE_WIDTH){1'b0}};            dbaf825  <= {(LANE_WIDTH){1'b1}};            if (ym1fba2 == 1'b1) begin               vk2f41a   <= 1'b1;                              if (&ou920a1 == 1'b0 || dz6e0fd) begin                  ip7a0d2     <= ba4098;                  hq25e83   <= 1'b1;               end               else begin                  ip7a0d2     <= yke0813;               end            end            else if (vk2aea2) begin               ip7a0d2     <= ba4098;               hq25e83   <= 1'b1;            end            else begin               ip7a0d2     <= yke0813;            end         end                  ba4098: begin            wwdb71a     <= 1'b0;            if (vk1eaec != DISABLED) begin               ip7a0d2   <= ks2e704;            end            else begin               ip7a0d2   <= ba4098;            end         end         default: begin            ip7a0d2   <= ks2e704;         end      endcase   end
end
always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};ou920a1<={asb_eidle_rx>>1,ux17adf[1]};xwd0370<=ux17adf[2];rv81b83<=ux17adf[3];vk2aea2<=ux17adf[4];dz6e0fd<=ux17adf[5];do83f74<={qt75f04>>1,ux17adf[6]};ym1fba2<=ux17adf[7];end
always@* begin db22f5b[2047]<=asb_eidle_rx[0];db22f5b[2046]<=bl6ea75;db22f5b[2044]<=ip753af;db22f5b[2040]<=an1d8b2;db22f5b[2032]<=hl_gto_det;db22f5b[2017]<=qt75f04[0];db22f5b[1987]<=wwdb71a;db22f5b[1023]<=ho57cb0[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






































































`timescale 1 ns / 100 ps
module pcie_x1_uveda3a 
   (
    
    sys_clk,            
    rst_n,              

    ho57cb0,         
    ntbaf9a,          
    an1d8b2,       
    hl_gto_hrst,        
    ir868d,       
    
    
    qg4346c,        
    co1a361,    
    cmd1b08,     
    ym8d840,       
    tu6c201          
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam ho665fa  = 2'd0 ;
localparam xl32fd2  = 2'd1 ;
localparam aa97e96  = 2'd2 ;
localparam phbf4b1  = 2'd3 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  ntbaf9a;
input                     an1d8b2;
input                     hl_gto_hrst;
input   [LANE_WIDTH-1:0]  ir868d;
output  [LANE_WIDTH-1:0]  qg4346c;
output  [OS_WIDTH -1:0]   co1a361;
output                    cmd1b08;
output                    ym8d840;
output  [HRSM_WIDTH:0]    tu6c201;
reg  [HRSM_WIDTH:0]     tu6c201;
reg                     cmd1b08;
reg                     ym8d840;
reg  [LANE_WIDTH-1:0]   qg4346c;
reg  [OS_WIDTH -1:0]    co1a361;

`ifdef DWN_STRM_LANE

`else

`endif

`ifdef DWN_STRM_LANE

`endif
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] bld7d3d;
reg vk2aea2;
reg xwf4f7c;
reg [LANE_WIDTH - 1 : 0] lf3df1b;
reg [2047:0] db22f5b;
wire [4:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef DWN_STRM_LANE

`else

`endif

`ifdef DWN_STRM_LANE

`endif

localparam ribd6fd = 5,jceb7ea = 32'hfdffc70b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef DWN_STRM_LANE


`else


`endif


`ifdef DWN_STRM_LANE


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tu6c201      <= ho665fa;      qg4346c     <= {(LANE_WIDTH){1'b0}};      co1a361 <= OS_T1;      cmd1b08  <= 1'b0;      ym8d840    <= 1'b0;   end   else begin      cmd1b08  <= 1'b0;      ym8d840    <= 1'b0;      case(tu6c201)                  ho665fa: begin            if (vk1eaec == HOTRST) begin


`ifdef DWN_STRM_LANE
               tu6c201     <= (xwf4f7c) ? xl32fd2 : aa97e96;


`else
               tu6c201     <= aa97e96;


`endif
               qg4346c    <= bld7d3d;               co1a361<= OS_T1;               cmd1b08 <= 1'b1;            end            else begin               tu6c201     <= ho665fa;            end         end


`ifdef DWN_STRM_LANE
                  xl32fd2: begin            if ((lf3df1b & bld7d3d) == bld7d3d && xwf4f7c == 1'b0 && ~cmd1b08) begin               tu6c201     <= phbf4b1;               ym8d840   <= 1'b1;               qg4346c    <= {(LANE_WIDTH){1'b0}};            end            else if (vk2aea2 && ~cmd1b08) begin               tu6c201     <= phbf4b1;               ym8d840   <= 1'b1;               qg4346c    <= {(LANE_WIDTH){1'b0}};            end            else begin               tu6c201     <= xl32fd2;            end         end


`endif
                  aa97e96: begin            if ((lf3df1b & bld7d3d) == bld7d3d && ~cmd1b08) begin               tu6c201     <= ho665fa;            end            else if (vk2aea2 && ~cmd1b08) begin               tu6c201     <= phbf4b1;               ym8d840   <= 1'b1;               qg4346c    <= {(LANE_WIDTH){1'b0}};            end            else begin               tu6c201     <= aa97e96;            end         end                  phbf4b1: begin            if (vk1eaec != HOTRST) begin               tu6c201   <= ho665fa;            end            else begin               tu6c201   <= phbf4b1;            end         end         default: begin            tu6c201   <= ho665fa;         end      endcase   end
end
always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};bld7d3d<={ntbaf9a>>1,ux17adf[1]};vk2aea2<=ux17adf[2];xwf4f7c<=ux17adf[3];lf3df1b<={ir868d>>1,ux17adf[4]};end
always@* begin db22f5b[2047]<=ntbaf9a[0];db22f5b[2046]<=an1d8b2;db22f5b[2044]<=hl_gto_hrst;db22f5b[2040]<=ir868d[0];db22f5b[1023]<=ho57cb0[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























































`timescale 1 ns / 100 ps
module pcie_x1_ks2ef4b 
   (
    
    sys_clk,            
    rst_n,            

    no_pcie_train,      
    ho57cb0,         
    ntbaf9a,          
    dzc85e9,             
    dm42f4e,             
    qt75f04,          
    ngbd395,    
    fne9caa,   
    kd4e556,      
    kq72ab5,      
    hl_gto_l0stx,       
    hl_gto_l1,          
    hl_gto_l2,          
    hl_gto_rcvry,       
    dll_rtrn_lnk,       
    cfg_rtrn_lnk,       
    
    
    ri2f397,              
    by79cba,          
    osce5d3,      
    qg72e99,       
    wy974c8,       
    fpba640,       
    wjd3207,          
    do9903c,          
    rtc81e3,        
    nr40f1e            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam kf90f55    = 3'd0 ;
localparam ks87aac      = 3'd1 ;
localparam fp3d560    = 3'd2 ;
localparam qgeab06    = 3'd3 ;
localparam zx55831 = 3'd4 ;
localparam aaac18e = 3'd5 ;
localparam al60c71    = 3'd6 ;
input                     sys_clk;
input                     rst_n;
input                     no_pcie_train;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  ntbaf9a;
input   [LANE_WIDTH-1:0]  dzc85e9;
input   [LANE_WIDTH-1:0]  dm42f4e;
input   [LANE_WIDTH-1:0]  qt75f04;
input   [LANE_WIDTH-1:0]  ngbd395;
input                     fne9caa;
input                     kd4e556;
input                     kq72ab5;
input                     hl_gto_l0stx;
input                     hl_gto_l1;
input                     hl_gto_l2;
input                     hl_gto_rcvry;
input                     cfg_rtrn_lnk;
input                     dll_rtrn_lnk;
output                    ri2f397;
output  [LANE_WIDTH-1:0]  by79cba;
output  [OS_WIDTH -1:0]   osce5d3;
output                    qg72e99;
output                    wy974c8;
output                    fpba640;
output                    wjd3207;
output                    do9903c;
output  [LANE_WIDTH-1:0]  rtc81e3;
output  [L0SM_WIDTH:0]    nr40f1e;
wire [LANE_WIDTH-1:0]   vk963e5;
wire                    wwdb71a;
wire                    yz8f955;
wire                    ps7caac;
reg                     ri2f397;
reg                     pu2ab19;
reg  [L0SM_WIDTH:0]     nr40f1e;
reg  [LANE_WIDTH-1:0]   by79cba;
reg  [OS_WIDTH -1:0]    osce5d3;
reg                     qg72e99;
reg                     wy974c8;
reg                     fpba640;
reg                     wjd3207;
reg                     do9903c;
reg  [LANE_WIDTH-1:0]   rtc81e3;
reg ria263b;
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] bld7d3d;
reg [LANE_WIDTH - 1 : 0] czd61cb;
reg [LANE_WIDTH - 1 : 0] ks872e7;
reg [LANE_WIDTH - 1 : 0] do83f74;
reg [LANE_WIDTH - 1 : 0] gbe7300;
reg oh39804;
reg qtcc025;
reg en6012c;
reg aa965;
reg fc4b29;
reg tw2594b;
reg oh2ca5a;
reg en652d4;
reg cb296a5;
reg [LANE_WIDTH - 1 : 0] jp5a96d;
reg ym1fba2;
reg nta5b78;
reg tj2dbc6;
reg qg6de36;
reg [2047:0] db22f5b;
wire [20:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 21,jceb7ea = 32'hfdffd14b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif



















assign vk963e5        = (czd61cb | ks872e7) & bld7d3d;

assign wwdb71a      = |(do83f74 & bld7d3d);




assign ps7caac = aa965;

assign yz8f955 = 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      nr40f1e      <= kf90f55;      by79cba     <= {(LANE_WIDTH){1'b0}};      osce5d3 <= OS_IDLE;      qg72e99  <= 1'b0;      wy974c8  <= 1'b0;      fpba640  <= 1'b0;      wjd3207     <= 1'b0;      do9903c     <= 1'b0;      rtc81e3   <= {(LANE_WIDTH){1'b0}};      ri2f397         <= 1'b0;      pu2ab19  <= 1'b0;   end   else begin      qg72e99  <= 1'b0;      wy974c8  <= 1'b0;      fpba640  <= 1'b0;      wjd3207     <= 1'b0;      do9903c     <= 1'b0;      ri2f397         <= 1'b0;      case(nr40f1e)                  kf90f55: begin            by79cba       <= {(LANE_WIDTH){1'b0}};            if (vk1eaec == L0) begin               nr40f1e     <= ks87aac;               rtc81e3  <= ~bld7d3d;               ri2f397        <= 1'b1;            end            else begin               nr40f1e     <= kf90f55;               rtc81e3  <= {(LANE_WIDTH){1'b0}};            end         end                  ks87aac: begin                if (((|jp5a96d == 1'b1) || oh2ca5a== 1'b1 || cb296a5 || en652d4|| (&gbe7300 == 1'b1)) && !ria263b) begin               nr40f1e      <= al60c71;               qg72e99  <= 1'b1;            end                        else if (tj2dbc6 || nta5b78) begin               case({tj2dbc6,nta5b78})                  2'b10: begin                     nr40f1e      <= fp3d560;	                     wy974c8  <= 1'b1;                                       end                  2'b01: begin                     nr40f1e      <= qgeab06;                                       fpba640  <= 1'b1;                                          ri2f397         <= 1'b1;                  end                  2'b11: begin                     nr40f1e      <= al60c71;                     wy974c8  <= 1'b1;                     fpba640  <= 1'b1;                  end               endcase            end                        else if (ym1fba2) begin               nr40f1e      <= al60c71;               wjd3207     <= (fc4b29) ? 1'b1 : 1'b0;               do9903c     <= (tw2594b) ? 1'b1 : 1'b0;               by79cba     <= {(LANE_WIDTH){1'b1}};               osce5d3 <= OS_EIDLE;            end                        else if (fc4b29 || tw2594b) begin               nr40f1e      <= zx55831;               by79cba     <= {(LANE_WIDTH){1'b1}};               osce5d3 <= OS_EIDLE;            end            else begin               nr40f1e      <= ks87aac;               ri2f397         <= 1'b1;            end         end                           fp3d560: begin            if ((|jp5a96d == 1'b1) || oh2ca5a== 1'b1 || cb296a5 || en652d4|| (&gbe7300 == 1'b1)) begin               nr40f1e      <= al60c71;               qg72e99  <= 1'b1;            end                        else if (en6012c || nta5b78) begin               nr40f1e      <= al60c71;               fpba640  <= (nta5b78) ? 1'b1 : 1'b0;            end                        else begin               nr40f1e      <= fp3d560;            end         end                           qgeab06: begin            if ((|jp5a96d == 1'b1) || oh2ca5a== 1'b1 || cb296a5 || en652d4|| (&gbe7300 == 1'b1)) begin               nr40f1e      <= al60c71;               qg72e99  <= 1'b1;            end                        else if (qtcc025 || oh39804 || tj2dbc6) begin               nr40f1e      <= al60c71;                              wy974c8  <= (tj2dbc6 && !oh39804) ? 1'b1 : 1'b0;              end                        else begin               nr40f1e      <= qgeab06;               ri2f397         <= 1'b1;            end         end                  zx55831: begin            nr40f1e      <= aaac18e;            pu2ab19  <= ym1fba2;         end                  aaac18e: begin            by79cba        <= {(LANE_WIDTH){1'b0}};            rtc81e3      <= {(LANE_WIDTH){1'b1}};            if (ym1fba2 || qg6de36) begin               nr40f1e      <= al60c71;               wjd3207     <= (fc4b29) ? 1'b1 : 1'b0;               do9903c     <= (tw2594b) ? 1'b1 : 1'b0;            end            else begin               nr40f1e      <= aaac18e;            end         end                  al60c71: begin            if (vk1eaec != L0) begin               nr40f1e   <= kf90f55;               by79cba  <= {(LANE_WIDTH){1'b0}};            end            else begin               nr40f1e   <= al60c71;            end         end         default: begin            nr40f1e   <= kf90f55;         end      endcase   end
end
always@* begin ria263b<=ux17adf[0];vk1eaec<={ho57cb0>>1,ux17adf[1]};bld7d3d<={ntbaf9a>>1,ux17adf[2]};czd61cb<={dzc85e9>>1,ux17adf[3]};ks872e7<={dm42f4e>>1,ux17adf[4]};do83f74<={qt75f04>>1,ux17adf[5]};gbe7300<={ngbd395>>1,ux17adf[6]};oh39804<=ux17adf[7];qtcc025<=ux17adf[8];en6012c<=ux17adf[9];aa965<=ux17adf[10];fc4b29<=ux17adf[11];tw2594b<=ux17adf[12];oh2ca5a<=ux17adf[13];en652d4<=ux17adf[14];cb296a5<=ux17adf[15];jp5a96d<={vk963e5>>1,ux17adf[16]};ym1fba2<=ux17adf[17];nta5b78<=ux17adf[18];tj2dbc6<=ux17adf[19];qg6de36<=ux17adf[20];end
always@* begin db22f5b[2047]<=ho57cb0[0];db22f5b[2046]<=ntbaf9a[0];db22f5b[2044]<=dzc85e9[0];db22f5b[2040]<=dm42f4e[0];db22f5b[2033]<=qt75f04[0];db22f5b[2019]<=ngbd395[0];db22f5b[1990]<=fne9caa;db22f5b[1939]<=yz8f955;db22f5b[1933]<=kd4e556;db22f5b[1831]<=ps7caac;db22f5b[1819]<=kq72ab5;db22f5b[1778]<=cfg_rtrn_lnk;db22f5b[1615]<=pu2ab19;db22f5b[1591]<=hl_gto_l0stx;db22f5b[1508]<=vk963e5[0];db22f5b[1135]<=hl_gto_l1;db22f5b[1023]<=no_pcie_train;db22f5b[969]<=wwdb71a;db22f5b[889]<=dll_rtrn_lnk;db22f5b[444]<=hl_gto_rcvry;db22f5b[222]<=hl_gto_l2;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule







































































































`timescale 1 ns / 100 ps
module pcie_x1_hqadc66 
   (
    
    sys_clk,            
    rst_n,              

    ho57cb0,         
    ntbaf9a,          
    asb_eidle_rx,       
    fpba640,       
    jeb76b3,   
    yzbb59b,            
    asb_dskew_rx,       
    
    
    yxd66eb,         
    swb375c,   
    kd4e556,      
    fne9caa,   
    hoeb87f,   
    cm5c3fb        
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam hqbd699  = 3'd0 ;
localparam hoeb4ca = 3'd1 ;
localparam bl5a652  = 3'd2 ;
localparam wjd3296   = 3'd3 ;
localparam do994b4  = 3'd4 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  ntbaf9a;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input                     fpba640;
input                     jeb76b3;
input   [LANE_WIDTH-1:0]  yzbb59b;
input   [LANE_WIDTH-1:0]  asb_dskew_rx;
output                    yxd66eb;
output                    swb375c;
output                    kd4e556;
output                    fne9caa;
output                    hoeb87f;
output  [L0sRSM_WIDTH:0]  cm5c3fb;
wire [LANE_WIDTH-1:0]   ls96521;
wire                    twb290a;
wire [LANE_WIDTH-1:0]   rtd2721;
reg  [L0sRSM_WIDTH:0]   cm5c3fb;
reg                     swb375c;
reg                     kd4e556;
reg                     fne9caa;
reg                     hoeb87f;
reg                     yxd66eb;
reg  [2:0]              kd4b788;
reg                     mr5bc45;
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] bld7d3d;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg vi423f9;
reg ri11fcb;
reg [LANE_WIDTH - 1 : 0] en7f2d4;
reg [LANE_WIDTH - 1 : 0] dz7bcc5;
reg [LANE_WIDTH - 1 : 0] icd4b8f;
reg xla5c78;
reg [LANE_WIDTH - 1 : 0] wla4a4a;
reg [2 : 0] oh8f187;
reg qg78c3d;
reg [2047:0] db22f5b;
wire [11:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 12,jceb7ea = 32'hfdffe0cb;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















assign ls96521         = en7f2d4 & bld7d3d;

assign rtd2721= dz7bcc5 & bld7d3d;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cm5c3fb      <= hqbd699;      mr5bc45    <= 1'b0;      swb375c  <= 1'b0;      kd4e556     <= 1'b0;      fne9caa  <= 1'b0;      hoeb87f  <= 1'b0;      yxd66eb        <= 1'b0;   end   else begin      swb375c  <= 1'b0;      kd4e556     <= 1'b0;      fne9caa  <= 1'b0;      hoeb87f  <= 1'b0;      yxd66eb        <= 1'b0;      case(cm5c3fb)                  hqbd699: begin            if (vi423f9) begin               cm5c3fb     <= hoeb4ca;               mr5bc45   <= 1'b1;            end            else begin               cm5c3fb     <= hqbd699;            end         end                  hoeb4ca: begin            if (xla5c78) begin               cm5c3fb     <= bl5a652;               mr5bc45   <= 1'b0;            end            else begin               cm5c3fb     <= hoeb4ca;            end         end                  bl5a652: begin            if (&ou920a1 == 1'b0) begin               cm5c3fb     <= wjd3296;               swb375c <= 1'b1;               yxd66eb       <= 1'b1;            end            else begin               cm5c3fb     <= bl5a652;            end         end                  wjd3296: begin            if (icd4b8f == bld7d3d && ~swb375c && wla4a4a == bld7d3d) begin               cm5c3fb     <= do994b4;               kd4e556    <= 1'b1;            end            else if (ri11fcb && ~swb375c) begin               cm5c3fb     <= do994b4;               fne9caa <= 1'b1;               hoeb87f <= 1'b1;            end            else begin               cm5c3fb     <= wjd3296;            end         end                  do994b4: begin            if (vk1eaec != L0s) begin               cm5c3fb   <= hqbd699;            end            else begin               cm5c3fb   <= do994b4;            end         end         default: begin            cm5c3fb   <= hqbd699;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kd4b788 <= 0;   end   else if (qg78c3d) begin      kd4b788 <= oh8f187 + 1'b1;   end   else begin      kd4b788 <= 0;   end
end
assign twb290a =(oh8f187 >= 3'b100) ? 1'b1 : 1'b0;

always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};bld7d3d<={ntbaf9a>>1,ux17adf[1]};ou920a1<={asb_eidle_rx>>1,ux17adf[2]};vi423f9<=ux17adf[3];ri11fcb<=ux17adf[4];en7f2d4<={yzbb59b>>1,ux17adf[5]};dz7bcc5<={asb_dskew_rx>>1,ux17adf[6]};icd4b8f<={ls96521>>1,ux17adf[7]};xla5c78<=ux17adf[8];wla4a4a<={rtd2721>>1,ux17adf[9]};oh8f187<={kd4b788>>1,ux17adf[10]};qg78c3d<=ux17adf[11];end
always@* begin db22f5b[2047]<=ntbaf9a[0];db22f5b[2046]<=asb_eidle_rx[0];db22f5b[2044]<=fpba640;db22f5b[2040]<=jeb76b3;db22f5b[2033]<=yzbb59b[0];db22f5b[2018]<=asb_dskew_rx[0];db22f5b[1988]<=ls96521[0];db22f5b[1929]<=twb290a;db22f5b[1811]<=rtd2721[0];db22f5b[1574]<=kd4b788[0];db22f5b[1101]<=mr5bc45;db22f5b[1023]<=ho57cb0[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule

































































`timescale 1 ns / 100 ps
module pcie_x1_ls30c16 
   (
    
    sys_clk,            
    rst_n,              

    ho57cb0,         
    wy974c8,       
    ukb3686,   
    hl_gto_l0stxfts,    
    
    
    hoda18e,   
    rgd0c72,      
    pu86392,  
    kq72ab5,      
    jr8e499,    
    l0s_tx_state,       
    sw92679        
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam qg72b18  = 3'd0 ;
localparam yz958c0 = 3'd1 ;
localparam swac604 = 3'd2 ;
localparam ne63021  = 3'd3 ;
localparam sj1810a   = 3'd4 ;
localparam fac0855  = 3'd5 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input                     wy974c8;
input                     ukb3686;
input                     hl_gto_l0stxfts;
output                    hoda18e;
output  [LANE_WIDTH-1:0]  rgd0c72;
output  [OS_WIDTH -1:0]   pu86392;
output                    kq72ab5;
output  [LANE_WIDTH-1:0]  jr8e499;
output  [L0sTSM_WIDTH:0]  l0s_tx_state;
output  [L0sTSM_WIDTH:0]  sw92679;
wire                    twb290a;
reg  [L0sTSM_WIDTH:0]   sw92679;
reg  [LANE_WIDTH-1:0]   rgd0c72;
reg  [OS_WIDTH -1:0]    pu86392;
reg                     hoda18e;
reg                     kq72ab5;
reg  [LANE_WIDTH-1:0]   jr8e499;
reg  [2:0]              kd4b788;
reg                     mr5bc45;
reg [MSM_WIDTH : 0] vk1eaec;
reg dm76ceb;
reg wyb675a;
reg wyb3ad1;
reg xla5c78;
reg [2 : 0] oh8f187;
reg qg78c3d;
reg [2047:0] db22f5b;
wire [6:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 7,jceb7ea = 32'hfdfff10b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















assign l0s_tx_state = sw92679;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      sw92679      <= qg72b18;      mr5bc45    <= 1'b0;      rgd0c72     <= {(LANE_WIDTH){1'b0}};      pu86392 <= OS_IDLE;      hoda18e  <= 1'b0;      kq72ab5     <= 1'b0;      jr8e499   <= {(LANE_WIDTH){1'b0}};   end   else begin      hoda18e  <= 1'b0;      kq72ab5     <= 1'b0;      case(sw92679)                  qg72b18: begin            if (dm76ceb) begin               sw92679     <= yz958c0;               rgd0c72    <= {(LANE_WIDTH){1'b1}};               pu86392<= OS_EIDLE;               mr5bc45   <= 1'b1;            end            else begin               sw92679     <= qg72b18;            end         end         yz958c0: begin            sw92679     <= swac604;         end                  swac604: begin            rgd0c72       <= {(LANE_WIDTH){1'b0}};            jr8e499     <= {(LANE_WIDTH){1'b1}};            if (xla5c78) begin               sw92679     <= ne63021;               mr5bc45   <= 1'b0;            end            else begin               sw92679     <= swac604;            end         end                  ne63021: begin            if (wyb3ad1) begin               sw92679     <= sj1810a;               rgd0c72    <= {(LANE_WIDTH){1'b1}};               pu86392<= OS_NFTS;               hoda18e <= 1'b1;               jr8e499  <= {(LANE_WIDTH){1'b0}};            end            else begin               sw92679     <= ne63021;            end         end                  sj1810a: begin            if (wyb675a && ~hoda18e) begin               sw92679     <= fac0855;               kq72ab5    <= 1'b1;               rgd0c72    <= {(LANE_WIDTH){1'b0}};            end            else begin               sw92679     <= sj1810a;            end         end                  fac0855: begin            if (vk1eaec != L0s) begin               sw92679   <= qg72b18;            end            else begin               sw92679   <= fac0855;            end         end         default: begin            sw92679   <= qg72b18;         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kd4b788 <= 0;   end   else if (qg78c3d) begin      kd4b788 <= oh8f187 + 1'b1;   end   else begin      kd4b788 <= 0;   end
end
assign twb290a =(oh8f187 >= 3'b100) ? 1'b1 : 1'b0;
always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};dm76ceb<=ux17adf[1];wyb675a<=ux17adf[2];wyb3ad1<=ux17adf[3];xla5c78<=ux17adf[4];oh8f187<={kd4b788>>1,ux17adf[5]};qg78c3d<=ux17adf[6];end
always@* begin db22f5b[2047]<=wy974c8;db22f5b[2046]<=ukb3686;db22f5b[2044]<=hl_gto_l0stxfts;db22f5b[2040]<=twb290a;db22f5b[2032]<=kd4b788[0];db22f5b[2016]<=mr5bc45;db22f5b[1023]<=ho57cb0[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule








































































`timescale 1 ns / 100 ps
module pcie_x1_tj91fd8 
   (
    
    sys_clk,            
    rst_n,              

    ho57cb0,         
    ntbaf9a,          
    asb_eidle_rx,       
    twb290a,      
    hl_gto_rcvry,       
    
    
    ym2bd0f,        
    kd5e879,       
    tuf43cd,       
    l1_state,           
    ksf354            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam lfbf351    = 2'd0 ;
localparam thf9a8f   = 2'd1 ;
localparam fncd47f    = 2'd2 ;
localparam uv6a3fe    = 2'd3 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  ntbaf9a;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input                     twb290a;
input                     hl_gto_rcvry;
output  [LANE_WIDTH-1:0]  ym2bd0f;
output                    kd5e879;
output                    tuf43cd;
output  [L1SM_WIDTH:0]    l1_state;
output  [L1SM_WIDTH:0]    ksf354;
reg  [L1SM_WIDTH:0]     ksf354;
reg  [LANE_WIDTH-1:0]   ym2bd0f;
reg                     kd5e879;
reg                     tuf43cd;
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] bld7d3d;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg xla5c78;
reg oh2ca5a;
reg [2047:0] db22f5b;
wire [4:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 5,jceb7ea = 32'hfdffd48b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















assign l1_state = ksf354;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ksf354      <= lfbf351;      ym2bd0f   <= {(LANE_WIDTH){1'b0}};      kd5e879  <= 1'b0;      tuf43cd  <= 1'b0;   end   else begin      tuf43cd  <= 1'b0;      kd5e879  <= 1'b0;      case(ksf354)                  lfbf351: begin            if (vk1eaec == L1) begin               ksf354     <= thf9a8f;               ym2bd0f  <= bld7d3d;               kd5e879 <= 1'b1;            end            else begin               ksf354     <= lfbf351;            end         end                  thf9a8f: begin            if (xla5c78 && ~kd5e879) begin               ksf354     <= fncd47f;            end            else begin               ksf354     <= thf9a8f;            end         end                  fncd47f: begin            if (&ou920a1 == 1'b0 || oh2ca5a) begin               ksf354     <= uv6a3fe;               tuf43cd <= 1'b1;            end            else begin               ksf354     <= fncd47f;            end         end                  uv6a3fe: begin            if (vk1eaec != L1) begin               ksf354   <= lfbf351;            end            else begin               ksf354   <= uv6a3fe;            end         end         default: begin            ksf354   <= lfbf351;         end      endcase   end
end
always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};bld7d3d<={ntbaf9a>>1,ux17adf[1]};ou920a1<={asb_eidle_rx>>1,ux17adf[2]};xla5c78<=ux17adf[3];oh2ca5a<=ux17adf[4];end
always@* begin db22f5b[2047]<=ntbaf9a[0];db22f5b[2046]<=asb_eidle_rx[0];db22f5b[2044]<=twb290a;db22f5b[2040]<=hl_gto_rcvry;db22f5b[1023]<=ho57cb0[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























































`timescale 1 ns / 100 ps
module pcie_x1_ep9f564 
   (
    
    sys_clk,            
    rst_n,              

    ho57cb0,         
    ntbaf9a,          
    asb_eidle_rx,       
    asb_beacon_rx,      
    hl_gto_det,         
    hl_snd_beacon,      
    
    ls862e8,
    ou31743,
    jr8ba18,

    
    zk5d0c6,          
    kde8633,      
    ay4319d,        
    gd18ce9,       
    kdc674c,         
    ir33a65,      
    l2_state,           
    vve9961            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam suffbfc     = 2'd0 ;
localparam shfdfe0     = 2'd1 ;
localparam uieff05 = 2'd2 ;
localparam en7f829     = 2'd3 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  ntbaf9a;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input   [LANE_WIDTH-1:0]  asb_beacon_rx;
input                     hl_gto_det;
input                     hl_snd_beacon;
input                     ls862e8;
input                     ou31743;
input                     jr8ba18;
output  [LANE_WIDTH-1:0]  zk5d0c6;
output  [OS_WIDTH -1:0]   kde8633;
output  [LANE_WIDTH-1:0]  ay4319d;
output                    gd18ce9;
output                    kdc674c;
output                    ir33a65;
output  [L2SM_WIDTH:0]    l2_state;
output  [L2SM_WIDTH:0]    vve9961;
reg  [LANE_WIDTH-1:0]   zk5d0c6;
reg  [OS_WIDTH -1:0]    kde8633;
reg  [L2SM_WIDTH:0]     vve9961;
reg  [LANE_WIDTH-1:0]   ay4319d;
reg                     gd18ce9;
reg                     kdc674c;
reg                     ir33a65;
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] bld7d3d;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg [LANE_WIDTH - 1 : 0] sj90508;
reg dz6e0fd;
reg oha1578;
reg coabc5;
reg xj55e28;
reg ntaf146;
reg [2047:0] db22f5b;
wire [8:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 9,jceb7ea = 32'hfdffd42b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















assign l2_state = vve9961;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vve9961      <= suffbfc;      gd18ce9  <= 1'b0;      kdc674c    <= 1'b0;      ir33a65 <= 1'b0;      ay4319d   <= {(LANE_WIDTH){1'b0}};      zk5d0c6     <= {(LANE_WIDTH){1'b0}};      kde8633 <= OS_IDLE;   end   else begin      gd18ce9  <= 1'b0;      kdc674c    <= 1'b0;      ir33a65 <= 1'b0;      zk5d0c6     <= {(LANE_WIDTH){1'b0}};      case(vve9961)                  suffbfc: begin            kde8633 <= OS_IDLE;            if (vk1eaec == L2) begin               vve9961     <= shfdfe0;               ay4319d  <= bld7d3d;            end            else begin               vve9961     <= suffbfc;               ay4319d  <= {(LANE_WIDTH){1'b0}};            end         end                  shfdfe0: begin                                     if (coabc5) begin                               if (ntaf146 &&  (sj90508[0] || dz6e0fd)) begin                     vve9961     <= en7f829;                     kdc674c   <= 1'b1;                end                                else if (!ntaf146 && dz6e0fd) begin                        vve9961     <= en7f829;                     kdc674c   <= 1'b1;                end                               else begin                   vve9961     <= shfdfe0;                end             end                         else begin                if (&ou920a1 == 1'b0) begin                  vve9961     <= en7f829;                  kdc674c   <= 1'b1;               end                                             else if (oha1578 & xj55e28 == 1'b0) begin                  vve9961     <= uieff05;                  ir33a65<= 1'b1;                  zk5d0c6    <= {(LANE_WIDTH){1'b1}};                  kde8633<= OS_BEACON;                  gd18ce9 <= 1'b1;               end                              else begin                  vve9961     <= shfdfe0;               end                        end          end                                    uieff05: begin            if (&ou920a1 == 1'b0) begin               vve9961      <= en7f829;               kdc674c    <= 1'b1;            end            else begin               vve9961      <= uieff05;               ir33a65 <= 1'b1;               zk5d0c6     <= {(LANE_WIDTH){1'b1}};               kde8633 <= OS_BEACON;               gd18ce9  <= 1'b1;            end         end                           en7f829: begin            if (vk1eaec != L2) begin               vve9961   <= suffbfc;            end            else begin               vve9961   <= en7f829;            end         end         default: begin            vve9961   <= suffbfc;         end      endcase   end
end
always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};bld7d3d<={ntbaf9a>>1,ux17adf[1]};ou920a1<={asb_eidle_rx>>1,ux17adf[2]};sj90508<={asb_beacon_rx>>1,ux17adf[3]};dz6e0fd<=ux17adf[4];oha1578<=ux17adf[5];coabc5<=ux17adf[6];xj55e28<=ux17adf[7];ntaf146<=ux17adf[8];end
always@* begin db22f5b[2047]<=ntbaf9a[0];db22f5b[2046]<=asb_eidle_rx[0];db22f5b[2044]<=asb_beacon_rx[0];db22f5b[2041]<=hl_gto_det;db22f5b[2035]<=hl_snd_beacon;db22f5b[2022]<=ls862e8;db22f5b[1996]<=ou31743;db22f5b[1945]<=jr8ba18;db22f5b[1023]<=ho57cb0[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule











































































`timescale 1 ns / 100 ps
module pcie_x1_gq97768 
   (
    
    sys_clk,            
    rst_n,              

    ho57cb0,         
    an1d8b2,       
    pf409a9,     
    hl_gto_lbk,         
    asb_eidle_rx,       
    qt75f04,          
    swa9eea,        
    
    
    ld4f750,      
    vv7ba87,      
    rtdd43e,       
    wwea1f7,         
    rt50fb8,     
    ou87dc6,      
    ie3ee30,        
    qtf7180           
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam ip70ffe   = 3'd0 ;
localparam ou87ff5  = 3'd1 ;
localparam je3ffa8 = 3'd2 ;
localparam wwffd42  = 3'd4 ;
localparam xwfea10  = 3'd5 ;
localparam eaf5082   = 3'd6 ;
input                     sys_clk;
input                     rst_n;
input   [MSM_WIDTH:0]     ho57cb0;
input                     an1d8b2;
input                     pf409a9;
input   [LANE_WIDTH-1:0]  hl_gto_lbk;
input   [LANE_WIDTH-1:0]  asb_eidle_rx;
input   [LANE_WIDTH-1:0]  qt75f04;
input   [LANE_WIDTH-1:0]  swa9eea;
output                    ld4f750;
output                    vv7ba87;
output  [LANE_WIDTH-1:0]  rtdd43e;
output  [LANE_WIDTH-1:0]  wwea1f7;
output  [OS_WIDTH -1:0]   rt50fb8;
output                    ou87dc6;
output                    ie3ee30;
output  [LBSM_WIDTH:0]    qtf7180;
reg  [LBSM_WIDTH:0]     qtf7180;
reg  [LANE_WIDTH-1:0]   rtdd43e;
reg                     ou87dc6;
reg                     ie3ee30;
reg  [LANE_WIDTH-1:0]   wwea1f7;
reg  [OS_WIDTH -1:0]    rt50fb8;
reg  [LANE_WIDTH-1:0]   ps48c4c;
reg                     ld4f750;
reg                     vv7ba87;
reg [MSM_WIDTH : 0] vk1eaec;
reg vk2aea2;
reg vx190c2;
reg [LANE_WIDTH - 1 : 0] gd18aba;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg [LANE_WIDTH - 1 : 0] do83f74;
reg [LANE_WIDTH - 1 : 0] mg8dd6b;
reg [LANE_WIDTH - 1 : 0] yx75acf;
reg [2047:0] db22f5b;
wire [7:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 8,jceb7ea = 32'hfdffe0cb;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qtf7180      <= ip70ffe;      wwea1f7     <= {(LANE_WIDTH){1'b0}};      rt50fb8 <= OS_T1;      ou87dc6  <= 1'b0;      ie3ee30    <= 1'b0;      rtdd43e   <= {(LANE_WIDTH){1'b0}};      ps48c4c     <= {(LANE_WIDTH){1'b0}};      ld4f750  <= 1'b0;      vv7ba87  <= 1'b0;   end   else begin      ou87dc6  <= 1'b0;      ie3ee30    <= 1'b0;      case(qtf7180)                  ip70ffe: begin            ld4f750 <= 1'b0;            if (vk1eaec == LOOPBACK) begin               rt50fb8   <= OS_T1;               ou87dc6    <= 1'b1;                              if (|gd18aba) begin                  qtf7180     <= ou87ff5;                  wwea1f7    <= gd18aba;                  vv7ba87 <= 1'b0;                  ps48c4c    <= gd18aba;               end                              else begin                  qtf7180     <= je3ffa8;                  wwea1f7    <= {(LANE_WIDTH){1'b0}};                  vv7ba87 <= 1'b1;                  ps48c4c    <= 0;               end            end            else begin               ps48c4c    <= 0;               vv7ba87 <= 1'b0;               qtf7180     <= ip70ffe;            end         end                  ou87ff5: begin            if ((mg8dd6b & yx75acf) == yx75acf && ~ou87dc6) begin               qtf7180     <= je3ffa8;               wwea1f7    <= {(LANE_WIDTH){1'b0}};            end            else if (vx190c2 && ~ou87dc6) begin               qtf7180     <= wwffd42;               wwea1f7    <= {(LANE_WIDTH){1'b1}};               rt50fb8<= OS_EIDLE;               ou87dc6 <= 1'b1;            end            else begin               qtf7180     <= ou87ff5;            end         end                  je3ffa8: begin            if (|yx75acf == 1'b1 && |gd18aba == 1'b0 && ~ou87dc6) begin               qtf7180     <= wwffd42;               wwea1f7    <= {(LANE_WIDTH){1'b1}};               rt50fb8<= OS_EIDLE;               ou87dc6 <= 1'b1;               ld4f750 <= 1'b0;            end            else if (|yx75acf == 1'b0 && (|do83f74 == 1'b1 || |ou920a1 == 1'b1) && ~ou87dc6) begin               qtf7180     <= xwfea10;               wwea1f7    <= {(LANE_WIDTH){1'b0}};               ou87dc6 <= 1'b1;               vv7ba87 <= 1'b0;            end            else begin               qtf7180     <= je3ffa8;               ld4f750 <= (yx75acf) ? 1'b1 : 1'b0;            end         end                  wwffd42: begin            qtf7180     <= xwfea10;         end                  xwfea10: begin            wwea1f7    <= {(LANE_WIDTH){1'b0}};            if (vk2aea2 && ~ou87dc6) begin               qtf7180     <= eaf5082;               ie3ee30   <= 1'b1;               rtdd43e  <= {(LANE_WIDTH){1'b0}};            end            else begin               qtf7180     <= xwfea10;               rtdd43e  <= {(LANE_WIDTH){1'b1}};            end         end                  eaf5082: begin            if (vk1eaec != LOOPBACK) begin               qtf7180   <= ip70ffe;            end            else begin               qtf7180   <= eaf5082;            end         end         default: begin            qtf7180   <= ip70ffe;         end      endcase   end
end
always@* begin vk1eaec<={ho57cb0>>1,ux17adf[0]};vk2aea2<=ux17adf[1];vx190c2<=ux17adf[2];gd18aba<={hl_gto_lbk>>1,ux17adf[3]};ou920a1<={asb_eidle_rx>>1,ux17adf[4]};do83f74<={qt75f04>>1,ux17adf[5]};mg8dd6b<={swa9eea>>1,ux17adf[6]};yx75acf<={ps48c4c>>1,ux17adf[7]};end
always@* begin db22f5b[2047]<=an1d8b2;db22f5b[2046]<=pf409a9;db22f5b[2044]<=hl_gto_lbk[0];db22f5b[2040]<=asb_eidle_rx[0];db22f5b[2033]<=qt75f04[0];db22f5b[2018]<=swa9eea[0];db22f5b[1988]<=ps48c4c[0];db22f5b[1023]<=ho57cb0[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























































































`timescale 1 ns / 100 ps
module pcie_x1_hb45f11 
   (
    
    sys_clk,           
    rst_n,             

    
    no_pcie_train,     

    
    doa2b2b,       
    qv8f6a2,       
    jp7b515,       
    xw575f3,        
    vvc8aba,       
    do2aebe,       
    xj455d7,       
    wjd3207,         
    do9903c,         
    shd9637,        
    qg72e99,      
    ps58de9,        
    enc6f4a,     
    tuf43cd,      
    kdc674c,        
    ble9532,      
    jp4a997,     
    al54cbe,    
    iea65f4,     
    fp32fa0,     
    mg97d06,     
    ie3ee30,       
    ym8d840,      
    hq25e83,       

    
    ph6316,      
    uk318b7,      
    hq8c5b9,       
    ho57cb0,        
    jr16e51,          
    hqb728f,          
    gqb947b        
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                   sys_clk;
input                   rst_n;
input                   no_pcie_train;
input                   doa2b2b;
input                   qv8f6a2;
input                   jp7b515;
input                   xw575f3;
input                   vvc8aba;
input                   do2aebe;
input                   xj455d7;
input                   wjd3207;
input                   do9903c;
input                   shd9637;
input                   qg72e99;
input                   ps58de9;
input                   enc6f4a;
input                   tuf43cd;
input                   kdc674c;
input                   ble9532;
input                   jp4a997;
input                   al54cbe;
input                   iea65f4;
input                   fp32fa0;
input                   mg97d06;
input                   ie3ee30;
input                   ym8d840;
input                   hq25e83;
output                  ph6316;
output                  uk318b7;
output                  hq8c5b9;
output  [MSM_WIDTH:0]   ho57cb0;
output                  jr16e51;
output                  hqb728f;
output                  gqb947b;
reg [MSM_WIDTH:0]       hd37d0;
reg                     hq8c5b9;
reg [MSM_WIDTH:0]       ho57cb0;
reg                     jr16e51;
reg                     hqb728f;
reg                     gqb947b;
reg                     ph6316;
reg                     uk318b7;
reg                     wl8a251;
reg  [5*8:0] en5128d;
reg ria263b;
reg dz4a36a;
reg ip51b57;
reg uk8dabc;
reg me6d5e1;
reg sh6af09;
reg ne5784d;
reg mgbc26b;
reg vie1358;
reg jr9ac3;
reg dm4d61f;
reg fn6b0fa;
reg jc587d6;
reg mrc3eb3;
reg sw1f59c;
reg ayface0;
reg end6700;
reg oub3804;
reg hq9c020;
reg uie0103;
reg ym819;
reg pu40c9;
reg ri2064a;
reg db3253;
reg fp1929f;
reg [MSM_WIDTH : 0] dz4a7fc;
reg go53fe7;
reg [5 * 8 : 0] kf9ff39;
reg [2047:0] db22f5b;
wire [27:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 28,jceb7ea = 32'hfdfff40b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      hd37d0  <= DETECT;      hq8c5b9 <= 1'b0;      ph6316<= 1'b0;      uk318b7<= 1'b0;   end   else if (go53fe7) begin      hd37d0  <= L0;      hq8c5b9 <= 1'b1;      ph6316<= 1'b0;      uk318b7<= 1'b1;   end   else begin      case(dz4a7fc)          DETECT: begin            hq8c5b9   <= 1'b0;            uk318b7  <= 1'b0;            if (dz4a36a)               hd37d0 <= POLLING;            else               hd37d0 <= DETECT;         end         POLLING: begin            hq8c5b9 <= 1'b0;            uk318b7<= 1'b0;            casex({ip51b57, uk8dabc})               2'b1x:   hd37d0 <= CONFIG;               2'bx1:   hd37d0 <= DETECT;               default: hd37d0 <= POLLING;            endcase         end         CONFIG: begin            hq8c5b9 <= hq8c5b9;            ph6316<= |{sh6af09, ne5784d, mgbc26b};            uk318b7<= 1'b1;            casex({me6d5e1, sh6af09, ne5784d, mgbc26b})               4'b1xxx: hd37d0 <= L0;               4'bx1xx: hd37d0 <= LOOPBACK;               4'bxx1x: hd37d0 <= DISABLED;               4'bxxx1: hd37d0 <= DETECT;               default: hd37d0 <= CONFIG;    endcase         end         L0: begin            hq8c5b9   <= 1'b1;            uk318b7  <= 1'b1;            ph6316  <= 1'b0;            casex({vie1358, jr9ac3, dm4d61f, fn6b0fa})               4'b1xxx: hd37d0 <= L1;               4'bx1xx: hd37d0 <= L2;               4'bxx1x: hd37d0 <= L0s;               4'bxxx1: hd37d0 <= RECOVERY;               default: hd37d0 <= L0;    endcase         end         L0s : begin            hq8c5b9   <= 1'b1;            uk318b7  <= 1'b0;            casex({jc587d6, mrc3eb3})               2'b1x:   hd37d0 <= L0;               2'bx1:   hd37d0 <= RECOVERY;               default: hd37d0 <= L0s;            endcase         end         L1 : begin            hq8c5b9   <= 1'b1;            uk318b7  <= 1'b0;            if (sw1f59c)               hd37d0 <= RECOVERY;            else               hd37d0 <= L1;         end         L2 : begin            hq8c5b9   <= 1'b1;            uk318b7  <= 1'b0;            if (ayface0)               hd37d0 <= DETECT;            else               hd37d0 <= L2;         end         RECOVERY: begin            hq8c5b9 <= 1'b1;            uk318b7<= 1'b1;            casex({end6700, oub3804, hq9c020, uie0103, ym819, pu40c9})               6'b1xxxxx: hd37d0 <= L0;               6'bx1xxxx: hd37d0 <= LOOPBACK;               6'bxx1xxx: hd37d0 <= HOTRST;               6'bxxx1xx: hd37d0 <= DISABLED;               6'bxxxx1x: hd37d0 <= DETECT;               6'bxxxxx1: hd37d0 <= CONFIG;               default:   hd37d0 <= RECOVERY;            endcase         end         LOOPBACK: begin            hq8c5b9   <= 1'b0;            uk318b7  <= 1'b0;    if (ri2064a)               hd37d0 <= DETECT;            else               hd37d0 <= LOOPBACK;         end         HOTRST :  begin            hq8c5b9   <= 1'b0;            uk318b7  <= 1'b0;    if (db3253)               hd37d0 <= DETECT;            else               hd37d0 <= HOTRST;         end         DISABLED :  begin            hq8c5b9   <= 1'b0;            uk318b7  <= 1'b0;    if (fp1929f)               hd37d0 <= DETECT;            else               hd37d0 <= DISABLED;         end         default : begin            uk318b7<= 1'b0;            hq8c5b9 <= 1'b0;            hd37d0  <= {(MSM_WIDTH){1'bx}};         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      wl8a251 <= 1'b0;      ho57cb0      <= DETECT;      jr16e51        <= 1'b0;      hqb728f        <= 1'b1;      gqb947b     <= 1'b0;   end   else begin      wl8a251 <= ria263b;      ho57cb0      <= dz4a7fc;            jr16e51        <= (ho57cb0 == POLLING) ? 1'b1 : 1'b0;      hqb728f        <= (ho57cb0 == DETECT) ? 1'b1 : 1'b0;      gqb947b     <= (ho57cb0 == L0 || ho57cb0 == L0s) ? 1'b1 : 1'b0;   end
end




always @ (dz4a7fc)
begin   case(dz4a7fc)         DETECT:   en5128d = "DET";         POLLING:  en5128d = "POL";         CONFIG:   en5128d = "CFG";         L0:       en5128d = "L0";         L0s:      en5128d = "L0S";         L1 :      en5128d = "L1";         L2 :      en5128d = "L2";         RECOVERY: en5128d = "RCVRY";         LOOPBACK: en5128d = "LBK";         HOTRST :  en5128d = "HRST";         DISABLED: en5128d = "DIS";      default:      en5128d = "ERROR";   endcase
end

always@* begin ria263b<=ux17adf[0];dz4a36a<=ux17adf[1];ip51b57<=ux17adf[2];uk8dabc<=ux17adf[3];me6d5e1<=ux17adf[4];sh6af09<=ux17adf[5];ne5784d<=ux17adf[6];mgbc26b<=ux17adf[7];vie1358<=ux17adf[8];jr9ac3<=ux17adf[9];dm4d61f<=ux17adf[10];fn6b0fa<=ux17adf[11];jc587d6<=ux17adf[12];mrc3eb3<=ux17adf[13];sw1f59c<=ux17adf[14];ayface0<=ux17adf[15];end6700<=ux17adf[16];oub3804<=ux17adf[17];hq9c020<=ux17adf[18];uie0103<=ux17adf[19];ym819<=ux17adf[20];pu40c9<=ux17adf[21];ri2064a<=ux17adf[22];db3253<=ux17adf[23];fp1929f<=ux17adf[24];dz4a7fc<={hd37d0>>1,ux17adf[25]};go53fe7<=ux17adf[26];kf9ff39<={en5128d>>1,ux17adf[27]};end
always@* begin db22f5b[2047]<=doa2b2b;db22f5b[2046]<=qv8f6a2;db22f5b[2044]<=jp7b515;db22f5b[2040]<=xw575f3;db22f5b[2032]<=vvc8aba;db22f5b[2016]<=do2aebe;db22f5b[1984]<=xj455d7;db22f5b[1941]<=wl8a251;db22f5b[1920]<=wjd3207;db22f5b[1835]<=en5128d[0];db22f5b[1793]<=do9903c;db22f5b[1679]<=iea65f4;db22f5b[1539]<=shd9637;db22f5b[1310]<=fp32fa0;db22f5b[1145]<=ie3ee30;db22f5b[1030]<=qg72e99;db22f5b[1023]<=no_pcie_train;db22f5b[970]<=hd37d0[0];db22f5b[839]<=al54cbe;db22f5b[572]<=mg97d06;db22f5b[485]<=hq25e83;db22f5b[419]<=jp4a997;db22f5b[242]<=ym8d840;db22f5b[209]<=ble9532;db22f5b[104]<=kdc674c;db22f5b[52]<=tuf43cd;db22f5b[26]<=enc6f4a;db22f5b[13]<=ps58de9;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule












































































`timescale 1 ns / 100 ps
module pcie_x1_ble6ec1 
   (
    
    sys_clk,            
    rst_n,              
    reduce_idlecnt,     

    asb_eidle_rx,       
    asb_lane_sync,      
    asb_data,           
    asb_kcntl,          

    hl_gto_hrst,        
    hl_gto_dis,         
    hl_gto_lbk,         
    
    cz44a17,    
    vk250bd,     
    jr285eb,      
    tu42f5f,          
    yz17afa,          
    xybd7d5,     
    faebeaa,           
    pf5f553,           
    
    
    cmfaa9e,      
    tud54f0,           
    dzc85e9,             
    dm42f4e,             
    vx9e0f1,      
    ykf078e,      
    fp16539,           
    xyb29ce,     
    ec8d556,     
    hqa7396,      
    wl39cb2,    
    lfaac2f,     
    db94e72,      
    pu93f0c,        
    ep9f863,   
    zxfc31d,    
    vie18ee,    
    fpc772,    
    tu63b96,    
    ls96548,            
    ayce595,     
    cm72ce2,     
    ic72ca9,     
    ymb3882,           
    gqa9095,          
    qt75f04,          
    ngbd395,    
    yzbb59b,            
    swa9eea,        
    ir868d,       
    wl95212,       
    twb2a42,        
    os62ca7,        
    me495de,       
    zx4aef0            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                     sys_clk;
input                     rst_n;
input                     reduce_idlecnt;
input                     asb_eidle_rx;
input                     asb_lane_sync;
input   [15:0]            asb_data;
input   [1:0]             asb_kcntl;
input                     hl_gto_hrst;
input                     hl_gto_dis;
input                     hl_gto_lbk;
input                     vk250bd;
input                     cz44a17;
input   [7:0]             jr285eb;
input                     tu42f5f;
input                     yz17afa;
input                     xybd7d5;
input   [7:0]             faebeaa;
input   [7:0]             pf5f553;
output                    cmfaa9e;
output  [7:0]             tud54f0;
output                    dzc85e9;
output                    dm42f4e;
output                    vx9e0f1;
output                    ykf078e;
output                    fp16539;
output                    xyb29ce;
output                    ec8d556;
output                    hqa7396;
output                    wl39cb2;
output                    lfaac2f;
output                    db94e72;
output                    pu93f0c;
output                    ls96548;
output                    ayce595;
output                    fpc772;
output                    tu63b96;
output                    ep9f863;
output                    zxfc31d;
output                    vie18ee;
output                    cm72ce2;
output                    ic72ca9;
output                    ymb3882;
output                    gqa9095;
output                    qt75f04;
output                    ngbd395;
output                    yzbb59b;
output                    swa9eea;
output                    ir868d;
output                    wl95212;
output                    twb2a42;
output                    os62ca7;
output                    me495de;
output  [7:0]             zx4aef0;
reg                      dzc85e9;
reg                      dm42f4e;
reg                      vx9e0f1;
reg                      ykf078e;
reg                      eafa66e;
reg                      ofd3371;
reg                      ri99b8c;
reg                      vvcdc62;
reg                      xj6e317;
reg                      zx718be;
reg                      vk8c5f7;
reg                      qg62fba;
reg                      ux17dd1;
reg                      sjbee8d;
reg                      shf746c;
reg                      tjba365;
reg                      cmd1b2f;
reg                      ym8d978;
reg                      tu6cbc1;
reg                      sh65e0a;
reg                      fc2f054;
reg                      ymb3882;
reg                      osc1510;
reg                      qt75f04;
reg                      ngbd395;
reg                      yzbb59b;
reg                      ym1002a;
reg                      yz80151;
reg                      ksa8c;
reg                      gq5461;
reg                      xy2a308;
reg                      yx51842;
reg  [7:0]               zx4aef0;
reg  [15:0]              lqfef62;
reg  [15:0]              ux8517;
reg  [15:0]              jc428bc;
reg  [1:0]               vk145e2;
reg  [1:0]               zma2f13;
reg  [1:0]               oh1789b;
reg                      ukbc4dd;
reg                      ipe26e8;
reg                      fp13744;
reg                      zz9ba26;
reg                      lddd137;
reg                      cze89bf;
reg   [2:0]              mr44dfc;
reg   [1:0]              yz26fe5;
reg   [3:0]              hd37f2d;
reg   [1:0]              fpbf96e;
reg   [1:0]              thfcb76;
reg   [1:0]              cme5bb7;
reg   [1:0]              jr2ddb8;
reg   [3:0]              rt6edc6;
reg   [3:0]              fa76e37;
reg   [1:0]              ngb71ba;
reg   [3:0]              dob8dd3;
reg   [3:0]              gbc6e9b;
reg   [1:0]              zz374dc;
reg   [3:0]              xlba6e7;
reg   [3:0]              kdd373f;
reg   [1:0]              nt9b9fc;
reg   [1:0]              shdcfe7;
reg   [1:0]              cze7f3c;
reg   [1:0]              ls3f9e5;
reg   [1:0]              pffcf2a;
reg   [3:0]              yxe7957;
reg                      gd3cabd;
reg                      cmfaa9e;
reg                      ls2af69;
wire                     jc57b4b;
wire                     hqbda5b;
wire                     mred2db;
wire  [7:0]              rg696dd;
wire  [7:0]              gb4b6eb;
wire  [7:0]              gb5b75d;
wire  [7:0]              icdbaec;
wire                     fndd761;
wire                     faebb0f;
wire                     ne5d87b ;
wire                     pfec3da ;
wire                     rt61ed7 ;
wire                     wyf6be;
wire                     fn7b5f1;

`ifdef GEN2

`else

`endif

`ifdef GEN2
reg vidaf8f ;

`else

`endif
reg fnd7c7b;
reg ou920a1;
reg aa82845;
reg [15 : 0] zx6bb34;
reg [1 : 0] vvecd3a;
reg xwf4f7c;
reg rtec62a;
reg gd18aba;
reg by5dce3;
reg viee71a;
reg [7 : 0] ho738d2;
reg do9c692;
reg rte3493;
reg wy1a49e;
reg [7 : 0] jpd24f0;
reg [7 : 0] co92786;
reg zm93c30;
reg hd9e183;
reg qgf0c1e;
reg ba860f1;
reg ng3078b;
reg zm83c5a;
reg tw1e2d2;
reg jcf1692;
reg vx8b492;
reg xj5a497;
reg rtd24be;
reg ou925f6;
reg qi92fb0;
reg ks97d81;
reg qvbec09;
reg dzf604c;
reg dbb0267;
reg zz8133e;
reg vx99f6;
reg ui4cfb7;
reg me67db9;
reg mg3edc9;
reg xjf6e48;
reg bab7246;
reg [15 : 0] ksb9233;
reg [15 : 0] gbc9198;
reg [15 : 0] by48cc4;
reg [1 : 0] qg46623;
reg [1 : 0] ep33119;
reg [1 : 0] ie988cd;
reg ykc4668;
reg mt23340;
reg lf19a04;
reg zxcd026;
reg ww68136;
reg vv409b1;
reg [2 : 0] ri4d8f;
reg [1 : 0] mt26c7b;
reg [3 : 0] oh363dd;
reg [1 : 0] mtb1eed;
reg [1 : 0] wl8f76d;
reg [1 : 0] fn7bb6d;
reg [1 : 0] thddb6e;
reg [3 : 0] kdedb76;
reg [3 : 0] ww6dbb4;
reg [1 : 0] os6dda0;
reg [3 : 0] fn6ed00;
reg [3 : 0] ne76807;
reg [1 : 0] anb403a;
reg [3 : 0] bna01d4;
reg [3 : 0] coea7;
reg [1 : 0] wl7539;
reg [1 : 0] zm3a9cd;
reg [1 : 0] uid4e6a;
reg [1 : 0] nga7350;
reg [1 : 0] sj39a82;
reg [3 : 0] xjcd415;
reg ip6a0ae;
reg jp50574;
reg gq82ba7;
reg wy15d38;
reg epae9c0;
reg [7 : 0] hb74e05;
reg [7 : 0] hqa702f;
reg [7 : 0] xl3817a;
reg [7 : 0] fac0bd6;
reg sw5eb3;
reg tw2f599;
reg sh7acca;
reg shd6654;
reg wyb32a4;
reg xy99521;
reg tuca90b;
reg [2047:0] db22f5b;
wire [88:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif


`ifdef GEN2

`else

`endif

`ifdef GEN2

`else

`endif

localparam ribd6fd = 89,jceb7ea = 32'hfdffea0b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef GEN2


`else


`endif


`ifdef GEN2


`else


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif









































always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      lqfef62 <= 0;      ux8517 <= 0;      jc428bc <= 0;
      vk145e2  <= 0;      zma2f13  <= 0;      oh1789b  <= 0;      ukbc4dd <= 0;      ipe26e8 <= 0;      fp13744 <= 0;   end   else begin                  lqfef62 <= (aa82845) ? zx6bb34 : 15'hFF;      ux8517 <= ksb9233;      jc428bc <= gbc9198;      vk145e2  <= (aa82845) ? vvecd3a : 0;      zma2f13  <= qg46623;      oh1789b  <= ep33119;            ukbc4dd <= ou920a1;      ipe26e8 <= ykc4668;      fp13744 <= mt23340;   end
end

pcie_x1_zz9c0c cz4e067 (        .sys_clk          ( sys_clk ),    .rst_n            ( rst_n ),
    .hd3d9f9           ( ksb9233 ),    .ui67e7e            ( qg46623 ),
        .blf9f8b        ( jc57b4b ),    .xj7e2fa        ( hqbda5b ),    .vx8beba      ( mred2db ),    .icfaeb6        ( rg696dd ),    .rvbad86  ( fndd761 ),    .oub61b5        ( gb4b6eb ),    .do86d4f  ( faebb0f ),    .bnb53d4        ( gb5b75d ),    .th4f530        ( icdbaec )   ) ;
assign tud54f0 = hb74e05;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zz9ba26 <= 1'b0;   end   else begin      zz9ba26 <= (((by48cc4[7:0] == K28_5) & (ie988cd[0] == 1'b1) &               (gbc9198 == {IDL, IDL}) & (ep33119[1:0] == 2'b11)) |                      ((by48cc4[15:8] == K28_5) & (ie988cd[1] == 1'b1) &       ({by48cc4[7:0], gbc9198[15:8]} == {IDL, IDL}) & ie988cd[0] & ep33119[1])             );   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      lddd137  <= 1'b0;   end   else  begin      lddd137 <= (((gbc9198 == {K28_5, SKP}) & (ep33119[1:0] == 2'b11)) |                    (({by48cc4[7:0],gbc9198[15:8]}  == {K28_5, SKP}) & ie988cd[0] & ep33119[1]));   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cze89bf  <= 1'b0;   end   else begin      cze89bf <= ((({by48cc4, gbc9198}  == {K28_5, FTS, FTS, FTS}) &                     ({ie988cd, ep33119} == 4'b1111)) |                    (({by48cc4[7:0], gbc9198, ksb9233[15:8] }  == {K28_5, FTS, FTS, FTS}) &                     ({ie988cd[0], ep33119, qg46623[1]} == 4'b1111)));   end
end








always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      gd3cabd <= 1'b0;   end   else begin      gd3cabd <= zxcd026 || vv409b1;   end
end





assign ne5d87b      = ((gbc9198[7:0]  ==  8'h00) && (ep33119[0] == 1'b0)) ;
assign pfec3da      = ((gbc9198[15:8] ==  8'h00) && (ep33119[1] == 1'b0)) ;
assign rt61ed7 = ((by48cc4[7:0]  ==  8'h00) && (ie988cd[0] == 1'b0)) ;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yxe7957 <= 0;   end   else begin      if (viee71a) begin         yxe7957 <= 0;      end                  else if (((xjcd415 < 'd8) && ~fnd7c7b) ||               ((xjcd415 < 'd3) &&  fnd7c7b)) begin         case({shd6654,sh7acca})            2'b00: yxe7957 <= 0;            2'b01: yxe7957 <= 4'd1;            2'b11: yxe7957 <= (wyb32a4) ? (xjcd415 +4'd2) : 4'd2;            2'b10: yxe7957 <= (wyb32a4) ? (xjcd415 +4'd1) : 0;         endcase      end   end
end



assign  wyf6be  = (sw5eb3 == 1'b0) & (hb74e05 == jpd24f0);
assign  fn7b5f1  = (tw2f599 == 1'b0) & (hqa702f == co92786);
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yz26fe5   <= 0;      hd37f2d  <= 0;      fpbf96e   <= 0;      thfcb76    <= 0;      cme5bb7      <= 0;      jr2ddb8    <= 0;      rt6edc6  <= 0;      fa76e37  <= 0;      ngb71ba   <= 0;      dob8dd3  <= 0;      gbc6e9b <= 0;      zz374dc          <= 0;      xlba6e7   <= 0;      kdd373f   <= 0;      nt9b9fc     <= 0;      shdcfe7      <= 0;      cze7f3c      <= 0;      ls3f9e5     <= 0;      pffcf2a     <= 0;      mr44dfc         <= 0;   end   else begin            if (ip6a0ae | viee71a) begin         yz26fe5 <= 0;      end            else if (!mt26c7b[1]) begin         if (gq82ba7 && {hb74e05,hqa702f}== {PAD,PAD} && {sw5eb3,tw2f599} == 2'b11) begin            yz26fe5 <= mt26c7b + 1;         end         else if (gq82ba7 || wy15d38) begin            yz26fe5 <= 0;         end      end            if (ip6a0ae | viee71a) begin         hd37f2d <= 0;      end      else if (!oh363dd[3]) begin


`ifdef GEN2
            if (({hb74e05,hqa702f}== {PAD,PAD}) &&        ({sw5eb3,tw2f599} == 2'b11) &&        ((fac0bd6[4] == 1'b0 && gq82ba7) ||                 (fac0bd6[2] == 1'b1 && gq82ba7) ||                 (wy15d38)        )       ) begin               hd37f2d <= oh363dd + 1;            end


`else
            if ((gq82ba7 || wy15d38) && {hb74e05,hqa702f}== {PAD,PAD} && {sw5eb3,tw2f599} == 2'b11) begin               hd37f2d <= oh363dd + 1;            end


`endif
         else if (gq82ba7 || wy15d38) begin            hd37f2d <= 0;         end      end            if (ip6a0ae | viee71a) begin         fpbf96e <= 0;      end            else if (!mtb1eed[1]) begin         if (gq82ba7 && {hb74e05,hqa702f}== {jpd24f0,PAD} && {sw5eb3,tw2f599} == 2'b01) begin            fpbf96e <= mtb1eed + 1;         end         else if (gq82ba7 || wy15d38) begin            fpbf96e <= 0;         end      end
             if (ip6a0ae | viee71a) begin         thfcb76 <= 0;      end            else if (!wl8f76d[1]) begin         if (gq82ba7 && {hqa702f}== {PAD} && {sw5eb3,tw2f599} == 2'b01) begin            thfcb76 <= wl8f76d + 1;         end         else if (gq82ba7 || wy15d38) begin            thfcb76 <= 0;         end      end             if (ip6a0ae | viee71a) begin         cme5bb7 <= 0;      end            else if (!fn7bb6d[1]) begin         if (gq82ba7 && {hqa702f}== {PAD} && tw2f599 == 1'b1) begin            cme5bb7 <= fn7bb6d + 1;         end         else if (gq82ba7 || wy15d38) begin            cme5bb7 <= 0;         end      end            if (ip6a0ae | viee71a) begin         jr2ddb8 <= 0;      end            else if (!thddb6e[1]) begin         if (gq82ba7 && {hb74e05}== {jpd24f0} && {sw5eb3,tw2f599} == 2'b00) begin            jr2ddb8 <= thddb6e + 1;         end         else if (gq82ba7 || wy15d38) begin            jr2ddb8 <= 0;         end      end            if (ip6a0ae | viee71a) begin         rt6edc6 <= 0;      end            else if (!kdedb76[3]) begin                  if (gq82ba7 && xy99521 && !tuca90b) begin            rt6edc6 <= kdedb76 + 1;         end         else if (gq82ba7 || wy15d38) begin            rt6edc6 <= 0;         end      end             if (ip6a0ae | viee71a) begin         fa76e37 <= 0;      end            else if (!ww6dbb4[3]) begin                  if (gq82ba7 && !xy99521 && tuca90b) begin            fa76e37 <= ww6dbb4 + 1;         end         else if (gq82ba7 || wy15d38) begin            fa76e37 <= 0;         end      end
            if (ip6a0ae | viee71a) begin         ngb71ba <= 0;      end            else if (!os6dda0[1]) begin         if (gq82ba7 && {hb74e05,hqa702f}== {jpd24f0,co92786} && {sw5eb3,tw2f599} == 2'b00) begin            ngb71ba <= os6dda0 + 1;         end         else if (gq82ba7 || wy15d38) begin            ngb71ba <= 0;         end      end
            if (ip6a0ae | viee71a) begin         dob8dd3 <= 0;      end            else if (!fn6ed00[3]) begin         if ((gq82ba7 || wy15d38) && {hb74e05,hqa702f}== {jpd24f0,co92786} && {sw5eb3,tw2f599} == 2'b00) begin            dob8dd3 <= fn6ed00 + 1;         end         else if (gq82ba7 || wy15d38) begin            dob8dd3 <= 0;         end      end             if (ip6a0ae | viee71a) begin         gbc6e9b <= 0;      end            else if (!ne76807[3]) begin                  if (gq82ba7 && !xy99521 && !tuca90b) begin            gbc6e9b <= ne76807 + 1;         end         else if (gq82ba7 || wy15d38) begin            gbc6e9b <= 0;         end      end             if (ip6a0ae | viee71a) begin         mr44dfc <= 0;      end            else if (!ri4d8f[2]) begin         if (gq82ba7 || wy15d38) begin            mr44dfc <= ri4d8f + 1;         end      end
            if (ip6a0ae | viee71a) begin         zz374dc <= 0;      end            else if (!anb403a[1]) begin         if (wy15d38) begin            zz374dc <= anb403a + 1;         end         else if (gq82ba7) begin            zz374dc <= 0;         end      end            if (ip6a0ae | viee71a) begin         xlba6e7 <= 0;      end            else if (!bna01d4[3]) begin         if (wy15d38 && {hb74e05,hqa702f}== {PAD,PAD} && {sw5eb3,tw2f599} == 2'b11) begin            xlba6e7 <= bna01d4 + 1;         end         else if (gq82ba7 || wy15d38) begin            xlba6e7 <= 0;         end      end
            if (ip6a0ae | viee71a) begin         kdd373f <= 0;      end            else if (!coea7[3]) begin         if (wy15d38 && {hb74e05,hqa702f}== {jpd24f0,co92786} && {sw5eb3,tw2f599} == 2'b00) begin            kdd373f <= coea7 + 1;         end         else if (gq82ba7 || wy15d38) begin            kdd373f <= 0;         end      end            if (ip6a0ae | viee71a) begin         nt9b9fc <= 0;      end            else if (!wl7539[1]) begin         if (gq82ba7 && fac0bd6[0] == 1'b1 && xy99521 && tuca90b) begin            nt9b9fc <= wl7539 + 1;         end         else if (gq82ba7 || wy15d38) begin            nt9b9fc <= 0;         end      end            if (ip6a0ae | viee71a) begin         shdcfe7 <= 0;      end            else if (!zm3a9cd[1]) begin         if (gq82ba7 && fac0bd6[1] == 1'b1) begin            shdcfe7 <= zm3a9cd + 1;         end         else if (gq82ba7 || wy15d38) begin            shdcfe7 <= 0;         end      end
             if (ip6a0ae | viee71a) begin         cze7f3c <= 0;      end            else if (!uid4e6a[1]) begin         if (gq82ba7 && fac0bd6[2] == 1'b1) begin            cze7f3c <= uid4e6a + 1;         end         else if (gq82ba7 || wy15d38) begin            cze7f3c <= 0;         end      end             if (ip6a0ae | viee71a) begin         ls3f9e5 <= 0;      end            else if (!nga7350[1]) begin         if (gq82ba7 && fac0bd6[2] == 1'b1 && {hb74e05,hqa702f} == {jpd24f0,co92786} &&            {sw5eb3,tw2f599} == 2'b00 && xl3817a == ho738d2 ) begin            ls3f9e5 <= nga7350 + 1;         end         else if (gq82ba7 || wy15d38) begin            ls3f9e5 <= 0;         end      end
             if (ip6a0ae | viee71a) begin         pffcf2a <= 0;      end            else if (!sj39a82[1]) begin         if (wy15d38 && fac0bd6[3] == 1'b1) begin            pffcf2a <= sj39a82 + 1;         end         else if (gq82ba7 || wy15d38) begin            pffcf2a <= 0;         end      end   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vx9e0f1    <= 1'b0;      ykf078e    <= 1'b0;      dzc85e9           <= 1'b0;      dm42f4e           <= 1'b0;      ymb3882         <= 1'b0;      qt75f04        <= 1'b0;      yzbb59b          <= 1'b0;      zx4aef0         <= 0;   end   else begin
      if (gq82ba7 && {hb74e05,hqa702f}== {jpd24f0,co92786} && {sw5eb3,tw2f599}== 2'b00)         vx9e0f1 <= 1'b1;      else         vx9e0f1 <= 1'b0;      if (wy15d38 && {hb74e05,hqa702f}== {jpd24f0,co92786} && {sw5eb3,tw2f599}== 2'b00)         ykf078e <= 1'b1;      else         ykf078e <= 1'b0;      dzc85e9           <= gq82ba7;      dm42f4e           <= wy15d38;      if (fnd7c7b)      ymb3882         <= (xjcd415 >= 4'd3) ? 1'b1 : 1'b0;      else      ymb3882         <= (xjcd415 >= 4'd4) ? 1'b1 : 1'b0;
      qt75f04        <= zxcd026;      yzbb59b          <= ww68136;      zx4aef0         <= xl3817a;   end
end





`ifdef GEN2
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         vidaf8f <= 1'b0;      else if (ww68136)         vidaf8f <= 1'b1;      else if (wy1a49e)         vidaf8f  <= 1'b0;   end   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         ngbd395 <= 1'b0;      else         ngbd395 <= ((~lf19a04 & mt23340 & ~zxcd026) |                             (wy1a49e && ~vidaf8f)) ? 1'b1 : 1'b0;   end

`else
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         ngbd395 <= 1'b0;      end      else begin         ngbd395 <= (~lf19a04 & mt23340 & ~zxcd026) ? 1'b1 : 1'b0;      end   end

`endif





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      eafa66e         <= 1'b0;      ofd3371   <= 1'b0;      ri99b8c   <= 1'b0;      vvcdc62    <= 1'b0;      xj6e317  <= 1'b0;      zx718be   <= 1'b0;      vk8c5f7    <= 1'b0;      qg62fba      <= 1'b0;      cmd1b2f <= 1'b0;      ym8d978  <= 1'b0;      tu6cbc1  <= 1'b0;      shf746c  <= 1'b0;      tjba365  <= 1'b0;      ux17dd1          <= 1'b0;      sjbee8d   <= 1'b0;      sh65e0a   <= 1'b0;      fc2f054   <= 1'b0;      osc1510        <= 1'b0;      ym1002a      <= 1'b0;      yz80151     <= 1'b0;      ksa8c     <= 1'b0;      gq5461      <= 1'b0;      xy2a308      <= 1'b0;      yx51842     <= 1'b0;   end   else if (viee71a) begin      eafa66e         <= 1'b0;      ofd3371   <= 1'b0;      ri99b8c   <= 1'b0;      vvcdc62    <= 1'b0;      xj6e317  <= 1'b0;      zx718be   <= 1'b0;      vk8c5f7    <= 1'b0;      qg62fba      <= 1'b0;      cmd1b2f <= 1'b0;      ym8d978  <= 1'b0;      tu6cbc1  <= 1'b0;      shf746c  <= 1'b0;      tjba365  <= 1'b0;      ux17dd1          <= 1'b0;      sjbee8d   <= 1'b0;      sh65e0a   <= 1'b0;      fc2f054   <= 1'b0;      osc1510        <= 1'b0;      ym1002a      <= 1'b0;      yz80151     <= 1'b0;      ksa8c     <= 1'b0;      gq5461      <= 1'b0;      xy2a308      <= 1'b0;      yx51842     <= 1'b0;   end   else begin      eafa66e         <= ri4d8f[2];                           ofd3371   <= mt26c7b[1];                     shf746c  <= oh363dd[3];                    ri99b8c   <= mtb1eed[1];                     vvcdc62    <= thddb6e[1];                      xj6e317  <= (|kdedb76[3:1]);               zx718be   <= os6dda0[1];                     tjba365  <= fn6ed00[3];                    vk8c5f7    <= wl8f76d[1];                      qg62fba      <= fn7bb6d[1];                        cmd1b2f <= ne76807[3];                   ym8d978  <= ww6dbb4[3];                    tu6cbc1  <= kdedb76[3];                    ux17dd1          <= anb403a[1];                            sjbee8d   <= (|coea7[3:1]);                sh65e0a   <= bna01d4[3];                     fc2f054   <= coea7[3];                     if (fnd7c7b)      osc1510        <= xjcd415 >= 'd3;                      else      osc1510        <= xjcd415[3];                          ym1002a      <= nga7350[1];                       yz80151     <= wl7539[1];                       ksa8c     <= sj39a82[1];                       gq5461      <= (uid4e6a[1] || gd18aba);        xy2a308      <= (zm3a9cd[1] || rtec62a);        yx51842     <= (wl7539[1]|| xwf4f7c);    end
end
assign  fp16539         = zm93c30;
assign  xyb29ce   = hd9e183;
assign  ec8d556   = qgf0c1e;
assign  hqa7396    = ba860f1;
assign  wl39cb2  = ng3078b;
assign  lfaac2f   = zm83c5a;
assign  db94e72    = tw1e2d2;
assign  pu93f0c      = jcf1692;
assign  ep9f863 = qi92fb0;
assign  zxfc31d  = ks97d81;
assign  vie18ee  = qvbec09;
assign  fpc772  = rtd24be;
assign  tu63b96  = ou925f6;
assign  ls96548          = vx8b492;
assign  ayce595   = xj5a497;
assign  cm72ce2   = dzf604c;
assign  ic72ca9   = dbb0267;
assign  gqa9095        = zz8133e;
assign  swa9eea      = vx99f6;
assign  ir868d     = ui4cfb7;
assign  wl95212     = me67db9;
assign  twb2a42      = mg3edc9;
assign  os62ca7      = xjf6e48;
assign  me495de     = bab7246;





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ls2af69     <= 1'b0;      cmfaa9e      <= 1'b0;   end   else begin                  if (do9c692 == 1'b0) begin         ls2af69 <= 1'b0;      end      else if (epae9c0) begin         ls2af69 <= 1'b1;      end                  if (rte3493 == 1'b1) begin         cmfaa9e <= 1'b0 ;      end      else if (by5dce3) begin         cmfaa9e <= jp50574;      end   end
end

always@* begin fnd7c7b<=ux17adf[0];ou920a1<=ux17adf[1];aa82845<=ux17adf[2];zx6bb34<={asb_data>>1,ux17adf[3]};vvecd3a<={asb_kcntl>>1,ux17adf[4]};xwf4f7c<=ux17adf[5];rtec62a<=ux17adf[6];gd18aba<=ux17adf[7];by5dce3<=ux17adf[8];viee71a<=ux17adf[9];ho738d2<={jr285eb>>1,ux17adf[10]};do9c692<=ux17adf[11];rte3493<=ux17adf[12];wy1a49e<=ux17adf[13];jpd24f0<={faebeaa>>1,ux17adf[14]};co92786<={pf5f553>>1,ux17adf[15]};zm93c30<=ux17adf[16];hd9e183<=ux17adf[17];qgf0c1e<=ux17adf[18];ba860f1<=ux17adf[19];ng3078b<=ux17adf[20];zm83c5a<=ux17adf[21];tw1e2d2<=ux17adf[22];jcf1692<=ux17adf[23];vx8b492<=ux17adf[24];xj5a497<=ux17adf[25];rtd24be<=ux17adf[26];ou925f6<=ux17adf[27];qi92fb0<=ux17adf[28];ks97d81<=ux17adf[29];qvbec09<=ux17adf[30];dzf604c<=ux17adf[31];dbb0267<=ux17adf[32];zz8133e<=ux17adf[33];vx99f6<=ux17adf[34];ui4cfb7<=ux17adf[35];me67db9<=ux17adf[36];mg3edc9<=ux17adf[37];xjf6e48<=ux17adf[38];bab7246<=ux17adf[39];ksb9233<={lqfef62>>1,ux17adf[40]};gbc9198<={ux8517>>1,ux17adf[41]};by48cc4<={jc428bc>>1,ux17adf[42]};qg46623<={vk145e2>>1,ux17adf[43]};ep33119<={zma2f13>>1,ux17adf[44]};ie988cd<={oh1789b>>1,ux17adf[45]};ykc4668<=ux17adf[46];mt23340<=ux17adf[47];lf19a04<=ux17adf[48];zxcd026<=ux17adf[49];ww68136<=ux17adf[50];vv409b1<=ux17adf[51];ri4d8f<={mr44dfc>>1,ux17adf[52]};mt26c7b<={yz26fe5>>1,ux17adf[53]};oh363dd<={hd37f2d>>1,ux17adf[54]};mtb1eed<={fpbf96e>>1,ux17adf[55]};wl8f76d<={thfcb76>>1,ux17adf[56]};fn7bb6d<={cme5bb7>>1,ux17adf[57]};thddb6e<={jr2ddb8>>1,ux17adf[58]};kdedb76<={rt6edc6>>1,ux17adf[59]};ww6dbb4<={fa76e37>>1,ux17adf[60]};os6dda0<={ngb71ba>>1,ux17adf[61]};fn6ed00<={dob8dd3>>1,ux17adf[62]};ne76807<={gbc6e9b>>1,ux17adf[63]};anb403a<={zz374dc>>1,ux17adf[64]};bna01d4<={xlba6e7>>1,ux17adf[65]};coea7<={kdd373f>>1,ux17adf[66]};wl7539<={nt9b9fc>>1,ux17adf[67]};zm3a9cd<={shdcfe7>>1,ux17adf[68]};uid4e6a<={cze7f3c>>1,ux17adf[69]};nga7350<={ls3f9e5>>1,ux17adf[70]};sj39a82<={pffcf2a>>1,ux17adf[71]};xjcd415<={yxe7957>>1,ux17adf[72]};ip6a0ae<=ux17adf[73];jp50574<=ux17adf[74];gq82ba7<=ux17adf[75];wy15d38<=ux17adf[76];epae9c0<=ux17adf[77];hb74e05<={rg696dd>>1,ux17adf[78]};hqa702f<={gb4b6eb>>1,ux17adf[79]};xl3817a<={gb5b75d>>1,ux17adf[80]};fac0bd6<={icdbaec>>1,ux17adf[81]};sw5eb3<=ux17adf[82];tw2f599<=ux17adf[83];sh7acca<=ux17adf[84];shd6654<=ux17adf[85];wyb32a4<=ux17adf[86];xy99521<=ux17adf[87];tuca90b<=ux17adf[88];end
always@* begin db22f5b[2047]<=asb_eidle_rx;db22f5b[2046]<=asb_lane_sync;db22f5b[2044]<=asb_data[0];db22f5b[2040]<=asb_kcntl[0];db22f5b[2032]<=hl_gto_hrst;db22f5b[2016]<=hl_gto_dis;db22f5b[1984]<=hl_gto_lbk;db22f5b[1980]<=tu6cbc1;db22f5b[1950]<=ux17dd1;db22f5b[1930]<=yz80151;db22f5b[1921]<=cz44a17;db22f5b[1912]<=sh65e0a;db22f5b[1853]<=sjbee8d;db22f5b[1818]<=mred2db;db22f5b[1813]<=ksa8c;db22f5b[1806]<=mr44dfc[0];db22f5b[1802]<=rt6edc6[0];db22f5b[1795]<=vk250bd;db22f5b[1777]<=fc2f054;db22f5b[1685]<=faebb0f;db22f5b[1659]<=shf746c;db22f5b[1648]<=fp13744;db22f5b[1630]<=ri99b8c;db22f5b[1588]<=rg696dd[0];db22f5b[1578]<=gq5461;db22f5b[1564]<=yz26fe5[0];db22f5b[1556]<=fa76e37[0];db22f5b[1542]<=jr285eb[0];db22f5b[1511]<=vk8c5f7;db22f5b[1506]<=osc1510;db22f5b[1436]<=ukbc4dd;db22f5b[1383]<=zma2f13[0];db22f5b[1369]<=jc428bc[0];db22f5b[1323]<=ne5d87b;db22f5b[1280]<=kdd373f[0];db22f5b[1271]<=tjba365;db22f5b[1249]<=zz9ba26;db22f5b[1212]<=vvcdc62;db22f5b[1197]<=rt61ed7;db22f5b[1129]<=gb4b6eb[0];db22f5b[1109]<=xy2a308;db22f5b[1080]<=hd37f2d[0];db22f5b[1064]<=ngb71ba[0];db22f5b[1036]<=tu42f5f;db22f5b[1027]<=shdcfe7[0];db22f5b[1023]<=reduce_idlecnt;db22f5b[990]<=ym8d978;db22f5b[975]<=qg62fba;db22f5b[965]<=ym1002a;db22f5b[909]<=hqbda5b;db22f5b[903]<=cze89bf;db22f5b[901]<=jr2ddb8[0];db22f5b[842]<=fndd761;db22f5b[824]<=ipe26e8;db22f5b[815]<=ofd3371;db22f5b[755]<=zx718be;db22f5b[718]<=oh1789b[0];db22f5b[694]<=fn7b5f1;db22f5b[691]<=vk145e2[0];db22f5b[684]<=ux8517[0];db22f5b[640]<=xlba6e7[0];db22f5b[598]<=pfec3da;db22f5b[513]<=nt9b9fc[0];db22f5b[495]<=cmd1b2f;db22f5b[454]<=jc57b4b;db22f5b[451]<=lddd137;db22f5b[450]<=cme5bb7[0];db22f5b[421]<=icdbaec[0];db22f5b[407]<=eafa66e;db22f5b[377]<=xj6e317;db22f5b[347]<=wyf6be;db22f5b[342]<=lqfef62[0];db22f5b[320]<=zz374dc[0];db22f5b[227]<=ls2af69;db22f5b[225]<=thfcb76[0];db22f5b[210]<=gb5b75d[0];db22f5b[203]<=pf5f553[0];db22f5b[171]<=yx51842;db22f5b[160]<=gbc6e9b[0];db22f5b[113]<=gd3cabd;db22f5b[112]<=fpbf96e[0];db22f5b[101]<=faebeaa[0];db22f5b[80]<=dob8dd3[0];db22f5b[56]<=yxe7957[0];db22f5b[50]<=xybd7d5;db22f5b[28]<=pffcf2a[0];db22f5b[25]<=yz17afa;db22f5b[14]<=ls3f9e5[0];db22f5b[7]<=cze7f3c[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule



















































































`timescale 1 ns / 100 ps
module pcie_x1_uvc6b24 
   (
    
    sys_clk,            
    rst_n,              
    
    
    LINK_NUM,           
    TX_EIDL_CNT,        

    
    gq24630,     
    vk250bd,     
    jr285eb,      
    kdc6064,  
    hq30325,  
    fp8192a,       
    vxc957,   
    xj64abf,          
    tw255fe,     
    ri2aff3,     
    fa57f9b,  
    dbbfcdb,     
    byfe6de,      
    rtf36f3,      
    ltssm_l0,           

    
    dzc85e9,             
    dm42f4e,             
    ymb3882,           
    tud54f0,           
    
    
    swf6e,       

    ls862e8,

    
    ho76527,       
    xy83b76,         
    mrdc583,           
    zz160ed,          
    uvedd94,            
    ead10a6,        
    ukbc740,        
    tu42988,     
    xy14c42,       
    rg4254a,    
    vi484a9,        
    mg88480,        
    faebeaa,           
    pf5f553            
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif

`ifdef SIMULATE
parameter eca301f   = 10'd6 ;

`else
parameter eca301f   = 10'd1023 ;

`endif
localparam byc07c5 = 2 ;
localparam lf3e2a = 3'd0 ;
localparam ks1f156  = 3'd1 ;
localparam qtf8ab0  = 3'd2 ;
localparam fac5585= 3'd3 ;
localparam pu2ac2a  = 3'd4 ;
localparam os56153 = 1 ;
localparam tjb0a98 = 2'd0 ;
localparam an854c7  = 2'd1 ;
localparam ba2a63c  = 2'd2 ;
localparam cm531e2 = 0 ;
localparam ym98f10 = 1'd0 ;
localparam zxc7880  = 1'd1 ;
localparam ux3c406 = 1 ;
localparam ipe2034 = 2'd0 ;
localparam co101a4  = 2'd1 ;
localparam ep80d21  = 2'd2 ;
localparam nt690d = 1 ;
localparam aa3486e = 2'd0 ;
localparam epa4371  = 2'd1 ;
localparam aa21b8d  = 2'd2 ;
localparam sjdc68      = 8'hFC ;
localparam zx6e345        = sjdc68 ;
localparam sw8d177   = {zx6e345,zx6e345} ;
localparam ou2ee07  = 2'b11;

`ifdef LTSSM_MACO

`else
localparam go77039 = 16 ;
localparam zmb81c9 = 4 ;
localparam vic0e4a = LANE_WIDTH ;

`endif
input                       sys_clk;
input                       rst_n;
input   [7:0]               LINK_NUM;
input   [3:0]               TX_EIDL_CNT ;
input   [LANE_WIDTH-1:0]    gq24630;
input                       vk250bd;
input   [7:0]               jr285eb;
input                       kdc6064;
input                       hq30325;
input   [LANE_WIDTH-1:0]    fp8192a;
input   [OS_WIDTH-1:0]      vxc957;
input                       xj64abf;
input   [3:0]               tw255fe;
input   [3:0]               ri2aff3;
input                       fa57f9b;
input                       dbbfcdb;
input                       byfe6de;
input   [3:0]               rtf36f3;
input                       ltssm_l0;
input                       dzc85e9;
input                       dm42f4e;
input                       ymb3882;
input   [31:0]              tud54f0;
input                       swf6e;
input                       ls862e8;
output [LANE_WIDTH-1:0]     ho76527;
output [2*LANE_WIDTH-1:0]   xy83b76;
output [16*LANE_WIDTH-1:0]  mrdc583;
output [2*LANE_WIDTH-1:0]   zz160ed;
output [LANE_WIDTH-1:0]     uvedd94;
output                      ead10a6;
output                      ukbc740;
output                      tu42988;
output                      xy14c42;
output                      vi484a9;
output                      mg88480;
output                      rg4254a;
output [8*LANE_WIDTH-1:0]   faebeaa;
output [8*LANE_WIDTH-1:0]   pf5f553;
wire [7:0]                 lf28ce7;
wire [7:0]                 ea4673e;
wire [7:0]                 mt339f1;
wire [7:0]                 ri9cf8c;
wire [7:0]                 uve7c62;
wire [16*LANE_WIDTH-1:0]  rgf18a9;
wire [2*LANE_WIDTH-1:0]   yk62a5a;
wire [16*LANE_WIDTH-1:0]  swa9689;
wire [2*LANE_WIDTH-1:0]   th5a24d;
wire [2*LANE_WIDTH-1:0]   zm89371;
wire [16*LANE_WIDTH-1:0]  dm4dc51;
wire [2*LANE_WIDTH-1:0]   rt7145e;
reg [7:0]                  gd8a2f6;
reg [7:0]                  gb517b5;
reg [7:0]                  lf8bdad;
reg [7:0]                  qt5ed6e;
reg                        rtf6b75;
reg                        hdb5bae;
reg                        hqadd77;
reg                        bl6ebba;
reg [7:0]                  ip75dd7;
reg [7:0]                  qvaeebd;
reg [7:0]                  ww775ed;
reg [7:0]                  zzbaf69;
reg                        xjd7b4e;
reg                        pubda77;
reg                        yxed3bb;
reg                        jc69ddd;
reg [byc07c5:0]         cm77754;
reg [63:0]                 uxbbaa1;
reg [7:0]                  jpdd50c;
reg                        kqea867;
reg [2:0]                  cz54339;
reg                        epa19cd;
reg                        zzce6c;
reg                        ay67367;
reg                        sj39b38;
reg                        xjcd9c5;
reg                        lq6ce2f;
reg                        ea6717a;
reg                        zz38bd0;
reg [os56153:0]         xy2f43b;
reg [15:0]                 yx7a1da;
reg [1:0]                  rgd0ed5;
reg [cm531e2:0]         mg3b551;
reg [15:0]                 zkdaa89;
reg [1:0]                  jcd544b;
reg [ux3c406:0]         qt512de;
reg [15:0]                 ls896f5;
reg [1:0]                  qt4b7aa;
reg                        ip5bd55;
reg [nt690d:0]         gof5569;
reg [nt690d:0]         dz55a47;
reg [nt690d:0]         dm691f3;
reg [nt690d:0]         lq47cdb;
reg [15:0]                 ks3e6da;
reg [15:0]                 ldf36d1;
reg [15:0]                 ph9b68f;
reg [15:0]                 cmdb47e;
reg [1:0]                  dmda3f0;
reg [1:0]                  kqd1f82;
reg [1:0]                  mt8fc10;
reg [1:0]                  zx7e084;
reg [1:0]                  ykf0427;
reg [1:0]                  ie82138;
reg [1:0]                  qi109c1;
reg [1:0]                  jr84e08;
reg [4:0]                  bn27047;
reg [16*LANE_WIDTH-1:0]    mrdc583;
reg [2*LANE_WIDTH-1:0]     zz160ed;
reg [2*LANE_WIDTH-1:0]     xy83b76;
reg [LANE_WIDTH-1:0]       uvedd94;
reg                        ri2a1fc;
reg                        dz50fe2;
reg                        gq87f16;
reg                        xy3f8b0;
reg                        hbfc582;
reg                        vk963e5;
reg                        jr160b5;
reg                        fpb05ae;
reg                        mg82d76;
reg [9:0]                  vx16bb0;
reg [4:0]                  bnb5d87;
reg [4:0]                  mtaec3f;
reg [4:0]                  rg761fd;
reg [4:0]                  lfb0feb;
reg                        mg87f5f;
reg                        tw3faf8;
reg                        alfd7c2;
reg                        dmebe14;
reg                        zx5f0a3;
reg                        gbf851e;
reg                        blc28f4;
reg [LANE_WIDTH -1:0]      gqa3d33;
reg [7:0]                  ri1e999 ;
reg [7:0]                  xwf4ccb ;
reg [7:0]                  eca665b ;
reg [7:0]                  yz332d8 ;

`ifdef LTSSM_MACO
reg [1:0]                  ng996c5 ;
reg [1:0]                  qgcb62b ;

`else
reg [zmb81c9 -1:0]      ng996c5 ;
reg [zmb81c9 -1:0]      qgcb62b ;

`endif
reg                        neeba4e ;
wire [LANE_WIDTH -1:0]     ho76527 ;
parameter hd3202a = 2'd0;
parameter ir90157 = 2'd1;
parameter an80abd = 2'd2;
parameter ec55ed = 2'd3;

`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes

`else

`endif

`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LTSSM_MACO

`else

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`endif
reg [7 : 0] hq2af68;
reg [3 : 0] dm57b43;
reg [LANE_WIDTH - 1 : 0] shed0db;
reg viee71a;
reg [7 : 0] ho738d2;
reg do1b749;
reg kqdba4a;
reg [LANE_WIDTH - 1 : 0] fne928f;
reg [OS_WIDTH - 1 : 0] zx4a3f8;
reg cz51fc7;
reg [3 : 0] an8fe3c;
reg [3 : 0] gb7f1e4;
reg enf8f25;
reg pfc792d;
reg sj3c96e;
reg [3 : 0] vie4b75;
reg ie97825;
reg czd61cb;
reg ks872e7;
reg yx754b7;
reg [31 : 0] lfaa5bc;
reg fa52de6;
reg coabc5;
reg [7 : 0] vkb799b;
reg [7 : 0] ksbccda;
reg [7 : 0] lde66d1;
reg [7 : 0] cb3368e;
reg [7 : 0] vx9b475;
reg [16 * LANE_WIDTH - 1 : 0] ead1d72;
reg [2 * LANE_WIDTH - 1 : 0] mr75c86;
reg [16 * LANE_WIDTH - 1 : 0] os721ac;
reg [2 * LANE_WIDTH - 1 : 0] ba86b0c;
reg [2 * LANE_WIDTH - 1 : 0] wyac313;
reg [16 * LANE_WIDTH - 1 : 0] fpc4ce;
reg [2 * LANE_WIDTH - 1 : 0] hd133b0;
reg [7 : 0] ng99d86;
reg [7 : 0] mecec32;
reg [7 : 0] xw76190;
reg [7 : 0] hdb0c83;
reg hq8641f;
reg lf320fb;
reg oh907df;
reg vk83efd;
reg [7 : 0] mg1f7ea;
reg [7 : 0] fafbf50;
reg [7 : 0] rgdfa82;
reg [7 : 0] yxfd413;
reg meea09c;
reg pf504e0;
reg co82707;
reg xl13839;
reg [byc07c5 : 0] goe0e7b;
reg [63 : 0] oh73d8;
reg [7 : 0] oh39ec5;
reg pscf62d;
reg [2 : 0] bl7b16b;
reg rtd8b5f;
reg tuc5afe;
reg db2d7f3;
reg zx6bf9f;
reg th5fcff;
reg nefe7ff;
reg jpf3ffb;
reg ux9ffde;
reg [os56153 : 0] goff7a8;
reg [15 : 0] dmfbd41;
reg [1 : 0] aydea0a;
reg [cm531e2 : 0] xya8288;
reg [15 : 0] cz41443;
reg [1 : 0] qia21c;
reg [ux3c406 : 0] ym8870d;
reg [15 : 0] os43868;
reg [1 : 0] lf1c340;
reg bye1a07;
reg [nt690d : 0] ea681d4;
reg [nt690d : 0] kf750f;
reg [nt690d : 0] god43ea;
reg [nt690d : 0] swfa8c;
reg [15 : 0] su7d460;
reg [15 : 0] qgea300;
reg [15 : 0] uv51800;
reg [15 : 0] ng8c004;
reg [1 : 0] gb60022;
reg [1 : 0] qi115;
reg [1 : 0] ym8a8;
reg [1 : 0] pu4541;
reg [1 : 0] tj22a0a;
reg [1 : 0] qi15057;
reg [1 : 0] lsa82b9;
reg [1 : 0] kd415cb;
reg [4 : 0] coae5c;
reg vi572e0;
reg ukb9702;
reg gocb810;
reg ay5c080;
reg qge0401;
reg jp5a96d;
reg ie1004d;
reg an80269;
reg ba134c;
reg [9 : 0] lf9a62;
reg [4 : 0] tu4d317;
reg [4 : 0] by698ba;
reg [4 : 0] cm4c5d2;
reg [4 : 0] ui62e90;
reg an17481;
reg lfba40c;
reg thd2067;
reg gd9033e;
reg lf819f5;
reg rvcfaf;
reg os67d7f;
reg [LANE_WIDTH - 1 : 0] suf5fc8;
reg [7 : 0] tjafe41;
reg [7 : 0] wj7f20f;
reg [7 : 0] dzf907d;
reg [7 : 0] dzc83ee;
reg pfd7df0;
reg [2047:0] db22f5b;
wire [117:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef SIMULATE

`else

`endif

`ifdef LTSSM_MACO

`else

`endif

`ifdef LTSSM_MACO

`else

`endif

`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes

`else

`endif

`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LTSSM_MACO


`else


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`endif

localparam ribd6fd = 118,jceb7ea = 32'hfdffe44b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef SIMULATE


`else


`endif


`ifdef LTSSM_MACO


`else


`endif


`ifdef LTSSM_MACO


`else


`endif


`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes


`else


`endif


`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LTSSM_MACO


`else


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif





`ifdef SIMULATE



`else



`endif




`ifdef LTSSM_MACO



`else



`endif













`ifdef LTSSM_MACO



`else



`endif





always @(gb7f1e4) begin   case (gb7f1e4[3:0])      4'b1000 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {8'd0,PAD,PAD,PAD} ;      4'b0100 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {PAD,8'd0,PAD,PAD} ;      4'b0010 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {PAD,PAD,8'd0,PAD} ;      4'b0001 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {PAD,PAD,PAD,8'd0} ;      4'b1100 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {8'd0,8'd1,PAD,PAD} ;      4'b0110 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {PAD,8'd0,8'd1,PAD} ;      4'b0011 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {PAD,PAD,8'd0,8'd1} ;      4'b1001 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {8'd0,PAD,PAD,8'd1} ;      4'b1111 : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {8'd0,8'd1,8'd2,8'd3} ;      default : {ri1e999, xwf4ccb, eca665b, yz332d8 } = {8'd0,PAD,PAD,PAD} ;   endcase
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ip75dd7       <= PAD;      qvaeebd       <= PAD;      ww775ed       <= PAD;      zzbaf69       <= PAD;      xjd7b4e <= 1'b1;      pubda77 <= 1'b1;      yxed3bb <= 1'b1;      jc69ddd <= 1'b1;   end   else if (db2d7f3) begin      ip75dd7       <= PAD;      qvaeebd       <= PAD;      ww775ed       <= PAD;      zzbaf69       <= PAD;      xjd7b4e <= 1'b1;      pubda77 <= 1'b1;      yxed3bb <= 1'b1;      jc69ddd <= 1'b1;   end   else if (cz51fc7) begin      ip75dd7       <= gb7f1e4[3] ? tjafe41 : PAD;      qvaeebd       <= gb7f1e4[2] ? wj7f20f : PAD;      ww775ed       <= gb7f1e4[1] ? dzf907d : PAD;      zzbaf69       <= gb7f1e4[0] ? dzc83ee : PAD;      xjd7b4e <= gb7f1e4[3] ? 1'b0 : 1'b1;      pubda77 <= gb7f1e4[2] ? 1'b0 : 1'b1;      yxed3bb <= gb7f1e4[1] ? 1'b0 : 1'b1;      jc69ddd <= gb7f1e4[0] ? 1'b0 : 1'b1;   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      gd8a2f6      <= PAD;      gb517b5      <= PAD;      lf8bdad      <= PAD;      qt5ed6e      <= PAD;      rtf6b75 <= 1'b1;      hdb5bae <= 1'b1;      hqadd77 <= 1'b1;      bl6ebba <= 1'b1;   end   else if (db2d7f3) begin      gd8a2f6      <= PAD;      gb517b5      <= PAD;      lf8bdad      <= PAD;      qt5ed6e      <= PAD;      rtf6b75 <= 1'b1;      hdb5bae <= 1'b1;      hqadd77 <= 1'b1;      bl6ebba <= 1'b1;   end   else if (cz51fc7) begin      if (coabc5) begin      gd8a2f6 <= (an8fe3c[3]) ? hq2af68 : PAD;      gb517b5 <= (an8fe3c[2]) ? hq2af68 : PAD;      lf8bdad <= (an8fe3c[1]) ? hq2af68 : PAD;      qt5ed6e <= (an8fe3c[0]) ? hq2af68 : PAD;      end   else begin      gd8a2f6 <= (an8fe3c[3]) ? lfaa5bc[31:24] : PAD;      gb517b5 <= (an8fe3c[2]) ? lfaa5bc[23:16] : PAD;      lf8bdad <= (an8fe3c[1]) ? lfaa5bc[15:8] : PAD;      qt5ed6e <= (an8fe3c[0]) ? lfaa5bc[7:0] : PAD;   end         rtf6b75 <= (an8fe3c[3]) ? 1'b0 : 1'b1;      hdb5bae <= (an8fe3c[2]) ? 1'b0 : 1'b1;      hqadd77 <= (an8fe3c[1]) ? 1'b0 : 1'b1;      bl6ebba <= (an8fe3c[0]) ? 1'b0 : 1'b1;   end
end




assign lf28ce7 = {4'b0000, enf8f25, vie4b75[3], sj3c96e, pfc792d};
assign ea4673e = {4'b0000, enf8f25, vie4b75[2], sj3c96e, pfc792d};
assign mt339f1 = {4'b0000, enf8f25, vie4b75[1], sj3c96e, pfc792d};
assign ri9cf8c = {4'b0000, enf8f25, vie4b75[0], sj3c96e, pfc792d};

assign uve7c62 = ho738d2;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cm77754   <= lf3e2a;      uxbbaa1    <= 64'd0;      jpdd50c   <= 8'd0;      kqea867     <= 1'b0;      alfd7c2 <= 1'b0;      cz54339   <= 3'd0;   end   else begin      kqea867     <= 1'b0;      alfd7c2 <= 1'b0;      case(goe0e7b)         lf3e2a: begin            if (rtd8b5f) begin               cm77754  <= ks1f156;            end            else begin               cm77754  <= lf3e2a;            end            uxbbaa1   <= {K28_5,ng99d86, K28_5,mecec32, K28_5,xw76190, K28_5,hdb0c83};            jpdd50c  <= {1'b1,hq8641f, 1'b1,lf320fb, 1'b1,oh907df, 1'b1,vk83efd};            cz54339  <= 3'd0;         end         ks1f156: begin            cm77754  <= qtf8ab0;            uxbbaa1   <= {mg1f7ea,vx9b475, fafbf50,vx9b475, rgdfa82,vx9b475, yxfd413,vx9b475};            jpdd50c  <= {meea09c,1'b0, pf504e0,1'b0, co82707,1'b0, xl13839,1'b0};         end         qtf8ab0: begin            cm77754  <= fac5585;            uxbbaa1   <= {8'h02,vkb799b, 8'h02,ksbccda, 8'h02,lde66d1, 8'h02,cb3368e};            jpdd50c  <= {2'b00, 2'b00, 2'b00, 2'b00};         end         fac5585: begin            kqea867    <= (bl7b16b >= 4) ? 1'b1 : 1'b0;            uxbbaa1   <= (tuc5afe) ? {D10_2,D10_2,D10_2,D10_2,D10_2,D10_2,D10_2,D10_2} :                                    {D5_2,D5_2,D5_2,D5_2,D5_2,D5_2,D5_2,D5_2};            jpdd50c  <= {2'b00, 2'b00, 2'b00, 2'b00};            cz54339  <= bl7b16b + 1;            if (bl7b16b >= 4) begin               cm77754  <= (lfba40c) ? pu2ac2a : lf3e2a;               alfd7c2<= (lfba40c) ? 1'b1 : 1'b0;            end            else begin               cm77754  <= fac5585;            end         end         pu2ac2a: begin            cm77754  <= (an17481) ? lf3e2a : pu2ac2a;         end         default: begin            cm77754  <= lf3e2a;            cz54339  <= 3'd0;         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      xy2f43b   <= tjb0a98;      yx7a1da    <= 16'd0;      rgd0ed5   <= 2'd0;      dmebe14 <= 1'b0;   end   else begin      dmebe14 <= 1'b0;      case(goff7a8)         tjb0a98: begin            if (zx4a3f8 == OS_EIDLE) begin               xy2f43b <= an854c7;            end            else begin               xy2f43b <= tjb0a98;            end            yx7a1da  <= {K28_5, IDL};            rgd0ed5 <= {1'b1  , 1'b1};         end         an854c7: begin            xy2f43b   <= (lfba40c) ? ba2a63c : tjb0a98;            dmebe14 <= (lfba40c) ? 1'b1: 1'b0;            yx7a1da    <= {IDL, IDL};            rgd0ed5   <= {1'b1  , 1'b1};         end         ba2a63c: begin            xy2f43b   <= (an17481 == 1'b1) ? tjb0a98 : ba2a63c;         end         default: begin            xy2f43b <= tjb0a98;         end      endcase   end
end





assign ukbc740 = (nefe7ff) ? bye1a07 : an17481;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tw3faf8    <= 1'b0;   end   else if (ukbc740) begin      tw3faf8    <= 1'b0;   end   else if (fa52de6 && (|fne928f == 1'b1) &&                            (zx4a3f8 != OS_COMPLI) && (ie97825 == 1'b0)) begin      tw3faf8    <= 1'b1;   end
end




assign ead10a6 = an17481;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      mg3b551     <= ym98f10;      zkdaa89      <= 16'd0;      jcd544b     <= 2'd0;      mg87f5f       <= 1'b0;      blc28f4   <= 1'b0;      gbf851e  <= 1'b0;   end   else begin                  blc28f4  <= zx6bf9f;      gbf851e <= zx6bf9f & !os67d7f;      case(xya8288)         ym98f10: begin                        if ((thd2067) || (gd9033e) || (lf819f5) || rvcfaf) begin               mg3b551 <= zxc7880;               zkdaa89  <= {K28_5, SKP};               jcd544b <= {1'b1  , 1'b1};               mg87f5f   <= 1'b1;            end            else begin               mg3b551 <= ym98f10;               mg87f5f   <= 1'b0;            end         end         zxc7880: begin            mg3b551 <= ym98f10;            zkdaa89  <= {SKP, SKP};            jcd544b <= {1'b1  , 1'b1};            mg87f5f   <= 1'b1;         end         default: begin            mg3b551 <= ym98f10;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qt512de   <= ipe2034;      ls896f5    <= 16'd0;      qt4b7aa   <= 2'd0;      zx5f0a3 <= 1'b0;      ip5bd55 <= 1'b0;   end   else begin      zx5f0a3 <= 1'b0;      ip5bd55 <= 1'b0;      case(ym8870d)         ipe2034: begin            if (nefe7ff) begin               qt512de <= co101a4;            end            else begin               qt512de <= ipe2034;            end            ls896f5  <= {K28_5, FTS};            qt4b7aa <= {1'b1  , 1'b1};         end         co101a4: begin                        if (do1b749 == 1'b1) begin               qt512de   <= ipe2034;               zx5f0a3 <= 1'b0;            end                        else if (kqdba4a) begin               qt512de   <= co101a4;               zx5f0a3 <= 1'b1;            end                        else if (lfba40c) begin               qt512de   <= ep80d21;               zx5f0a3 <= 1'b1;            end            else begin              qt512de   <= ipe2034;              zx5f0a3 <= 1'b0;            end            ls896f5    <= {FTS, FTS};            qt4b7aa   <= {1'b1  , 1'b1};         end         ep80d21: begin            qt512de   <= (an17481 == 1'b1) ? ipe2034 : ep80d21;            ip5bd55 <= 1'b1;         end         default: begin            qt512de <= ipe2034;         end      endcase   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      gof5569     <= aa3486e;      dz55a47     <= aa3486e;      dm691f3     <= aa3486e;      lq47cdb     <= aa3486e;      ks3e6da      <= 15'd0;      ldf36d1      <= 15'd0;      ph9b68f      <= 15'd0;      cmdb47e      <= 15'd0;      dmda3f0     <= 2'd0;      kqd1f82     <= 2'd0;      mt8fc10     <= 2'd0;      zx7e084     <= 2'd0;      ykf0427    <= 2'd0;      ie82138    <= 2'd0;      qi109c1    <= 2'd0;      jr84e08    <= 2'd0;


`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes
         bn27047  <= 5'd0;


`else
         bn27047  <= 5'b11111;


`endif
   end   else begin      


`ifdef PCIE_GTEQ_X8   //For More than or equal to 8 lanes
         bn27047 <=  coae5c + 1;


`endif
      case (ea681d4)         aa3486e: begin            gof5569  <= epa4371;            ks3e6da   <= {K28_5, D21_5};            dmda3f0  <= {1'b1  , 1'b0};            ykf0427 <= {1'b1  , 1'b0};         end         epa4371: begin            ks3e6da    <= {K28_5, D10_2};            dmda3f0   <= {1'b1  , 1'b0};            ykf0427  <= {1'b0  , 1'b0};            if (coae5c == (hd3202a*4) || coae5c == (hd3202a*4+3))               gof5569 <= aa21b8d;            else               gof5569 <= aa3486e;         end         aa21b8d: begin            gof5569   <= aa3486e;            ks3e6da    <= {K28_5, K28_5};            dmda3f0   <= {1'b1  , 1'b1};            ykf0427  <= {1'b0  , 1'b0};         end         default: begin            gof5569 <= aa3486e;         end      endcase      case (kf750f)         aa3486e: begin            dz55a47  <= epa4371;            ldf36d1   <= {K28_5, D21_5};            kqd1f82  <= {1'b1  , 1'b0};            ie82138 <= {1'b1  , 1'b0};         end         epa4371: begin            ldf36d1    <= {K28_5, D10_2};            kqd1f82   <= {1'b1  , 1'b0};            ie82138  <= {1'b0  , 1'b0};            if (coae5c == (ir90157*4) || coae5c == (ir90157*4+3))               dz55a47 <= aa21b8d;            else               dz55a47 <= aa3486e;         end         aa21b8d: begin            dz55a47   <= aa3486e;            ldf36d1    <= {K28_5, K28_5};            kqd1f82   <= {1'b1  , 1'b1};            ie82138  <= {1'b0  , 1'b0};         end         default: begin            dz55a47 <= aa3486e;         end      endcase      case (god43ea)         aa3486e: begin            dm691f3  <= epa4371;            ph9b68f   <= {K28_5, D21_5};            mt8fc10  <= {1'b1  , 1'b0};            qi109c1 <= {1'b1  , 1'b0};         end         epa4371: begin            ph9b68f    <= {K28_5, D10_2};            mt8fc10   <= {1'b1  , 1'b0};            qi109c1  <= {1'b0  , 1'b0};            if (coae5c == (an80abd*4) || coae5c == (an80abd*4+3))               dm691f3 <= aa21b8d;            else               dm691f3 <= aa3486e;         end         aa21b8d: begin            dm691f3   <= aa3486e;            ph9b68f    <= {K28_5, K28_5};            mt8fc10   <= {1'b1  , 1'b1};            qi109c1  <= {1'b0  , 1'b0};         end         default: begin            dm691f3 <= aa3486e;         end      endcase      case (swfa8c)         aa3486e: begin            lq47cdb  <= epa4371;            cmdb47e   <= {K28_5, D21_5};            zx7e084  <= {1'b1  , 1'b0};            jr84e08 <= {1'b1  , 1'b0};         end         epa4371: begin            cmdb47e    <= {K28_5, D10_2};            zx7e084   <= {1'b1  , 1'b0};            jr84e08  <= {1'b0  , 1'b0};            if (coae5c == (ec55ed*4) || coae5c == (ec55ed*4+3))               lq47cdb <= aa21b8d;            else               lq47cdb <= aa3486e;         end         aa21b8d: begin            lq47cdb   <= aa3486e;            cmdb47e    <= {K28_5, K28_5};            zx7e084   <= {1'b1  , 1'b1};            jr84e08  <= {1'b0  , 1'b0};         end         default: begin            lq47cdb <= aa3486e;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      epa19cd    <= 1'b0;      zzce6c    <= 1'b0;      ay67367   <= 1'b0;      sj39b38  <= 1'b0;      xjcd9c5 <= 1'b0;      lq6ce2f   <= 1'b0;      zz38bd0    <= 1'b0;   end   else if (|fne928f) begin      epa19cd    <= 1'b0;      ay67367   <= 1'b0;      sj39b38  <= 1'b0;      xjcd9c5 <= 1'b0;      lq6ce2f   <= 1'b0;      zz38bd0    <= 1'b0;      case(zx4a3f8)         OS_T1_LIP_LAP: begin            epa19cd    <= 1'b1;            zzce6c    <= (goe0e7b == lf3e2a) ? 1'b1 : tuc5afe;            ay67367   <= 1'b1;         end         OS_T2_LIP_LAP: begin            epa19cd    <= 1'b1;            zzce6c    <= (goe0e7b == lf3e2a) ? 1'b0 : tuc5afe;            ay67367   <= 1'b1;         end         OS_COMPLI: begin            zz38bd0    <= 1'b1;         end         OS_T1: begin            epa19cd    <= 1'b1;            zzce6c    <= (goe0e7b == lf3e2a) ? 1'b1 : tuc5afe;         end         OS_T2: begin            epa19cd    <= 1'b1;            zzce6c    <= (goe0e7b == lf3e2a) ? 1'b0 : tuc5afe;         end         OS_IDLE: begin            sj39b38  <= (goe0e7b == lf3e2a) ? 1'b1 : zx6bf9f;         end         OS_EIDLE: begin            xjcd9c5 <= 1'b1;         end         OS_NFTS: begin            lq6ce2f   <= 1'b1;         end         OS_BEACON: begin            ea6717a   <= 1'b1;         end         default : begin            epa19cd    <= 1'b0;            ay67367   <= 1'b0;            sj39b38  <= 1'b0;            xjcd9c5 <= 1'b0;            lq6ce2f   <= 1'b0;            zz38bd0    <= 1'b0;         end      endcase   end   else begin      epa19cd    <= 1'b0;      zzce6c    <= 1'b0;      ay67367   <= 1'b0;      sj39b38  <= 1'b0;      xjcd9c5 <= 1'b0;      lq6ce2f   <= 1'b0;      ea6717a   <= 1'b0;      zz38bd0    <= 1'b0;   end
end


`ifdef LW4
   assign rgf18a9   = oh73d8;   assign yk62a5a  = oh39ec5;   assign swa9689   = {su7d460,qgea300, uv51800, ng8c004};   assign th5a24d  = {gb60022, qi115, ym8a8, pu4541};   assign zm89371 = {tj22a0a, qi15057, lsa82b9, kd415cb} ;   assign dm4dc51  = {sw8d177,sw8d177,sw8d177,sw8d177};   assign rt7145e = {ou2ee07,ou2ee07,ou2ee07,ou2ee07};   assign faebeaa    = {ng99d86, mecec32, xw76190, hdb0c83};   assign pf5f553    = {mg1f7ea, fafbf50, rgdfa82, yxfd413};

`endif



`ifdef LW2
   assign rgf18a9   = oh73d8[63:32];   assign yk62a5a  = oh39ec5[7:4];   assign swa9689   = {su7d460,qgea300};   assign th5a24d  = {gb60022, qi115};   assign zm89371 = {tj22a0a, qi15057};   assign dm4dc51  = {sw8d177,sw8d177};   assign rt7145e = {ou2ee07,ou2ee07};   assign faebeaa    = {ng99d86, mecec32};   assign pf5f553    = {mg1f7ea, fafbf50};

`endif



`ifdef LW1
   assign rgf18a9   = oh73d8[63:48];   assign yk62a5a  = oh39ec5[7:6];   assign swa9689   = su7d460;   assign th5a24d  = gb60022;   assign zm89371 = tj22a0a;   assign dm4dc51  = sw8d177;   assign rt7145e = ou2ee07;   assign faebeaa    = ng99d86;   assign pf5f553    = mg1f7ea;

`endif






always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      gqa3d33 <= {LANE_WIDTH{1'b0}};   else      gqa3d33 <= fne928f;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      mrdc583  <= {16*LANE_WIDTH{1'b0}};      zz160ed <= {2*LANE_WIDTH{1'b0}};      xy83b76<= {2*LANE_WIDTH{1'b0}};      uvedd94   <= {LANE_WIDTH{1'b0}};   end      else if (an17481) begin      mrdc583   <= {LANE_WIDTH{cz41443}};      zz160ed  <= {LANE_WIDTH{qia21c}};      xy83b76 <= {2*LANE_WIDTH{1'b0}};      uvedd94    <= 4'b1111;   end   else begin      uvedd94    <= suf5fc8;      casex({rtd8b5f, th5fcff, nefe7ff, ux9ffde, zx6bf9f,jpf3ffb})         6'b1xxxxx: begin            mrdc583   <= ead1d72;            zz160ed  <= mr75c86;            xy83b76 <= {2*LANE_WIDTH{1'b0}};         end         6'bx1xxxx: begin            mrdc583   <= {LANE_WIDTH{dmfbd41}} ;            zz160ed  <= {LANE_WIDTH{aydea0a}} ;            xy83b76 <= {2*LANE_WIDTH{1'b0}};         end         6'bxx1xxx: begin            mrdc583   <= {LANE_WIDTH{os43868}};            zz160ed  <= {LANE_WIDTH{lf1c340}};            xy83b76 <= {2*LANE_WIDTH{1'b0}};         end           6'bxxx1xx: begin            mrdc583   <= os721ac;            zz160ed  <= ba86b0c;            xy83b76 <= wyac313;         end          6'bxxxx1x: begin            mrdc583  <= {16*LANE_WIDTH{1'b0}};            zz160ed <= {2*LANE_WIDTH{1'b0}};            xy83b76<= {2*LANE_WIDTH{1'b0}};         end         6'bxxxxx1: begin            mrdc583   <= fpc4ce;            zz160ed  <= hd133b0;            xy83b76<= {2*LANE_WIDTH{1'b0}};         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vk963e5      <= 1'b0;      jr160b5       <= 1'b0;      fpb05ae       <= 1'b0;      mg82d76     <= 1'b0;      vx16bb0    <= 10'd0;      bnb5d87    <= 5'd0;      mtaec3f     <= 5'd0;      rg761fd     <= 5'd0;      lfb0feb <= 5'd0;   end   else begin            if (viee71a) begin         vk963e5  <= 1'b0;         jr160b5   <= 1'b0;         fpb05ae   <= 1'b0;         mg82d76 <= 1'b0;      end      else begin         vk963e5  <= (czd61cb|ks872e7)   ? 1'b1 : jp5a96d;         jr160b5   <= (czd61cb)   ? 1'b1 : ie1004d;         fpb05ae   <= (ks872e7)   ? 1'b1 : an80269;         mg82d76 <= (yx754b7) ? 1'b1 : ba134c;      end            if (jp5a96d == 1'b0) begin         vx16bb0 <= 10'd0;      end            else if (rtd8b5f && tuc5afe && db2d7f3 && pscf62d && lf9a62 < eca301f) begin         vx16bb0 <= lf9a62 + 1;      end      else begin         vx16bb0 <= lf9a62;      end            if (an80269 == 1'b0) begin         bnb5d87 <= 5'd0;      end            else if (rtd8b5f && !tuc5afe && db2d7f3 && pscf62d && (tu4d317[4] == 1'b0)) begin         bnb5d87 <= tu4d317 + 1;      end      else begin         bnb5d87 <= tu4d317;      end            if (an80269 == 1'b0) begin         mtaec3f <= 5'd0;      end            else if (rtd8b5f && !tuc5afe && pscf62d && (by698ba[4] == 1'b0)) begin         mtaec3f <= by698ba + 1;      end      else begin         mtaec3f <= by698ba;      end            if (ie1004d == 1'b0) begin         rg761fd <= 5'd0;      end            else if (rtd8b5f && !tuc5afe && pscf62d && (cm4c5d2[4] == 1'b0)) begin         rg761fd <= cm4c5d2 + 1;      end      else begin         rg761fd <= cm4c5d2;      end            if (ba134c == 1'b0) begin         lfb0feb <= 5'd0;      end      else if (zx6bf9f && ui62e90 < 15) begin         lfb0feb <= ui62e90 + 2;      end      else begin         lfb0feb <= ui62e90;      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ri2a1fc  <= 1'b0;      dz50fe2    <= 1'b0;      gq87f16     <= 1'b0;      xy3f8b0     <= 1'b0;      hbfc582 <= 1'b0;   end   else if (viee71a) begin      ri2a1fc  <= 1'b0;      dz50fe2    <= 1'b0;      gq87f16     <= 1'b0;      xy3f8b0     <= 1'b0;      hbfc582 <= 1'b0;   end   else begin            ri2a1fc  <= (lf9a62    == eca301f);      dz50fe2    <= (tu4d317    == 5'd16);      gq87f16     <= (by698ba     == 5'd16);      xy3f8b0     <= (cm4c5d2     == 5'd16);      hbfc582 <= (ui62e90 == 5'd16);   end
end
assign tu42988   = (vi572e0);
assign xy14c42     = (ukb9702);
assign vi484a9      = (gocb810);
assign mg88480      = (ay5c080);
assign rg4254a  = (qge0401);






`ifdef LTSSM_MACO



fb_rf_phy #(2, 4) ea6738f (                              .rst_n (rst_n),                              .clk_a (sys_clk),                              .a_a   (ng996c5),                              .d_a   (gq24630),                                                            .we_a  (rst_n),                              .clk_b (sys_clk),                              .a_b   (qgcb62b),                              .d_b   (ho76527)                              );


`else

pmi_distributed_dpram #(   .pmi_addr_depth       ( go77039 ),   .pmi_addr_width       ( zmb81c9 ),   .pmi_data_width       ( vic0e4a ),   .pmi_regmode          ("noreg" ),   .pmi_init_file        ("none" ),   .pmi_init_file_format ("binary" ),


`ifdef ECP5UM
   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_family        ("ECP3"),


`else
      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_distributed_dpram"))
   ip54c3e (   .WrAddress            ( ng996c5 ),   .Data                 ( gq24630 ),   .WrClock              ( sys_clk ),   .WE                   ( 1'b1 ),   .WrClockEn            ( 1'b1 ),   .RdAddress            ( qgcb62b ),   .RdClock              ( sys_clk ),   .RdClockEn            ( neeba4e ),   .Reset                ( ~rst_n ),   .Q                    ( ho76527 )   );

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ng996c5 <= 4'd0 ;   else      ng996c5 <=  ng996c5 + 4'd1;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      neeba4e <= 1'b0 ;   else if (ng996c5 == dm57b43 - 1)      neeba4e <=  1'b1;   else      neeba4e <=  pfd7df0;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      qgcb62b <= 4'd0 ;   else if (pfd7df0)      qgcb62b <= qgcb62b + 4'd1 ;
end

always@* begin hq2af68<={LINK_NUM>>1,ux17adf[0]};dm57b43<={TX_EIDL_CNT>>1,ux17adf[1]};shed0db<={gq24630>>1,ux17adf[2]};viee71a<=ux17adf[3];ho738d2<={jr285eb>>1,ux17adf[4]};do1b749<=ux17adf[5];kqdba4a<=ux17adf[6];fne928f<={fp8192a>>1,ux17adf[7]};zx4a3f8<={vxc957>>1,ux17adf[8]};cz51fc7<=ux17adf[9];an8fe3c<={tw255fe>>1,ux17adf[10]};gb7f1e4<={ri2aff3>>1,ux17adf[11]};enf8f25<=ux17adf[12];pfc792d<=ux17adf[13];sj3c96e<=ux17adf[14];vie4b75<={rtf36f3>>1,ux17adf[15]};ie97825<=ux17adf[16];czd61cb<=ux17adf[17];ks872e7<=ux17adf[18];yx754b7<=ux17adf[19];lfaa5bc<={tud54f0>>1,ux17adf[20]};fa52de6<=ux17adf[21];coabc5<=ux17adf[22];vkb799b<={lf28ce7>>1,ux17adf[23]};ksbccda<={ea4673e>>1,ux17adf[24]};lde66d1<={mt339f1>>1,ux17adf[25]};cb3368e<={ri9cf8c>>1,ux17adf[26]};vx9b475<={uve7c62>>1,ux17adf[27]};ead1d72<={rgf18a9>>1,ux17adf[28]};mr75c86<={yk62a5a>>1,ux17adf[29]};os721ac<={swa9689>>1,ux17adf[30]};ba86b0c<={th5a24d>>1,ux17adf[31]};wyac313<={zm89371>>1,ux17adf[32]};fpc4ce<={dm4dc51>>1,ux17adf[33]};hd133b0<={rt7145e>>1,ux17adf[34]};ng99d86<={gd8a2f6>>1,ux17adf[35]};mecec32<={gb517b5>>1,ux17adf[36]};xw76190<={lf8bdad>>1,ux17adf[37]};hdb0c83<={qt5ed6e>>1,ux17adf[38]};hq8641f<=ux17adf[39];lf320fb<=ux17adf[40];oh907df<=ux17adf[41];vk83efd<=ux17adf[42];mg1f7ea<={ip75dd7>>1,ux17adf[43]};fafbf50<={qvaeebd>>1,ux17adf[44]};rgdfa82<={ww775ed>>1,ux17adf[45]};yxfd413<={zzbaf69>>1,ux17adf[46]};meea09c<=ux17adf[47];pf504e0<=ux17adf[48];co82707<=ux17adf[49];xl13839<=ux17adf[50];goe0e7b<={cm77754>>1,ux17adf[51]};oh73d8<={uxbbaa1>>1,ux17adf[52]};oh39ec5<={jpdd50c>>1,ux17adf[53]};pscf62d<=ux17adf[54];bl7b16b<={cz54339>>1,ux17adf[55]};rtd8b5f<=ux17adf[56];tuc5afe<=ux17adf[57];db2d7f3<=ux17adf[58];zx6bf9f<=ux17adf[59];th5fcff<=ux17adf[60];nefe7ff<=ux17adf[61];jpf3ffb<=ux17adf[62];ux9ffde<=ux17adf[63];goff7a8<={xy2f43b>>1,ux17adf[64]};dmfbd41<={yx7a1da>>1,ux17adf[65]};aydea0a<={rgd0ed5>>1,ux17adf[66]};xya8288<={mg3b551>>1,ux17adf[67]};cz41443<={zkdaa89>>1,ux17adf[68]};qia21c<={jcd544b>>1,ux17adf[69]};ym8870d<={qt512de>>1,ux17adf[70]};os43868<={ls896f5>>1,ux17adf[71]};lf1c340<={qt4b7aa>>1,ux17adf[72]};bye1a07<=ux17adf[73];ea681d4<={gof5569>>1,ux17adf[74]};kf750f<={dz55a47>>1,ux17adf[75]};god43ea<={dm691f3>>1,ux17adf[76]};swfa8c<={lq47cdb>>1,ux17adf[77]};su7d460<={ks3e6da>>1,ux17adf[78]};qgea300<={ldf36d1>>1,ux17adf[79]};uv51800<={ph9b68f>>1,ux17adf[80]};ng8c004<={cmdb47e>>1,ux17adf[81]};gb60022<={dmda3f0>>1,ux17adf[82]};qi115<={kqd1f82>>1,ux17adf[83]};ym8a8<={mt8fc10>>1,ux17adf[84]};pu4541<={zx7e084>>1,ux17adf[85]};tj22a0a<={ykf0427>>1,ux17adf[86]};qi15057<={ie82138>>1,ux17adf[87]};lsa82b9<={qi109c1>>1,ux17adf[88]};kd415cb<={jr84e08>>1,ux17adf[89]};coae5c<={bn27047>>1,ux17adf[90]};vi572e0<=ux17adf[91];ukb9702<=ux17adf[92];gocb810<=ux17adf[93];ay5c080<=ux17adf[94];qge0401<=ux17adf[95];jp5a96d<=ux17adf[96];ie1004d<=ux17adf[97];an80269<=ux17adf[98];ba134c<=ux17adf[99];lf9a62<={vx16bb0>>1,ux17adf[100]};tu4d317<={bnb5d87>>1,ux17adf[101]};by698ba<={mtaec3f>>1,ux17adf[102]};cm4c5d2<={rg761fd>>1,ux17adf[103]};ui62e90<={lfb0feb>>1,ux17adf[104]};an17481<=ux17adf[105];lfba40c<=ux17adf[106];thd2067<=ux17adf[107];gd9033e<=ux17adf[108];lf819f5<=ux17adf[109];rvcfaf<=ux17adf[110];os67d7f<=ux17adf[111];suf5fc8<={gqa3d33>>1,ux17adf[112]};tjafe41<={ri1e999>>1,ux17adf[113]};wj7f20f<={xwf4ccb>>1,ux17adf[114]};dzf907d<={eca665b>>1,ux17adf[115]};dzc83ee<={yz332d8>>1,ux17adf[116]};pfd7df0<=ux17adf[117];end
always@* begin db22f5b[2047]<=TX_EIDL_CNT[0];db22f5b[2046]<=gq24630[0];db22f5b[2044]<=vk250bd;db22f5b[2040]<=jr285eb[0];db22f5b[2033]<=kdc6064;db22f5b[2019]<=hq30325;db22f5b[1991]<=fp8192a[0];db22f5b[1963]<=yz332d8[0];db22f5b[1961]<=dz50fe2;db22f5b[1934]<=vxc957[0];db22f5b[1929]<=xjd7b4e;db22f5b[1914]<=qi109c1[0];db22f5b[1898]<=rtf36f3[0];db22f5b[1878]<=neeba4e;db22f5b[1874]<=gq87f16;db22f5b[1821]<=xj64abf;db22f5b[1813]<=dz55a47[0];db22f5b[1810]<=pubda77;db22f5b[1781]<=jr84e08[0];db22f5b[1775]<=zx7e084[0];db22f5b[1749]<=ltssm_l0;db22f5b[1707]<=ymb3882;db22f5b[1701]<=xy3f8b0;db22f5b[1666]<=rgf18a9[0];db22f5b[1630]<=hqadd77;db22f5b[1617]<=yx7a1da[0];db22f5b[1595]<=tw255fe[0];db22f5b[1579]<=dm691f3[0];db22f5b[1572]<=yxed3bb;db22f5b[1566]<=gbf851e;db22f5b[1560]<=lfb0feb[0];db22f5b[1514]<=bn27047[0];db22f5b[1506]<=ww775ed[0];db22f5b[1502]<=ykf0427[0];db22f5b[1467]<=kqd1f82[0];db22f5b[1450]<=dzc85e9;db22f5b[1440]<=ri9cf8c[0];db22f5b[1428]<=zz38bd0;db22f5b[1414]<=mtaec3f[0];db22f5b[1390]<=cmdb47e[0];db22f5b[1384]<=ea4673e[0];db22f5b[1370]<=ls862e8;db22f5b[1366]<=tud54f0[0];db22f5b[1355]<=hbfc582;db22f5b[1324]<=jr160b5;db22f5b[1308]<=jcd544b[0];db22f5b[1284]<=yk62a5a[0];db22f5b[1212]<=bl6ebba;db22f5b[1202]<=xjcd9c5;db22f5b[1200]<=mg82d76;db22f5b[1187]<=rgd0ed5[0];db22f5b[1174]<=zzce6c;db22f5b[1170]<=kqea867;db22f5b[1142]<=ri2aff3[0];db22f5b[1137]<=ls896f5[0];db22f5b[1125]<=lf8bdad[0];db22f5b[1110]<=lq47cdb[0];db22f5b[1097]<=jc69ddd;db22f5b[1085]<=blc28f4;db22f5b[1072]<=mg87f5f;db22f5b[1041]<=th5a24d[0];db22f5b[1023]<=LINK_NUM[0];db22f5b[981]<=eca665b[0];db22f5b[980]<=ri2a1fc;db22f5b[964]<=zzbaf69[0];db22f5b[957]<=ie82138[0];db22f5b[949]<=byfe6de;db22f5b[906]<=gof5569[0];db22f5b[887]<=mt8fc10[0];db22f5b[853]<=dm42f4e;db22f5b[833]<=uve7c62[0];db22f5b[815]<=hdb5bae;db22f5b[808]<=xy2f43b[0];db22f5b[783]<=zx5f0a3;db22f5b[780]<=rg761fd[0];db22f5b[753]<=qvaeebd[0];db22f5b[733]<=dmda3f0[0];db22f5b[720]<=mt339f1[0];db22f5b[714]<=ea6717a;db22f5b[707]<=bnb5d87[0];db22f5b[695]<=ph9b68f[0];db22f5b[692]<=lf28ce7[0];db22f5b[685]<=swf6e;db22f5b[662]<=vk963e5;db22f5b[654]<=zkdaa89[0];db22f5b[601]<=sj39b38;db22f5b[600]<=fpb05ae;db22f5b[587]<=epa19cd;db22f5b[585]<=jpdd50c[0];db22f5b[568]<=qt512de[0];db22f5b[562]<=gb517b5[0];db22f5b[520]<=swa9689[0];db22f5b[490]<=xwf4ccb[0];db22f5b[474]<=dbbfcdb;db22f5b[453]<=ip5bd55;db22f5b[407]<=rtf6b75;db22f5b[391]<=dmebe14;db22f5b[376]<=ip75dd7[0];db22f5b[357]<=lq6ce2f;db22f5b[353]<=vx16bb0[0];db22f5b[347]<=ldf36d1[0];db22f5b[327]<=mg3b551[0];db22f5b[300]<=ay67367;db22f5b[293]<=cz54339[0];db22f5b[292]<=uxbbaa1[0];db22f5b[281]<=gd8a2f6[0];db22f5b[245]<=ri1e999[0];db22f5b[237]<=fa57f9b;db22f5b[226]<=qt4b7aa[0];db22f5b[203]<=qt5ed6e[0];db22f5b[195]<=alfd7c2;db22f5b[173]<=ks3e6da[0];db22f5b[146]<=cm77754[0];db22f5b[140]<=rt7145e[0];db22f5b[122]<=gqa3d33[0];db22f5b[97]<=tw3faf8;db22f5b[70]<=dm4dc51[0];db22f5b[35]<=zm89371[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule

























































































`timescale 1 ns / 100 ps
module pcie_x1_uv7563c
   (
    
    sys_clk,                    
    rst_n,                    

    do83b16,              
    ep3c916,              
    nee48b5,            
    ho57cb0,                 
    sjbe583,                  
    asb_eidle_rx,               
    tu42988,             
    xy14c42,               
    fpc772,            
    cm72ce2,             

    
    al7fda4,              
    dmfed24,              
    dzf6922,                 
    yzb4916,             
    jp7b515,                
    qv8f6a2,                
    pol_compliance,             
    bn16b0f                   
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam ba3ab0c       = 3'd0 ;
localparam lqd5862     = 3'd1 ;
localparam swac312 = 3'd2 ;
localparam pf61891     = 3'd3 ;
localparam jrc48e       = 3'd4 ;
input                     sys_clk;
input                     rst_n;
input                     do83b16;
input                     ep3c916;
input                     nee48b5;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0] sjbe583;
input   [LANE_WIDTH-1:0] asb_eidle_rx;
input   [LANE_WIDTH-1:0] tu42988;
input   [LANE_WIDTH-1:0] xy14c42;
input   [LANE_WIDTH-1:0] fpc772;
input   [LANE_WIDTH-1:0] cm72ce2;
output                    al7fda4;
output                    dmfed24;
output  [LANE_WIDTH-1:0] dzf6922;
output  [OS_WIDTH -1:0]   yzb4916;
output                    jp7b515;
output                    qv8f6a2;
output                    pol_compliance;
output  [PSM_WIDTH:0]     bn16b0f;
wire [LANE_WIDTH-1:0]  ou1af46;
wire [LANE_WIDTH-1:0]  vkbd18f;
wire [LANE_WIDTH-1:0]  su463d4;
wire [LANE_WIDTH-1:0]  sj8f509;
wire [LANE_WIDTH-1:0]  med426c;
reg  [PSM_WIDTH:0]      bn16b0f;
reg                     al7fda4;
reg                     dmfed24;
reg  [LANE_WIDTH-1:0]   dzf6922;
reg  [OS_WIDTH -1:0]    yzb4916;
reg                     jp7b515;
reg                     qv8f6a2;
reg  [LANE_WIDTH-1:0]   ksace49;
integer                 db9be6b;

`ifdef LW4

`else

`endif
reg  [15*8:0] mt39240;
reg jcc55d4;
reg yk49024;
reg ps48120;
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] qvabb18;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg [LANE_WIDTH - 1 : 0] ipd9725;
reg [LANE_WIDTH - 1 : 0] ui5c968;
reg [LANE_WIDTH - 1 : 0] xy25a02;
reg [LANE_WIDTH - 1 : 0] kq68097;
reg [LANE_WIDTH - 1 : 0] an25ce;
reg [LANE_WIDTH - 1 : 0] ie973ad;
reg [LANE_WIDTH - 1 : 0] kqceb41;
reg [LANE_WIDTH - 1 : 0] puad045;
reg [LANE_WIDTH - 1 : 0] ip41159;
reg [LANE_WIDTH - 1 : 0] th45665;
reg [15 * 8 : 0] wy2b32e;
reg [2047:0] db22f5b;
wire [16:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef LW4

`else

`endif

localparam ribd6fd = 17,jceb7ea = 32'hfdffe42b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef LW4


`else


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif
















assign pol_compliance = (bn16b0f == swac312) ? 1'b1 : 1'b0;





assign ou1af46  = ipd9725 & qvabb18;

assign vkbd18f    = ui5c968 & qvabb18;

assign su463d4= xy25a02 & qvabb18;

assign sj8f509 = kq68097  & qvabb18;

assign med426c           = ou920a1  & qvabb18;





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      bn16b0f        <= ba3ab0c;      dmfed24    <= 1'b0;      dzf6922       <= {(LANE_WIDTH){1'b0}};      yzb4916   <= OS_T1_LIP_LAP;      al7fda4    <= 1'b0;      jp7b515      <= 1'b0;      qv8f6a2      <= 1'b0;      ksace49  <= {(LANE_WIDTH){1'b0}};   end   else begin      dmfed24    <= 1'b0;      jp7b515      <= 1'b0;      qv8f6a2      <= 1'b0;      al7fda4    <= 1'b0;      case(bn16b0f)                  ba3ab0c: begin            ksace49  <= {(LANE_WIDTH){1'b0}};            if (vk1eaec == POLLING) begin               bn16b0f        <= lqd5862;               dmfed24    <= 1'b1;               dzf6922       <= qvabb18;               yzb4916   <= OS_T1_LIP_LAP;            end            else begin               bn16b0f        <= ba3ab0c;               dzf6922       <= {(LANE_WIDTH){1'b0}};            end         end                  lqd5862: begin        for (db9be6b=0; db9be6b<LANE_WIDTH; db9be6b=db9be6b+1) begin               if (th45665[db9be6b] == 1'b0)          ksace49[db9be6b] <= (ou920a1[db9be6b] == 0) ? 1'b1 : 1'b0;            end            if (kqceb41 == qvabb18  && ps48120 && ~dmfed24) begin               bn16b0f       <= pf61891;               dzf6922      <= qvabb18;               yzb4916  <= OS_T2_LIP_LAP;               dmfed24   <= 1'b1;               al7fda4   <= 1'b1;            end            else if (jcc55d4 && ~dmfed24) begin                      if (|th45665 == 1'b0) begin                  bn16b0f       <= swac312;                  dzf6922      <= qvabb18;                  yzb4916  <= OS_COMPLI;               end                     


`ifdef LW4
                  else if (|kqceb41 == 1'b1 && |an25ce == 1'b1 && th45665[3] == 1'b1) begin                     bn16b0f       <= pf61891;                     dzf6922      <= qvabb18;                     yzb4916  <= OS_T2_LIP_LAP;                     dmfed24   <= 1'b1;                     al7fda4   <= 1'b1;                  end


`else
                  else if (|kqceb41 == 1'b1 && |an25ce == 1'b1 && th45665 == 1'b1) begin                     bn16b0f       <= pf61891;                     dzf6922      <= qvabb18;                     yzb4916  <= OS_T2_LIP_LAP;                     dmfed24   <= 1'b1;                     al7fda4   <= 1'b1;                  end


`endif
               else begin                  bn16b0f       <= jrc48e;                  jp7b515     <= 1'b1;               end            end            else begin               bn16b0f    <= lqd5862;            end         end                  swac312: begin            ksace49   <= {(LANE_WIDTH){1'b0}};            if (&ou920a1 == 1'b0) begin               bn16b0f      <= lqd5862;               dzf6922     <= qvabb18;               yzb4916 <= OS_T1_LIP_LAP;               dmfed24  <= 1'b1;            end            else begin               bn16b0f      <= swac312;            end         end                  pf61891: begin            ksace49   <= {(LANE_WIDTH){1'b0}};            if (|puad045 == 1'b1 && |ie973ad == 1'b1 && ~dmfed24) begin               bn16b0f      <= jrc48e;               qv8f6a2    <= 1'b1;                              dzf6922     <= {(LANE_WIDTH){1'b1}};            end            else if (yk49024 && ~dmfed24) begin               bn16b0f      <= jrc48e;               jp7b515    <= 1'b1;               dzf6922     <= {(LANE_WIDTH){1'b0}};            end            else begin               bn16b0f      <= pf61891;            end         end         jrc48e: begin            if (vk1eaec != POLLING) begin               bn16b0f   <= ba3ab0c;            end            else begin               bn16b0f   <= jrc48e;            end         end         default: begin            bn16b0f   <= ba3ab0c;         end      endcase   end
end



always @ (bn16b0f)
begin   case(bn16b0f)      ba3ab0c       : mt39240 = "POL_WAIT";      lqd5862     : mt39240 = "POL_ACTIVE";      swac312 : mt39240 = "POL_COMP";      pf61891     : mt39240 = "POL_CFG";      jrc48e       : mt39240 = "POL_EXIT";      default         : mt39240 = "ERROR";   endcase
end

always@* begin jcc55d4<=ux17adf[0];yk49024<=ux17adf[1];ps48120<=ux17adf[2];vk1eaec<={ho57cb0>>1,ux17adf[3]};qvabb18<={sjbe583>>1,ux17adf[4]};ou920a1<={asb_eidle_rx>>1,ux17adf[5]};ipd9725<={tu42988>>1,ux17adf[6]};ui5c968<={xy14c42>>1,ux17adf[7]};xy25a02<={fpc772>>1,ux17adf[8]};kq68097<={cm72ce2>>1,ux17adf[9]};an25ce<={ou1af46>>1,ux17adf[10]};ie973ad<={vkbd18f>>1,ux17adf[11]};kqceb41<={su463d4>>1,ux17adf[12]};puad045<={sj8f509>>1,ux17adf[13]};ip41159<={med426c>>1,ux17adf[14]};th45665<={ksace49>>1,ux17adf[15]};wy2b32e<={mt39240>>1,ux17adf[16]};end
always@* begin db22f5b[2047]<=ep3c916;db22f5b[2046]<=nee48b5;db22f5b[2044]<=ho57cb0[0];db22f5b[2041]<=sjbe583[0];db22f5b[2035]<=asb_eidle_rx[0];db22f5b[2022]<=tu42988[0];db22f5b[1996]<=xy14c42[0];db22f5b[1945]<=fpc772[0];db22f5b[1842]<=cm72ce2[0];db22f5b[1637]<=ou1af46[0];db22f5b[1630]<=med426c[0];db22f5b[1227]<=vkbd18f[0];db22f5b[1212]<=ksace49[0];db22f5b[1023]<=do83b16;db22f5b[815]<=sj8f509[0];db22f5b[407]<=su463d4[0];db22f5b[377]<=mt39240[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






























































































`timescale 1 ns / 100 ps
module pcie_x1_tj9e548 
   (
    
    sys_clk,            
    rst_n,              

    ext_sync,           
    an1d8b2,       
    do83b16,      
    ep3c916,      
    nee48b5,    
    ho57cb0,         
    ntbaf9a,          
    vi484a9,        
    mg88480,        
    rg4254a,    
    db94e72,      
    pu93f0c,        
    tu63b96,    
    ic72ca9,     
    gqa9095,          
    ep9f863,   
    zxfc31d,    
    vie18ee,    
    vx9e0f1,      
    ykf078e,      
    os62ca7,        
    me495de,       
    twb2a42,        
    hl_gto_cfg,         
    asb_dskew_rx,       
    
    
    gof55c4,      
    xlaae20,    
    by57107,       
    rib883a,   
    iea65f4,      
    al54cbe,     
    mg97d06,      
    jp4a997,      
    ble9532,       
    fp32fa0,      
    xjc2ae1,    
    co1570e         
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam nrc7afa    = 3'd0 ;
localparam db3d7d6  = 3'd1 ;
localparam byebeb6 = 3'd2 ;
localparam jp5f5b3    = 3'd3 ;
localparam gofad9e    = 3'd4 ;
input                     sys_clk;
input                     rst_n;
input                     ext_sync;
input                     an1d8b2;
input                     do83b16;
input                     ep3c916;
input                     nee48b5;
input   [MSM_WIDTH:0]     ho57cb0;
input   [LANE_WIDTH-1:0]  ntbaf9a;
input   [LANE_WIDTH-1:0]  vi484a9;
input   [LANE_WIDTH-1:0]  mg88480;
input   [LANE_WIDTH-1:0]  rg4254a;
input   [LANE_WIDTH-1:0]  db94e72;
input   [LANE_WIDTH-1:0]  pu93f0c;
input   [LANE_WIDTH-1:0]  tu63b96;
input   [LANE_WIDTH-1:0]  ic72ca9;
input   [LANE_WIDTH-1:0]  gqa9095;
input   [LANE_WIDTH-1:0]  ep9f863;
input   [LANE_WIDTH-1:0]  zxfc31d;
input   [LANE_WIDTH-1:0]  vie18ee;
input   [LANE_WIDTH-1:0]  vx9e0f1;
input   [LANE_WIDTH-1:0]  ykf078e;
input   [LANE_WIDTH-1:0]  os62ca7;
input   [LANE_WIDTH-1:0]  me495de;
input   [LANE_WIDTH-1:0]  twb2a42;
input                     hl_gto_cfg;
input   [LANE_WIDTH-1:0]  asb_dskew_rx;
output                    gof55c4;
output                    xlaae20;
output  [LANE_WIDTH-1:0]  by57107;
output  [OS_WIDTH -1:0]   rib883a;
output                    iea65f4;
output                    al54cbe;
output                    mg97d06;
output                    jp4a997;
output                    ble9532;
output                    fp32fa0;
output                    xjc2ae1;
output  [RSM_WIDTH:0]     co1570e;
wire [LANE_WIDTH-1:0]   lq734c3;
wire [LANE_WIDTH-1:0]   mg31cb8;
wire [LANE_WIDTH-1:0]   ec21cd3;
wire [LANE_WIDTH-1:0]   jeb83c0;
wire [LANE_WIDTH-1:0]   ymf011;
wire [LANE_WIDTH-1:0]   vk963e5;
wire [LANE_WIDTH-1:0]   do9c873;
wire [LANE_WIDTH-1:0]   by4855a;
wire                    ne42ad2;
wire                    aa15692;
wire                    ohab491;
wire                    uvfd71e;
wire [LANE_WIDTH-1:0]   rtd2721;
reg  [RSM_WIDTH:0]      co1570e;
reg                     xlaae20;
reg  [LANE_WIDTH-1:0]   by57107;
reg  [OS_WIDTH -1:0]    rib883a;
reg                     iea65f4;
reg                     al54cbe;
reg                     mg97d06;
reg                     jp4a997;
reg                     ble9532;
reg                     fp32fa0;
reg                     xjc2ae1;
reg                     gof55c4;
reg                     fc86c79;
reg qv363ca;
reg vk2aea2;
reg jcc55d4;
reg yk49024;
reg ps48120;
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] bld7d3d;
reg [LANE_WIDTH - 1 : 0] ph2747b;
reg [LANE_WIDTH - 1 : 0] hd918d3;
reg [LANE_WIDTH - 1 : 0] kqd1ef3;
reg [LANE_WIDTH - 1 : 0] an8ad64;
reg [LANE_WIDTH - 1 : 0] kdf242e;
reg [LANE_WIDTH - 1 : 0] qv90ba8;
reg [LANE_WIDTH - 1 : 0] go78c41;
reg [LANE_WIDTH - 1 : 0] th409d1;
reg [LANE_WIDTH - 1 : 0] do25315;
reg [LANE_WIDTH - 1 : 0] yk4c55c;
reg [LANE_WIDTH - 1 : 0] co15701;
reg [LANE_WIDTH - 1 : 0] ea5c04d;
reg [LANE_WIDTH - 1 : 0] pu1349;
reg [LANE_WIDTH - 1 : 0] osd44d6;
reg [LANE_WIDTH - 1 : 0] ui495d3;
reg [LANE_WIDTH - 1 : 0] gb41340;
reg bnba632;
reg [LANE_WIDTH - 1 : 0] dz7bcc5;
reg [LANE_WIDTH - 1 : 0] ksa3a35;
reg [LANE_WIDTH - 1 : 0] aabc171;
reg [LANE_WIDTH - 1 : 0] ld4a8e8;
reg [LANE_WIDTH - 1 : 0] xj71008;
reg [LANE_WIDTH - 1 : 0] hb40230;
reg [LANE_WIDTH - 1 : 0] jp5a96d;
reg [LANE_WIDTH - 1 : 0] gd292a3;
reg [LANE_WIDTH - 1 : 0] rv32a5b;
reg gd952de;
reg iea96f5;
reg mr4b7a9;
reg pff3170;
reg [LANE_WIDTH - 1 : 0] wla4a4a;
reg qia9b48;
reg [2047:0] db22f5b;
wire [38:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 39,jceb7ea = 32'hfdffe0cb;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















assign lq734c3     = ph2747b & bld7d3d;

assign mg31cb8     = hd918d3 & bld7d3d;

assign ec21cd3  = kqd1ef3 & bld7d3d;


assign jeb83c0       = qv90ba8 & bld7d3d;


assign ymf011        = go78c41 & bld7d3d;


assign by4855a     = (do25315 | yk4c55c | co15701)  & bld7d3d;


assign vk963e5        = (ea5c04d | pu1349) & bld7d3d;

assign do9c873      = th409d1 & bld7d3d;


assign ne42ad2    = |(osd44d6 & bld7d3d);


assign aa15692   = |(ui495d3 & bld7d3d);



assign ohab491    = (|(kdf242e & bld7d3d) | bnba632);


assign uvfd71e    = |(gb41340 & bld7d3d);

assign rtd2721= dz7bcc5 & bld7d3d;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      co1570e      <= nrc7afa;      xlaae20  <= 1'b0;      by57107     <= {(LANE_WIDTH){1'b0}};      rib883a <= OS_IDLE;      iea65f4    <= 1'b0;      al54cbe   <= 1'b0;      mg97d06    <= 1'b0;      jp4a997    <= 1'b0;      ble9532     <= 1'b0;      fp32fa0    <= 1'b0;      xjc2ae1  <= 1'b0;      fc86c79  <= 1'b0;      gof55c4    <= 1'b0;   end   else begin      xlaae20  <= 1'b0;      iea65f4    <= 1'b0;      al54cbe   <= 1'b0;      mg97d06    <= 1'b0;      jp4a997    <= 1'b0;      ble9532     <= 1'b0;      fp32fa0    <= 1'b0;      xjc2ae1  <= 1'b0;      gof55c4    <= 1'b0;      case(co1570e)                  nrc7afa: begin            if (vk1eaec == RECOVERY) begin               co1570e      <= db3d7d6;               xlaae20  <= 1'b1;               by57107     <= bld7d3d;               rib883a <= OS_T1;            end            else begin               co1570e      <= nrc7afa;            end         end                  db3d7d6: begin            if (((qv363ca == 1'b0 && xj71008 == bld7d3d) ||                 (qv363ca == 1'b1 && xj71008 == bld7d3d && ps48120)) && ~xlaae20)  begin               co1570e      <= byebeb6;               xlaae20  <= 1'b1;               by57107     <= bld7d3d;               rib883a <= OS_T2;               gof55c4    <= 1'b1;            end            else if (jcc55d4 && ~xlaae20) begin               if (|jp5a96d == 1'b1 || qia9b48 == 1'b1) begin                  co1570e   <= gofad9e;                  by57107  <= {(LANE_WIDTH){1'b0}};                  mg97d06 <= 1'b1;               end               else begin                  co1570e   <= gofad9e;                  by57107  <= {(LANE_WIDTH){1'b0}};                  fp32fa0 <= 1'b1;               end            end            else begin               co1570e      <= db3d7d6;               fc86c79  <= (|jp5a96d) ? 1'b1 : qia9b48;            end         end                  byebeb6: begin            if (hb40230 == bld7d3d && ksa3a35 == bld7d3d && ~xlaae20 && wla4a4a == bld7d3d) begin               co1570e      <= jp5f5b3;               xlaae20  <= 1'b1;               xjc2ae1  <= 1'b1;               by57107     <= bld7d3d;               rib883a <= OS_IDLE;            end            else if (|rv32a5b == 1'b1  && |aabc171 == 1'b1 && ~xlaae20) begin               co1570e      <= gofad9e;               by57107     <= {(LANE_WIDTH){1'b0}};               mg97d06    <= 1'b1;               xjc2ae1  <= 1'b1;            end            else if (yk49024 && ~xlaae20) begin               co1570e   <= gofad9e;               by57107  <= {(LANE_WIDTH){1'b0}};               fp32fa0 <= 1'b1;            end            else begin               co1570e   <= byebeb6;            end         end                   jp5f5b3: begin            casex({gd952de, iea96f5, mr4b7a9, pff3170})               4'b1xxx: begin                  co1570e   <= gofad9e;                  by57107  <= {(LANE_WIDTH){1'b0}};                  iea65f4 <= 1'b1;               end               4'bx1xx: begin                  co1570e   <= gofad9e;                  by57107  <= {(LANE_WIDTH){1'b0}};                  al54cbe <= 1'b1;               end               4'bxx1x: begin                  co1570e   <= gofad9e;                  by57107  <= {(LANE_WIDTH){1'b0}};                  mg97d06 <= 1'b1;               end               4'bxxx1: begin                  co1570e   <= gofad9e;                  by57107  <= {(LANE_WIDTH){1'b0}};                  jp4a997 <= 1'b1;               end               default: begin                  if (gd292a3 == bld7d3d && ld4a8e8 == bld7d3d && ~xlaae20) begin                     co1570e   <= gofad9e;                     by57107  <= {(LANE_WIDTH){1'b0}};                     ble9532  <= 1'b1;                  end                  else if (vk2aea2 && ~xlaae20) begin                     co1570e   <= gofad9e;                     by57107  <= {(LANE_WIDTH){1'b0}};                     fp32fa0 <= 1'b1;                  end                  else begin                     co1570e   <= jp5f5b3;                  end               end            endcase         end                  gofad9e: begin            fc86c79  <= 1'b0;            if (vk1eaec != RECOVERY) begin               co1570e   <= nrc7afa;            end            else begin               co1570e   <= gofad9e;            end         end         default: begin            co1570e   <= nrc7afa;         end      endcase   end
end
always@* begin qv363ca<=ux17adf[0];vk2aea2<=ux17adf[1];jcc55d4<=ux17adf[2];yk49024<=ux17adf[3];ps48120<=ux17adf[4];vk1eaec<={ho57cb0>>1,ux17adf[5]};bld7d3d<={ntbaf9a>>1,ux17adf[6]};ph2747b<={vi484a9>>1,ux17adf[7]};hd918d3<={mg88480>>1,ux17adf[8]};kqd1ef3<={rg4254a>>1,ux17adf[9]};an8ad64<={db94e72>>1,ux17adf[10]};kdf242e<={pu93f0c>>1,ux17adf[11]};qv90ba8<={tu63b96>>1,ux17adf[12]};go78c41<={ic72ca9>>1,ux17adf[13]};th409d1<={gqa9095>>1,ux17adf[14]};do25315<={ep9f863>>1,ux17adf[15]};yk4c55c<={zxfc31d>>1,ux17adf[16]};co15701<={vie18ee>>1,ux17adf[17]};ea5c04d<={vx9e0f1>>1,ux17adf[18]};pu1349<={ykf078e>>1,ux17adf[19]};osd44d6<={os62ca7>>1,ux17adf[20]};ui495d3<={me495de>>1,ux17adf[21]};gb41340<={twb2a42>>1,ux17adf[22]};bnba632<=ux17adf[23];dz7bcc5<={asb_dskew_rx>>1,ux17adf[24]};ksa3a35<={lq734c3>>1,ux17adf[25]};aabc171<={mg31cb8>>1,ux17adf[26]};ld4a8e8<={ec21cd3>>1,ux17adf[27]};xj71008<={jeb83c0>>1,ux17adf[28]};hb40230<={ymf011>>1,ux17adf[29]};jp5a96d<={vk963e5>>1,ux17adf[30]};gd292a3<={do9c873>>1,ux17adf[31]};rv32a5b<={by4855a>>1,ux17adf[32]};gd952de<=ux17adf[33];iea96f5<=ux17adf[34];mr4b7a9<=ux17adf[35];pff3170<=ux17adf[36];wla4a4a<={rtd2721>>1,ux17adf[37]};qia9b48<=ux17adf[38];end
always@* begin db22f5b[2047]<=an1d8b2;db22f5b[2046]<=do83b16;db22f5b[2044]<=ep3c916;db22f5b[2040]<=nee48b5;db22f5b[2033]<=ho57cb0[0];db22f5b[2024]<=me495de[0];db22f5b[2018]<=ntbaf9a[0];db22f5b[2001]<=twb2a42[0];db22f5b[1988]<=vi484a9[0];db22f5b[1954]<=hl_gto_cfg;db22f5b[1929]<=mg88480[0];db22f5b[1874]<=ohab491;db22f5b[1860]<=asb_dskew_rx[0];db22f5b[1811]<=rg4254a[0];db22f5b[1789]<=vx9e0f1[0];db22f5b[1700]<=uvfd71e;db22f5b[1673]<=lq734c3[0];db22f5b[1574]<=db94e72[0];db22f5b[1530]<=ykf078e[0];db22f5b[1353]<=rtd2721[0];db22f5b[1299]<=mg31cb8[0];db22f5b[1258]<=by4855a[0];db22f5b[1247]<=ep9f863[0];db22f5b[1102]<=jeb83c0[0];db22f5b[1101]<=pu93f0c[0];db22f5b[1023]<=ext_sync;db22f5b[1012]<=os62ca7[0];db22f5b[937]<=aa15692;db22f5b[894]<=vie18ee[0];db22f5b[658]<=fc86c79;db22f5b[629]<=do9c873[0];db22f5b[623]<=gqa9095[0];db22f5b[551]<=ec21cd3[0];db22f5b[468]<=ne42ad2;db22f5b[447]<=zxfc31d[0];db22f5b[314]<=vk963e5[0];db22f5b[311]<=ic72ca9[0];db22f5b[157]<=ymf011[0];db22f5b[155]<=tu63b96[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





















































































`timescale 1 ns / 100 ps
module pcie_x1_zz9c0c (
    
    sys_clk,
    rst_n, 

    hd3d9f9,      
    ui67e7e,    

    
    blf9f8b,      
    xj7e2fa,    
    vx8beba,    
    icfaeb6,    
    rvbad86,    
    oub61b5,    
    do86d4f,    
    bnb53d4,    
    th4f530    
   ) ;

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam zm8910e = 4'd0 ;
localparam xw48872  = 4'd1 ;
localparam mr44393  = 4'd2 ;
localparam sw21c9c  = 4'd3 ;
localparam fce4e0 = 4'd4 ;
localparam ww72703  = 4'd5 ;
localparam xy93819   = 4'd6 ;
localparam pu9c0cb   = 4'd7 ;
localparam goe065b   = 4'd8 ;
localparam tj32d9   = 4'd9 ;
localparam db196cf   = 4'd10 ;
localparam oscb67f   = 4'd11 ;
input                     sys_clk;
input                     rst_n;
input   [15:0]            hd3d9f9;
input   [1:0]             ui67e7e;
output                    blf9f8b ;
output                    xj7e2fa ;
output                    vx8beba ;
output  [7:0]             icfaeb6;
output                    rvbad86;
output  [7:0]             oub61b5;
output                    do86d4f;
output  [7:0]             bnb53d4;
output  [7:0]             th4f530;
wire                  yxf8e4d ;
wire                  thc726d ;
wire                  cb3936f ;
wire                  uvc9b7c ;
wire                  ne4dbe5 ;
wire                  ic6df2b ;
wire                  ip6f958 ;
wire                  lq7cac5 ;
wire                  qge562b ;
wire                  sw2b159 ;
wire                  jc58ac8 ;
wire                  hoc5642 ;
wire                  ec2b212 ;
wire                  ay59090 ;
wire                  thc8481 ;
wire                  by4240e ;
wire                  oh12073 ;
reg                   blf9f8b ;
reg                   xj7e2fa ;
reg                   vx8beba ;
reg  [7:0]            icfaeb6;
reg  [7:0]            oub61b5;
reg                   rvbad86;
reg                   do86d4f;
reg  [7:0]            bnb53d4;
reg  [7:0]            th4f530;
reg                   nrd20ba ;
reg [3:0]             kf905d6 ;
reg                   ou82eb5 ;
reg                   kf175a8 ;
reg                   ntbad44 ;
reg [7:0]             end6a26;
reg [7:0]             vxb5135;
reg                   lsa89ae;
reg                   gb44d72;
reg [7:0]             cb26b95;
reg [7:0]             ls35cad;
reg [15 : 0] ohae56b;
reg [1 : 0] cm72b5c;
reg qv95ae0;
reg hqad704;
reg fn6b823;
reg me5c11f;
reg ice08f9;
reg do47c8;
reg an23e42;
reg uk1f215;
reg thf90a8;
reg blc8546;
reg ne42a36;
reg aa151b2;
reg nga8d91;
reg ui46c8a;
reg gd36450;
reg zmb2285;
reg xl9142b;
reg qv8a15f;
reg [3 : 0] jp50afd;
reg ep857ee;
reg gq2bf74;
reg xj5fba1;
reg [7 : 0] uvfdd0f;
reg [7 : 0] lqee87d;
reg ld743eb;
reg kfa1f5e;
reg [7 : 0] swfaf4;
reg [7 : 0] su7d7a0;
reg [2047:0] db22f5b;
wire [29:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

localparam ribd6fd = 30,jceb7ea = 32'hfdffe44b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















assign yxf8e4d = (cm72b5c[0] & (ohae56b[7:0]  ==K28_5)) ;
assign thc726d = (cm72b5c[1] & (ohae56b[15:8] ==K28_5)) ;
assign cb3936f = (~cm72b5c[0] & (ohae56b[7:0]  == D10_2)) ;
assign uvc9b7c = (~cm72b5c[1] & (ohae56b[15:8] == D10_2)) ;
assign ne4dbe5  = fn6b823 & me5c11f ;
assign ic6df2b = (~cm72b5c[0] & (ohae56b[7:0]  == D5_2)) ;
assign ip6f958 = (~cm72b5c[1] & (ohae56b[15:8] == D5_2)) ;
assign lq7cac5  = do47c8 & an23e42 ;
assign qge562b = (~cm72b5c[0] & (ohae56b[7:0]  == D21_5)) ;
assign sw2b159 = (~cm72b5c[1] & (ohae56b[15:8] == D21_5)) ;
assign jc58ac8  = thf90a8 & blc8546 ;
assign hoc5642 = (~cm72b5c[0] & (ohae56b[7:0]  == D26_5)) ;
assign ec2b212 = (~cm72b5c[1] & (ohae56b[15:8] == D26_5)) ;
assign ay59090  = aa151b2 & nga8d91 ;
assign thc8481  = fn6b823 | thf90a8  | do47c8 | aa151b2 ;
assign by4240e  = me5c11f | blc8546  | an23e42 | nga8d91 ;
assign oh12073   = ice08f9  | ne42a36   | uk1f215  | ui46c8a ;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kf905d6    <= zm8910e;   end   else begin      case(jp50afd)                              zm8910e:                                if (hqad704)                           kf905d6 <= xw48872;            else if (qv95ae0)                      kf905d6 <= mr44393;            else               kf905d6 <= zm8910e;         xw48872:                                  if (!cm72b5c[0])               kf905d6 <= fce4e0;            else if (hqad704)                       kf905d6 <= xw48872;            else if (qv95ae0)                       kf905d6 <= mr44393;            else               kf905d6 <= zm8910e;         mr44393:                                  if (hqad704)                            kf905d6 <= xw48872;            else if (qv95ae0)                       kf905d6 <= mr44393;            else               kf905d6 <= sw21c9c;         sw21c9c:                                  if (!cm72b5c[1])               kf905d6 <= ww72703;            else if (hqad704)                       kf905d6 <= xw48872;            else if (qv95ae0)                       kf905d6 <= mr44393;            else               kf905d6 <= zm8910e;         fce4e0:                                  if (hqad704)                             kf905d6 <= xw48872;            else if (qv95ae0)                        kf905d6 <= mr44393;            else if (cm72b5c == 2'b00 && !qv8a15f)                    kf905d6 <= xy93819;    else if (cm72b5c == 2'b00 && qv8a15f)                     kf905d6 <= ww72703;            else               kf905d6 <= zm8910e;         ww72703:                                  if (hqad704)                            kf905d6 <= xw48872;            else if (qv95ae0)                      kf905d6 <= mr44393;    else               kf905d6 <= xy93819;         xy93819:            if (xl9142b && !qv8a15f)               kf905d6    <= pu9c0cb;            else if (gd36450 && qv8a15f)               kf905d6 <= pu9c0cb;            else               kf905d6 <= zm8910e;         pu9c0cb:            if (xl9142b)               kf905d6 <= goe065b;            else               kf905d6 <= zm8910e;         goe065b:            if (xl9142b)               kf905d6 <= tj32d9;            else               kf905d6 <= zm8910e;         tj32d9:            if (xl9142b)               kf905d6 <= db196cf;            else               kf905d6 <= zm8910e;         db196cf:            if (qv95ae0)                              kf905d6 <= mr44393;            else               kf905d6 <= zm8910e;         default:            kf905d6    <= zm8910e;      endcase   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      nrd20ba  <= 1'b0;      else begin      if (qv95ae0)         nrd20ba  <= 1'b1;      else if(hqad704)         nrd20ba  <= 1'b0;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ou82eb5  <= 1'b0;   else if ((jp50afd == db196cf) && (ice08f9 || ne42a36))      ou82eb5  <= 1'b1;   else if ((jp50afd == db196cf) && (me5c11f || blc8546) && qv8a15f)      ou82eb5 <= 1'b1;   else      ou82eb5  <= 1'b0;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      kf175a8  <= 1'b0;   else if ((jp50afd == db196cf) && (uk1f215 ||ui46c8a))      kf175a8  <= 1'b1;   else if ((jp50afd == db196cf) && (an23e42 || nga8d91) && qv8a15f)      kf175a8 <= 1'b1;   else      kf175a8  <= 1'b0;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ntbad44  <= 1'b0;   else if ((jp50afd == db196cf) && (ne42a36 || ui46c8a))      ntbad44  <= 1'b1;   else if ((jp50afd == db196cf) && (blc8546 || nga8d91) && qv8a15f)      ntbad44 <= 1'b1;   else      ntbad44  <= 1'b0;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      blf9f8b   <= 1'b0;      xj7e2fa   <= 1'b0;      vx8beba <= 1'b0;   end   else begin      blf9f8b   <= ep857ee;      xj7e2fa   <= gq2bf74;      vx8beba <= xj5fba1;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      end6a26       <= 8'h00;      lsa89ae <= 1'b0;   end                           else if (hqad704) begin      end6a26       <= ohae56b[7:0];      lsa89ae <= cm72b5c[0];   end   else if (qv8a15f && (jp50afd == mr44393)) begin      end6a26       <= ohae56b[15:8];      lsa89ae <= cm72b5c[1];   end   else begin      end6a26       <= uvfdd0f;      lsa89ae <= ld743eb;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vxb5135       <= 8'h00;      gb44d72 <= 1'b0;   end   else if (qv8a15f && (jp50afd == mr44393)) begin      vxb5135       <= ohae56b[7:0];      gb44d72 <= cm72b5c[0];   end   else if (!qv8a15f && (jp50afd == xw48872)) begin      vxb5135       <= ohae56b[15:8];      gb44d72 <= cm72b5c[1];   end   else begin      vxb5135       <= lqee87d;      gb44d72 <= kfa1f5e;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      cb26b95 <= 8'h00;   else if (!qv8a15f && (jp50afd == xw48872))      cb26b95 <= ohae56b[7:0];   else if (qv8a15f && (jp50afd == sw21c9c))      cb26b95 <= ohae56b[15:8];   else      cb26b95 <= swfaf4;
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ls35cad <= 8'h00;   else if (!qv8a15f && (jp50afd == fce4e0))      ls35cad <= ohae56b[7:0];   else if (qv8a15f && (jp50afd == ww72703))      ls35cad <= ohae56b[15:8];   else      ls35cad <= su7d7a0;
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      icfaeb6       <= 8'h00;      rvbad86 <= 1'b0;      oub61b5       <= 8'h00;      do86d4f <= 1'b0;      bnb53d4       <= 8'h00;      th4f530       <= 8'h00;   end   else if (ep857ee || gq2bf74 || vx8beba)  begin      icfaeb6       <= uvfdd0f;      rvbad86 <= ld743eb;      oub61b5       <= lqee87d;      do86d4f <= kfa1f5e;      bnb53d4       <= swfaf4;      th4f530       <= su7d7a0;   end
end
always@* begin ohae56b<={hd3d9f9>>1,ux17adf[0]};cm72b5c<={ui67e7e>>1,ux17adf[1]};qv95ae0<=ux17adf[2];hqad704<=ux17adf[3];fn6b823<=ux17adf[4];me5c11f<=ux17adf[5];ice08f9<=ux17adf[6];do47c8<=ux17adf[7];an23e42<=ux17adf[8];uk1f215<=ux17adf[9];thf90a8<=ux17adf[10];blc8546<=ux17adf[11];ne42a36<=ux17adf[12];aa151b2<=ux17adf[13];nga8d91<=ux17adf[14];ui46c8a<=ux17adf[15];gd36450<=ux17adf[16];zmb2285<=ux17adf[17];xl9142b<=ux17adf[18];qv8a15f<=ux17adf[19];jp50afd<={kf905d6>>1,ux17adf[20]};ep857ee<=ux17adf[21];gq2bf74<=ux17adf[22];xj5fba1<=ux17adf[23];uvfdd0f<={end6a26>>1,ux17adf[24]};lqee87d<={vxb5135>>1,ux17adf[25]};ld743eb<=ux17adf[26];kfa1f5e<=ux17adf[27];swfaf4<={cb26b95>>1,ux17adf[28]};su7d7a0<={ls35cad>>1,ux17adf[29]};end
always@* begin db22f5b[2047]<=ui67e7e[0];db22f5b[2046]<=yxf8e4d;db22f5b[2044]<=thc726d;db22f5b[2040]<=cb3936f;db22f5b[2033]<=uvc9b7c;db22f5b[2019]<=ne4dbe5;db22f5b[1991]<=ic6df2b;db22f5b[1934]<=ip6f958;db22f5b[1898]<=ay59090;db22f5b[1821]<=lq7cac5;db22f5b[1749]<=thc8481;db22f5b[1707]<=nrd20ba;db22f5b[1666]<=cb26b95[0];db22f5b[1595]<=qge562b;db22f5b[1450]<=by4240e;db22f5b[1440]<=lsa89ae;db22f5b[1384]<=end6a26[0];db22f5b[1370]<=kf175a8;db22f5b[1366]<=kf905d6[0];db22f5b[1284]<=ls35cad[0];db22f5b[1142]<=sw2b159;db22f5b[1023]<=hd3d9f9[0];db22f5b[949]<=ec2b212;db22f5b[853]<=oh12073;db22f5b[833]<=gb44d72;db22f5b[720]<=vxb5135[0];db22f5b[692]<=ntbad44;db22f5b[685]<=ou82eb5;db22f5b[474]<=hoc5642;db22f5b[237]<=jc58ac8;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule
























































`timescale 1 ns / 100 ps
module pcie_x1_bnbfbd0 
   (
    
    sys_clk,            
    rst_n,              
    normal_time,        
    reduce_idlecnt,     

    
    LINK_NUM,           
    N_FTS_INC,          
    TX_EIDL_CNT,        

    
    asb_data,           
    asb_kcntl,          
    asb_eidle_rx,       
    asb_detdone_rx,     
    asb_detres_rx,      
    asb_dskew_rx,       
    asb_beacon_rx,      
    asb_lane_sync,      

    
    cfgcs_losel,        
    ext_sync,           
    no_pcie_train,      
    
    
    qte803d,        
    swf6e,       

    
    hl_disable_scr,     
    hl_gto_dis,         
    hl_gto_det,         
    hl_gto_hrst,        
    hl_gto_l0stx,       
    hl_gto_l1,          
    hl_gto_l2,          
    hl_gto_l0stxfts,    
    hl_gto_lbk,         
    hl_gto_rcvry,       
    hl_gto_cfg,         
    hl_snd_beacon,      
    dll_rtrn_lnk,       
    cfg_rtrn_lnk,       

    ls862e8,       
    ou31743,       
    jr8ba18,       

    
    xy891e4,  
    ho48f22,         
    ne47913,        
    cb3c89a,          
    xwe44d5,       
    zz226ab,      
    ltssm_cfgln_sum,    
    fa57f9b,  
    ltssm_config_ln,    
    cz44a17,    
    gq24630,     
    thf6aed,     
    xlb576e,    
    cbabb76,    
    ieacf60,   
    eneddaa,       
    dz6ed54,      
    xw76aa7,      
    fn6e3cf,        
    zzaa9d6,     
    ltssm_l0,           
    l0s_tx_state,       
    l1_state,           
    l2_state,           
    pol_compliance,     
    ymbc4aa        
    );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
input                       sys_clk;
input                       rst_n;
input                       normal_time;
input                       reduce_idlecnt;
input [7:0]                 LINK_NUM;
input [4:0]                 N_FTS_INC;
input [3:0]                 TX_EIDL_CNT ;
input [16*LANE_WIDTH-1:0]   asb_data;
input [2*LANE_WIDTH-1:0]    asb_kcntl;
input [LANE_WIDTH-1:0]      asb_eidle_rx;
input [LANE_WIDTH-1:0]      asb_detdone_rx;
input [LANE_WIDTH-1:0]      asb_detres_rx;
input [LANE_WIDTH-1:0]      asb_dskew_rx;
input [LANE_WIDTH-1:0]      asb_beacon_rx;
input [LANE_WIDTH-1:0]      asb_lane_sync;
input                       ext_sync;
input   [2:0]               cfgcs_losel;
input                       no_pcie_train;
input   [3:0]               qte803d;
input                       swf6e;
input                       hl_disable_scr;
input                       hl_gto_dis;
input                       hl_gto_det;
input                       hl_gto_hrst;
input                       hl_gto_l0stx;
input                       hl_gto_l1;
input                       hl_gto_l2;
input                       hl_gto_l0stxfts;
input [LANE_WIDTH-1:0]      hl_gto_lbk;
input                       hl_gto_rcvry;
input                       hl_gto_cfg;
input                       hl_snd_beacon;
input                       cfg_rtrn_lnk;
input                       dll_rtrn_lnk;
input                       ls862e8;
input                       ou31743;
input                       jr8ba18;
output                      xy891e4;
output [16*LANE_WIDTH-1:0]  ho48f22;
output [2*LANE_WIDTH-1:0]   ne47913;
output [LANE_WIDTH-1:0]     cb3c89a;
output [2*LANE_WIDTH-1:0]   xwe44d5;
output                      zz226ab;
output  [2:0]               ltssm_cfgln_sum;
output                      fa57f9b;
output  [LANE_WIDTH-1:0]    ltssm_config_ln;
output  [LANE_WIDTH-1:0]    cz44a17;
output  [LANE_WIDTH-1:0]    gq24630;
output  [LANE_WIDTH-1:0]    thf6aed;
output                      xlb576e;
output                      cbabb76;
output                      ieacf60;
output                      eneddaa;
output                      dz6ed54;
output                      xw76aa7;
output  [MSM_WIDTH:0]       fn6e3cf;
output  [2:0]               zzaa9d6;
output                      ltssm_l0;
output [L0sTSM_WIDTH:0]     l0s_tx_state;
output [L1SM_WIDTH:0]       l1_state;
output [L2SM_WIDTH:0]       l2_state;
output                      pol_compliance;
output                      ymbc4aa;
parameter ayc47f5    = 32'd8;
parameter cb23fa8   = 32'd2;
parameter ks1fd45   = 32'd4;
parameter tufea29  = 32'd64;
parameter ykf514a    = 32'd256;
parameter jea8a50   = 18  * ayc47f5;
parameter ir29416   = 34  * ayc47f5;

`ifdef DENALI_SIMULATE // For DENALI simulation only
parameter ld505af = 40 * ayc47f5;
parameter xl16bf8    = 32'd200;
parameter rvb5fc7    = 2   * xl16bf8;
parameter kd7f1ff    = 6   * xl16bf8;
parameter ldc7fed   = 12  * xl16bf8;
parameter meffb72   = 24  * xl16bf8;
parameter czedc85   = 48  * xl16bf8;
parameter ui72166   = 50  * xl16bf8;
parameter wl8598c  = 100 * xl16bf8;

`else

`ifdef SIMULATE // For simulation only
parameter vi6632c  = 32'd1000;
parameter xl16bf8    = 32'd100;
parameter kd7f1ff    = 6  * 50;
parameter ui72166   = 50 * 50;

`ifdef LTSSM_MACO
parameter ld505af = 60  * ayc47f5;
parameter rvb5fc7    = 2   * 100;
parameter ldc7fed   = 12  * 50;
parameter meffb72   = 24  * 50;
parameter czedc85   = 48  * 50;
parameter wl8598c  = 100 * 50;

`else
parameter ld505af = 6 * ayc47f5;
parameter rvb5fc7    = 3  * 80;

`ifndef MULTI_4
parameter ldc7fed   = 2  * 50 * 2;
parameter meffb72   = 4  * 50 * 2;
parameter czedc85   = 8  * 50 * 2;
parameter wl8598c  = 10 * 50 * 2;

`else
parameter ldc7fed   = 2  * 50;
parameter meffb72   = 4  * 50;
parameter czedc85   = 8  * 50;
parameter wl8598c  = 10 * 50;

`endif

`endif

`else           // Actual values
parameter vi6632c  = 32'd16000;
parameter xl16bf8    = 32'd125000;
parameter ld505af = 32'd1030* ayc47f5;
parameter rvb5fc7    = 32'd2   * xl16bf8;
parameter ldc7fed   = 32'd12  * xl16bf8;
parameter meffb72   = 32'd24  * xl16bf8;
parameter czedc85   = 32'd48  * xl16bf8;
parameter wl8598c  = 32'd100 * xl16bf8;
parameter kd7f1ff    = 32'd6   * xl16bf8;
parameter ui72166   = 32'd50  * xl16bf8;

`endif

`endif
wire   [MSM_WIDTH:0]       ho57cb0;
wire   [LANE_WIDTH-1:0]    sjbe583;
wire   [LANE_WIDTH-1:0]    ntbaf9a;
wire   [LANE_WIDTH-1:0]    icde7f7;
wire                       shd9637;
wire                       wy974c8;
wire                       fpba640;
wire                       ps58de9;
wire                       kq72ab5;
wire                       kd4e556;
wire  [LANE_WIDTH-1:0]     tw255fe;
wire  [LANE_WIDTH-1:0]     ri2aff3;
wire  [LANE_WIDTH-1:0]     dzf6922;
wire  [LANE_WIDTH-1:0]     yxed3c8;
wire  [LANE_WIDTH-1:0]     by57107;
wire  [LANE_WIDTH-1:0]     by79cba;
wire  [LANE_WIDTH-1:0]     rgd0c72;
wire  [LANE_WIDTH-1:0]     zk5d0c6;
wire  [LANE_WIDTH-1:0]     xw7c12f;
wire  [LANE_WIDTH-1:0]     wwea1f7;
wire  [LANE_WIDTH-1:0]     qg4346c;
wire  [LANE_WIDTH-1:0]     mt3c515;
wire  [LANE_WIDTH-1:0]     ic53b4f;
wire  [LANE_WIDTH-1:0]     ym2bd0f;
wire  [LANE_WIDTH-1:0]     ay4319d;
wire  [LANE_WIDTH-1:0]     dbaf825;
wire  [LANE_WIDTH-1:0]     rtdd43e;
wire  [LANE_WIDTH-1:0]     rtc81e3;
wire  [LANE_WIDTH-1:0]     jr8e499;
wire  [OS_WIDTH -1:0]      yzb4916;
wire  [OS_WIDTH -1:0]      jc69e45;
wire  [OS_WIDTH -1:0]      rib883a;
wire  [OS_WIDTH -1:0]      osce5d3;
wire  [OS_WIDTH -1:0]      pu86392;
wire  [OS_WIDTH -1:0]      kde8633;
wire  [OS_WIDTH -1:0]      eae097a;
wire  [OS_WIDTH -1:0]      rt50fb8;
wire  [OS_WIDTH -1:0]      co1a361;
wire                       qv85f1a;
wire  [8:0]                do2f8d5;
reg   [31:0]               xw7c6ab;
wire                       hbe355a;
wire                       tu42f5f;
wire                       yz17afa;
wire                       anab58b;
wire  [LANE_WIDTH-1:0]    dzc85e9;
wire  [LANE_WIDTH-1:0]    dm42f4e;
wire  [LANE_WIDTH-1:0]    vx9e0f1;
wire  [LANE_WIDTH-1:0]    ykf078e;
wire  [LANE_WIDTH-1:0]    fp16539;
wire  [LANE_WIDTH-1:0]    xyb29ce;
wire  [LANE_WIDTH-1:0]    ec8d556;
wire  [LANE_WIDTH-1:0]    hqa7396;
wire  [LANE_WIDTH-1:0]    wl39cb2;
wire  [LANE_WIDTH-1:0]    lfaac2f;
wire  [LANE_WIDTH-1:0]    db94e72;
wire  [LANE_WIDTH-1:0]    pu93f0c;
wire  [LANE_WIDTH-1:0]    ls96548;
wire  [LANE_WIDTH-1:0]    ayce595;
wire  [LANE_WIDTH-1:0]    fpc772;
wire  [LANE_WIDTH-1:0]    tu63b96;
wire  [LANE_WIDTH-1:0]    ep9f863;
wire  [LANE_WIDTH-1:0]    zxfc31d;
wire  [LANE_WIDTH-1:0]    vie18ee;
wire  [LANE_WIDTH-1:0]    cm72ce2;
wire  [LANE_WIDTH-1:0]    ic72ca9;
wire  [LANE_WIDTH-1:0]    ymb3882;
wire  [LANE_WIDTH-1:0]    gqa9095;
wire  [LANE_WIDTH-1:0]    qt75f04;
wire  [LANE_WIDTH-1:0]    ngbd395;
wire  [LANE_WIDTH-1:0]    yzbb59b;
wire  [LANE_WIDTH-1:0]    swa9eea;
wire  [LANE_WIDTH-1:0]    ir868d;
wire  [LANE_WIDTH-1:0]    wl95212;
wire  [LANE_WIDTH-1:0]    twb2a42;
wire  [LANE_WIDTH-1:0]    os62ca7;
wire  [LANE_WIDTH-1:0]    me495de;
wire  [8*LANE_WIDTH-1:0]  zx4aef0;
wire  [8*LANE_WIDTH-1:0]  tud54f0;
wire  [LANE_WIDTH-1:0]    zk63ef8;
wire  [LANE_WIDTH-1:0]    fafbe18;
wire  [LANE_WIDTH-1:0]    uvf8612;
wire  [LANE_WIDTH-1:0]    sj184a5;
wire  [LANE_WIDTH-1:0]    kf1296f;
wire  [LANE_WIDTH-1:0]    rva5bee;
wire  [LANE_WIDTH-1:0]    of6fbb6;
wire  [LANE_WIDTH-1:0]    dmeeda9;
wire  [LANE_WIDTH-1:0]    aab6a5a;
wire  [LANE_WIDTH-1:0]    gqa9686;
wire  [LANE_WIDTH-1:0]    fn5a18d;
wire  [LANE_WIDTH-1:0]    ri86372;
wire  [LANE_WIDTH-1:0]    ec8dc99;
wire  [LANE_WIDTH-1:0]    ay7264e;
wire  [LANE_WIDTH-1:0]    hq9938a;
wire  [LANE_WIDTH-1:0]    en4e29d;
wire  [LANE_WIDTH-1:0]    gd8a76e;
wire  [LANE_WIDTH-1:0]    sw9dba9;
wire  [LANE_WIDTH-1:0]    nr6ea44;
wire  [LANE_WIDTH-1:0]    yma913c;
wire  [16*LANE_WIDTH-1:0]  ho48f22;
wire  [2*LANE_WIDTH-1:0]   ne47913;
wire  [2*LANE_WIDTH-1:0]   xwe44d5;
wire  [LANE_WIDTH-1:0]     cb3c89a;
wire                       vk250bd;
wire                       ead10a6;
wire                       tu42988;
wire                       xy14c42;
wire                       vi484a9;
wire                       mg88480;
wire                       rg4254a;
wire  [8*LANE_WIDTH-1:0]   faebeaa;
wire  [8*LANE_WIDTH-1:0]   pf5f553;
wire  [LANE_WIDTH-1:0]     ho76527 ;
wire                       je3ac05 ;
wire                       yxd602a ;
wire                       vxb0154 ;
wire                       mt80aa6 ;
wire                       gd9529d;
wire                       yxd66eb;
wire                       gof55c4;
reg                        aaa6a1c;
reg                        vk350e1;
reg                        lsa870a;
reg                        ic43853;
reg                        ph1c298;
reg  [LANE_WIDTH-1:0]      yma63b;
reg  [7:0]                 jr285eb;
reg  [7:0]                 wy98ec8;
reg  [LANE_WIDTH-1:0]      fp8192a;
reg  [OS_WIDTH -1:0]       vxc957;
reg                        dbbfcdb;
reg                        byfe6de;
reg  [LANE_WIDTH-1:0]      rtf36f3;
reg  [31:0]                bl6ef6f;
reg  [31:0]                go77b7f;
reg                        xj64abf;
reg                        pfec594;
reg                        an1d8b2;
reg                        vi6673c  ;
reg                        do83b16;
reg                        ep3c916;
reg                        pf409a9;
reg                        twb290a;
reg                        xybd7d5;
reg                        bl6ea75;
reg                        ip753af;
reg                        nee48b5;
reg                        jeb76b3;
reg                        ukb3686;
reg                        kdc6064;
reg                        hq30325;
reg  [7:0]                 uxb46f3;
reg  [MSM_WIDTH:0]         fn6e3cf;
reg  [2:0]                 zzaa9d6;
reg  [LANE_WIDTH-1:0]      ltssm_config_ln;
reg  [2:0]                 ltssm_cfgln_sum;
reg                        fa57f9b;
wire  [LANE_WIDTH-1:0]     kdc667c;
wire  [LANE_WIDTH-1:0]     pu99f2d;
wire  [LANE_WIDTH-1:0]     dm7cb52;
wire  [LANE_WIDTH-1:0]     zz2d498;
wire  [LANE_WIDTH-1:0]     jc5263c;
wire  [LANE_WIDTH-1:0]     gq98f12;
wire  [LANE_WIDTH-1:0]     mt3c486;
wire  [LANE_WIDTH-1:0]     mt121a4;
wire  [OS_WIDTH -1:0]      zm86924;
wire  [OS_WIDTH -1:0]      sja4911;
wire   [LANE_WIDTH-1:0]    wy24460;
wire   [LANE_WIDTH-1:0]    xy1180e;
wire  [CFGSM_WIDTH:0]      qt60392;
wire  [CFGSM_WIDTH:0]      bae4ab;
wire                       iea94ed;
wire                       nr4a769;
wire                       ym9da79;
reg                        wlab64d;
reg                        qt5b26c  ;
reg                        mrd9364  ;
reg                        kdc9b25  ;
reg                        lq4d92d;
reg                        tu6c96b  ;
reg                        th64b5a  ;
reg                        ng25ad6  ;
reg   [LANE_WIDTH-1:0]     xj6b597;
reg   [LANE_WIDTH-1:0]     kdd65f7;
reg   [LANE_WIDTH-1:0]     ie97de2;
reg   [LANE_WIDTH-1:0]     enf788c;
reg   [LANE_WIDTH-1:0]     kde2320;
reg   [LANE_WIDTH-1:0]     fc8c822;
reg   [LANE_WIDTH-1:0]     ng2089f;
reg   [LANE_WIDTH-1:0]     jr227d2;
reg   [LANE_WIDTH-1:0]     oh9f4b7;
reg   [LANE_WIDTH-1:0]     nrd2de1;
reg   [LANE_WIDTH-1:0]     ngb787b;
reg   [LANE_WIDTH-1:0]     nee1ed0;
reg   [LANE_WIDTH-1:0]     jp7b411;
reg   [LANE_WIDTH-1:0]     vid047a;
reg   [LANE_WIDTH-1:0]     pu11e99;
reg   [LANE_WIDTH-1:0]     kd7a655;
reg   [LANE_WIDTH-1:0]     ls9956c;
reg   [LANE_WIDTH-1:0]     pf55b1a;
reg   [LANE_WIDTH-1:0]     ne6c6b2;
reg   [LANE_WIDTH-1:0]     ie1ac9a;

`ifdef GEN2
reg                     end64d1 ;
reg                     pub268c ;

`endif
wire  [DSM_WIDTH:0]        wyacad8;
wire  [PSM_WIDTH:0]        bn16b0f;
wire  [CFGSM_WIDTH:0]      fnd7cd6;
wire  [L0SM_WIDTH:0]       nr40f1e;
wire  [L0sTSM_WIDTH:0]     sw92679;
wire  [L0sRSM_WIDTH:0]     cm5c3fb;
wire  [L1SM_WIDTH:0]       ksf354;
wire  [L2SM_WIDTH:0]       vve9961;
wire  [RSM_WIDTH:0]        co1570e;
wire  [LBSM_WIDTH:0]       qtf7180;
wire  [HRSM_WIDTH:0]       tu6c201;
wire  [DISM_WIDTH:0]       ip7a0d2;

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef GEN2

`else 

`endif
localparam ec1f906    = (32'd4096 + 1'd1);

`ifdef LW1

`endif

`ifdef LW2

`endif

`ifdef LW4

`endif
reg [3:0]     zxfc831;
reg [3:0]     zke418f;

`ifdef GEN2

`endif

`ifdef DOWN_X1

`else

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`endif
reg swa9c05;
reg fnd7c7b;
reg [7 : 0] hq2af68;
reg [4 : 0] ep8f6b9;
reg [3 : 0] dm57b43;
reg [16 * LANE_WIDTH - 1 : 0] zx6bb34;
reg [2 * LANE_WIDTH - 1 : 0] vvecd3a;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg [LANE_WIDTH - 1 : 0] rv28b28;
reg [LANE_WIDTH - 1 : 0] ep2ca37;
reg [LANE_WIDTH - 1 : 0] dz7bcc5;
reg [LANE_WIDTH - 1 : 0] sj90508;
reg [LANE_WIDTH - 1 : 0] aa82845;
reg [2 : 0] enf25fa;
reg qv363ca;
reg ria263b;
reg [3 : 0] zzbf549;
reg fa52de6;
reg xw5d8c5;
reg rtec62a;
reg dz6e0fd;
reg xwf4f7c;
reg aa965;
reg fc4b29;
reg tw2594b;
reg wyb3ad1;
reg [LANE_WIDTH - 1 : 0] gd18aba;
reg oh2ca5a;
reg bnba632;
reg oha1578;
reg en652d4;
reg cb296a5;
reg coabc5;
reg xj55e28;
reg ntaf146;
reg [MSM_WIDTH : 0] vk1eaec;
reg [LANE_WIDTH - 1 : 0] qvabb18;
reg [LANE_WIDTH - 1 : 0] bld7d3d;
reg [LANE_WIDTH - 1 : 0] gd9a703;
reg dm4d61f;
reg dm76ceb;
reg vi423f9;
reg jc587d6;
reg en6012c;
reg qtcc025;
reg [LANE_WIDTH - 1 : 0] an8fe3c;
reg [LANE_WIDTH - 1 : 0] gb7f1e4;
reg [LANE_WIDTH - 1 : 0] ou8801c;
reg [LANE_WIDTH - 1 : 0] qi706;
reg [LANE_WIDTH - 1 : 0] lf1c186;
reg [LANE_WIDTH - 1 : 0] tj61b8;
reg [LANE_WIDTH - 1 : 0] ls86e3b;
reg [LANE_WIDTH - 1 : 0] dob8ed7;
reg [LANE_WIDTH - 1 : 0] ie3b5df;
reg [LANE_WIDTH - 1 : 0] pfd77cb;
reg [LANE_WIDTH - 1 : 0] dmdf2f4;
reg [LANE_WIDTH - 1 : 0] cmcbd16;
reg [LANE_WIDTH - 1 : 0] lqf4585;
reg [LANE_WIDTH - 1 : 0] rv16153;
reg [LANE_WIDTH - 1 : 0] kf854f7;
reg [LANE_WIDTH - 1 : 0] su53de2;
reg [LANE_WIDTH - 1 : 0] qtf788f;
reg [LANE_WIDTH - 1 : 0] yxe23e0;
reg [LANE_WIDTH - 1 : 0] sj8f822;
reg [OS_WIDTH - 1 : 0] yke08a2;
reg [OS_WIDTH - 1 : 0] lf22882;
reg [OS_WIDTH - 1 : 0] baa20bb;
reg [OS_WIDTH - 1 : 0] wy82ed1;
reg [OS_WIDTH - 1 : 0] epbb444;
reg [OS_WIDTH - 1 : 0] med112a;
reg [OS_WIDTH - 1 : 0] qt44a89;
reg [OS_WIDTH - 1 : 0] tw2a26b;
reg [OS_WIDTH - 1 : 0] ba89ad5;
reg rg4d6ab;
reg [8 : 0] nr6b55a;
reg [31 : 0] xj5aad6;
reg tud56b7;
reg do9c692;
reg rte3493;
reg kdd6ee7;
reg [LANE_WIDTH - 1 : 0] czd61cb;
reg [LANE_WIDTH - 1 : 0] ks872e7;
reg [LANE_WIDTH - 1 : 0] ea5c04d;
reg [LANE_WIDTH - 1 : 0] pu1349;
reg [LANE_WIDTH - 1 : 0] fp1358a;
reg [LANE_WIDTH - 1 : 0] czd62b5;
reg [LANE_WIDTH - 1 : 0] ui67e23;
reg [LANE_WIDTH - 1 : 0] vxb5921;
reg [LANE_WIDTH - 1 : 0] fn64878;
reg [LANE_WIDTH - 1 : 0] oscba27;
reg [LANE_WIDTH - 1 : 0] an8ad64;
reg [LANE_WIDTH - 1 : 0] kdf242e;
reg [LANE_WIDTH - 1 : 0] ks3104d;
reg [LANE_WIDTH - 1 : 0] aa21e31;
reg [LANE_WIDTH - 1 : 0] xy25a02;
reg [LANE_WIDTH - 1 : 0] qv90ba8;
reg [LANE_WIDTH - 1 : 0] do25315;
reg [LANE_WIDTH - 1 : 0] yk4c55c;
reg [LANE_WIDTH - 1 : 0] co15701;
reg [LANE_WIDTH - 1 : 0] kq68097;
reg [LANE_WIDTH - 1 : 0] go78c41;
reg [LANE_WIDTH - 1 : 0] yx754b7;
reg [LANE_WIDTH - 1 : 0] th409d1;
reg [LANE_WIDTH - 1 : 0] do83f74;
reg [LANE_WIDTH - 1 : 0] gbe7300;
reg [LANE_WIDTH - 1 : 0] en7f2d4;
reg [LANE_WIDTH - 1 : 0] mg8dd6b;
reg [LANE_WIDTH - 1 : 0] lf3df1b;
reg [LANE_WIDTH - 1 : 0] by4d027;
reg [LANE_WIDTH - 1 : 0] gb41340;
reg [LANE_WIDTH - 1 : 0] osd44d6;
reg [LANE_WIDTH - 1 : 0] ui495d3;
reg [8 * LANE_WIDTH - 1 : 0] xy301ca;
reg [8 * LANE_WIDTH - 1 : 0] lfaa5bc;
reg [LANE_WIDTH - 1 : 0] dpcie_x1_mca56c;
reg [LANE_WIDTH - 1 : 0] sj95b1b;
reg [LANE_WIDTH - 1 : 0] xw6c6e2;
reg [LANE_WIDTH - 1 : 0] zm1b89a;
reg [LANE_WIDTH - 1 : 0] uve269d;
reg [LANE_WIDTH - 1 : 0] mt9a766;
reg [LANE_WIDTH - 1 : 0] ie9d9a5;
reg [LANE_WIDTH - 1 : 0] dm66946;
reg [LANE_WIDTH - 1 : 0] tja5199;
reg [LANE_WIDTH - 1 : 0] qg4667e;
reg [LANE_WIDTH - 1 : 0] je99f8d;
reg [LANE_WIDTH - 1 : 0] ld7e352;
reg [LANE_WIDTH - 1 : 0] ie8d4bb;
reg [LANE_WIDTH - 1 : 0] jc52ec4;
reg [LANE_WIDTH - 1 : 0] gdbb118;
reg [LANE_WIDTH - 1 : 0] ayc462e;
reg [LANE_WIDTH - 1 : 0] ir18b84;
reg [LANE_WIDTH - 1 : 0] wy2e123;
reg [LANE_WIDTH - 1 : 0] db848c5;
reg [LANE_WIDTH - 1 : 0] mt23179;
reg viee71a;
reg psc5e64;
reg ipd9725;
reg ui5c968;
reg ph2747b;
reg hd918d3;
reg kqd1ef3;
reg [8 * LANE_WIDTH - 1 : 0] jpd24f0;
reg [8 * LANE_WIDTH - 1 : 0] co92786;
reg [LANE_WIDTH - 1 : 0] fc8932b;
reg co5050;
reg tj28280;
reg wj41407;
reg uka03c;
reg pf501e1;
reg ep80f0f;
reg mt787d;
reg ux3c3ec;
reg hoe1f64;
reg ukfb22;
reg ic7d910;
reg vvec881;
reg [LANE_WIDTH - 1 : 0] rv22077;
reg [7 : 0] ho738d2;
reg [7 : 0] jr81df1;
reg [LANE_WIDTH - 1 : 0] fne928f;
reg [OS_WIDTH - 1 : 0] zx4a3f8;
reg pfc792d;
reg sj3c96e;
reg [LANE_WIDTH - 1 : 0] vie4b75;
reg [31 : 0] uk2bb54;
reg [31 : 0] dm5daa1;
reg cz51fc7;
reg lq57513;
reg vk2aea2;
reg sj80a2c;
reg jcc55d4;
reg yk49024;
reg vx190c2;
reg xla5c78;
reg wy1a49e;
reg xwd0370;
reg rv81b83;
reg ps48120;
reg ri11fcb;
reg wyb675a;
reg do1b749;
reg kqdba4a;
reg [7 : 0] ymfba5;
reg [LANE_WIDTH - 1 : 0] psee941;
reg [LANE_WIDTH - 1 : 0] lfa505f;
reg [LANE_WIDTH - 1 : 0] en417ff;
reg [LANE_WIDTH - 1 : 0] ld5ffe2;
reg [LANE_WIDTH - 1 : 0] cmff8b8;
reg [LANE_WIDTH - 1 : 0] qte2e06;
reg [LANE_WIDTH - 1 : 0] ngb81ac;
reg [LANE_WIDTH - 1 : 0] fp6b13;
reg [OS_WIDTH - 1 : 0] swac4f3;
reg [OS_WIDTH - 1 : 0] lf13cc8;
reg [LANE_WIDTH - 1 : 0] hbf323e;
reg [LANE_WIDTH - 1 : 0] xjc8fbb;
reg [CFGSM_WIDTH : 0] ks3eefa;
reg [CFGSM_WIDTH : 0] anbbe85;
reg dmdf42c;
reg kqfa162;
reg jcd0b11;
reg ep8588a;
reg mt2c455;
reg qg622ad;
reg pu11568;
reg ep8ab43;
reg nr55a1c;
reg jead0e6;
reg su68733;
reg [LANE_WIDTH - 1 : 0] vx1ccc8;
reg [LANE_WIDTH - 1 : 0] an33236;
reg [LANE_WIDTH - 1 : 0] rtc8dab;
reg [LANE_WIDTH - 1 : 0] kf36af8;
reg [LANE_WIDTH - 1 : 0] yzabe26;
reg [LANE_WIDTH - 1 : 0] yxf89ae;
reg [LANE_WIDTH - 1 : 0] ep26ba9;
reg [LANE_WIDTH - 1 : 0] mtaea6b;
reg [LANE_WIDTH - 1 : 0] mga9aec;
reg [LANE_WIDTH - 1 : 0] hb6bb02;
reg [LANE_WIDTH - 1 : 0] nrec0ba;
reg [LANE_WIDTH - 1 : 0] wl2ebd;
reg [LANE_WIDTH - 1 : 0] fpbaf64;
reg [LANE_WIDTH - 1 : 0] jebd937;
reg [LANE_WIDTH - 1 : 0] vv64dde;
reg [LANE_WIDTH - 1 : 0] db377b5;
reg [LANE_WIDTH - 1 : 0] suded7c;
reg [LANE_WIDTH - 1 : 0] fpb5f0e;
reg [LANE_WIDTH - 1 : 0] vi7c3bf;
reg [LANE_WIDTH - 1 : 0] hqefd2;
reg [DSM_WIDTH : 0] ntbf490;
reg [PSM_WIDTH : 0] fnd2439;
reg [CFGSM_WIDTH : 0] ep90e70;
reg [L0SM_WIDTH : 0] oh39c21;
reg [L0sTSM_WIDTH : 0] sh70869;
reg [L0sRSM_WIDTH : 0] wy21a6e;
reg [L1SM_WIDTH : 0] xw69b84;
reg [L2SM_WIDTH : 0] nr6e113;
reg [RSM_WIDTH : 0] zz844f5;
reg [LBSM_WIDTH : 0] fp13d76;
reg [HRSM_WIDTH : 0] osf5dbf;
reg [DISM_WIDTH : 0] rg76fcd;
reg [3 : 0] fcb7e6a;
reg [3 : 0] phbf352;
reg [2047:0] db22f5b;
wire [241:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef DENALI_SIMULATE // For DENALI simulation only

`else

`ifdef SIMULATE // For simulation only

`ifdef LTSSM_MACO

`else

`ifndef MULTI_4

`else

`endif

`endif

`else           // Actual values

`endif

`endif

`ifdef GEN2

`endif


`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif


`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif















`ifdef GEN2

`else 

`endif

`ifdef LW1

`endif

`ifdef LW2

`endif

`ifdef LW4

`endif

`ifdef GEN2

`endif

`ifdef DOWN_X1

`else

`ifdef LW4

`endif

`ifdef LW2

`endif

`ifdef LW1

`endif

`endif

localparam ribd6fd = 242,jceb7ea = 32'hfdffd88b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef DENALI_SIMULATE // For DENALI simulation only


`else


`ifdef SIMULATE // For simulation only


`ifdef LTSSM_MACO


`else


`ifndef MULTI_4


`else


`endif


`endif


`else           // Actual values


`endif


`endif


`ifdef GEN2


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`ifdef GEN2


`else 


`endif


`ifdef LW1


`endif


`ifdef LW2


`endif


`ifdef LW4


`endif


`ifdef GEN2


`endif


`ifdef DOWN_X1


`else


`ifdef LW4


`endif


`ifdef LW2


`endif


`ifdef LW1


`endif


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif

















`ifdef DENALI_SIMULATE // For DENALI simulation only



`else



`ifdef SIMULATE // For simulation only



`ifdef LTSSM_MACO
      


`else
      


`ifndef MULTI_4



`else



`endif



`endif



`else           // Actual values

   


`endif



`endif













`ifdef GEN2



`endif





assign xy891e4 = (pf501e1 | mt787d | ep80f0f);







assign vxb0154 = (|czd61cb) ;
assign mt80aa6 = (|ks872e7) ;
assign je3ac05 = ~ep8588a & wj41407 ;
assign yxd602a = ~ep8ab43 & uka03c;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      wlab64d      <= 1'b0;      qt5b26c <= 1'b0 ;      mrd9364 <= 1'b0 ;      kdc9b25 <= 1'b0 ;      lq4d92d      <= 1'b0;      tu6c96b <= 1'b0 ;      th64b5a <= 1'b0 ;      ng25ad6 <= 1'b0 ;   end   else begin      wlab64d      <= wj41407 ;      qt5b26c <= co5050 ;      mrd9364 <= mt2c455 ;      kdc9b25 <= qg622ad ;      lq4d92d      <= uka03c ;      tu6c96b <= tj28280 ;      th64b5a <= nr55a1c ;      ng25ad6 <= jead0e6 ;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      xj6b597  <= 0;      kdd65f7  <= 0;      ie97de2   <= 0;      enf788c <= 0;      kde2320  <= 0;      fc8c822   <= 0;      ng2089f     <= 0;      nee1ed0<= 0;      jp7b411 <= 0;      vid047a <= 0;      pf55b1a     <= 0;      ne6c6b2    <= 0;   end   else if (viee71a) begin      xj6b597  <= 0;      kdd65f7  <= 0;      ie97de2   <= 0;      enf788c <= 0;      kde2320  <= 0;      fc8c822   <= 0;      ng2089f     <= 0;      nee1ed0<= 0;      jp7b411 <= 0;      vid047a <= 0;      pf55b1a     <= 0;      ne6c6b2    <= 0;   end   else if (pu11568)  begin      xj6b597  <= dpcie_x1_mca56c;      kdd65f7  <= sj95b1b;      ie97de2   <= xw6c6e2;      enf788c <= zm1b89a;      kde2320  <= uve269d;      fc8c822   <= mt9a766;      ng2089f     <= ie9d9a5;      nee1ed0<= ld7e352;      jp7b411 <= ie8d4bb;      vid047a <= jc52ec4;      pf55b1a     <= wy2e123;      ne6c6b2    <= db848c5;   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      jr227d2         <= 0;      oh9f4b7  <= 0;      pu11e99  <= 0;      kd7a655  <= 0;      ie1ac9a    <= 0;   end   else if (viee71a) begin      jr227d2         <= 0;      oh9f4b7  <= 0;      pu11e99  <= 0;      kd7a655  <= 0;      ie1ac9a    <= 0;   end   else if (su68733)  begin      jr227d2         <= dm66946;      oh9f4b7  <= tja5199;      pu11e99  <= gdbb118;      kd7a655  <= ayc462e;      ie1ac9a    <= mt23179;   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      nrd2de1 <= 0;      ngb787b <= 0;   end   else if (viee71a) begin      nrd2de1 <= 0;      ngb787b <= 0;   end   else if (pu11568 || su68733)  begin      nrd2de1 <= qg4667e;      ngb787b <= je99f8d;   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ls9956c <= 0;   end   else begin      ls9956c <= ir18b84;   end
end

assign xyb29ce  = vx1ccc8;
assign ec8d556  = an33236;
assign hqa7396   = rtc8dab;
assign wl39cb2 = kf36af8;
assign lfaac2f  = yzabe26;
assign db94e72   = yxf89ae;
assign pu93f0c     = ep26ba9;
assign ls96548         = mtaea6b;
assign ayce595  = mga9aec;
assign fpc772 = hb6bb02;
assign tu63b96 = nrec0ba;
assign ep9f863= wl2ebd;
assign zxfc31d = fpbaf64;
assign vie18ee = jebd937;
assign cm72ce2  = vv64dde;
assign ic72ca9  = db377b5;
assign gqa9095       = suded7c;
assign swa9eea     = fpb5f0e;
assign ir868d    = vi7c3bf;
assign wl95212    = hqefd2;









pcie_x1_ble6ec1 byeb585 [LANE_WIDTH-1:0]
   (        .sys_clk             (sys_clk),    .rst_n               (rst_n),    .reduce_idlecnt      (fnd7c7b),
    .asb_eidle_rx        (ou920a1),    .asb_lane_sync       (aa82845),    .asb_data            (zx6bb34),    .asb_kcntl           (vvecd3a),
    .hl_gto_hrst         (xwf4f7c),    .hl_gto_dis          (rtec62a),    .hl_gto_lbk          (gd18aba),
    .cz44a17     (kdd6ee7),    .vk250bd      (viee71a),    .jr285eb       (ho738d2),    .tu42f5f           (do9c692),    .yz17afa           (rte3493),    .xybd7d5      (wy1a49e),


`ifdef LW4
       .faebeaa         (jpd24f0),                  .pf5f553         (co92786),


`endif



`ifdef LW2
       .faebeaa         (jpd24f0[15:0]),       .pf5f553         (co92786[15:0]),


`endif



`ifdef LW1
       .faebeaa         (jpd24f0[7:0]),       .pf5f553         (co92786[7:0]),


`endif

        


`ifdef LW4
       .cmfaa9e    ({cz44a17[0],cz44a17[1],                           cz44a17[2],cz44a17[3]}),


`endif



`ifdef LW2
       .cmfaa9e    ({cz44a17[0],cz44a17[1]}),


`endif



`ifdef LW1
       .cmfaa9e    (cz44a17[0]),


`endif

    .tud54f0            (tud54f0),    .dzc85e9              (dzc85e9),    .dm42f4e              (dm42f4e),    .vx9e0f1       (vx9e0f1),    .ykf078e       (ykf078e),    .fp16539            (fp16539),    .xyb29ce      (zk63ef8),    .ec8d556      (fafbe18),    .hqa7396       (uvf8612),    .wl39cb2     (sj184a5),    .lfaac2f      (kf1296f),    .db94e72       (rva5bee),    .pu93f0c         (of6fbb6),    .ep9f863    (ri86372),    .zxfc31d     (ec8dc99),    .vie18ee     (ay7264e),    .fpc772     (gqa9686),    .tu63b96     (fn5a18d),    .ls96548             (dmeeda9),    .ayce595      (aab6a5a),    .cm72ce2      (hq9938a),    .ic72ca9      (en4e29d),    .ymb3882            (ymb3882),    .gqa9095           (gd8a76e),    .qt75f04           (qt75f04),    .ngbd395     (ngbd395),    .yzbb59b             (yzbb59b),    .swa9eea         (sw9dba9),    .ir868d        (nr6ea44),    .wl95212        (yma913c),    .twb2a42         (twb2a42),    .os62ca7         (os62ca7),    .me495de        (me495de),    .zx4aef0            (zx4aef0)    );



pcie_x1_uvc6b24 ldc8b40   (        .sys_clk             (sys_clk),    .rst_n               (rst_n),    .LINK_NUM            (hq2af68),    .TX_EIDL_CNT         (dm57b43),        .vk250bd      (viee71a),    .jr285eb       (ho738d2),    .kdc6064   (do1b749),    .hq30325   (kqdba4a),    .fp8192a        (fne928f),    .vxc957    (zx4a3f8),    .xj64abf           (cz51fc7),    .gq24630      (rv22077),


`ifdef LW4
       .tw255fe   (an8fe3c),       .ri2aff3   (gb7f1e4),       .rtf36f3    (vie4b75),


`endif



`ifdef LW2
       .tw255fe   ({an8fe3c, 2'd0}),       .ri2aff3   ({gb7f1e4, 2'd0}),       .rtf36f3    ({vie4b75, 2'd0}),


`endif



`ifdef LW1
       .tw255fe   ({an8fe3c, 3'd0}),       .ri2aff3   ({gb7f1e4, 3'd0}),       .rtf36f3    ({vie4b75, 3'd0}),


`endif
    .fa57f9b   (fa57f9b),    .dbbfcdb      (pfc792d),    .byfe6de       (sj3c96e),    .ltssm_l0            (ltssm_l0),
        .dzc85e9              (|czd61cb),    .dm42f4e              (|ks872e7),    .ymb3882            (|yx754b7),


`ifdef LW4
       .tud54f0         (lfaa5bc),


`endif



`ifdef LW2
       .tud54f0         ({lfaa5bc, 16'd0}),


`endif



`ifdef LW1
       .tud54f0         ({lfaa5bc, 24'd0}),


`endif

       .swf6e         (fa52de6),   .ls862e8         (coabc5),        .mrdc583            (ho48f22),    .zz160ed           (ne47913),    .uvedd94             (cb3c89a),    .xy83b76          (xwe44d5),    .ho76527        (ho76527),    .faebeaa            (faebeaa),    .pf5f553            (pf5f553),    .ukbc740         (zz226ab),    .ead10a6         (ead10a6),    .tu42988      (tu42988),    .xy14c42        (xy14c42),    .rg4254a     (rg4254a),    .vi484a9         (vi484a9),    .mg88480         (mg88480)    );
assign gq24630 = fc8932b;



assign shd9637 = dm76ceb | vi423f9;
assign ps58de9 = en6012c | qtcc025;
pcie_x1_hb45f11 ou3b266   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .no_pcie_train     (ria263b),    .doa2b2b       (doa2b2b),    .qv8f6a2       (qv8f6a2),    .jp7b515       (jp7b515),    .xw575f3        (xw575f3),    .vvc8aba       (vvc8aba),    .do2aebe       (do2aebe),    .xj455d7       (xj455d7),    .wjd3207         (wjd3207),    .do9903c         (do9903c),    .shd9637        (dm4d61f),    .qg72e99      (qg72e99),    .ps58de9        (jc587d6),    .enc6f4a     (fne9caa),    .tuf43cd      (tuf43cd),    .kdc674c        (kdc674c),    .ble9532      (ble9532),    .jp4a997     (jp4a997),    .al54cbe    (al54cbe),    .iea65f4     (iea65f4),    .fp32fa0     (fp32fa0),    .mg97d06     (mg97d06),    .ie3ee30       (ie3ee30),    .ym8d840      (ym8d840),    .hq25e83       (hq25e83),
        .hq8c5b9       (eneddaa),    .ph6316      (dz6ed54),    .uk318b7      (xw76aa7),    .ho57cb0        (ho57cb0),    .jr16e51          (tu42f5f),    .hqb728f          (yz17afa),    .gqb947b       (ymbc4aa)    );



pcie_x1_lf8ba2c eaf0fc3   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .normal_time       (swa9c05),    .ho57cb0        (vk1eaec),    .vi6673c     (sj80a2c),    .asb_detdone_rx    (rv28b28),    .asb_detres_rx     (ep2ca37),    .asb_eidle_rx      (ou920a1),        .mt3c515      (mt3c515),    .wje28ac      (thf6aed),    .pu14565     (pu14565),    .doa2b2b       (doa2b2b),    .sjbe583         (sjbe583),    .wyacad8         (wyacad8)    );



pcie_x1_uv7563c ic72831   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .do83b16     (jcc55d4),    .ep3c916     (yk49024),    .nee48b5   (ps48120),    .ho57cb0        (vk1eaec),    .sjbe583         (qvabb18),    .asb_eidle_rx      (ou920a1),    .tu42988    ({(LANE_WIDTH){ipd9725}}),    .xy14c42      ({(LANE_WIDTH){ui5c968}}),    .fpc772   (xy25a02),    .cm72ce2    (kq68097),
        .al7fda4     (anab58b),    .dmfed24     (dmfed24),    .dzf6922        (dzf6922),    .yzb4916    (yzb4916),    .jp7b515       (jp7b515),    .qv8f6a2       (qv8f6a2),    .pol_compliance    (pol_compliance),    .bn16b0f         (bn16b0f)    );




pcie_x1_nr4ae92 bn1c969   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ho57cb0        (vk1eaec),    .sjbe583         (qvabb18),    .hl_disable_scr    (xw5d8c5),    .hl_gto_dis        (rtec62a),    .hl_gto_lbk        (gd18aba),    .do83b16     (jcc55d4),    .an1d8b2      (vk2aea2),    .pfec594      (lq57513),    .fp16539          (fp1358a),    .xyb29ce    (czd62b5),    .ec8d556    (ui67e23),    .wl39cb2   (fn64878),    .lfaac2f    (oscba27),    .hqa7396     (vxb5921),    .ic72ca9    (go78c41),    .twb2a42       (gb41340),    .wl95212      (by4d027),    .gqa9095         (th409d1),    .vi484a9       ({(LANE_WIDTH){ph2747b}}),    .rg4254a   ({(LANE_WIDTH){kqd1ef3}}),    .asb_dskew_rx      (dz7bcc5),
        .gd9529d      (ne73d1e),    .iea94ed   (zkf4797),    .nr4a769     (tw1e5d1),    .ic53b4f      (gq98f12),    .ym9da79     (qgd1507),    .yxed3c8        (mt121a4),    .jc69e45    (sja4911),    .rt4f22a      (dm7cb52),    .ps79157      (zz2d498),    .vvc8aba       (fcadb0d),    .xj455d7       (ho6c350),    .do2aebe       (gdd41e),    .xw575f3        (nr507a4),    .ntbaf9a         (xy1180e),    .fnd7cd6         (bae4ab)    );

pcie_x1_ls302be ri3a6e6   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ho57cb0        (vk1eaec),    .sjbe583         (qvabb18),    .hl_disable_scr    (xw5d8c5),    .hl_gto_dis        (rtec62a),    .hl_gto_lbk        (gd18aba),    .do83b16     (jcc55d4),    .an1d8b2      (vk2aea2),    .pfec594      (lq57513),    .os62ca7       (osd44d6),    .fp16539          (fp1358a),    .xyb29ce    (czd62b5),    .db94e72     (an8ad64),    .hqa7396     (vxb5921),    .wl39cb2   (fn64878),    .ayce595    (aa21e31),    .ic72ca9    (go78c41),    .ls96548           (ks3104d),    .twb2a42       (gb41340),    .wl95212      (by4d027),    .gqa9095         (th409d1),    .vi484a9       ({(LANE_WIDTH){ph2747b}}),    .rg4254a   ({(LANE_WIDTH){kqd1ef3}}),    .asb_dskew_rx      (dz7bcc5),
        .gd9529d      (vx19624),    .iea94ed   (zk58939),    .nr4a769     (ks24e51),    .ic53b4f      (jc5263c),    .ym9da79     (en511a3),    .yxed3c8        (mt3c486),    .jc69e45    (zm86924),    .rt4f22a      (kdc667c),    .ps79157      (pu99f2d),    .vvc8aba       (andeb3),    .xj455d7       (yx7acec),    .do2aebe       (qib3b24),    .xw575f3        (jpec900),    .ntbaf9a         (wy24460),    .fnd7cd6         (qt60392)    );

assign gd9529d    = (coabc5) ? ne73d1e    : vx19624;
assign iea94ed = (coabc5) ? zkf4797 : zk58939;
assign nr4a769   = (coabc5) ? tw1e5d1   : ks24e51;
assign ic53b4f    = (coabc5) ? qte2e06    : cmff8b8;
assign ym9da79   = (coabc5) ? qgd1507   : en511a3;
assign yxed3c8      = (coabc5) ? fp6b13      : ngb81ac;
assign jc69e45  = (coabc5) ? lf13cc8  : swac4f3;
assign tw255fe  = (coabc5) ? en417ff  : psee941;
assign ri2aff3  = (coabc5) ? ld5ffe2  : lfa505f;
assign vvc8aba     = (coabc5) ? fcadb0d     : andeb3;
assign xj455d7     = (coabc5) ? ho6c350     : yx7acec;
assign do2aebe     = (coabc5) ? gdd41e     : qib3b24;
assign xw575f3      = (coabc5) ? nr507a4      : jpec900;
assign icde7f7    = (coabc5) ? xjc8fbb       : hbf323e;
assign fnd7cd6       = (coabc5) ? anbbe85       : ks3eefa;



pcie_x1_tj9e548 cb85613   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ext_sync          (qv363ca),    .an1d8b2      (vk2aea2),    .do83b16     (jcc55d4),    .ep3c916     (yk49024),    .nee48b5   (ps48120),    .ho57cb0        (vk1eaec),    .ntbaf9a         (bld7d3d),    .vi484a9       ({(LANE_WIDTH){ph2747b}}),    .mg88480       ({(LANE_WIDTH){hd918d3}}),    .rg4254a   ({(LANE_WIDTH){kqd1ef3}}),    .db94e72     (an8ad64),    .pu93f0c       (kdf242e),    .tu63b96   (qv90ba8),    .ic72ca9    (go78c41),    .gqa9095         (th409d1),    .ep9f863  (do25315),    .zxfc31d   (yk4c55c),    .vie18ee   (co15701),    .vx9e0f1     (ea5c04d),    .ykf078e     (pu1349),    .os62ca7       (osd44d6),    .me495de      (ui495d3),    .twb2a42       (gb41340),    .hl_gto_cfg        (bnba632),    .asb_dskew_rx      (dz7bcc5),
        .gof55c4     (gof55c4),    .xlaae20   (xlaae20),    .by57107      (by57107),    .rib883a  (rib883a),    .iea65f4     (iea65f4),    .al54cbe    (al54cbe),    .mg97d06     (mg97d06),    .jp4a997     (jp4a997),    .ble9532      (ble9532),    .fp32fa0     (fp32fa0),    .xjc2ae1   (xjc2ae1),    .co1570e       (co1570e)    );



pcie_x1_ks2ef4b ks9767f   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ho57cb0        (vk1eaec),    .no_pcie_train     (ria263b),    .ntbaf9a         (bld7d3d),    .dzc85e9            (czd61cb),    .dm42f4e            (ks872e7),    .qt75f04         (do83f74),    .ngbd395   (gbe7300),    .fne9caa  (fne9caa),    .kd4e556     (qtcc025),    .kq72ab5     (en6012c),    .hl_gto_l0stx      (aa965),    .hl_gto_l1         (fc4b29),    .hl_gto_l2         (tw2594b),    .hl_gto_rcvry      (oh2ca5a),    .cfg_rtrn_lnk      (cb296a5),    .dll_rtrn_lnk      (en652d4),
        .ri2f397             (ltssm_l0),    .by79cba         (by79cba),    .osce5d3     (osce5d3),    .qg72e99      (qg72e99),    .wy974c8      (wy974c8),    .fpba640      (fpba640),    .wjd3207         (wjd3207),    .do9903c         (do9903c),    .rtc81e3       (rtc81e3),    .nr40f1e          (nr40f1e)    );



pcie_x1_hqadc66 tu630ec   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ho57cb0        (vk1eaec),    .ntbaf9a         (bld7d3d),    .asb_eidle_rx      (ou920a1),    .fpba640      (vi423f9),    .jeb76b3  (ri11fcb),    .yzbb59b           (en7f2d4),    .asb_dskew_rx      (dz7bcc5),
        .yxd66eb        (yxd66eb),    .swb375c  (swb375c),    .kd4e556     (kd4e556),    .fne9caa  (fne9caa),    .hoeb87f  (hoeb87f),    .cm5c3fb      (cm5c3fb)    );
pcie_x1_ls30c16 wj7a81f   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ho57cb0        (vk1eaec),    .wy974c8      (dm76ceb),    .ukb3686  (wyb675a),    .hl_gto_l0stxfts   (wyb3ad1),
        .hoda18e  (hoda18e),    .rgd0c72     (rgd0c72),    .pu86392 (pu86392),    .kq72ab5     (kq72ab5),    .jr8e499   (jr8e499),    .l0s_tx_state      (l0s_tx_state),    .sw92679      (sw92679)    );



pcie_x1_tj91fd8 ps4d948   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ho57cb0        (vk1eaec),    .ntbaf9a         (bld7d3d),    .asb_eidle_rx      (ou920a1),    .twb290a     (xla5c78),    .hl_gto_rcvry      (oh2ca5a),
        .ym2bd0f       (ym2bd0f),    .kd5e879      (kd5e879),    .tuf43cd      (tuf43cd),    .l1_state          (l1_state),    .ksf354          (ksf354)    );



pcie_x1_ep9f564 meefcd4   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ho57cb0        (vk1eaec),    .ntbaf9a         (bld7d3d),    .asb_eidle_rx      (ou920a1),    .asb_beacon_rx     (sj90508),    .hl_gto_det        (dz6e0fd),    .hl_snd_beacon     (oha1578),
    .ls862e8      (coabc5),    .ou31743      (xj55e28),    .jr8ba18      (ntaf146),
        .zk5d0c6         (zk5d0c6),    .kde8633     (kde8633),    .ay4319d       (ay4319d),    .gd18ce9      (gd18ce9),    .kdc674c        (kdc674c),    .ir33a65     (ieacf60),    .l2_state          (l2_state),    .vve9961          (vve9961)    );



pcie_x1_nt8eb0d bn8edfc   (        .sys_clk           (sys_clk),    .rst_n             (rst_n),    .ho57cb0        (vk1eaec),    .asb_eidle_rx      (~czd61cb),    .bl6ea75     (xwd0370),    .ip753af     (rv81b83),    .an1d8b2      (vk2aea2),    .hl_gto_det        (dz6e0fd),    .qt75f04         (do83f74),
        .dbaf825      (dbaf825),    .xw7c12f        (xw7c12f),    .eae097a    (eae097a),    .xy4bd0     (xy4bd0),    .hq25e83       (hq25e83),    .vk2f41a    (),    .ip7a0d2         (ip7a0d2)    );



pcie_x1_gq97768 cm46570   (        .sys_clk         (sys_clk),    .rst_n           (rst_n),    .ho57cb0      (vk1eaec),    .an1d8b2    (vk2aea2),    .pf409a9  (vx190c2),    .hl_gto_lbk      (gd18aba),    .asb_eidle_rx    (ou920a1),    .qt75f04       (do83f74),    .swa9eea     (mg8dd6b),
        .ld4f750   (xlb576e),    .vv7ba87   (cbabb76),    .rtdd43e    (rtdd43e),    .wwea1f7      (wwea1f7),    .rt50fb8  (rt50fb8),    .ou87dc6   (ou87dc6),    .ie3ee30     (ie3ee30),    .qtf7180       (qtf7180)    );



pcie_x1_uveda3a tu79867   (        .sys_clk         (sys_clk),    .rst_n           (rst_n),    .ho57cb0      (vk1eaec),    .ntbaf9a       (bld7d3d),    .an1d8b2    (vk2aea2),    .hl_gto_hrst     (xwf4f7c),    .ir868d    (lf3df1b),
        .qg4346c     (qg4346c),    .co1a361 (co1a361),    .cmd1b08  (cmd1b08),    .ym8d840    (ym8d840),    .tu6c201      (tu6c201)    );



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fn6e3cf <= 0;   end   else begin      fn6e3cf <= vk1eaec;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zzaa9d6 <= 0;   end   else begin      zzaa9d6 <= 0;      case(vk1eaec)         DETECT   : zzaa9d6  <= ntbf490;         POLLING  : zzaa9d6  <= fnd2439;         CONFIG   : zzaa9d6  <= ep90e70;         L0       : zzaa9d6  <= oh39c21;                             L0s      : zzaa9d6  <= wy21a6e;           L1       : zzaa9d6  <= xw69b84;         L2       : zzaa9d6  <= nr6e113;         RECOVERY : zzaa9d6  <= zz844f5;         LOOPBACK : zzaa9d6  <= fp13d76;         HOTRST   : zzaa9d6  <= osf5dbf;         DISABLED : zzaa9d6  <= rg76fcd;         default  : zzaa9d6  <= 0;      endcase   end
end
















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      uxb46f3 <= 0;   end   else begin      case(enf25fa)         3'd0: uxb46f3 <= 8'd4;         3'd1: uxb46f3 <= 8'd8;         3'd2: uxb46f3 <= 8'd16;         3'd3: uxb46f3 <= 8'd32;         3'd4: uxb46f3 <= 8'd62;         3'd5: uxb46f3 <= 8'd125;         3'd6: uxb46f3 <= 8'd250;         3'd7: uxb46f3 <= 8'd255;      endcase   end
end




`ifdef GEN2
   assign qv85f1a = (pu14565 | dmfed24 | jcd0b11 | xlaae20 |                         swb375c | kd5e879 | gd18ce9 |                         xy4bd0 | ou87dc6 | cmd1b08 | pub268c);

`else 
   assign qv85f1a = (pu14565 | dmfed24 | jcd0b11 | xlaae20 |                         swb375c | kd5e879 | gd18ce9 |                         xy4bd0 | ou87dc6 | cmd1b08);

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      aaa6a1c  <= 0;      vk350e1  <= 0;      lsa870a  <= 0;      ic43853  <= 0;      ph1c298 <= 0;   end   else begin      aaa6a1c  <= rg4d6ab;      vk350e1  <= ux3c3ec;      lsa870a  <= hoe1f64;      ic43853  <= rg4d6ab | ux3c3ec | hoe1f64 | ukfb22;      ph1c298 <= hoda18e;   end
end
assign vk250bd    = rg4d6ab;
assign hbe355a = hoda18e;





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      bl6ef6f <= 0;   end   else if (rg4d6ab | ic7d910) begin      bl6ef6f <= 0;   end   else begin      bl6ef6f <= uk2bb54 + 1'b1;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      go77b7f <= 0;   end   else if (hoda18e | vvec881) begin      go77b7f <= 0;   end   else if (zx4a3f8 == OS_NFTS && psc5e64 == 1'b1) begin      go77b7f <= dm5daa1;   end   else begin      go77b7f <= dm5daa1 + 1'b1;   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      xw7c6ab <= 0;   end   else begin      xw7c6ab <= (jr81df1 + zzbf549 + 1'd1) * cb23fa8;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      an1d8b2       <= 1'b0;      vi6673c      <= 1'b0;      do83b16      <= 1'b0;      ep3c916      <= 1'b0;      pf409a9     <= 1'b0;      twb290a      <= 1'b0;      pfec594       <= 1'b0;      xybd7d5     <= 1'b0;      bl6ea75      <= 1'b0;      ip753af      <= 1'b0;      nee48b5    <= 1'b0;      jeb76b3   <= 1'b0;   end   else if (viee71a) begin      an1d8b2       <= 1'b0;      vi6673c      <= 1'b0;      do83b16      <= 1'b0;      ep3c916      <= 1'b0;      pf409a9     <= 1'b0;      twb290a      <= 1'b0;      pfec594       <= 1'b0;      xybd7d5     <= 1'b0;      bl6ea75      <= 1'b0;      ip753af      <= 1'b0;      nee48b5    <= 1'b0;      jeb76b3   <= 1'b0;   end   else begin      if (swa9c05) begin      an1d8b2       <= (uk2bb54 == rvb5fc7)    ? 1'b1 : 1'b0;      vi6673c      <= (uk2bb54 == ldc7fed)   ? 1'b1 : 1'b0;      do83b16      <= (uk2bb54 == meffb72)   ? 1'b1 : 1'b0;      ep3c916      <= (uk2bb54 == czedc85)   ? 1'b1 : 1'b0;
      pf409a9     <= (uk2bb54 == wl8598c)  ? 1'b1 : 1'b0;      end      else begin      an1d8b2       <= (uk2bb54 == rvb5fc7/4)   ? 1'b1 : 1'b0;      vi6673c      <= (uk2bb54 == ldc7fed/4)  ? 1'b1 : 1'b0;      do83b16      <= (uk2bb54 == meffb72/4)  ? 1'b1 : 1'b0;      ep3c916      <= (uk2bb54 == czedc85/4)  ? 1'b1 : 1'b0;      pf409a9     <= (uk2bb54 == wl8598c/4) ? 1'b1 : 1'b0;      end      twb290a      <= (uk2bb54 == ks1fd45)   ? 1'b1 : 1'b0;      pfec594       <= (uk2bb54 == ykf514a)    ? 1'b1 : 1'b0;      xybd7d5     <= (uk2bb54 == vi6632c)  ? 1'b1 : 1'b0;      bl6ea75      <= (uk2bb54 >= jea8a50)   ? 1'b1 : 1'b0;      ip753af      <= (uk2bb54 >= ir29416)   ? 1'b1 : 1'b0;      nee48b5    <= (uk2bb54 >= ld505af) ? 1'b1 : 1'b0;      if (qv363ca) begin                  jeb76b3  <= (uk2bb54    >= (32'd4096 * cb23fa8)) ? 1'b1 : 1'b0;      end      else begin                  jeb76b3  <= (uk2bb54    >= (ho738d2 * cb23fa8))  ? 1'b1 : 1'b0;      end   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ukb3686   <= 1'b0;      hq30325  <= 1'b0;      kdc6064  <= 1'b0;   end   else if (tud56b7) begin      ukb3686   <= 1'b0;      hq30325  <= 1'b0;      kdc6064  <= 1'b0;   end   else begin      if (qv363ca) begin                  ukb3686    <= (dm5daa1 <  ((ec1f906 * cb23fa8     )-3)) ? 1'b0 : 1'b1;                  hq30325   <= (dm5daa1 >= (((ec1f906-1) * cb23fa8 )-2) &&                                 dm5daa1 <  ((ec1f906 * cb23fa8     )-2)) ? 1'b1 : 1'b0;      end      else begin                  ukb3686    <= (dm5daa1 <  ((xj5aad6)-3)) ? 1'b0 : 1'b1;                  hq30325   <= (dm5daa1 >= ((jr81df1 * cb23fa8   )-2) &&                                 dm5daa1 <  ((xj5aad6)-2)) ? 1'b1 : 1'b0;      end            kdc6064      <= (dm5daa1 < (jr81df1 * cb23fa8     )-2)  ? 1'b1 : 1'b0;   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      jr285eb <= 0;   end   else if (hoeb87f) begin      jr285eb <= ymfba5 + ep8f6b9;   end   else begin      jr285eb <= ymfba5;   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      wy98ec8 <= 0;   end   else if (kqfa162 || xjc2ae1) begin


`ifdef LW1
         if (bld7d3d[0] == 1'b1)            wy98ec8 <= xy301ca[7:0];


`endif



`ifdef LW2
         if (bld7d3d[0] == 1'b1)            wy98ec8 <= xy301ca[7:0];         else if (bld7d3d[1] == 1'b1)            wy98ec8 <= xy301ca[15:8];


`endif



`ifdef LW4
         if (bld7d3d[0] == 1'b1)            wy98ec8 <= xy301ca[7:0];         else if (bld7d3d[1] == 1'b1)            wy98ec8 <= xy301ca[15:8];         else if (bld7d3d[2] == 1'b1)            wy98ec8 <= xy301ca[23:16];         else if (bld7d3d[3] == 1'b1)            wy98ec8 <= xy301ca[31:24];


`endif
   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zxfc831 <= 4'hF;      zke418f <= 4'hF;   end   else begin      zxfc831 <= su53de2;      zke418f <= fcb7e6a;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yma63b <= 4'b1111;      xj64abf          <= 0;   end   else begin      yma63b <= (cmcbd16 | lqf4585 | rv16153 | kf854f7 |                                                          su53de2 | qtf788f | yxe23e0 | sj8f822);      xj64abf          <= (|qi706 == 1'b1) ? 1'b1 : 1'b0;   end
end





`ifdef GEN2
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         end64d1 <= 1'b0;      else         end64d1 <= ltssm_l0;   end   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         pub268c <= 1'b0;      else if (!ltssm_l0 && end64d1)         pub268c <= 1'b1;      else if (wy1a49e && ltssm_l0)         pub268c <= 1'b1;      else         pub268c <= 1'b0;   end

`endif




assign do2f8d5      = {(|ou8801c),   (|qi706), (|lf1c186), (|tj61b8),                           (|ls86e3b),(|dob8ed7),  (|ie3b5df),   (|pfd77cb),   (|dmdf2f4)};
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fp8192a     <= 0;      vxc957 <= 0;      dbbfcdb   <= 1'd0;      byfe6de    <= 1'd0;      rtf36f3    <= 4'd0;   end   else if (ria263b == 1'b1) begin      fp8192a     <= 0;      vxc957 <= 0;      dbbfcdb   <= 1'd0;      byfe6de    <= 1'd0;      rtf36f3    <= 4'd0;   end   else begin      dbbfcdb   <=  dmdf2f4;      byfe6de    <=  ie3b5df;      rtf36f3    <=  pfd77cb;
      if (fn6e3cf == 'd1 || fn6e3cf == 'd2)         fp8192a     <= qvabb18 ;      else         fp8192a     <= (ou8801c    | qi706 | lf1c186 | tj61b8  |              ls86e3b | dob8ed7  | ie3b5df   | pfd77cb |              dmdf2f4);
      casex(nr6b55a)         9'b1xxxxxxxx : vxc957 <= yke08a2;         9'bx1xxxxxxx : vxc957 <= lf22882;         9'bxx1xxxxxx : vxc957 <= baa20bb;         9'bxxx1xxxxx : vxc957 <= wy82ed1;         9'bxxxx1xxxx : vxc957 <= epbb444;         9'bxxxxx1xxx : vxc957 <= med112a;         9'bxxxxxx1xx : vxc957 <= qt44a89;         9'bxxxxxxx1x : vxc957 <= tw2a26b;         9'bxxxxxxxx1 : vxc957 <= ba89ad5;         default      : vxc957 <= (vk1eaec == 'd1 || vk1eaec == 'd2) ? zx4a3f8 : OS_IDLE;      endcase   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ltssm_config_ln <= 0;      ltssm_cfgln_sum <= 0;   end   else begin


`ifdef DOWN_X1
      ltssm_config_ln <= 4'b1000;      ltssm_cfgln_sum <= 3'd1;


`else
      if (ria263b == 1'b1) begin         ltssm_config_ln <= 4'b1111;         ltssm_cfgln_sum <= 3'd4;      end      else begin         ltssm_config_ln <= bld7d3d;


`ifdef LW4
            ltssm_cfgln_sum <= bld7d3d[0] + bld7d3d[1] + bld7d3d[2] + bld7d3d[3];


`endif



`ifdef LW2
            ltssm_cfgln_sum <= bld7d3d[0] + bld7d3d[1];


`endif



`ifdef LW1
            ltssm_cfgln_sum <= bld7d3d[0];


`endif
      end


`endif
   end
end


assign ntbaf9a = (ria263b) ? 4'b1111 : gd9a703;








always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      fa57f9b <= 0;   end   else if (vk1eaec == DETECT) begin      fa57f9b <= 0;   end   else if (dmdf42c) begin      fa57f9b <= 1'b1;   end
end
always@* begin swa9c05<=ux17adf[0];fnd7c7b<=ux17adf[1];hq2af68<={LINK_NUM>>1,ux17adf[2]};ep8f6b9<={N_FTS_INC>>1,ux17adf[3]};dm57b43<={TX_EIDL_CNT>>1,ux17adf[4]};zx6bb34<={asb_data>>1,ux17adf[5]};vvecd3a<={asb_kcntl>>1,ux17adf[6]};ou920a1<={asb_eidle_rx>>1,ux17adf[7]};rv28b28<={asb_detdone_rx>>1,ux17adf[8]};ep2ca37<={asb_detres_rx>>1,ux17adf[9]};dz7bcc5<={asb_dskew_rx>>1,ux17adf[10]};sj90508<={asb_beacon_rx>>1,ux17adf[11]};aa82845<={asb_lane_sync>>1,ux17adf[12]};enf25fa<={cfgcs_losel>>1,ux17adf[13]};qv363ca<=ux17adf[14];ria263b<=ux17adf[15];zzbf549<={qte803d>>1,ux17adf[16]};fa52de6<=ux17adf[17];xw5d8c5<=ux17adf[18];rtec62a<=ux17adf[19];dz6e0fd<=ux17adf[20];xwf4f7c<=ux17adf[21];aa965<=ux17adf[22];fc4b29<=ux17adf[23];tw2594b<=ux17adf[24];wyb3ad1<=ux17adf[25];gd18aba<={hl_gto_lbk>>1,ux17adf[26]};oh2ca5a<=ux17adf[27];bnba632<=ux17adf[28];oha1578<=ux17adf[29];en652d4<=ux17adf[30];cb296a5<=ux17adf[31];coabc5<=ux17adf[32];xj55e28<=ux17adf[33];ntaf146<=ux17adf[34];vk1eaec<={ho57cb0>>1,ux17adf[35]};qvabb18<={sjbe583>>1,ux17adf[36]};bld7d3d<={ntbaf9a>>1,ux17adf[37]};gd9a703<={icde7f7>>1,ux17adf[38]};dm4d61f<=ux17adf[39];dm76ceb<=ux17adf[40];vi423f9<=ux17adf[41];jc587d6<=ux17adf[42];en6012c<=ux17adf[43];qtcc025<=ux17adf[44];an8fe3c<={tw255fe>>1,ux17adf[45]};gb7f1e4<={ri2aff3>>1,ux17adf[46]};ou8801c<={dzf6922>>1,ux17adf[47]};qi706<={yxed3c8>>1,ux17adf[48]};lf1c186<={by57107>>1,ux17adf[49]};tj61b8<={by79cba>>1,ux17adf[50]};ls86e3b<={rgd0c72>>1,ux17adf[51]};dob8ed7<={zk5d0c6>>1,ux17adf[52]};ie3b5df<={xw7c12f>>1,ux17adf[53]};pfd77cb<={wwea1f7>>1,ux17adf[54]};dmdf2f4<={qg4346c>>1,ux17adf[55]};cmcbd16<={mt3c515>>1,ux17adf[56]};lqf4585<={ic53b4f>>1,ux17adf[57]};rv16153<={ym2bd0f>>1,ux17adf[58]};kf854f7<={ay4319d>>1,ux17adf[59]};su53de2<={dbaf825>>1,ux17adf[60]};qtf788f<={rtdd43e>>1,ux17adf[61]};yxe23e0<={rtc81e3>>1,ux17adf[62]};sj8f822<={jr8e499>>1,ux17adf[63]};yke08a2<={yzb4916>>1,ux17adf[64]};lf22882<={jc69e45>>1,ux17adf[65]};baa20bb<={rib883a>>1,ux17adf[66]};wy82ed1<={osce5d3>>1,ux17adf[67]};epbb444<={pu86392>>1,ux17adf[68]};med112a<={kde8633>>1,ux17adf[69]};qt44a89<={eae097a>>1,ux17adf[70]};tw2a26b<={rt50fb8>>1,ux17adf[71]};ba89ad5<={co1a361>>1,ux17adf[72]};rg4d6ab<=ux17adf[73];nr6b55a<={do2f8d5>>1,ux17adf[74]};xj5aad6<={xw7c6ab>>1,ux17adf[75]};tud56b7<=ux17adf[76];do9c692<=ux17adf[77];rte3493<=ux17adf[78];kdd6ee7<=ux17adf[79];czd61cb<={dzc85e9>>1,ux17adf[80]};ks872e7<={dm42f4e>>1,ux17adf[81]};ea5c04d<={vx9e0f1>>1,ux17adf[82]};pu1349<={ykf078e>>1,ux17adf[83]};fp1358a<={fp16539>>1,ux17adf[84]};czd62b5<={xyb29ce>>1,ux17adf[85]};ui67e23<={ec8d556>>1,ux17adf[86]};vxb5921<={hqa7396>>1,ux17adf[87]};fn64878<={wl39cb2>>1,ux17adf[88]};oscba27<={lfaac2f>>1,ux17adf[89]};an8ad64<={db94e72>>1,ux17adf[90]};kdf242e<={pu93f0c>>1,ux17adf[91]};ks3104d<={ls96548>>1,ux17adf[92]};aa21e31<={ayce595>>1,ux17adf[93]};xy25a02<={fpc772>>1,ux17adf[94]};qv90ba8<={tu63b96>>1,ux17adf[95]};do25315<={ep9f863>>1,ux17adf[96]};yk4c55c<={zxfc31d>>1,ux17adf[97]};co15701<={vie18ee>>1,ux17adf[98]};kq68097<={cm72ce2>>1,ux17adf[99]};go78c41<={ic72ca9>>1,ux17adf[100]};yx754b7<={ymb3882>>1,ux17adf[101]};th409d1<={gqa9095>>1,ux17adf[102]};do83f74<={qt75f04>>1,ux17adf[103]};gbe7300<={ngbd395>>1,ux17adf[104]};en7f2d4<={yzbb59b>>1,ux17adf[105]};mg8dd6b<={swa9eea>>1,ux17adf[106]};lf3df1b<={ir868d>>1,ux17adf[107]};by4d027<={wl95212>>1,ux17adf[108]};gb41340<={twb2a42>>1,ux17adf[109]};osd44d6<={os62ca7>>1,ux17adf[110]};ui495d3<={me495de>>1,ux17adf[111]};xy301ca<={zx4aef0>>1,ux17adf[112]};lfaa5bc<={tud54f0>>1,ux17adf[113]};dpcie_x1_mca56c<={zk63ef8>>1,ux17adf[114]};sj95b1b<={fafbe18>>1,ux17adf[115]};xw6c6e2<={uvf8612>>1,ux17adf[116]};zm1b89a<={sj184a5>>1,ux17adf[117]};uve269d<={kf1296f>>1,ux17adf[118]};mt9a766<={rva5bee>>1,ux17adf[119]};ie9d9a5<={of6fbb6>>1,ux17adf[120]};dm66946<={dmeeda9>>1,ux17adf[121]};tja5199<={aab6a5a>>1,ux17adf[122]};qg4667e<={gqa9686>>1,ux17adf[123]};je99f8d<={fn5a18d>>1,ux17adf[124]};ld7e352<={ri86372>>1,ux17adf[125]};ie8d4bb<={ec8dc99>>1,ux17adf[126]};jc52ec4<={ay7264e>>1,ux17adf[127]};gdbb118<={hq9938a>>1,ux17adf[128]};ayc462e<={en4e29d>>1,ux17adf[129]};ir18b84<={gd8a76e>>1,ux17adf[130]};wy2e123<={sw9dba9>>1,ux17adf[131]};db848c5<={nr6ea44>>1,ux17adf[132]};mt23179<={yma913c>>1,ux17adf[133]};viee71a<=ux17adf[134];psc5e64<=ux17adf[135];ipd9725<=ux17adf[136];ui5c968<=ux17adf[137];ph2747b<=ux17adf[138];hd918d3<=ux17adf[139];kqd1ef3<=ux17adf[140];jpd24f0<={faebeaa>>1,ux17adf[141]};co92786<={pf5f553>>1,ux17adf[142]};fc8932b<={ho76527>>1,ux17adf[143]};co5050<=ux17adf[144];tj28280<=ux17adf[145];wj41407<=ux17adf[146];uka03c<=ux17adf[147];pf501e1<=ux17adf[148];ep80f0f<=ux17adf[149];mt787d<=ux17adf[150];ux3c3ec<=ux17adf[151];hoe1f64<=ux17adf[152];ukfb22<=ux17adf[153];ic7d910<=ux17adf[154];vvec881<=ux17adf[155];rv22077<={yma63b>>1,ux17adf[156]};ho738d2<={jr285eb>>1,ux17adf[157]};jr81df1<={wy98ec8>>1,ux17adf[158]};fne928f<={fp8192a>>1,ux17adf[159]};zx4a3f8<={vxc957>>1,ux17adf[160]};pfc792d<=ux17adf[161];sj3c96e<=ux17adf[162];vie4b75<={rtf36f3>>1,ux17adf[163]};uk2bb54<={bl6ef6f>>1,ux17adf[
164]};dm5daa1<={go77b7f>>1,ux17adf[165]};cz51fc7<=ux17adf[166];lq57513<=ux17adf[167];vk2aea2<=ux17adf[168];sj80a2c<=ux17adf[169];jcc55d4<=ux17adf[170];yk49024<=ux17adf[171];vx190c2<=ux17adf[172];xla5c78<=ux17adf[173];wy1a49e<=ux17adf[174];xwd0370<=ux17adf[175];rv81b83<=ux17adf[176];ps48120<=ux17adf[177];ri11fcb<=ux17adf[178];wyb675a<=ux17adf[179];do1b749<=ux17adf[180];kqdba4a<=ux17adf[181];ymfba5<={uxb46f3>>1,ux17adf[182]};psee941<={kdc667c>>1,ux17adf[183]};lfa505f<={pu99f2d>>1,ux17adf[184]};en417ff<={dm7cb52>>1,ux17adf[185]};ld5ffe2<={zz2d498>>1,ux17adf[186]};cmff8b8<={jc5263c>>1,ux17adf[187]};qte2e06<={gq98f12>>1,ux17adf[188]};ngb81ac<={mt3c486>>1,ux17adf[189]};fp6b13<={mt121a4>>1,ux17adf[190]};swac4f3<={zm86924>>1,ux17adf[191]};lf13cc8<={sja4911>>1,ux17adf[192]};hbf323e<={wy24460>>1,ux17adf[193]};xjc8fbb<={xy1180e>>1,ux17adf[194]};ks3eefa<={qt60392>>1,ux17adf[195]};anbbe85<={bae4ab>>1,ux17adf[196]};dmdf42c<=ux17adf[197];kqfa162<=ux17adf[198];jcd0b11<=ux17adf[199];ep8588a<=ux17adf[200];mt2c455<=ux17adf[201];qg622ad<=ux17adf[202];pu11568<=ux17adf[203];ep8ab43<=ux17adf[204];nr55a1c<=ux17adf[205];jead0e6<=ux17adf[206];su68733<=ux17adf[207];vx1ccc8<={xj6b597>>1,ux17adf[208]};an33236<={kdd65f7>>1,ux17adf[209]};rtc8dab<={ie97de2>>1,ux17adf[210]};kf36af8<={enf788c>>1,ux17adf[211]};yzabe26<={kde2320>>1,ux17adf[212]};yxf89ae<={fc8c822>>1,ux17adf[213]};ep26ba9<={ng2089f>>1,ux17adf[214]};mtaea6b<={jr227d2>>1,ux17adf[215]};mga9aec<={oh9f4b7>>1,ux17adf[216]};hb6bb02<={nrd2de1>>1,ux17adf[217]};nrec0ba<={ngb787b>>1,ux17adf[218]};wl2ebd<={nee1ed0>>1,ux17adf[219]};fpbaf64<={jp7b411>>1,ux17adf[220]};jebd937<={vid047a>>1,ux17adf[221]};vv64dde<={pu11e99>>1,ux17adf[222]};db377b5<={kd7a655>>1,ux17adf[223]};suded7c<={ls9956c>>1,ux17adf[224]};fpb5f0e<={pf55b1a>>1,ux17adf[225]};vi7c3bf<={ne6c6b2>>1,ux17adf[226]};hqefd2<={ie1ac9a>>1,ux17adf[227]};ntbf490<={wyacad8>>1,ux17adf[228]};fnd2439<={bn16b0f>>1,ux17adf[229]};ep90e70<={fnd7cd6>>1,ux17adf[230]};oh39c21<={nr40f1e>>1,ux17adf[231]};sh70869<={sw92679>>1,ux17adf[232]};wy21a6e<={cm5c3fb>>1,ux17adf[233]};xw69b84<={ksf354>>1,ux17adf[234]};nr6e113<={vve9961>>1,ux17adf[235]};zz844f5<={co1570e>>1,ux17adf[236]};fp13d76<={qtf7180>>1,ux17adf[237]};osf5dbf<={tu6c201>>1,ux17adf[238]};rg76fcd<={ip7a0d2>>1,ux17adf[239]};fcb7e6a<={zxfc831>>1,ux17adf[240]};phbf352<={zke418f>>1,ux17adf[241]};end
always@* begin db22f5b[2047]<=reduce_idlecnt;db22f5b[2046]<=LINK_NUM[0];db22f5b[2045]<=xw7c6ab[0];db22f5b[2044]<=N_FTS_INC[0];db22f5b[2042]<=hbe355a;db22f5b[2040]<=TX_EIDL_CNT[0];db22f5b[2036]<=tu42f5f;db22f5b[2035]<=yxd66eb;db22f5b[2032]<=asb_data[0];db22f5b[2025]<=yz17afa;db22f5b[2023]<=gof55c4;db22f5b[2017]<=asb_kcntl[0];db22f5b[2011]<=kd7a655[0];db22f5b[2002]<=anab58b;db22f5b[1999]<=aaa6a1c;db22f5b[1992]<=qte803d[0];db22f5b[1987]<=asb_eidle_rx[0];db22f5b[1974]<=ls9956c[0];db22f5b[1957]<=dzc85e9[0];db22f5b[1952]<=vve9961[0];db22f5b[1950]<=vk350e1;db22f5b[1947]<=fpc772[0];db22f5b[1937]<=wy98ec8[0];db22f5b[1936]<=swf6e;db22f5b[1927]<=asb_detdone_rx[0];db22f5b[1922]<=kdc667c[0];db22f5b[1919]<=rt50fb8[0];db22f5b[1913]<=db94e72[0];db22f5b[1901]<=pf55b1a[0];db22f5b[1873]<=sjbe583[0];db22f5b[1867]<=dm42f4e[0];db22f5b[1857]<=co1570e[0];db22f5b[1852]<=lsa870a;db22f5b[1851]<=rib883a[0];db22f5b[1849]<=rtdd43e[0];db22f5b[1847]<=xw7c12f[0];db22f5b[1846]<=tu63b96[0];db22f5b[1827]<=fp8192a[0];db22f5b[1825]<=hl_disable_scr;db22f5b[1807]<=asb_detres_rx[0];db22f5b[1802]<=kf1296f[0];db22f5b[1797]<=pu99f2d[0];db22f5b[1791]<=co1a361[0];db22f5b[1780]<=sw92679[0];db22f5b[1779]<=pu93f0c[0];db22f5b[1776]<=kdc6064;db22f5b[1767]<=ym2bd0f[0];db22f5b[1761]<=fafbe18[0];db22f5b[1758]<=bn16b0f[0];db22f5b[1755]<=ne6c6b2[0];db22f5b[1733]<=ic72ca9[0];db22f5b[1729]<=an1d8b2;db22f5b[1726]<=ngb787b[0];db22f5b[1716]<=xy14c42;db22f5b[1698]<=ntbaf9a[0];db22f5b[1687]<=vx9e0f1[0];db22f5b[1679]<=pf5f553[0];db22f5b[1673]<=iea94ed;db22f5b[1666]<=qtf7180[0];db22f5b[1657]<=ic43853;db22f5b[1655]<=osce5d3[0];db22f5b[1651]<=rtc81e3[0];db22f5b[1646]<=wwea1f7[0];db22f5b[1644]<=ep9f863[0];db22f5b[1606]<=vxc957[0];db22f5b[1602]<=hl_gto_dis;db22f5b[1577]<=qt75f04[0];db22f5b[1567]<=asb_dskew_rx[0];db22f5b[1558]<=en4e29d[0];db22f5b[1557]<=rva5bee[0];db22f5b[1552]<=ng25ad6;db22f5b[1547]<=ep3c916;db22f5b[1546]<=dm7cb52[0];db22f5b[1535]<=qv85f1a;db22f5b[1526]<=vid047a[0];db22f5b[1512]<=cm5c3fb[0];db22f5b[1510]<=ls96548[0];db22f5b[1504]<=hq30325;db22f5b[1502]<=wl39cb2[0];db22f5b[1486]<=ay4319d[0];db22f5b[1474]<=uvf8612[0];db22f5b[1469]<=fnd7cd6[0];db22f5b[1468]<=jeb76b3;db22f5b[1464]<=tud54f0[0];db22f5b[1463]<=ie1ac9a[0];db22f5b[1453]<=ead10a6;db22f5b[1443]<=rg4254a;db22f5b[1418]<=ymb3882[0];db22f5b[1413]<=ay7264e[0];db22f5b[1410]<=vi6673c;db22f5b[1405]<=nee1ed0[0];db22f5b[1384]<=vi484a9;db22f5b[1377]<=ri86372[0];db22f5b[1348]<=icde7f7[0];db22f5b[1332]<=sja4911[0];db22f5b[1326]<=ykf078e[0];db22f5b[1325]<=wl95212[0];db22f5b[1311]<=ho76527[0];db22f5b[1299]<=nr4a769;db22f5b[1296]<=wy974c8;db22f5b[1287]<=hl_gto_cfg;db22f5b[1284]<=tu6c201[0];db22f5b[1266]<=ph1c298;db22f5b[1263]<=pu86392[0];db22f5b[1255]<=jr8e499[0];db22f5b[1244]<=qg4346c[0];db22f5b[1240]<=zxfc31d[0];db22f5b[1233]<=xy1180e[0];db22f5b[1218]<=lq4d92d;db22f5b[1211]<=xyb29ce[0];db22f5b[1207]<=os62ca7[0];db22f5b[1165]<=dbbfcdb;db22f5b[1157]<=hl_gto_det;db22f5b[1151]<=yxd602a;db22f5b[1132]<=bl6ef6f[0];db22f5b[1106]<=ngbd395[0];db22f5b[1100]<=wlab64d;db22f5b[1088]<=ps58de9;db22f5b[1086]<=asb_beacon_rx[0];db22f5b[1077]<=fc8c822[0];db22f5b[1069]<=gd8a76e[0];db22f5b[1067]<=of6fbb6[0];db22f5b[1064]<=hl_gto_l1;db22f5b[1057]<=xj6b597[0];db22f5b[1053]<=dll_rtrn_lnk;db22f5b[1046]<=pf409a9;db22f5b[1044]<=zz2d498[0];db22f5b[1041]<=zxfc831[0];db22f5b[1038]<=ri2aff3[0];db22f5b[1023]<=normal_time;db22f5b[1022]<=do2f8d5[0];db22f5b[1017]<=gd9529d;db22f5b[1005]<=pu11e99[0];db22f5b[996]<=no_pcie_train;db22f5b[976]<=ksf354[0];db22f5b[973]<=ayce595[0];db22f5b[968]<=jr285eb[0];db22f5b[961]<=uxb46f3[0];db22f5b[959]<=eae097a[0];db22f5b[956]<=lfaac2f[0];db22f5b[936]<=ho57cb0[0];db22f5b[925]<=jc69e45[0];db22f5b[924]<=dbaf825[0];db22f5b[923]<=zk5d0c6[0];db22f5b[901]<=sj184a5[0];db22f5b[890]<=nr40f1e[0];db22f5b[888]<=ukb3686;db22f5b[883]<=ic53b4f[0];db22f5b[880]<=zk63ef8[0];db22f5b[879]<=wyacad8[0];db22f5b[866]<=cm72ce2[0];db22f5b[864]<=pfec594;db22f5b[863]<=nrd2de1[0];db22f5b[858]<=tu42988;db22f5b[839]<=faebeaa[0];db22f5b[836]<=bae4ab[0];db22f5b[788]<=gqa9095[0];db22f5b[779]<=hq9938a[0];db22f5b[776]<=th64b5a;db22f5b[773]<=do83b16;db22f5b[763]<=jp7b411[0];db22f5b[751]<=hqa7396[0];db22f5b[734]<=nee48b5;db22f5b[732]<=zx4aef0[0];db22f5b[726]<=vk250bd;db22f5b[721]<=mg88480;db22f5b[706]<=ec8dc99[0];db22f5b[688]<=fn5a18d[0];db22f5b[666]<=zm86924[0];db22f5b[662]<=ir868d[0];db22f5b[648]<=shd9637;db22f5b[643]<=hl_gto_rcvry;db22f5b[616]<=wy24460[0];db22f5b[609]<=kdc9b25;db22f5b[605]<=fp16539[0];db22f5b[603]<=twb2a42[0];db22f5b[575]<=je3ac05;db22f5b[566]<=rtf36f3[0];db22f5b[550]<=ym9da79;db22f5b[544]<=fpba640;db22f5b[538]<=kde2320[0];db22f5b[532]<=hl_gto_l0stx;db22f5b[526]<=hl_snd_beacon;db22f5b[520]<=ip7a0d2[0];db22f5b[519]<=tw255fe[0];db22f5b[508]<=mt80aa6;db22f5b[498]<=ext_sync;db22f5b[484]<=yma63b[0];db22f5b[479]<=kde8633[0];db22f5b[468]<=jr8ba18;db22f5b[462]<=yzb4916[0];db22f5b[461]<=rgd0c72[0];db22f5b[441]<=mt3c515[0];db22f5b[433]<=vie18ee[0];db22f5b[432]<=xj64abf;db22f5b[431]<=oh9f4b7[0];db22f5b[418]<=qt60392[0];db22f5b[388]<=tu6c96b;db22f5b[375]<=ec8d556[0];db22f5b[367]<=ip753af;db22f5b[366]<=me495de[0];db22f5b[363]<=yma913c[0];db22f5b[344]<=gqa9686[0];db22f5b[333]<=mt121a4[0];db22f5b[331]<=swa9eea[0];db22f5b[321]<=hl_gto_lbk[0];db22f5b[304]<=mrd9364;db22f5b[283]<=byfe6de;db22f5b[269]<=enf788c[0];db22f5b[266]<=hl_gto_hrst;db22f5b[259]<=kd4e556;db22f5b[254]<=vxb0154;db22f5b[249]<=cfgcs_losel[0];db22f5b[234]<=ou31743;db22f5b[230]<=by79cba[0];db22f5b[216]<=go77b7f[0];db22f5b[215]<=jr227d2[0];db22f5b[183]<=bl6ea75;db22f5b[181]<=nr6ea44[0];db22f5b[172]<=aab6a5a[0];db22f5b[166]<=mt3c486[0];db22f5b[165]<=yzbb59b[0];db22f5b[160]<=hl_gto_l0stxfts;db22f5b[152]<=qt5b26c;db22f5b[134]<=ie97de2[0];db22f5b[129]<=kq72ab5;db22f5b[124]<=asb_lane_sync[0];db22f5b[117]<=ls862e8;db22f5b[115]<=by57107[0];db22f5b[107]<=ng2089f[0];db22f5b[91]<=xybd7d5;db22f5b[90]<=sw9dba9[0];db22f5b[86]<=dmeeda9[0];db22f5b[83]<=gq98f12[0];db22f5b[80]<=hl_gto_l2;db22f5b[67]<=kdd65f7[0];db22f5b[58]<=cfg_rtrn_lnk;db22f5b[57]<=yxed3c8[0];db22f5b[45]<=twb290a;db22f5b[41]<=jc5263c[0];db22f5b[35]<=zke418f[0];db22f5b[28]<=dzf6922[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule


















































































































`timescale 1 ns / 100 ps
module pcie_x1_phy_x1 #(
   parameter LANE_WIDTH   = 1 ,   parameter MSM_WIDTH    = 3 ,   parameter L0sTSM_WIDTH = 2 ,   parameter L1SM_WIDTH   = 1 ,   parameter L2SM_WIDTH   = 1 ,   parameter D_WIDTH      = 16 )
  (input wire                    clk_250_tx ,     
   input wire                    clk_250_rx ,     
   input wire                    sys_clk ,        
   input wire                    rst_n ,          
   input wire                    normal_time ,   
   input wire                    reduce_idlecnt ,

   
   input wire [7:0]              LINK_NUM,        
   input wire [4:0]              N_FTS_INC,       
   input wire [9:0]              SKP_INS_CNT,     
   input wire [3:0]              TX_EIDL_CNT,     
 
   
   input wire [8*LANE_WIDTH-1:0] asb_data,        
   input wire [LANE_WIDTH-1:0]   asb_kcntl,       
   input wire [LANE_WIDTH-1:0]   asb_err,         
   input wire [LANE_WIDTH-1:0]   asb_eidle_rx,    
   input wire [LANE_WIDTH-1:0]   asb_detdone_rx,  
   input wire [LANE_WIDTH-1:0]   asb_detres_rx,   
   input wire [LANE_WIDTH-1:0]   asb_dskew_rx,    
   input wire [LANE_WIDTH-1:0]   asb_beacon_rx,   
   input wire [LANE_WIDTH-1:0]   asb_lane_sync,   

   
   input wire                    force_disable_scr,
   input wire                    hl_disable_scr,  
   input wire                    hl_gto_dis,      
   input wire                    hl_gto_det,      
   input wire                    hl_gto_hrst,     
   input wire                    hl_gto_l0stx,    
   input wire                    hl_gto_l1,       
   input wire                    hl_gto_l2,       
   input wire                    hl_gto_l0stxfts, 
   input wire [LANE_WIDTH-1:0]   hl_gto_lbk,      
   input wire                    hl_gto_rcvry,    
   input wire                    hl_gto_cfg,      
   input wire                    hl_snd_beacon,   
   input wire [2:0]              cfgcs_losel,     
   input wire                    dll_rtrn_lnk,    
   input wire                    cfg_rtrn_lnk,    

   
   input wire                    ext_sync,        
   input wire                    no_pcie_train,   

   
   input wire [D_WIDTH-1:0]      tdmux_data,      
   input wire                    tdmux_st,        
   input wire                    tdmux_end,       
   input wire                    tdmux_edb,       
   input wire                    tdmux_dllp_st,   
   input wire                    tdmux_dllp_end,  
   input wire                    tdmux_skp,       
   
   
   input wire  [D_WIDTH-1:0]     tx_lbk_data,     
   input wire  [2*LANE_WIDTH-1:0]tx_lbk_kcntl,    

   output wire                   tx_lbk_rdy,      
   output reg  [D_WIDTH-1:0]     rx_lbk_data,     
   output reg  [2*LANE_WIDTH-1:0]rx_lbk_kcntl,    

   output wire                   phy_realign_req, 
   output wire [MSM_WIDTH:0]     phy_ltssm_state, 
   output wire [2:0]             phy_ltssm_substate, 
   output wire [2:0]             phy_cfgln_sum,   
   output wire [LANE_WIDTH-1:0]  phy_cfgln,       

   
   output wire                   phy_skpq_val,    
   output wire [1:0]             phy_skpq_nclks,  

   
   output wire [2:0]             phy_neg_lnkw,    
   output wire                   phy_trn_err,     
   output wire                   phy_lnk_trn,     

   
   output wire                   phy_disable_scr, 
   output wire [LANE_WIDTH-1:0]  phy_inv_polar,   
   output wire [LANE_WIDTH-1:0]  phy_eidle_tx,    
   output wire [LANE_WIDTH-1:0]  phy_godet_rx,    
   output wire                   phy_sloopback,   
   output wire                   phy_snd_beacon,  
   output wire [8*LANE_WIDTH-1:0]phy_data,        
   output wire [LANE_WIDTH-1:0]  phy_kcntl,       
   output wire [LANE_WIDTH-1:0]  phy_fndisp,      
   output wire                   phy_linkup,      
   output wire                   phy_l0,          
   output wire                   phy_l0_l0s,      
   output wire [L0sTSM_WIDTH:0]  phy_l0s_tx_state,
   output wire [L1SM_WIDTH:0]    phy_l1_state,
   output wire [L2SM_WIDTH:0]    phy_l2_state,
   output wire                   pol_compliance,

   
   output wire [D_WIDTH-1:0]     dfrm_ddata,      
   output wire                   dfrm_dllp_st,    
   output wire                   dfrm_dllp_end,   
   output wire [D_WIDTH-1:0]     dfrm_tdata,      
   output wire                   dfrm_tval,       
   output wire                   dfrm_st,         
   output wire                   dfrm_end,        
   output wire                   dfrm_edb,        
   output wire                   dfrm_perr           );
wire   [LANE_WIDTH-1:0]     ltssm_config_ln;
wire   [D_WIDTH-1:0]        ho48f22;
wire   [(D_WIDTH/8)-1:0]    ne47913;
wire   [(D_WIDTH/8)-1:0]    xwe44d5;
wire   [LANE_WIDTH-1:0]     cb3c89a;
wire                        zz226ab;
wire   [1:0]                zx401ed;
wire   [3:0]                qte803d;
wire   [2:0]                ltssm_cfgln_sum;
wire                        ls862e8;
wire                        ou31743;
wire                        jr8ba18;
wire   [16*LANE_WIDTH-1:0]  ld4a2c3     ;
wire   [2*LANE_WIDTH-1:0]   tj8b0fd    ;
wire   [2*LANE_WIDTH-1:0]   gbc3f7b      ;
wire   [2*LANE_WIDTH-1:0]   mrfdee1;
wire   [2*LANE_WIDTH-1:0]   hb7b868;
wire   [2*LANE_WIDTH-1:0]   dme1a35;
wire   [LANE_WIDTH-1:0]     cm68d54;
wire   [D_WIDTH-1:0]        do35500     ;
wire   [(D_WIDTH/8)-1:0]    sh54017    ;
wire   [(D_WIDTH/8)-1:0]    sw5ef;
wire   [1*LANE_WIDTH-1:0]   an17bc4;
reg    [15:0]               ngbde25;
reg    [1:0]                goef12b;
reg                         ls9933d;

`ifdef DWN_STRM_LANE

`else

`endif

`ifdef ROOT_COMP

`else

`endif

`ifdef DWN_STRM_PORT

`else

`endif
wire   eac4ac1;
wire   ls25609;
wire   ec2b04b;

`ifdef MASTER_LOOPBACK

`else

`endif	
reg swa9c05;
reg fnd7c7b;
reg [7 : 0] hq2af68;
reg [4 : 0] ep8f6b9;
reg [9 : 0] sj12f62;
reg [3 : 0] dm57b43;
reg [8 * LANE_WIDTH - 1 : 0] zx6bb34;
reg [LANE_WIDTH - 1 : 0] vvecd3a;
reg [LANE_WIDTH - 1 : 0] ho669d6;
reg [LANE_WIDTH - 1 : 0] ou920a1;
reg [LANE_WIDTH - 1 : 0] rv28b28;
reg [LANE_WIDTH - 1 : 0] ep2ca37;
reg [LANE_WIDTH - 1 : 0] dz7bcc5;
reg [LANE_WIDTH - 1 : 0] sj90508;
reg [LANE_WIDTH - 1 : 0] aa82845;
reg tjbf693;
reg xw5d8c5;
reg rtec62a;
reg dz6e0fd;
reg xwf4f7c;
reg aa965;
reg fc4b29;
reg tw2594b;
reg wyb3ad1;
reg [LANE_WIDTH - 1 : 0] gd18aba;
reg oh2ca5a;
reg bnba632;
reg oha1578;
reg [2 : 0] enf25fa;
reg en652d4;
reg cb296a5;
reg qv363ca;
reg ria263b;
reg [D_WIDTH - 1 : 0] hqbd894;
reg nrec4a3;
reg yk6251f;
reg cb128f8;
reg jr8ea15;
reg al750ae;
reg fp947c5;
reg [D_WIDTH - 1 : 0] gq15d1a;
reg [2 * LANE_WIDTH - 1 : 0] xj74685;
reg [D_WIDTH - 1 : 0] qi1a170;
reg [(D_WIDTH / 8) - 1 : 0] ux85c02;
reg [(D_WIDTH / 8) - 1 : 0] ip700a8;
reg [LANE_WIDTH - 1 : 0] ux2a24;
reg ec15124;
reg [1 : 0] twa8921;
reg [3 : 0] zzbf549;
reg [2 : 0] gd12f04;
reg coabc5;
reg xj55e28;
reg ntaf146;
reg [16 * LANE_WIDTH - 1 : 0] xya8247;
reg [2 * LANE_WIDTH - 1 : 0] tj91dc;
reg [2 * LANE_WIDTH - 1 : 0] rg47733;
reg [2 * LANE_WIDTH - 1 : 0] gbdccd8;
reg [2 * LANE_WIDTH - 1 : 0] cb33626;
reg [2 * LANE_WIDTH - 1 : 0] bld89ae;
reg [LANE_WIDTH - 1 : 0] kf26bb1;
reg [D_WIDTH - 1 : 0] gdaec6b;
reg [(D_WIDTH / 8) - 1 : 0] qvb1aeb;
reg [(D_WIDTH / 8) - 1 : 0] hb6bae8;
reg [1 * LANE_WIDTH - 1 : 0] pseba3b;
reg [15 : 0] ps5d1db;
reg [1 : 0] ipe8edb;
reg jp6bebe;
reg ie3b6e3;
reg sudb719;
reg aydb8c8;
reg [2047:0] db22f5b;
wire [69:0] ux17adf;

`ifdef DWN_STRM_LANE

`else

`endif

`ifdef ROOT_COMP

`else

`endif

`ifdef DWN_STRM_PORT

`else

`endif





`ifdef MASTER_LOOPBACK

`else

`endif	

localparam ribd6fd = 70,jceb7ea = 32'hfdffca4b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef DWN_STRM_LANE


`else


`endif


`ifdef ROOT_COMP


`else


`endif


`ifdef DWN_STRM_PORT


`else


`endif


`ifdef MASTER_LOOPBACK


`else


`endif	








`ifdef DWN_STRM_LANE
   assign ls862e8 = 1'b1;

`else
   assign ls862e8 = 1'b0;

`endif




`ifdef ROOT_COMP
   assign jr8ba18 = 1'b1;

`else
   assign jr8ba18 = 1'b0;

`endif




`ifdef DWN_STRM_PORT
   assign ou31743 = 1'b1;

`else
   assign ou31743 = 1'b0;

`endif


assign phy_neg_lnkw = 3'b001;




assign ip545b1 = tjbf693 ? 1'b1 : phy_disable_scr ;
pcie_x1_an23b02 wjdcc67 (      .wl1d815       ( sys_clk ),   .clk_250_tx       ( clk_250_tx ),   .uv60567       ( sys_clk ),   .clk_250_rx       ( clk_250_rx ),   .rst_n            ( rst_n ),      .ieacf60 ( phy_snd_beacon ),   .ip545b1    ( ip545b1 ),   .ls9933d     ( jp6bebe ),   .fnec00f    ( ps5d1db ),   .of6007f   ( ipe8edb ),   .co3fd  ( hb6bae8 ),   .ri1fe8( pseba3b),   .ksff43       ( zx6bb34 ),   .ip7fa18      ( vvecd3a ),   .qtfd0c4        ( ho669d6 ),   .cze8624   ( ou920a1 ),   .os43125  ( sj90508 ),   .oh18929  ( aa82845 ),      .cb8707     ( phy_data ),   .ui4383c    ( phy_kcntl ),   .hd1c1e0   ( phy_fndisp ),   .uie0f07 ( phy_eidle_tx),   .uic494c      ( ld4a2c3 ),   .ie24a61     ( tj8b0fd ),   .do25308       ( gbc3f7b ),   .ux29843  ( mrfdee1 ),   .yk4c21c ( hb7b868 ),   .rt610e0 ( dme1a35 )   );

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ls9933d <= 'd0;   else begin      if (phy_ltssm_state == 'd1)         ls9933d <= 1'b1;      else if (phy_ltssm_state == 'd0)         ls9933d <= 'd0;   end
end



pcie_x1_twa711c qt5e3a1   (      .sys_clk              (sys_clk),   .rst_n                (rst_n),   .pcie_x1_dgrx_data            (xya8247),   .pcie_x1_dgrx_kcntl           (tj91dc),   .pcie_x1_dgrx_err             (rg47733),
      .dfrm_ddata           (dfrm_ddata),   .dfrm_dllp_st         (dfrm_dllp_st),   .dfrm_dllp_end        (dfrm_dllp_end),   .dfrm_tdata           (dfrm_tdata),   .dfrm_tval            (dfrm_tval),   .dfrm_st              (dfrm_st),   .dfrm_end             (dfrm_end),   .dfrm_edb             (dfrm_edb),   .dfrm_perr            (dfrm_perr)   );




assign eac4ac1  = gbdccd8[1] |  gbdccd8[0] ;
assign ls25609 = cb33626[1] |  cb33626[0] ;
assign ec2b04b = bld89ae[1] |  bld89ae[0] ;
pcie_x1_bnbfbd0 pf74746   (        .sys_clk             (sys_clk),    .rst_n               (rst_n),    .normal_time         (swa9c05),    .reduce_idlecnt      (fnd7c7b),    .LINK_NUM            (hq2af68),    .N_FTS_INC           (ep8f6b9),    .TX_EIDL_CNT         (dm57b43),
        .cfgcs_losel         (enf25fa),    .ext_sync            (qv363ca),    .no_pcie_train       (ria263b),
        .asb_data            (xya8247),    .asb_kcntl           (tj91dc),    .asb_eidle_rx        (ie3b6e3),    .asb_beacon_rx       (sudb719),    .asb_lane_sync       (aydb8c8),    .asb_detdone_rx      (rv28b28),    .asb_detres_rx       (ep2ca37),    .asb_dskew_rx        (dz7bcc5),
    .qte803d         (zzbf549),    .swf6e        (swf6e),        .hl_disable_scr      (xw5d8c5),    .hl_gto_dis          (rtec62a),    .hl_gto_det          (dz6e0fd),    .hl_gto_hrst         (xwf4f7c),    .hl_gto_l0stx        (aa965),    .hl_gto_l1           (fc4b29),    .hl_gto_l2           (tw2594b),    .hl_gto_l0stxfts     (wyb3ad1),    .hl_gto_lbk          (gd18aba),    .hl_gto_rcvry        (oh2ca5a),    .hl_gto_cfg          (bnba632),    .hl_snd_beacon       (oha1578),    .cfg_rtrn_lnk        (cb296a5),    .dll_rtrn_lnk        (en652d4),
    .ls862e8        (coabc5),    .ou31743        (xj55e28),    .jr8ba18        (ntaf146),
        .xy891e4   (phy_realign_req),    .ho48f22          (ho48f22),    .ne47913         (ne47913),    .cb3c89a           (cb3c89a),    .xwe44d5        (xwe44d5),    .zz226ab       (zz226ab),
    .ltssm_config_ln     (ltssm_config_ln),    .ltssm_cfgln_sum     (ltssm_cfgln_sum),
    .fa57f9b   (phy_disable_scr),    .cz44a17     (phy_inv_polar),    .gq24630      (gq24630),    .thf6aed      (phy_godet_rx),    .xlb576e     (ene24b8),    .cbabb76     (phy_sloopback),    .ieacf60    (phy_snd_beacon),    .eneddaa        (phy_linkup),    .dz6ed54       (phy_trn_err),    .xw76aa7       (phy_lnk_trn),    .fn6e3cf         (phy_ltssm_state),    .zzaa9d6      (phy_ltssm_substate),    .ltssm_l0            (ltssm_l0),    .l0s_tx_state        (phy_l0s_tx_state),    .l1_state            (phy_l1_state),    .l2_state            (phy_l2_state),    .pol_compliance      (pol_compliance),    .ymbc4aa        (phy_l0_l0s)    );



pcie_x1_twbd13a # (   .LANE_WIDTH      ( LANE_WIDTH ),   .D_WIDTH         ( 16 ))   vvfcad4 (      .sys_clk              (sys_clk),   .rst_n                (rst_n),   .SKP_INS_CNT          (sj12f62),   .tdmux_data           (hqbd894),   .tdmux_st             (nrec4a3),   .tdmux_end            (yk6251f),   .tdmux_edb            (cb128f8),   .tdmux_dllp_st        (jr8ea15),   .tdmux_dllp_end       (al750ae),   .tdmux_skp            (fp947c5),   .mrdc583             (qi1a170),   .zz160ed            (ux85c02),   .uvedd94              (ux2a24),   .xy83b76           (ip700a8),   .ho76527         (gq24630),   .ukbc740          ({(LANE_WIDTH){ec15124}}),   .fn6e3cf          (phy_ltssm_state),   .pol_compliance       (pol_compliance),      .qte803d          (qte803d),   .zx401ed       (zx401ed),   .swf6e         (swf6e),   .frm_data             (do35500),   .frm_kcntl            (sh54017),   .frm_fndisp           (sw5ef),   .frm_eidle_tx         (an17bc4),   .frm_val              ()   );
assign phy_skpq_nclks = (ltssm_l0) ? twa8921 : 1'b0;
assign phy_skpq_val   = (ltssm_l0) ? swf6e   : 1'b0;
assign phy_l0         = ltssm_l0;
assign phy_cfgln_sum  = gd12f04;
assign phy_cfgln      = ltssm_config_ln;






assign tx_lbk_rdy = ene24b8;


`ifdef MASTER_LOOPBACK

always @(*) begin   if (ene24b8) begin            ngbde25  = gq15d1a;      goef12b = xj74685;
            rx_lbk_data    = xya8247;      rx_lbk_kcntl   = tj91dc;   end   else begin            ngbde25  = gdaec6b;      goef12b = qvb1aeb;
            rx_lbk_data    = 0;      rx_lbk_kcntl   = 0;   end
end

`else

always @(*) begin            ngbde25  = gdaec6b;      goef12b = qvb1aeb;
            rx_lbk_data    = 0;      rx_lbk_kcntl   = 0;
end

`endif	

always@* begin swa9c05<=ux17adf[0];fnd7c7b<=ux17adf[1];hq2af68<={LINK_NUM>>1,ux17adf[2]};ep8f6b9<={N_FTS_INC>>1,ux17adf[3]};sj12f62<={SKP_INS_CNT>>1,ux17adf[4]};dm57b43<={TX_EIDL_CNT>>1,ux17adf[5]};zx6bb34<={asb_data>>1,ux17adf[6]};vvecd3a<={asb_kcntl>>1,ux17adf[7]};ho669d6<={asb_err>>1,ux17adf[8]};ou920a1<={asb_eidle_rx>>1,ux17adf[9]};rv28b28<={asb_detdone_rx>>1,ux17adf[10]};ep2ca37<={asb_detres_rx>>1,ux17adf[11]};dz7bcc5<={asb_dskew_rx>>1,ux17adf[12]};sj90508<={asb_beacon_rx>>1,ux17adf[13]};aa82845<={asb_lane_sync>>1,ux17adf[14]};tjbf693<=ux17adf[15];xw5d8c5<=ux17adf[16];rtec62a<=ux17adf[17];dz6e0fd<=ux17adf[18];xwf4f7c<=ux17adf[19];aa965<=ux17adf[20];fc4b29<=ux17adf[21];tw2594b<=ux17adf[22];wyb3ad1<=ux17adf[23];gd18aba<={hl_gto_lbk>>1,ux17adf[24]};oh2ca5a<=ux17adf[25];bnba632<=ux17adf[26];oha1578<=ux17adf[27];enf25fa<={cfgcs_losel>>1,ux17adf[28]};en652d4<=ux17adf[29];cb296a5<=ux17adf[30];qv363ca<=ux17adf[31];ria263b<=ux17adf[32];hqbd894<={tdmux_data>>1,ux17adf[33]};nrec4a3<=ux17adf[34];yk6251f<=ux17adf[35];cb128f8<=ux17adf[36];jr8ea15<=ux17adf[37];al750ae<=ux17adf[38];fp947c5<=ux17adf[39];gq15d1a<={tx_lbk_data>>1,ux17adf[40]};xj74685<={tx_lbk_kcntl>>1,ux17adf[41]};qi1a170<={ho48f22>>1,ux17adf[42]};ux85c02<={ne47913>>1,ux17adf[43]};ip700a8<={xwe44d5>>1,ux17adf[44]};ux2a24<={cb3c89a>>1,ux17adf[45]};ec15124<=ux17adf[46];twa8921<={zx401ed>>1,ux17adf[47]};zzbf549<={qte803d>>1,ux17adf[48]};gd12f04<={ltssm_cfgln_sum>>1,ux17adf[49]};coabc5<=ux17adf[50];xj55e28<=ux17adf[51];ntaf146<=ux17adf[52];xya8247<={ld4a2c3>>1,ux17adf[53]};tj91dc<={tj8b0fd>>1,ux17adf[54]};rg47733<={gbc3f7b>>1,ux17adf[55]};gbdccd8<={mrfdee1>>1,ux17adf[56]};cb33626<={hb7b868>>1,ux17adf[57]};bld89ae<={dme1a35>>1,ux17adf[58]};kf26bb1<={cm68d54>>1,ux17adf[59]};gdaec6b<={do35500>>1,ux17adf[60]};qvb1aeb<={sh54017>>1,ux17adf[61]};hb6bae8<={sw5ef>>1,ux17adf[62]};pseba3b<={an17bc4>>1,ux17adf[63]};ps5d1db<={ngbde25>>1,ux17adf[64]};ipe8edb<={goef12b>>1,ux17adf[65]};jp6bebe<=ux17adf[66];ie3b6e3<=ux17adf[67];sudb719<=ux17adf[68];aydb8c8<=ux17adf[69];end
always@* begin db22f5b[2047]<=reduce_idlecnt;db22f5b[2046]<=LINK_NUM[0];db22f5b[2044]<=N_FTS_INC[0];db22f5b[2040]<=SKP_INS_CNT[0];db22f5b[2033]<=TX_EIDL_CNT[0];db22f5b[2019]<=asb_data[0];db22f5b[2011]<=force_disable_scr;db22f5b[1991]<=asb_kcntl[0];db22f5b[1974]<=hl_disable_scr;db22f5b[1935]<=asb_err[0];db22f5b[1925]<=cb3c89a[0];db22f5b[1900]<=hl_gto_dis;db22f5b[1892]<=gbc3f7b[0];db22f5b[1862]<=tdmux_data[0];db22f5b[1823]<=asb_eidle_rx[0];db22f5b[1803]<=zz226ab;db22f5b[1753]<=hl_gto_det;db22f5b[1738]<=hl_gto_l1;db22f5b[1737]<=mrfdee1[0];db22f5b[1676]<=tdmux_st;db22f5b[1656]<=tx_lbk_kcntl[0];db22f5b[1619]<=hl_gto_lbk[0];db22f5b[1608]<=cm68d54[0];db22f5b[1598]<=asb_detdone_rx[0];db22f5b[1559]<=zx401ed[0];db22f5b[1497]<=ld4a2c3[0];db22f5b[1458]<=hl_gto_hrst;db22f5b[1428]<=hl_gto_l2;db22f5b[1426]<=hb7b868[0];db22f5b[1338]<=cfgcs_losel[0];db22f5b[1305]<=tdmux_end;db22f5b[1264]<=ho48f22[0];db22f5b[1256]<=cfg_rtrn_lnk;db22f5b[1191]<=hl_gto_rcvry;db22f5b[1169]<=do35500[0];db22f5b[1163]<=an17bc4[0];db22f5b[1149]<=asb_detres_rx[0];db22f5b[1127]<=tdmux_dllp_st;db22f5b[1114]<=ls9933d;db22f5b[1070]<=qte803d[0];db22f5b[1023]<=normal_time;db22f5b[1005]<=asb_lane_sync[0];db22f5b[962]<=xwe44d5[0];db22f5b[946]<=tj8b0fd[0];db22f5b[931]<=no_pcie_train;db22f5b[869]<=hl_gto_l0stx;db22f5b[828]<=tx_lbk_data[0];db22f5b[809]<=hl_gto_l0stxfts;db22f5b[804]<=dme1a35[0];db22f5b[748]<=jr8ba18;db22f5b[727]<=ec2b04b;db22f5b[669]<=hl_snd_beacon;db22f5b[628]<=dll_rtrn_lnk;db22f5b[581]<=sw5ef[0];db22f5b[563]<=tdmux_edb;db22f5b[557]<=goef12b[0];db22f5b[502]<=asb_beacon_rx[0];db22f5b[481]<=ne47913[0];db22f5b[465]<=ext_sync;db22f5b[414]<=tdmux_skp;db22f5b[374]<=ou31743;db22f5b[363]<=ls25609;db22f5b[334]<=hl_gto_cfg;db22f5b[290]<=sh54017[0];db22f5b[278]<=ngbde25[0];db22f5b[251]<=asb_dskew_rx[0];db22f5b[207]<=tdmux_dllp_end;db22f5b[187]<=ls862e8;db22f5b[181]<=eac4ac1;db22f5b[93]<=ltssm_cfgln_sum[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_kd5e78f (
   input wire         sys_clk ,        
   input wire         rst_n ,          

   input wire [31:0]  rgf1f36 ,      
   input wire         kf8f9b3 ,    

   input wire [11:0]  ho7cd9c ,    
   input wire         nre6ce3 , 
   input              wl3671f ,       

   output wire [11:0] wyb38fd ,    
   output reg         tw9c7e8 ,       
   output reg         pfe3f43 ,      
   output reg         ks1fa1f ,     
   output reg         uvfd0f9          ) ;
reg [11:0]            ipe87cc ;
reg                   kq43e65 ;
reg                   co1f328 ;
reg                   fnf9940 ;
reg [11:0]            wjcca07 ;
wire                  en6503d ;
wire                  db281ed ;
wire [11:0]           zx40f6f ;
wire [11:0]           yz7b7f ;
wire                  nt3dbfc ;
wire                  ipedfe7 ;
wire                  ip6ff3c ;
wire                  mr7f9e5 ;
parameter xjfcf2c    = 12'hFFF ;
reg [31 : 0] kde7967;
reg yz3cb3d;
reg [11 : 0] qge59ed;
reg qv2cf68;
reg su67b44;
reg lf3da21;
reg shed10f;
reg me6887d;
reg [11 : 0] of443e8;
reg ie21f44;
reg cofa20;
reg [11 : 0] ui7d100;
reg [11 : 0] ipe8800;
reg ip44004;
reg ng20024;
reg uk123;
reg ec918;
reg [2047:0] db22f5b;
wire [16:0] ux17adf;

localparam ribd6fd = 17,jceb7ea = 32'hfdffd28b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;







assign en6503d = (kde7967[31:24] == 8'h00)  ;


assign db281ed = (kde7967[31:24] == 8'h10) ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin       ipe87cc  <= 12'h000 ;       kq43e65   <= 1'b0 ;   end   else if (ie21f44 || cofa20) begin       ipe87cc  <= kde7967[11:0] ;       kq43e65   <= yz3cb3d ;   end   else  begin       ipe87cc  <= ipe87cc ;       kq43e65   <= 1'b0 ;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      co1f328   <= 1'b0 ;      fnf9940   <= 1'b0 ;   end   else  begin      co1f328   <= ie21f44 ;      fnf9940   <= cofa20 ;   end
end


assign zx40f6f = ~ipe87cc ;




assign nt3dbfc = ((qge59ed + ui7d100) <= 12'd2048) ;


assign yz7b7f = ((~of443e8) + 12'h001) ;


assign ipedfe7 = ((ipe87cc + ipe8800) < 12'd2048) ;


assign ip6ff3c = (ipe87cc == of443e8) ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      uvfd0f9 <= 1'b0 ;   else if (lf3da21 && (!ip44004 || (ip44004 && !ng20024)))      uvfd0f9 <= 1'b1 ;   else      uvfd0f9 <= 1'b0 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ks1fa1f <= 1'b0 ;      wjcca07   <= xjfcf2c ;   end   else if (su67b44) begin      ks1fa1f <= 1'b0 ;      wjcca07   <= xjfcf2c ;   end   else if (lf3da21 && ip44004 && ng20024 & !uk123) begin            if (shed10f || me6887d) begin         ks1fa1f <= 1'b1 ;         wjcca07   <= ipe87cc ;      end      else begin         ks1fa1f <= 1'b0 ;         wjcca07   <= of443e8 ;      end   end   else begin      ks1fa1f <= 1'b0 ;      wjcca07   <= of443e8 ;   end
end

assign wyb38fd = of443e8 ;


assign mr7f9e5 =  ~(qge59ed == (ipe87cc + 1));



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pfe3f43 <= 1'b0 ;   else if (lf3da21 && ip44004 && ng20024 && me6887d && ec918)      pfe3f43 <= 1'b1 ;   else if (qv2cf68)      pfe3f43 <= 1'b0 ;   else      pfe3f43 <= pfe3f43 ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      tw9c7e8 <= 1'b0 ;   else if (lf3da21 && ip44004 && ng20024 && shed10f)      tw9c7e8 <= 1'b1 ;   else      tw9c7e8 <= 1'b0 ;
end
always@* begin kde7967<={rgf1f36>>1,ux17adf[0]};yz3cb3d<=ux17adf[1];qge59ed<={ho7cd9c>>1,ux17adf[2]};qv2cf68<=ux17adf[3];su67b44<=ux17adf[4];lf3da21<=ux17adf[5];shed10f<=ux17adf[6];me6887d<=ux17adf[7];of443e8<={wjcca07>>1,ux17adf[8]};ie21f44<=ux17adf[9];cofa20<=ux17adf[10];ui7d100<={zx40f6f>>1,ux17adf[11]};ipe8800<={yz7b7f>>1,ux17adf[12]};ip44004<=ux17adf[13];ng20024<=ux17adf[14];uk123<=ux17adf[15];ec918<=ux17adf[16];end
always@* begin db22f5b[2047]<=kf8f9b3;db22f5b[2046]<=ho7cd9c[0];db22f5b[2044]<=nre6ce3;db22f5b[2040]<=wl3671f;db22f5b[2032]<=kq43e65;db22f5b[2017]<=co1f328;db22f5b[1987]<=fnf9940;db22f5b[1926]<=wjcca07[0];db22f5b[1804]<=en6503d;db22f5b[1614]<=mr7f9e5;db22f5b[1561]<=db281ed;db22f5b[1074]<=zx40f6f[0];db22f5b[1023]<=rgf1f36[0];db22f5b[807]<=ip6ff3c;db22f5b[403]<=ipedfe7;db22f5b[201]<=nt3dbfc;db22f5b[100]<=yz7b7f[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





































`timescale 1 ns / 100 ps
module pcie_x1_wl8f90d (
   input wire         sys_clk ,        
   input wire         rst_n ,          

   `ifdef X1
      input wire [15:0]  mg21b1b , 
      input wire         dfrm_dllp_st ,   
      output wire        kf8f9b3 ,    
      output wire        jc6362b ,   
   `endif
   `ifdef X4
      input wire [47:0]  mg21b1b , 
      input wire         oh23716 ,      
      output reg         kf8f9b3 ,    
      output reg         jc6362b ,   
   `endif

   input              wl3671f ,       

   output reg [31:0]  rgf1f36           ) ;
reg [15:0]       ls96437 ;
reg [15:0]       twb21ba ;
reg [31:0]       an90dd3 ;
reg [31:0]       je86e9c ;
wire [15:0]      xl374e2 ;
wire [15:0]      hdba717 ;
wire             mrd38bf ;
wire [31:0]      fc9c5fd ;

`ifdef X1
wire             gbe2feb ;
reg              sj17f5d ;
reg              dbbfaed ;
reg              czfd76e ;
reg [15:0]       tuebb74 ;
reg [15:0]       vi5dba3 ;

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg su67b44;
reg [15 : 0] xj6e8d4;
reg [31 : 0] dz746a7;
reg [31 : 0] wya353e;
reg [15 : 0] ks1a9f0;
reg [15 : 0] sud4f81;
reg xya7c08;
reg [31 : 0] wy3e043;
reg [2047:0] db22f5b;
wire [7:0] ux17adf;

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 8,jceb7ea = 32'hfdffd84b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X1



`endif





`ifdef X1
   assign gbe2feb = dfrm_dllp_st ;   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         sj17f5d <= 1'b0 ;         dbbfaed <= 1'b0 ;         czfd76e <= 1'b0 ;
         tuebb74 <= 1'd0 ;      end      else begin         sj17f5d <=  gbe2feb ;         dbbfaed <=  sj17f5d ;         czfd76e <=  dbbfaed ;
         if (gbe2feb)            tuebb74 <= mg21b1b ;         else            tuebb74 <= tuebb74 ;      end   end   assign fc9c5fd = {tuebb74, mg21b1b} ;

`endif



`ifdef X4
   assign fc9c5fd = mg21b1b[47:16] ;

`endif



always @* begin   je86e9c = wy3e043 ;   an90dd3 = {wya353e[24],wya353e[25],wya353e[26],wya353e[27],wya353e[28],wya353e[29],wya353e[30],wya353e[31],        wya353e[16],wya353e[17],wya353e[18],wya353e[19],wya353e[20],wya353e[21],wya353e[22],wya353e[23],        wya353e[8],wya353e[9],wya353e[10],wya353e[11],wya353e[12],wya353e[13],wya353e[14],wya353e[15],        wya353e[0],wya353e[1],wya353e[2],wya353e[3],wya353e[4],wya353e[5],wya353e[6],wya353e[7] };   twb21ba = 16'h32B9;   ls96437[0] = dz746a7[31] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[26] ^ dz746a7[23] ^ dz746a7[21] ^ dz746a7[20] ^               dz746a7[15] ^ dz746a7[13] ^ dz746a7[12] ^ dz746a7[8] ^ dz746a7[4] ^ dz746a7[0] ^ xj6e8d4[0] ;   ls96437[1] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[24] ^ dz746a7[23] ^               dz746a7[22] ^ dz746a7[20] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^ dz746a7[12] ^ dz746a7[9] ^               dz746a7[8] ^ dz746a7[5] ^ dz746a7[4] ^ dz746a7[1] ^ dz746a7[0] ^ xj6e8d4[1] ;   ls96437[2] = dz746a7[31] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^               dz746a7[21] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[13] ^ dz746a7[10] ^ dz746a7[9] ^               dz746a7[6] ^ dz746a7[5] ^ dz746a7[2] ^ dz746a7[1] ^ xj6e8d4[2] ;   ls96437[3] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^               dz746a7[20] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^ dz746a7[13] ^               dz746a7[12] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[8] ^ dz746a7[7] ^ dz746a7[6] ^ dz746a7[4] ^               dz746a7[3] ^ dz746a7[2] ^ dz746a7[0] ^ xj6e8d4[3] ;   ls96437[4] = dz746a7[31] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^               dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^ dz746a7[13] ^               dz746a7[12] ^ dz746a7[11] ^ dz746a7[9] ^ dz746a7[8] ^ dz746a7[7] ^ dz746a7[5] ^ dz746a7[4] ^               dz746a7[3] ^ dz746a7[1] ^ xj6e8d4[4] ;   ls96437[5] = dz746a7[27] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^ dz746a7[22] ^ dz746a7[20] ^               dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^ dz746a7[13] ^               dz746a7[12] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[8] ^ dz746a7[6] ^ dz746a7[5] ^ dz746a7[4] ^               dz746a7[2] ^  xj6e8d4[5] ;   ls96437[6] = dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^ dz746a7[21] ^               dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^               dz746a7[13] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[7] ^ dz746a7[6] ^ dz746a7[5] ^               dz746a7[3] ^ xj6e8d4[6] ;   ls96437[7] = dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[22] ^               dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^               dz746a7[14] ^ dz746a7[12] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[8] ^ dz746a7[7] ^ dz746a7[6] ^               dz746a7[4] ^ xj6e8d4[7] ;   ls96437[8] = dz746a7[30] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[23] ^               dz746a7[22] ^ dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^               dz746a7[15] ^ dz746a7[13] ^ dz746a7[12] ^ dz746a7[11] ^ dz746a7[9] ^ dz746a7[8] ^ dz746a7[7] ^               dz746a7[5] ^ xj6e8d4[8] ;   ls96437[9] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[24] ^               dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^               dz746a7[16] ^ dz746a7[14] ^ dz746a7[13] ^ dz746a7[12] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[8] ^               dz746a7[6] ^ xj6e8d4[9] ;   ls96437[10] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[25] ^ dz746a7[24] ^                dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^                dz746a7[15] ^ dz746a7[14] ^ dz746a7[13] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[7] ^ xj6e8d4[10] ;   ls96437[11] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^                dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[16] ^                dz746a7[15] ^ dz746a7[14] ^ dz746a7[12] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[8] ^ xj6e8d4[11] ;   ls96437[12] = dz746a7[30] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[22] ^ dz746a7[19] ^                dz746a7[17] ^ dz746a7[16] ^ dz746a7[11] ^ dz746a7[9] ^ dz746a7[8] ^ dz746a7[4] ^ dz746a7[0] ^ xj6e8d4[12] ;   ls96437[13] = dz746a7[31] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[23] ^ dz746a7[20] ^                dz746a7[18] ^ dz746a7[17] ^ dz746a7[12] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[5] ^ dz746a7[1] ^ xj6e8d4[13];   ls96437[14] = dz746a7[30] ^ dz746a7[29] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[24] ^ dz746a7[21] ^ dz746a7[19] ^                dz746a7[18] ^ dz746a7[13] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[6] ^ dz746a7[2] ^ xj6e8d4[14] ;   ls96437[15] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[25] ^ dz746a7[22] ^ dz746a7[20] ^                dz746a7[19] ^ dz746a7[14] ^ dz746a7[12] ^ dz746a7[11] ^ dz746a7[7] ^ dz746a7[3] ^ xj6e8d4[15] ;

end

assign xl374e2 = {~ls96437[8],  ~ls96437[9],  ~ls96437[10], ~ls96437[11],                  ~ls96437[12], ~ls96437[13], ~ls96437[14], ~ls96437[15],                  ~ls96437[0],  ~ls96437[1],  ~ls96437[2],  ~ls96437[3],                  ~ls96437[4],  ~ls96437[5],  ~ls96437[6],  ~ls96437[7]} ;


`ifdef X1
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         vi5dba3 <= 16'h0000 ;      else         vi5dba3 <= ks1a9f0 ;   end      assign hdba717 = (vi5dba3 ^ mg21b1b[15:0]) ;

`endif



`ifdef X4
      assign hdba717 = (ks1a9f0 ^ mg21b1b[15:0]) ;

`endif




assign mrd38bf =  (sud4f81 == 16'h0000) ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rgf1f36 <= 32'h0000_0000 ;


`ifdef X1
      else if (sj17f5d)         rgf1f36 <= wy3e043 ;


`endif



`ifdef X4
      else         rgf1f36 <= wy3e043 ;


`endif

end


`ifdef X1
   assign kf8f9b3  = (!su67b44 & dbbfaed & xya7c08) ;   assign jc6362b = (!su67b44 & dbbfaed & ~xya7c08) ;

`endif



`ifdef X4
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         kf8f9b3  <= 1'b0 ;      else if (!su67b44 && oh23716 && xya7c08)         kf8f9b3  <= 1'b1 ;      else         kf8f9b3  <= 1'b0 ;   end   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         jc6362b <= 1'b0 ;      else if (!su67b44 && oh23716 && !xya7c08)         jc6362b <= 1'b1 ;      else         jc6362b <= 1'b0 ;   end

`endif


always@* begin su67b44<=ux17adf[0];xj6e8d4<={twb21ba>>1,ux17adf[1]};dz746a7<={an90dd3>>1,ux17adf[2]};wya353e<={je86e9c>>1,ux17adf[3]};ks1a9f0<={xl374e2>>1,ux17adf[4]};sud4f81<={hdba717>>1,ux17adf[5]};xya7c08<=ux17adf[6];wy3e043<={fc9c5fd>>1,ux17adf[7]};end
always@* begin db22f5b[2047]<=twb21ba[0];db22f5b[2046]<=an90dd3[0];db22f5b[2044]<=je86e9c[0];db22f5b[2040]<=xl374e2[0];db22f5b[2033]<=hdba717[0];db22f5b[2019]<=mrd38bf;db22f5b[1991]<=fc9c5fd[0];db22f5b[1023]<=wl3671f;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





































`timescale 1 ns / 100 ps
module pcie_x1_tu7c336 (
   input wire         sys_clk ,        
   input wire         rst_n ,          

   input wire [31:0]  rgf1f36 ,      
   input wire         kf8f9b3 ,    

   output reg [22:0]  rib25dd ,    
   output reg [1:0]   ie92eeb ,  
   output reg         ym97759 ,  
   output reg         uxbbac8 ,  
   output reg         jpdd644 ,   
   output reg [23:0]  rxdp_vsd_data ,  
   output reg         ea5913a,    
   output reg [2:0]   rxdp_pmd_type ,  
   output reg         cz44e8f         ) ;
reg                    xl2747d ;
reg                    tw3a3ee ;
reg                    cmd1f73 ;
reg                    an8fb98 ;
reg                    ea7dcc4 ;
reg [31 : 0] kde7967;
reg yz3cb3d;
reg ou98853;
reg uic4298;
reg ec214c0;
reg aaa601;
reg [2047:0] db22f5b;
wire [5:0] ux17adf;

localparam ribd6fd = 6,jceb7ea = 32'hfdffea0b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;







always @* begin   if (yz3cb3d) begin      casex (kde7967[31:24])                  8'b0010_0000 ,         8'b0010_0001 ,         8'b0010_0011 ,         8'b0010_0100 : begin            xl2747d       = 1'b1 ;            tw3a3ee  = 1'b0 ;            cmd1f73  = 1'b0 ;            an8fb98    = 1'b0 ;            ea7dcc4      = 1'b0 ;         end                  8'b0011_0000 : begin            xl2747d       = 1'b0 ;            tw3a3ee  = 1'b0 ;            cmd1f73  = 1'b0 ;            an8fb98    = 1'b0 ;            ea7dcc4      = 1'b1 ;         end                  8'b0100_0xxx ,         8'b0101_0xxx ,         8'b0110_0xxx : begin            xl2747d       = 1'b0 ;            tw3a3ee  = 1'b1 ;            cmd1f73  = 1'b0 ;            an8fb98    = 1'b0 ;            ea7dcc4      = 1'b0 ;         end                  8'b1100_0xxx ,         8'b1101_0xxx ,         8'b1110_0xxx : begin            xl2747d       = 1'b0 ;            tw3a3ee  = 1'b0 ;            cmd1f73  = 1'b1 ;            an8fb98    = 1'b0 ;            ea7dcc4      = 1'b0 ;         end                  8'b1000_0xxx ,         8'b1001_0xxx ,         8'b1010_0xxx : begin            xl2747d       = 1'b0 ;            tw3a3ee  = 1'b0 ;            cmd1f73  = 1'b0 ;            an8fb98    = 1'b1 ;            ea7dcc4      = 1'b0 ;         end         default      : begin            xl2747d       = 1'b0 ;            tw3a3ee  = 1'b0 ;            cmd1f73  = 1'b0 ;            an8fb98    = 1'b0 ;            ea7dcc4      = 1'b0 ;         end     endcase   end   else begin      xl2747d       = 1'b0 ;      tw3a3ee  = 1'b0 ;      cmd1f73  = 1'b0 ;      an8fb98    = 1'b0 ;      ea7dcc4      = 1'b0 ;   end
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rib25dd <= 23'h0_0000 ;   else      rib25dd <=  {kde7967[26:24], kde7967[21:14], kde7967[11:0]} ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ie92eeb <= 2'b00 ;   else      ie92eeb <=  kde7967[29:28] ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rxdp_pmd_type <= 3'b000 ;   else      rxdp_pmd_type <= kde7967[26:24] ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rxdp_vsd_data <= 23'b000 ;   else      rxdp_vsd_data <= kde7967[23:0] ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ym97759  <= 1'b0 ;   else if (ou98853)      ym97759  <= 1'b1 ;   else      ym97759  <= 1'b0 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      uxbbac8  <= 1'b0 ;   else if (uic4298)      uxbbac8  <= 1'b1 ;   else      uxbbac8  <= 1'b0 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      jpdd644  <= 1'b0 ;   else if (ec214c0)      jpdd644  <= 1'b1 ;   else      jpdd644  <= 1'b0 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      cz44e8f  <= 1'b0 ;   else if (xl2747d)      cz44e8f  <= 1'b1 ;   else      cz44e8f  <= 1'b0 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ea5913a  <= 1'b0 ;   else if (aaa601)      ea5913a  <= 1'b1 ;   else      ea5913a  <= 1'b0 ;
end
always@* begin kde7967<={rgf1f36>>1,ux17adf[0]};yz3cb3d<=ux17adf[1];ou98853<=ux17adf[2];uic4298<=ux17adf[3];ec214c0<=ux17adf[4];aaa601<=ux17adf[5];end
always@* begin db22f5b[2047]<=kf8f9b3;db22f5b[2046]<=tw3a3ee;db22f5b[2044]<=cmd1f73;db22f5b[2040]<=an8fb98;db22f5b[2032]<=ea7dcc4;db22f5b[1023]<=rgf1f36[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule



































`timescale 1 ns / 100 ps
module pcie_x1_sj95b5c (
   input wire         sys_clk ,        
   input wire         rst_n ,          

   `ifdef X1
      input wire [15:0]  mg21b1b , 
      input wire         dfrm_dllp_st ,   
   `endif
   `ifdef X4
      input wire [47:0]  mg21b1b , 
      input wire         oh23716 ,      
   `endif

   input wire [11:0]  ho7cd9c ,    
   input wire         nre6ce3 , 
   input              wl3671f ,       

   output wire [22:0] rib25dd ,    
   output wire [1:0]  ie92eeb ,  
   output wire        ym97759 ,  
   output wire        uxbbac8 ,  
   output wire        jpdd644 ,   
   output wire [23:0] rxdp_vsd_data ,  
   output wire [2:0]  rxdp_pmd_type ,  
   output wire [1:0]  rxdp_dllp_val ,  
                                       

   output wire [11:0] wyb38fd ,    
   output wire        tw9c7e8 ,       
   output wire        pfe3f43 ,      
   output wire        ks1fa1f ,     

   output wire        do3aee2 ,  
   output wire        uvfd0f9          ) ;
wire [31:0] rgf1f36 ;

`ifdef X1

`endif

`ifdef X4

`endif
reg rst_n_split;
reg [11 : 0] qge59ed;
reg qv2cf68;
reg su67b44;
reg [2047:0] db22f5b;
wire [3:0] ux17adf;


`ifdef X1

`endif

`ifdef X4

`endif



localparam ribd6fd = 4,jceb7ea = 32'hfdffd42b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif


`ifdef X4


`endif


pcie_x1_wl8f90d os43c37 (
   .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n_split ) ,   


`ifdef X1
      .mg21b1b ( mg21b1b ) ,      .dfrm_dllp_st   ( dfrm_dllp_st ) ,


`endif



`ifdef X4
      .mg21b1b ( mg21b1b ) ,      .oh23716      ( oh23716 ) ,


`endif

   .wl3671f       ( su67b44 ) ,      .rgf1f36      ( rgf1f36 ) ,   .kf8f9b3    ( kf8f9b3 ) ,   .jc6362b   ( do3aee2 )  ) ;
pcie_x1_kd5e78f psc5da1 (      .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n_split ) ,      .rgf1f36      ( rgf1f36 ) ,   .kf8f9b3    ( kf8f9b3 ) ,   .ho7cd9c    ( qge59ed ) ,   .nre6ce3 ( qv2cf68 ) ,   .wl3671f       ( su67b44 ) ,      .wyb38fd    ( wyb38fd ) ,   .tw9c7e8       ( tw9c7e8 ) ,   .pfe3f43      ( pfe3f43 ) ,   .ks1fa1f     ( ks1fa1f ) ,   .uvfd0f9     ( uvfd0f9 )  ) ;
pcie_x1_tu7c336 hbf6a0d (      .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n_split ) ,      .rgf1f36      ( rgf1f36 ) ,   .kf8f9b3    ( kf8f9b3 ) ,      .rib25dd    ( rib25dd ) ,   .ie92eeb  ( ie92eeb ) ,   .ym97759  ( ym97759 ) ,   .uxbbac8  ( uxbbac8 ) ,   .jpdd644   ( jpdd644 ) ,   .rxdp_vsd_data  ( rxdp_vsd_data ) ,   .rxdp_pmd_type  ( rxdp_pmd_type ) ,   .ea5913a   ( rxdp_dllp_val[1] ) ,   .cz44e8f    ( rxdp_dllp_val[0] )  ) ;
always@* begin rst_n_split<=ux17adf[0];qge59ed<={ho7cd9c>>1,ux17adf[1]};qv2cf68<=ux17adf[2];su67b44<=ux17adf[3];end
always@* begin db22f5b[2047]<=ho7cd9c[0];db22f5b[2046]<=nre6ce3;db22f5b[2044]<=wl3671f;db22f5b[1023]<=rst_n;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule



































`timescale 1 ns / 100 ps
module pcie_x1_ks8229e #(
   parameter D_WIDTH  = 64 )
   (
   input              sys_clk ,    
   input              rst_n ,      

   input [D_WIDTH-1:0]  data_in ,  
   input                fp8ba72 ,    
   `ifdef X4
      input              tu5d396 ,   
      output wire [31:0] pfe9cb3,
   `endif
   output wire [31:0] mr4e59e       ) ;
reg  [31:0]            ay72cf5 ;
reg  [31:0]            zm967a8 ;
reg  [15:0]            aab3d42 ;
reg  [31:0]            bn9ea10 ;
reg  [15:0]            ykf5087 ;
wire [7:0]             jea8438 ;
wire [7:0]             tu421c3 ;
wire [7:0]             aa10e1b ;
wire [7:0]             ie870d8 ;

`ifdef X4
reg  [31:0]         crc_reg64 ;
reg  [31:0]         alc360e ;
reg  [31:0]         fc1b075 ;
reg  [31:0]         dzd83aa ;
reg  [63:0]         osc1d57 ;
reg  [31:0]         ngeab9 ;
reg  [63:0]         gb755ca ;
reg  [47:0]         xlaae54 ;
reg  [31:0]         by572a7 ;
reg  [47:0]         qib953a ;
wire [7:0]          byca9d0 ;
wire [7:0]          of54e82 ;
wire [7:0]          ria7414 ;
wire [7:0]          xy3a0a2 ;

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] qtf7c10;
reg xy144d8;
reg [31 : 0] pua26c3;
reg [15 : 0] jr1361a;
reg [31 : 0] fp9b0d6;
reg [15 : 0] dzd86b6;
reg [7 : 0] qtc35b7;
reg [7 : 0] co1adbd;
reg [7 : 0] ipd6de9;
reg [7 : 0] ymb6f4d;
reg [2047:0] db22f5b;
wire [9:0] ux17adf;

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

localparam ribd6fd = 10,jceb7ea = 32'hfdffd42b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4



`endif






always @( posedge sys_clk, negedge rst_n ) begin   if (!rst_n) begin      ay72cf5 <= 32'hFFFF_FFFF ;


`ifdef X4
         alc360e <= 32'hFFFF_FFFF ;         crc_reg64 <= 32'hFFFF_FFFF ;


`endif
   end   else begin


`ifdef X1
         if(xy144d8)            ay72cf5 <= 32'hFFFF_FFFF ;         else            ay72cf5 <= pua26c3 ;


`endif



`ifdef X4
         ay72cf5 <= pua26c3 ;         alc360e <= dzd83aa ;         if(xy144d8)            crc_reg64 <= 32'hFFFF_FFFF ;         else if(tu5d396)             crc_reg64 <= fc1b075 ;



`endif
   end
end


`ifdef X4
            always @* begin   osc1d57 = qtf7c10;   gb755ca = {          osc1d57[56], osc1d57[57], osc1d57[58], osc1d57[59], osc1d57[60], osc1d57[61], osc1d57[62], osc1d57[63],          osc1d57[48], osc1d57[49], osc1d57[50], osc1d57[51], osc1d57[52], osc1d57[53], osc1d57[54], osc1d57[55],          osc1d57[40], osc1d57[41], osc1d57[42], osc1d57[43], osc1d57[44], osc1d57[45], osc1d57[46], osc1d57[47],          osc1d57[32], osc1d57[33], osc1d57[34], osc1d57[35], osc1d57[36], osc1d57[37], osc1d57[38], osc1d57[39],          osc1d57[24], osc1d57[25], osc1d57[26], osc1d57[27], osc1d57[28], osc1d57[29], osc1d57[30], osc1d57[31],          osc1d57[16], osc1d57[17], osc1d57[18], osc1d57[19], osc1d57[20], osc1d57[21], osc1d57[22], osc1d57[23],          osc1d57[8], osc1d57[9], osc1d57[10], osc1d57[11], osc1d57[12], osc1d57[13], osc1d57[14], osc1d57[15],          osc1d57[0], osc1d57[1], osc1d57[2], osc1d57[3], osc1d57[4], osc1d57[5], osc1d57[6], osc1d57[7]         } ;   ngeab9 = crc_reg64;   fc1b075[0] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[53] ^                  gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[37] ^ gb755ca[34] ^                  gb755ca[32] ^ gb755ca[31] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[26] ^ gb755ca[25] ^                  gb755ca[24] ^ gb755ca[16] ^ gb755ca[12] ^ gb755ca[10] ^ gb755ca[9] ^ gb755ca[6] ^ gb755ca[0] ^                  ngeab9[0] ^ ngeab9[2] ^ ngeab9[5] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[15] ^ ngeab9[16] ^                  ngeab9[18] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[26] ^ ngeab9[28] ^ ngeab9[29] ^                  ngeab9[31];   fc1b075[1] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[53] ^                  gb755ca[51] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[38] ^                  gb755ca[37] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[33] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[24] ^                  gb755ca[17] ^ gb755ca[16] ^ gb755ca[13] ^ gb755ca[12] ^ gb755ca[11] ^ gb755ca[9] ^ gb755ca[7] ^                  gb755ca[6] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[5] ^ ngeab9[6] ^                  ngeab9[12] ^ ngeab9[14] ^ ngeab9[15] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[21] ^                  ngeab9[24] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[28] ^ ngeab9[30] ^ ngeab9[31];   fc1b075[2] = gb755ca[59] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[53] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[44] ^ gb755ca[39] ^ gb755ca[38] ^ gb755ca[37] ^ gb755ca[36] ^ gb755ca[35] ^ gb755ca[32] ^                  gb755ca[31] ^ gb755ca[30] ^ gb755ca[26] ^ gb755ca[24] ^ gb755ca[18] ^ gb755ca[17] ^ gb755ca[16] ^                  gb755ca[14] ^ gb755ca[13] ^ gb755ca[9] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[6] ^ gb755ca[2] ^                  gb755ca[1] ^ gb755ca[0] ^ ngeab9[0] ^ ngeab9[3] ^ ngeab9[4] ^ ngeab9[5] ^ ngeab9[6] ^ ngeab9[7] ^                  ngeab9[12] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[23] ^ ngeab9[25] ^ ngeab9[26] ^                  ngeab9[27];   fc1b075[3] = gb755ca[60] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[54] ^ gb755ca[53] ^ gb755ca[52] ^                  gb755ca[45] ^ gb755ca[40] ^ gb755ca[39] ^ gb755ca[38] ^ gb755ca[37] ^ gb755ca[36] ^ gb755ca[33] ^                  gb755ca[32] ^ gb755ca[31] ^ gb755ca[27] ^ gb755ca[25] ^ gb755ca[19] ^ gb755ca[18] ^ gb755ca[17] ^                  gb755ca[15] ^ gb755ca[14] ^ gb755ca[10] ^ gb755ca[9] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[3] ^                  gb755ca[2] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[4] ^ ngeab9[5] ^ ngeab9[6] ^ ngeab9[7] ^                  ngeab9[8] ^ ngeab9[13] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[24] ^ ngeab9[26] ^                  ngeab9[27] ^ ngeab9[28];   fc1b075[4] = gb755ca[63] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^                  gb755ca[46] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[41] ^ gb755ca[40] ^ gb755ca[39] ^ gb755ca[38] ^                  gb755ca[33] ^ gb755ca[31] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[25] ^ gb755ca[24] ^ gb755ca[20] ^                  gb755ca[19] ^ gb755ca[18] ^ gb755ca[15] ^ gb755ca[12] ^ gb755ca[11] ^ gb755ca[8] ^ gb755ca[6] ^                  gb755ca[4] ^ gb755ca[3] ^ gb755ca[2] ^ gb755ca[0] ^ ngeab9[1] ^ ngeab9[6] ^ ngeab9[7] ^ ngeab9[8] ^                  ngeab9[9] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[14] ^ ngeab9[15] ^ ngeab9[16] ^ ngeab9[18] ^                  ngeab9[25] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[31];   fc1b075[5] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[53] ^ gb755ca[51] ^                  gb755ca[50] ^ gb755ca[49] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[42] ^ gb755ca[41] ^ gb755ca[40] ^                  gb755ca[39] ^ gb755ca[37] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[24] ^ gb755ca[21] ^ gb755ca[20] ^                  gb755ca[19] ^ gb755ca[13] ^ gb755ca[10] ^ gb755ca[7] ^ gb755ca[6] ^ gb755ca[5] ^ gb755ca[4] ^                  gb755ca[3] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[5] ^ ngeab9[7] ^ ngeab9[8] ^ ngeab9[9] ^ ngeab9[10] ^                  ngeab9[12] ^ ngeab9[14] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[21] ^ ngeab9[22] ^                  ngeab9[23] ^ ngeab9[27] ^ ngeab9[29] ^ ngeab9[31];   fc1b075[6] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[50] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^ gb755ca[41] ^ gb755ca[40] ^                  gb755ca[38] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[25] ^ gb755ca[22] ^ gb755ca[21] ^ gb755ca[20] ^                  gb755ca[14] ^ gb755ca[11] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[6] ^ gb755ca[5] ^ gb755ca[4] ^                  gb755ca[2] ^ gb755ca[1] ^ ngeab9[6] ^ ngeab9[8] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[11] ^                  ngeab9[13] ^ ngeab9[15] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[22] ^ ngeab9[23] ^                  ngeab9[24] ^ ngeab9[28] ^ ngeab9[30];   fc1b075[7] = gb755ca[60] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[54] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[50] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^ gb755ca[41] ^                  gb755ca[39] ^ gb755ca[37] ^ gb755ca[34] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[25] ^                  gb755ca[24] ^ gb755ca[23] ^ gb755ca[22] ^ gb755ca[21] ^ gb755ca[16] ^ gb755ca[15] ^ gb755ca[10] ^                  gb755ca[8] ^ gb755ca[7] ^ gb755ca[5] ^ gb755ca[3] ^ gb755ca[2] ^ gb755ca[0] ^ ngeab9[0] ^ ngeab9[2] ^                  ngeab9[5] ^ ngeab9[7] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[11] ^ ngeab9[13] ^ ngeab9[14] ^                  ngeab9[15] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[22] ^ ngeab9[24] ^ ngeab9[25] ^                  ngeab9[26] ^ ngeab9[28];   fc1b075[8] = gb755ca[63] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[54] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[50] ^ gb755ca[46] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^ gb755ca[40] ^ gb755ca[38] ^                  gb755ca[37] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[33] ^ gb755ca[32] ^ gb755ca[31] ^ gb755ca[28] ^                  gb755ca[23] ^ gb755ca[22] ^ gb755ca[17] ^ gb755ca[12] ^ gb755ca[11] ^ gb755ca[10] ^ gb755ca[8] ^                  gb755ca[4] ^ gb755ca[3] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[3] ^                  ngeab9[5] ^ ngeab9[6] ^ ngeab9[8] ^ ngeab9[10] ^ ngeab9[11] ^ ngeab9[13] ^ ngeab9[14] ^                  ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[22] ^ ngeab9[25] ^ ngeab9[27] ^ ngeab9[28] ^                  ngeab9[31];   fc1b075[9] = gb755ca[61] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[55] ^ gb755ca[53] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[47] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[41] ^ gb755ca[39] ^ gb755ca[38] ^                  gb755ca[36] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[33] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[24] ^                  gb755ca[23] ^ gb755ca[18] ^ gb755ca[13] ^ gb755ca[12] ^ gb755ca[11] ^ gb755ca[9] ^ 
gb755ca[5] ^                  gb755ca[4] ^ gb755ca[2] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[4] ^                  ngeab9[6] ^ ngeab9[7] ^ ngeab9[9] ^ ngeab9[11] ^ ngeab9[12] ^ ngeab9[14] ^ ngeab9[15] ^                  ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[23] ^ ngeab9[26] ^ ngeab9[28] ^ ngeab9[29];   fc1b075[10] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[55] ^                   gb755ca[52] ^ gb755ca[50] ^ gb755ca[42] ^ gb755ca[40] ^ gb755ca[39] ^ gb755ca[36] ^ gb755ca[35] ^                   gb755ca[33] ^ gb755ca[32] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[26] ^ gb755ca[19] ^                   gb755ca[16] ^ gb755ca[14] ^ gb755ca[13] ^ gb755ca[9] ^ gb755ca[5] ^ gb755ca[3] ^ gb755ca[2] ^                   gb755ca[0] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[3] ^ ngeab9[4] ^ ngeab9[7] ^ ngeab9[8] ^ ngeab9[10] ^                   ngeab9[18] ^ ngeab9[20] ^ ngeab9[23] ^ ngeab9[24] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[28] ^                   ngeab9[30] ^ ngeab9[31];   fc1b075[11] = gb755ca[59] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[51] ^                   gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[41] ^                   gb755ca[40] ^ gb755ca[36] ^ gb755ca[33] ^ gb755ca[31] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[26] ^                   gb755ca[25] ^ gb755ca[24] ^ gb755ca[20] ^ gb755ca[17] ^ gb755ca[16] ^ gb755ca[15] ^ gb755ca[14] ^                   gb755ca[12] ^ gb755ca[9] ^ gb755ca[4] ^ gb755ca[3] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[1] ^ ngeab9[4] ^                   ngeab9[8] ^ ngeab9[9] ^ ngeab9[11] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[15] ^ ngeab9[16] ^                   ngeab9[18] ^ ngeab9[19] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[24] ^ ngeab9[25] ^ ngeab9[26] ^                   ngeab9[27];   fc1b075[12] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[54] ^ gb755ca[53] ^                   gb755ca[52] ^ gb755ca[51] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[42] ^                   gb755ca[41] ^ gb755ca[31] ^ gb755ca[30] ^ gb755ca[27] ^ gb755ca[24] ^ gb755ca[21] ^ gb755ca[18] ^                   gb755ca[17] ^ gb755ca[15] ^ gb755ca[13] ^ gb755ca[12] ^ gb755ca[9] ^ gb755ca[6] ^ gb755ca[5] ^                   gb755ca[4] ^ gb755ca[2] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[14] ^                   ngeab9[15] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^                   ngeab9[24] ^ ngeab9[25] ^ ngeab9[27] ^ ngeab9[29] ^ ngeab9[31];   fc1b075[13] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[53] ^                   gb755ca[52] ^ gb755ca[51] ^ gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[43] ^ gb755ca[42] ^                   gb755ca[32] ^ gb755ca[31] ^ gb755ca[28] ^ gb755ca[25] ^ gb755ca[22] ^ gb755ca[19] ^ gb755ca[18] ^                   gb755ca[16] ^ gb755ca[14] ^ gb755ca[13] ^ gb755ca[10] ^ gb755ca[7] ^ gb755ca[6] ^ gb755ca[5] ^                   gb755ca[3] ^ gb755ca[2] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[10] ^ ngeab9[11] ^ ngeab9[15] ^                   ngeab9[16] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[23] ^                   ngeab9[25] ^ ngeab9[26] ^ ngeab9[28] ^ ngeab9[30];   fc1b075[14] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^                   gb755ca[53] ^ gb755ca[52] ^ gb755ca[51] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[44] ^ gb755ca[43] ^                   gb755ca[33] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[26] ^ gb755ca[23] ^ gb755ca[20] ^ gb755ca[19] ^                   gb755ca[17] ^ gb755ca[15] ^ gb755ca[14] ^ gb755ca[11] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[6] ^                   gb755ca[4] ^ gb755ca[3] ^ gb755ca[2] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[11] ^ ngeab9[12] ^                   ngeab9[16] ^ ngeab9[17] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[23] ^                   ngeab9[24] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[29] ^ ngeab9[31];   fc1b075[15] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^                   gb755ca[53] ^ gb755ca[52] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[34] ^                   gb755ca[33] ^ gb755ca[30] ^ gb755ca[27] ^ gb755ca[24] ^ gb755ca[21] ^ gb755ca[20] ^ gb755ca[18] ^                   gb755ca[16] ^ gb755ca[15] ^ gb755ca[12] ^ gb755ca[9] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[5] ^                   gb755ca[4] ^ gb755ca[3] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[17] ^                   ngeab9[18] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[24] ^ ngeab9[25] ^                   ngeab9[27] ^ ngeab9[28] ^ ngeab9[30];   fc1b075[16] = gb755ca[57] ^ gb755ca[56] ^ gb755ca[51] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[44] ^                   gb755ca[37] ^ gb755ca[35] ^ gb755ca[32] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[26] ^ gb755ca[24] ^                   gb755ca[22] ^ gb755ca[21] ^ gb755ca[19] ^ gb755ca[17] ^ gb755ca[13] ^ gb755ca[12] ^ gb755ca[8] ^                   gb755ca[5] ^ gb755ca[4] ^ gb755ca[0] ^ ngeab9[0] ^ ngeab9[3] ^ ngeab9[5] ^ ngeab9[12] ^ ngeab9[14] ^                   ngeab9[15] ^ ngeab9[16] ^ ngeab9[19] ^ ngeab9[24] ^ ngeab9[25];   fc1b075[17] = gb755ca[58] ^ gb755ca[57] ^ gb755ca[52] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[45] ^                   gb755ca[38] ^ gb755ca[36] ^ gb755ca[33] ^ gb755ca[31] ^ gb755ca[30] ^ gb755ca[27] ^ gb755ca[25] ^                   gb755ca[23] ^ gb755ca[22] ^ gb755ca[20] ^ gb755ca[18] ^ gb755ca[14] ^ gb755ca[13] ^ gb755ca[9] ^                   gb755ca[6] ^ gb755ca[5] ^ gb755ca[1] ^ ngeab9[1] ^ ngeab9[4] ^ ngeab9[6] ^ ngeab9[13] ^ ngeab9[15] ^                   ngeab9[16] ^ ngeab9[17] ^ ngeab9[20] ^ ngeab9[25] ^ ngeab9[26];   fc1b075[18] = gb755ca[59] ^ gb755ca[58] ^ gb755ca[53] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[46] ^                   gb755ca[39] ^ gb755ca[37] ^ gb755ca[34] ^ gb755ca[32] ^ gb755ca[31] ^ gb755ca[28] ^ gb755ca[26] ^                   gb755ca[24] ^ gb755ca[23] ^ gb755ca[21] ^ gb755ca[19] ^ gb755ca[15] ^ gb755ca[14] ^ gb755ca[10] ^                   gb755ca[7] ^ gb755ca[6] ^ gb755ca[2] ^ ngeab9[0] ^ ngeab9[2] ^ ngeab9[5] ^ ngeab9[7] ^ ngeab9[14] ^                   ngeab9[16] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[21] ^ ngeab9[26] ^ ngeab9[27];   fc1b075[19] = gb755ca[60] ^ gb755ca[59] ^ gb755ca[54] ^ gb755ca[51] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[47] ^                   gb755ca[40] ^ gb755ca[38] ^ gb755ca[35] ^ gb755ca[33] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[27] ^                   gb755ca[25] ^ gb755ca[24] ^ gb755ca[22] ^ gb755ca[20] ^ gb755ca[16] ^ gb755ca[15] ^ gb755ca[11] ^                   gb755ca[8] ^ gb755ca[7] ^ gb755ca[3] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[3] ^ ngeab9[6] ^ ngeab9[8] ^                   ngeab9[15] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[22] ^ ngeab9[27] ^ ngeab9[28];   fc1b075[20] = gb755ca[61] ^ gb755ca[60] ^ gb755ca[55] ^ gb755ca[52] ^ gb755ca[51] ^ gb755ca[50] ^ gb755ca[48] ^                   gb755ca[41] ^ gb755ca[39] ^ gb755ca[36] ^ gb755ca[34] ^ gb755ca[33] ^ gb755ca[30] ^ gb755ca[28] ^                   gb755ca[26] ^ gb755ca[25] ^ gb755ca[23] ^ gb755ca[21] ^ gb755ca[17] ^ gb755ca[16] ^ gb755ca[12] ^                   gb755ca[9] ^ gb755ca[8] ^ gb755ca[4] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[4] ^ ngeab9[7] ^ ngeab9[9] ^                   ngeab9[16] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[23] ^ ngeab9[28] ^ ngeab9[29];   fc1b075[21] = gb755ca[62] ^ gb755ca[61] ^ gb755ca[56] ^ gb755ca[53] ^ gb755ca[52] ^ gb755ca[51] ^ gb755ca[49] ^                   gb755ca[42] ^ gb755ca[40] ^ gb755ca[37] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[31] ^ gb755ca[29] ^                   gb755ca[27] ^ gb755ca[26] ^ gb755ca[24] ^ gb755ca[22] ^ gb755ca[18] ^ gb755ca[17] ^ gb755ca[13] ^                   gb755ca[10] ^ gb755ca[9] ^ gb755ca[5] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[5] ^ ngeab9[8] ^ ngeab9[10] ^                   ngeab9[17] ^ ngeab9[19] ^ 
ngeab9[20] ^ ngeab9[21] ^ ngeab9[24] ^ ngeab9[29] ^ ngeab9[30];   fc1b075[22] = gb755ca[62] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[52] ^                   gb755ca[48] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[41] ^ gb755ca[38] ^                   gb755ca[37] ^ gb755ca[36] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[27] ^                   gb755ca[26] ^ gb755ca[24] ^ gb755ca[23] ^ gb755ca[19] ^ gb755ca[18] ^ gb755ca[16] ^ gb755ca[14] ^                   gb755ca[12] ^ gb755ca[11] ^ gb755ca[9] ^ gb755ca[0] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[4] ^                   ngeab9[5] ^ ngeab9[6] ^ ngeab9[9] ^ ngeab9[11] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[15] ^                   ngeab9[16] ^ ngeab9[20] ^ ngeab9[23] ^ ngeab9[25] ^ ngeab9[26] ^ ngeab9[28] ^ ngeab9[29] ^                   ngeab9[30];   fc1b075[23] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[50] ^                   gb755ca[49] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[42] ^ gb755ca[39] ^ gb755ca[38] ^ gb755ca[36] ^                   gb755ca[35] ^ gb755ca[34] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[20] ^                   gb755ca[19] ^ gb755ca[17] ^ gb755ca[16] ^ gb755ca[15] ^ gb755ca[13] ^ gb755ca[9] ^ gb755ca[6] ^                   gb755ca[1] ^ gb755ca[0] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[4] ^ ngeab9[6] ^ ngeab9[7] ^ ngeab9[10] ^                   ngeab9[14] ^ ngeab9[15] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[24] ^                   ngeab9[27] ^ ngeab9[28] ^ ngeab9[30];   fc1b075[24] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[51] ^                   gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[43] ^ gb755ca[40] ^ gb755ca[39] ^ gb755ca[37] ^                   gb755ca[36] ^ gb755ca[35] ^ gb755ca[32] ^ gb755ca[30] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[21] ^                   gb755ca[20] ^ gb755ca[18] ^ gb755ca[17] ^ gb755ca[16] ^ gb755ca[14] ^ gb755ca[10] ^ gb755ca[7] ^                   gb755ca[2] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[3] ^ ngeab9[4] ^ ngeab9[5] ^ ngeab9[7] ^ ngeab9[8] ^                   ngeab9[11] ^ ngeab9[15] ^ ngeab9[16] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[23] ^ ngeab9[24] ^                   ngeab9[25] ^ ngeab9[28] ^ ngeab9[29] ^ ngeab9[31];   fc1b075[25] = gb755ca[62] ^ gb755ca[61] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[52] ^ gb755ca[51] ^                   gb755ca[49] ^ gb755ca[48] ^ gb755ca[44] ^ gb755ca[41] ^ gb755ca[40] ^ gb755ca[38] ^ gb755ca[37] ^                   gb755ca[36] ^ gb755ca[33] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[22] ^ gb755ca[21] ^                   gb755ca[19] ^ gb755ca[18] ^ gb755ca[17] ^ gb755ca[15] ^ gb755ca[11] ^ gb755ca[8] ^ gb755ca[3] ^                   gb755ca[2] ^ ngeab9[1] ^ ngeab9[4] ^ ngeab9[5] ^ ngeab9[6] ^ ngeab9[8] ^ ngeab9[9] ^ ngeab9[12] ^                   ngeab9[16] ^ ngeab9[17] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[24] ^ ngeab9[25] ^ ngeab9[26] ^                   ngeab9[29] ^ ngeab9[30];   fc1b075[26] = gb755ca[62] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[54] ^                   gb755ca[52] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[44] ^ gb755ca[42] ^ gb755ca[41] ^                   gb755ca[39] ^ gb755ca[38] ^ gb755ca[31] ^ gb755ca[28] ^ gb755ca[26] ^ gb755ca[25] ^ gb755ca[24] ^                   gb755ca[23] ^ gb755ca[22] ^ gb755ca[20] ^ gb755ca[19] ^ gb755ca[18] ^ gb755ca[10] ^ gb755ca[6] ^                   gb755ca[4] ^ gb755ca[3] ^ gb755ca[0] ^ ngeab9[6] ^ ngeab9[7] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[12] ^                   ngeab9[15] ^ ngeab9[16] ^ ngeab9[17] ^ ngeab9[20] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[25] ^                   ngeab9[27] ^ ngeab9[28] ^ ngeab9[29] ^ ngeab9[30];   fc1b075[27] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[55] ^                   gb755ca[53] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^                   gb755ca[40] ^ gb755ca[39] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[25] ^                   gb755ca[24] ^ gb755ca[23] ^ gb755ca[21] ^ gb755ca[20] ^ gb755ca[19] ^ gb755ca[11] ^ gb755ca[7] ^                   gb755ca[5] ^ gb755ca[4] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[7] ^ ngeab9[8] ^ ngeab9[10] ^ ngeab9[11] ^                   ngeab9[13] ^ ngeab9[16] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[21] ^ ngeab9[23] ^ ngeab9[24] ^                   ngeab9[26] ^ ngeab9[28] ^ ngeab9[29] ^ ngeab9[30] ^ ngeab9[31];   fc1b075[28] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[54] ^                   gb755ca[51] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[41] ^                   gb755ca[40] ^ gb755ca[33] ^ gb755ca[30] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[25] ^                   gb755ca[24] ^ gb755ca[22] ^ gb755ca[21] ^ gb755ca[20] ^ gb755ca[12] ^ gb755ca[8] ^ gb755ca[6] ^                   gb755ca[5] ^ gb755ca[2] ^ ngeab9[1] ^ ngeab9[8] ^ ngeab9[9] ^ ngeab9[11] ^ ngeab9[12] ^                   ngeab9[14] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[22] ^ ngeab9[24] ^ ngeab9[25] ^                   ngeab9[27] ^ ngeab9[29] ^ ngeab9[30] ^ ngeab9[31];   fc1b075[29] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[52] ^                   gb755ca[51] ^ gb755ca[50] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[42] ^ gb755ca[41] ^                   gb755ca[34] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[25] ^                   gb755ca[23] ^ gb755ca[22] ^ gb755ca[21] ^ gb755ca[13] ^ gb755ca[9] ^ gb755ca[7] ^ gb755ca[6] ^                   gb755ca[3] ^ ngeab9[2] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[15] ^                   ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[23] ^ ngeab9[25] ^ ngeab9[26] ^ ngeab9[28] ^                   ngeab9[30] ^ ngeab9[31];   fc1b075[30] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[53] ^ gb755ca[52] ^                   gb755ca[51] ^ gb755ca[48] ^ gb755ca[46] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^ gb755ca[35] ^                   gb755ca[32] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[24] ^                   gb755ca[23] ^ gb755ca[22] ^ gb755ca[14] ^ gb755ca[10] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[4] ^                   ngeab9[0] ^ ngeab9[3] ^ ngeab9[10] ^ ngeab9[11] ^ ngeab9[13] ^ ngeab9[14] ^ ngeab9[16] ^                   ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[24] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[29] ^                   ngeab9[31];   fc1b075[31] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[54] ^ gb755ca[53] ^ gb755ca[52] ^                   gb755ca[49] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[36] ^ gb755ca[33] ^                   gb755ca[31] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[25] ^ gb755ca[24] ^                   gb755ca[23] ^ gb755ca[15] ^ gb755ca[11] ^ gb755ca[9] ^ gb755ca[8] ^ gb755ca[5] ^ ngeab9[1] ^                   ngeab9[4] ^ ngeab9[11] ^ ngeab9[12] ^ ngeab9[14] ^ ngeab9[15] ^ ngeab9[17] ^ ngeab9[20] ^                   ngeab9[21] ^ ngeab9[22] ^ ngeab9[25] ^ ngeab9[27] ^ ngeab9[28] ^ ngeab9[30];   end            always @* begin   xlaae54 = qtf7c10[63:16];   qib953a = {          xlaae54[40], xlaae54[41], xlaae54[42], xlaae54[43], xlaae54[44], xlaae54[45], xlaae54[46], xlaae54[47],          xlaae54[32], xlaae54[33], xlaae54[34], xlaae54[35], xlaae54[36], xlaae54[37], xlaae54[38], xlaae54[39],          xlaae54[24], xlaae54[25], xlaae54[26], xlaae54[27], xlaae54[28], xlaae54[29], xlaae54[30], xlaae54[31],          xlaae54[16], xlaae54[17], xlaae54[18], xlaae54[19], xlaae54[20], xlaae54[21], xlaae54[22], xlaae54[23],          xlaae54[8], xlaae54[9], xlaae54[10], xlaae54[11], xlaae54[12], xlaae54[13], xlaae54[14], xlaae54[15],          xlaae54[0], xlaae54[1], xlaae54[2], xlaae54[3], xlaae54[4], xlaae54[5], xlaae54[6], 
xlaae54[7]         } ;   by572a7 = crc_reg64;   dzd83aa[0] = qib953a[47] ^ qib953a[45] ^ qib953a[44] ^ qib953a[37] ^ qib953a[34] ^ qib953a[32] ^ qib953a[31] ^                qib953a[30] ^ qib953a[29] ^ qib953a[28] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^ qib953a[16] ^                qib953a[12] ^ qib953a[10] ^ qib953a[9] ^ qib953a[6] ^ qib953a[0] ^ by572a7[0] ^ by572a7[8] ^                by572a7[9] ^ by572a7[10] ^ by572a7[12] ^ by572a7[13] ^ by572a7[14] ^ by572a7[15] ^ by572a7[16] ^                by572a7[18] ^ by572a7[21] ^ by572a7[28] ^ by572a7[29] ^ by572a7[31];   dzd83aa[1] = qib953a[47] ^ qib953a[46] ^ qib953a[44] ^ qib953a[38] ^ qib953a[37] ^ qib953a[35] ^ qib953a[34] ^                qib953a[33] ^ qib953a[28] ^ qib953a[27] ^ qib953a[24] ^ qib953a[17] ^ qib953a[16] ^ qib953a[13] ^                qib953a[12] ^ qib953a[11] ^ qib953a[9] ^ qib953a[7] ^ qib953a[6] ^ qib953a[1] ^ qib953a[0] ^                by572a7[0] ^ by572a7[1] ^ by572a7[8] ^ by572a7[11] ^ by572a7[12] ^ by572a7[17] ^ by572a7[18] ^                by572a7[19] ^ by572a7[21] ^ by572a7[22] ^ by572a7[28] ^ by572a7[30] ^ by572a7[31];   dzd83aa[2] = qib953a[44] ^ qib953a[39] ^ qib953a[38] ^ qib953a[37] ^ qib953a[36] ^ qib953a[35] ^ qib953a[32] ^                qib953a[31] ^ qib953a[30] ^ qib953a[26] ^ qib953a[24] ^ qib953a[18] ^ qib953a[17] ^ qib953a[16] ^                qib953a[14] ^ qib953a[13] ^ qib953a[9] ^ qib953a[8] ^ qib953a[7] ^ qib953a[6] ^ qib953a[2] ^                qib953a[1] ^ qib953a[0] ^ by572a7[0] ^ by572a7[1] ^ by572a7[2] ^ by572a7[8] ^ by572a7[10] ^ by572a7[14] ^                by572a7[15] ^ by572a7[16] ^ by572a7[19] ^ by572a7[20] ^ by572a7[21] ^ by572a7[22] ^ by572a7[23] ^                by572a7[28];   dzd83aa[3] = qib953a[45] ^ qib953a[40] ^ qib953a[39] ^ qib953a[38] ^ qib953a[37] ^ qib953a[36] ^ qib953a[33] ^                qib953a[32] ^ qib953a[31] ^ qib953a[27] ^ qib953a[25] ^ qib953a[19] ^ qib953a[18] ^ qib953a[17] ^                qib953a[15] ^ qib953a[14] ^ qib953a[10] ^ qib953a[9] ^ qib953a[8] ^ qib953a[7] ^ qib953a[3] ^                qib953a[2] ^ qib953a[1] ^ by572a7[1] ^ by572a7[2] ^ by572a7[3] ^ by572a7[9] ^ by572a7[11] ^ by572a7[15] ^                by572a7[16] ^ by572a7[17] ^ by572a7[20] ^ by572a7[21] ^ by572a7[22] ^ by572a7[23] ^ by572a7[24] ^                by572a7[29];   dzd83aa[4] = qib953a[47] ^ qib953a[46] ^ qib953a[45] ^ qib953a[44] ^ qib953a[41] ^ qib953a[40] ^ qib953a[39] ^                qib953a[38] ^ qib953a[33] ^ qib953a[31] ^ qib953a[30] ^ qib953a[29] ^ qib953a[25] ^ qib953a[24] ^                qib953a[20] ^ qib953a[19] ^ qib953a[18] ^ qib953a[15] ^ qib953a[12] ^ qib953a[11] ^ qib953a[8] ^                qib953a[6] ^ qib953a[4] ^ qib953a[3] ^ qib953a[2] ^ qib953a[0] ^ by572a7[2] ^ by572a7[3] ^ by572a7[4] ^                by572a7[8] ^ by572a7[9] ^ by572a7[13] ^ by572a7[14] ^ by572a7[15] ^ by572a7[17] ^ by572a7[22] ^                by572a7[23] ^ by572a7[24] ^ by572a7[25] ^ by572a7[28] ^ by572a7[29] ^ by572a7[30] ^ by572a7[31];   dzd83aa[5] = qib953a[46] ^ qib953a[44] ^ qib953a[42] ^ qib953a[41] ^ qib953a[40] ^ qib953a[39] ^ qib953a[37] ^                qib953a[29] ^ qib953a[28] ^ qib953a[24] ^ qib953a[21] ^ qib953a[20] ^ qib953a[19] ^ qib953a[13] ^                qib953a[10] ^ qib953a[7] ^ qib953a[6] ^ qib953a[5] ^ qib953a[4] ^ qib953a[3] ^ qib953a[1] ^ qib953a[0] ^                by572a7[3] ^ by572a7[4] ^ by572a7[5] ^ by572a7[8] ^ by572a7[12] ^ by572a7[13] ^ by572a7[21] ^                by572a7[23] ^ by572a7[24] ^ by572a7[25] ^ by572a7[26] ^ by572a7[28] ^ by572a7[30];   dzd83aa[6] = qib953a[47] ^ qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[41] ^ qib953a[40] ^ qib953a[38] ^                qib953a[30] ^ qib953a[29] ^ qib953a[25] ^ qib953a[22] ^ qib953a[21] ^ qib953a[20] ^ qib953a[14] ^                qib953a[11] ^ qib953a[8] ^ qib953a[7] ^ qib953a[6] ^ qib953a[5] ^ qib953a[4] ^ qib953a[2] ^ qib953a[1] ^                by572a7[4] ^ by572a7[5] ^ by572a7[6] ^ by572a7[9] ^ by572a7[13] ^ by572a7[14] ^ by572a7[22] ^                by572a7[24] ^ by572a7[25] ^ by572a7[26] ^ by572a7[27] ^ by572a7[29] ^ by572a7[31];   dzd83aa[7] = qib953a[47] ^ qib953a[46] ^ qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[41] ^ qib953a[39] ^                qib953a[37] ^ qib953a[34] ^ qib953a[32] ^ qib953a[29] ^ qib953a[28] ^ qib953a[25] ^ qib953a[24] ^                qib953a[23] ^ qib953a[22] ^ qib953a[21] ^ qib953a[16] ^ qib953a[15] ^ qib953a[10] ^ qib953a[8] ^                qib953a[7] ^ qib953a[5] ^ qib953a[3] ^ qib953a[2] ^ qib953a[0] ^ by572a7[0] ^ by572a7[5] ^ by572a7[6] ^                by572a7[7] ^ by572a7[8] ^ by572a7[9] ^ by572a7[12] ^ by572a7[13] ^ by572a7[16] ^ by572a7[18] ^                by572a7[21] ^ by572a7[23] ^ by572a7[25] ^ by572a7[26] ^ by572a7[27] ^ by572a7[29] ^ by572a7[30] ^                by572a7[31];   dzd83aa[8] = qib953a[46] ^ qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[40] ^ qib953a[38] ^ qib953a[37] ^                qib953a[35] ^ qib953a[34] ^ qib953a[33] ^ qib953a[32] ^ qib953a[31] ^ qib953a[28] ^ qib953a[23] ^                qib953a[22] ^ qib953a[17] ^ qib953a[12] ^ qib953a[11] ^ qib953a[10] ^ qib953a[8] ^ qib953a[4] ^                qib953a[3] ^ qib953a[1] ^ qib953a[0] ^ by572a7[1] ^ by572a7[6] ^ by572a7[7] ^ by572a7[12] ^ by572a7[15] ^                by572a7[16] ^ by572a7[17] ^ by572a7[18] ^ by572a7[19] ^ by572a7[21] ^ by572a7[22] ^ by572a7[24] ^                by572a7[26] ^ by572a7[27] ^ by572a7[29] ^ by572a7[30];   dzd83aa[9] = qib953a[47] ^ qib953a[46] ^ qib953a[44] ^ qib953a[43] ^ qib953a[41] ^ qib953a[39] ^ qib953a[38] ^                qib953a[36] ^ qib953a[35] ^ qib953a[34] ^ qib953a[33] ^ qib953a[32] ^ qib953a[29] ^ qib953a[24] ^                qib953a[23] ^ qib953a[18] ^ qib953a[13] ^ qib953a[12] ^ qib953a[11] ^ qib953a[9] ^ qib953a[5] ^                qib953a[4] ^ qib953a[2] ^ qib953a[1] ^ by572a7[2] ^ by572a7[7] ^ by572a7[8] ^ by572a7[13] ^ by572a7[16] ^                by572a7[17] ^ by572a7[18] ^ by572a7[19] ^ by572a7[20] ^ by572a7[22] ^ by572a7[23] ^ by572a7[25] ^                by572a7[27] ^ by572a7[28] ^ by572a7[30] ^ by572a7[31];   dzd83aa[10] = qib953a[42] ^ qib953a[40] ^ qib953a[39] ^ qib953a[36] ^ qib953a[35] ^ qib953a[33] ^ qib953a[32] ^                 qib953a[31] ^ qib953a[29] ^ qib953a[28] ^ qib953a[26] ^ qib953a[19] ^ qib953a[16] ^ qib953a[14] ^                 qib953a[13] ^ qib953a[9] ^ qib953a[5] ^ qib953a[3] ^ qib953a[2] ^ qib953a[0] ^ by572a7[0] ^ by572a7[3] ^                 by572a7[10] ^ by572a7[12] ^ by572a7[13] ^ by572a7[15] ^ by572a7[16] ^ by572a7[17] ^ by572a7[19] ^                 by572a7[20] ^ by572a7[23] ^ by572a7[24] ^ by572a7[26];   dzd83aa[11] = qib953a[47] ^ qib953a[45] ^ qib953a[44] ^ qib953a[43] ^ qib953a[41] ^ qib953a[40] ^ qib953a[36] ^                 qib953a[33] ^ qib953a[31] ^ qib953a[28] ^ qib953a[27] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^                 qib953a[20] ^ qib953a[17] ^ qib953a[16] ^ qib953a[15] ^ qib953a[14] ^ qib953a[12] ^ qib953a[9] ^                 qib953a[4] ^ qib953a[3] ^ qib953a[1] ^ qib953a[0] ^ by572a7[0] ^ by572a7[1] ^ by572a7[4] ^ by572a7[8] ^                 by572a7[9] ^ by572a7[10] ^ by572a7[11] ^ by572a7[12] ^ by572a7[15] ^ by572a7[17] ^ by572a7[20] ^                 by572a7[24] ^ by572a7[25] ^ by572a7[27] ^ by572a7[28] ^ by572a7[29] ^ by572a7[31];   dzd83aa[12] = qib953a[47] ^ qib953a[46] ^ qib953a[42] ^ qib953a[41] ^ qib953a[31] ^ qib953a[30] ^ qib953a[27] ^                 qib953a[24] ^ qib953a[21] ^ qib953a[18] ^ qib953a[17] ^ qib953a[15] ^ qib953a[13] ^ qib953a[12] ^                 qib953a[9] ^ qib953a[6] ^ qib953a[5] ^ qib953a[4] ^ qib953a[2] ^ qib953a[1] ^ qib953a[0] ^ by572a7[1] ^                 by572a7[2] ^ by572a7[5] ^ by572a7[8] ^ by572a7[11] ^ by572a7[14] ^ by572a7[15] ^ by572a7[25] ^                 by572a7[26] ^ by572a7[30] ^ by572a7[31];   dzd83aa[13] = qib953a[47] ^ qib953a[43] ^ qib953a[42] ^ qib953a[32] ^ qib953a[31] ^ qib953a[28] ^ qib953a[25] ^                 qib953a[22] ^ qib953a[19] ^ qib953a[18] ^ qib953a[16] ^ qib953a[14] ^ qib953a[13] ^ qib953a[10] ^                 qib953a[7] ^ qib953a[6] ^ qib953a[5] ^ qib953a[3] ^ qib953a[2] ^ qib953a[1] ^ by572a7[0] ^ by572a7[2] ^                 by572a7[3] ^ 
by572a7[6] ^ by572a7[9] ^ by572a7[12] ^ by572a7[15] ^ by572a7[16] ^ by572a7[26] ^                 by572a7[27] ^ by572a7[31];   dzd83aa[14] = qib953a[44] ^ qib953a[43] ^ qib953a[33] ^ qib953a[32] ^ qib953a[29] ^ qib953a[26] ^ qib953a[23] ^                 qib953a[20] ^ qib953a[19] ^ qib953a[17] ^ qib953a[15] ^ qib953a[14] ^ qib953a[11] ^ qib953a[8] ^                 qib953a[7] ^ qib953a[6] ^ qib953a[4] ^ qib953a[3] ^ qib953a[2] ^ by572a7[1] ^ by572a7[3] ^ by572a7[4] ^                 by572a7[7] ^ by572a7[10] ^ by572a7[13] ^ by572a7[16] ^ by572a7[17] ^ by572a7[27] ^ by572a7[28];   dzd83aa[15] = qib953a[45] ^ qib953a[44] ^ qib953a[34] ^ qib953a[33] ^ qib953a[30] ^ qib953a[27] ^ qib953a[24] ^                 qib953a[21] ^ qib953a[20] ^ qib953a[18] ^ qib953a[16] ^ qib953a[15] ^ qib953a[12] ^ qib953a[9] ^                 qib953a[8] ^ qib953a[7] ^ qib953a[5] ^ qib953a[4] ^ qib953a[3] ^ by572a7[0] ^ by572a7[2] ^ by572a7[4] ^                 by572a7[5] ^ by572a7[8] ^ by572a7[11] ^ by572a7[14] ^ by572a7[17] ^ by572a7[18] ^ by572a7[28] ^                 by572a7[29];   dzd83aa[16] = qib953a[47] ^ qib953a[46] ^ qib953a[44] ^ qib953a[37] ^ qib953a[35] ^ qib953a[32] ^ qib953a[30] ^                 qib953a[29] ^ qib953a[26] ^ qib953a[24] ^ qib953a[22] ^ qib953a[21] ^ qib953a[19] ^ qib953a[17] ^                 qib953a[13] ^ qib953a[12] ^ qib953a[8] ^ qib953a[5] ^ qib953a[4] ^ qib953a[0] ^ by572a7[1] ^                 by572a7[3] ^ by572a7[5] ^ by572a7[6] ^ by572a7[8] ^ by572a7[10] ^ by572a7[13] ^ by572a7[14] ^                 by572a7[16] ^ by572a7[19] ^ by572a7[21] ^ by572a7[28] ^ by572a7[30] ^ by572a7[31];   dzd83aa[17] = qib953a[47] ^ qib953a[45] ^ qib953a[38] ^ qib953a[36] ^ qib953a[33] ^ qib953a[31] ^ qib953a[30] ^                 qib953a[27] ^ qib953a[25] ^ qib953a[23] ^ qib953a[22] ^ qib953a[20] ^ qib953a[18] ^ qib953a[14] ^                 qib953a[13] ^ qib953a[9] ^ qib953a[6] ^ qib953a[5] ^ qib953a[1] ^ by572a7[2] ^ by572a7[4] ^ by572a7[6] ^                 by572a7[7] ^ by572a7[9] ^ by572a7[11] ^ by572a7[14] ^ by572a7[15] ^ by572a7[17] ^ by572a7[20] ^                 by572a7[22] ^ by572a7[29] ^ by572a7[31];   dzd83aa[18] = qib953a[46] ^ qib953a[39] ^ qib953a[37] ^ qib953a[34] ^ qib953a[32] ^ qib953a[31] ^ qib953a[28] ^                 qib953a[26] ^ qib953a[24] ^ qib953a[23] ^ qib953a[21] ^ qib953a[19] ^ qib953a[15] ^ qib953a[14] ^                 qib953a[10] ^ qib953a[7] ^ qib953a[6] ^ qib953a[2] ^ by572a7[3] ^ by572a7[5] ^ by572a7[7] ^ by572a7[8] ^                 by572a7[10] ^ by572a7[12] ^ by572a7[15] ^ by572a7[16] ^ by572a7[18] ^ by572a7[21] ^ by572a7[23] ^                 by572a7[30];   dzd83aa[19] = qib953a[47] ^ qib953a[40] ^ qib953a[38] ^ qib953a[35] ^ qib953a[33] ^ qib953a[32] ^ qib953a[29] ^                 qib953a[27] ^ qib953a[25] ^ qib953a[24] ^ qib953a[22] ^ qib953a[20] ^ qib953a[16] ^ qib953a[15] ^                 qib953a[11] ^ qib953a[8] ^ qib953a[7] ^ qib953a[3] ^ by572a7[0] ^ by572a7[4] ^ by572a7[6] ^ by572a7[8] ^                 by572a7[9] ^ by572a7[11] ^ by572a7[13] ^ by572a7[16] ^ by572a7[17] ^ by572a7[19] ^ by572a7[22] ^                 by572a7[24] ^ by572a7[31];   dzd83aa[20] = qib953a[41] ^ qib953a[39] ^ qib953a[36] ^ qib953a[34] ^ qib953a[33] ^ qib953a[30] ^ qib953a[28] ^                 qib953a[26] ^ qib953a[25] ^ qib953a[23] ^ qib953a[21] ^ qib953a[17] ^ qib953a[16] ^ qib953a[12] ^                 qib953a[9] ^ qib953a[8] ^ qib953a[4] ^ by572a7[0] ^ by572a7[1] ^ by572a7[5] ^ by572a7[7] ^ by572a7[9] ^                 by572a7[10] ^ by572a7[12] ^ by572a7[14] ^ by572a7[17] ^ by572a7[18] ^ by572a7[20] ^ by572a7[23] ^                 by572a7[25];   dzd83aa[21] = qib953a[42] ^ qib953a[40] ^ qib953a[37] ^ qib953a[35] ^ qib953a[34] ^ qib953a[31] ^ qib953a[29] ^                 qib953a[27] ^ qib953a[26] ^ qib953a[24] ^ qib953a[22] ^ qib953a[18] ^ qib953a[17] ^ qib953a[13] ^                 qib953a[10] ^ qib953a[9] ^ qib953a[5] ^ by572a7[1] ^ by572a7[2] ^ by572a7[6] ^ by572a7[8] ^ by572a7[10] ^                 by572a7[11] ^ by572a7[13] ^ by572a7[15] ^ by572a7[18] ^ by572a7[19] ^ by572a7[21] ^ by572a7[24] ^                 by572a7[26];   dzd83aa[22] = qib953a[47] ^ qib953a[45] ^ qib953a[44] ^ qib953a[43] ^ qib953a[41] ^ qib953a[38] ^ qib953a[37] ^                 qib953a[36] ^ qib953a[35] ^ qib953a[34] ^ qib953a[31] ^ qib953a[29] ^ qib953a[27] ^ qib953a[26] ^                 qib953a[24] ^ qib953a[23] ^ qib953a[19] ^ qib953a[18] ^ qib953a[16] ^ qib953a[14] ^ qib953a[12] ^                 qib953a[11] ^ qib953a[9] ^ qib953a[0] ^ by572a7[0] ^ by572a7[2] ^ by572a7[3] ^ by572a7[7] ^ by572a7[8] ^                 by572a7[10] ^ by572a7[11] ^ by572a7[13] ^ by572a7[15] ^ by572a7[18] ^ by572a7[19] ^ by572a7[20] ^                 by572a7[21] ^ by572a7[22] ^ by572a7[25] ^ by572a7[27] ^ by572a7[28] ^ by572a7[29] ^ by572a7[31];   dzd83aa[23] = qib953a[47] ^ qib953a[46] ^ qib953a[42] ^ qib953a[39] ^ qib953a[38] ^ qib953a[36] ^ qib953a[35] ^                 qib953a[34] ^ qib953a[31] ^ qib953a[29] ^ qib953a[27] ^ qib953a[26] ^ qib953a[20] ^ qib953a[19] ^                 qib953a[17] ^ qib953a[16] ^ qib953a[15] ^ qib953a[13] ^ qib953a[9] ^ qib953a[6] ^ qib953a[1] ^                 qib953a[0] ^ by572a7[0] ^ by572a7[1] ^ by572a7[3] ^ by572a7[4] ^ by572a7[10] ^ by572a7[11] ^                 by572a7[13] ^ by572a7[15] ^ by572a7[18] ^ by572a7[19] ^ by572a7[20] ^ by572a7[22] ^ by572a7[23] ^                 by572a7[26] ^ by572a7[30] ^ by572a7[31];   dzd83aa[24] = qib953a[47] ^ qib953a[43] ^ qib953a[40] ^ qib953a[39] ^ qib953a[37] ^ qib953a[36] ^ qib953a[35] ^                 qib953a[32] ^ qib953a[30] ^ qib953a[28] ^ qib953a[27] ^ qib953a[21] ^ qib953a[20] ^ qib953a[18] ^                 qib953a[17] ^ qib953a[16] ^ qib953a[14] ^ qib953a[10] ^ qib953a[7] ^ qib953a[2] ^ qib953a[1] ^                 by572a7[0] ^ by572a7[1] ^ by572a7[2] ^ by572a7[4] ^ by572a7[5] ^ by572a7[11] ^ by572a7[12] ^                 by572a7[14] ^ by572a7[16] ^ by572a7[19] ^ by572a7[20] ^ by572a7[21] ^ by572a7[23] ^ by572a7[24] ^                 by572a7[27] ^ by572a7[31];   dzd83aa[25] = qib953a[44] ^ qib953a[41] ^ qib953a[40] ^ qib953a[38] ^ qib953a[37] ^ qib953a[36] ^ qib953a[33] ^                 qib953a[31] ^ qib953a[29] ^ qib953a[28] ^ qib953a[22] ^ qib953a[21] ^ qib953a[19] ^ qib953a[18] ^                 qib953a[17] ^ qib953a[15] ^ qib953a[11] ^ qib953a[8] ^ qib953a[3] ^ qib953a[2] ^ by572a7[1] ^                 by572a7[2] ^ by572a7[3] ^ by572a7[5] ^ by572a7[6] ^ by572a7[12] ^ by572a7[13] ^ by572a7[15] ^                 by572a7[17] ^ by572a7[20] ^ by572a7[21] ^ by572a7[22] ^ by572a7[24] ^ by572a7[25] ^ by572a7[28];   dzd83aa[26] = qib953a[47] ^ qib953a[44] ^ qib953a[42] ^ qib953a[41] ^ qib953a[39] ^ qib953a[38] ^ qib953a[31] ^                 qib953a[28] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^ qib953a[23] ^ qib953a[22] ^ qib953a[20] ^                 qib953a[19] ^ qib953a[18] ^ qib953a[10] ^ qib953a[6] ^ qib953a[4] ^ qib953a[3] ^ qib953a[0] ^                 by572a7[2] ^ by572a7[3] ^ by572a7[4] ^ by572a7[6] ^ by572a7[7] ^ by572a7[8] ^ by572a7[9] ^ by572a7[10] ^                 by572a7[12] ^ by572a7[15] ^ by572a7[22] ^ by572a7[23] ^ by572a7[25] ^ by572a7[26] ^ by572a7[28] ^                 by572a7[31];   dzd83aa[27] = qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[40] ^ qib953a[39] ^ qib953a[32] ^ qib953a[29] ^                 qib953a[27] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^ qib953a[23] ^ qib953a[21] ^ qib953a[20] ^                 qib953a[19] ^ qib953a[11] ^ qib953a[7] ^ qib953a[5] ^ qib953a[4] ^ qib953a[1] ^ by572a7[3] ^                 by572a7[4] ^ by572a7[5] ^ by572a7[7] ^ by572a7[8] ^ by572a7[9] ^ by572a7[10] ^ by572a7[11] ^                 by572a7[13] ^ by572a7[16] ^ by572a7[23] ^ by572a7[24] ^ by572a7[26] ^ by572a7[27] ^ by572a7[29];   dzd83aa[28] = qib953a[46] ^ qib953a[44] ^ qib953a[43] ^ qib953a[41] ^ qib953a[40] ^ qib953a[33] ^ qib953a[30] ^                 qib953a[28] ^ qib953a[27] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^ qib953a[22] ^ qib953a[21] ^                 qib953a[20] ^ qib953a[12] ^ qib953a[8] ^ qib953a[6] ^ qib953a[5] ^ qib953a[2] ^ by572a7[4] ^                 by572a7[5] ^ by572a7[6] ^ by572a7[8] ^ by572a7[9] ^ by572a7[10] ^ by572a7[11] ^ 
by572a7[12] ^                 by572a7[14] ^ by572a7[17] ^ by572a7[24] ^ by572a7[25] ^ by572a7[27] ^ by572a7[28] ^ by572a7[30];   dzd83aa[29] = qib953a[47] ^ qib953a[45] ^ qib953a[44] ^ qib953a[42] ^ qib953a[41] ^ qib953a[34] ^ qib953a[31] ^                 qib953a[29] ^ qib953a[28] ^ qib953a[27] ^ qib953a[26] ^ qib953a[25] ^ qib953a[23] ^ qib953a[22] ^                 qib953a[21] ^ qib953a[13] ^ qib953a[9] ^ qib953a[7] ^ qib953a[6] ^ qib953a[3] ^ by572a7[5] ^                 by572a7[6] ^ by572a7[7] ^ by572a7[9] ^ by572a7[10] ^ by572a7[11] ^ by572a7[12] ^ by572a7[13] ^                 by572a7[15] ^ by572a7[18] ^ by572a7[25] ^ by572a7[26] ^ by572a7[28] ^ by572a7[29] ^ by572a7[31];   dzd83aa[30] = qib953a[46] ^ qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[35] ^ qib953a[32] ^ qib953a[30] ^                 qib953a[29] ^ qib953a[28] ^ qib953a[27] ^ qib953a[26] ^ qib953a[24] ^ qib953a[23] ^ qib953a[22] ^                 qib953a[14] ^ qib953a[10] ^ qib953a[8] ^ qib953a[7] ^ qib953a[4] ^ by572a7[6] ^ by572a7[7] ^                 by572a7[8] ^ by572a7[10] ^ by572a7[11] ^ by572a7[12] ^ by572a7[13] ^ by572a7[14] ^ by572a7[16] ^                 by572a7[19] ^ by572a7[26] ^ by572a7[27] ^ by572a7[29] ^ by572a7[30];   dzd83aa[31] = qib953a[47] ^ qib953a[46] ^ qib953a[44] ^ qib953a[43] ^ qib953a[36] ^ qib953a[33] ^ qib953a[31] ^                 qib953a[30] ^ qib953a[29] ^ qib953a[28] ^ qib953a[27] ^ qib953a[25] ^ qib953a[24] ^ qib953a[23] ^                 qib953a[15] ^ qib953a[11] ^ qib953a[9] ^ qib953a[8] ^ qib953a[5] ^ by572a7[7] ^ by572a7[8] ^                 by572a7[9] ^ by572a7[11] ^ by572a7[12] ^ by572a7[13] ^ by572a7[14] ^ by572a7[15] ^ by572a7[17] ^                 by572a7[20] ^ by572a7[27] ^ by572a7[28] ^ by572a7[30] ^ by572a7[31];   end

`endif





always @* begin


`ifdef X1
      aab3d42 = qtf7c10;      bn9ea10 = ay72cf5;


`endif



`ifdef X4
      aab3d42 = qtf7c10[63:48];      bn9ea10 = crc_reg64;


`endif
   ykf5087 = {          jr1361a[8], jr1361a[9], jr1361a[10], jr1361a[11], jr1361a[12], jr1361a[13], jr1361a[14], jr1361a[15],          jr1361a[0], jr1361a[1], jr1361a[2], jr1361a[3], jr1361a[4], jr1361a[5], jr1361a[6], jr1361a[7]         } ;   zm967a8[0] = dzd86b6[12] ^ dzd86b6[10] ^ dzd86b6[9] ^ dzd86b6[6] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[22] ^                fp9b0d6[25] ^ fp9b0d6[26] ^ fp9b0d6[28];   zm967a8[1] = dzd86b6[13] ^ dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[9] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[1] ^                dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[22] ^ fp9b0d6[23] ^ fp9b0d6[25] ^ fp9b0d6[27] ^                fp9b0d6[28] ^ fp9b0d6[29];   zm967a8[2] = dzd86b6[14] ^ dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[2] ^                dzd86b6[1] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[22] ^ fp9b0d6[23] ^                fp9b0d6[24] ^ fp9b0d6[25] ^ fp9b0d6[29] ^ fp9b0d6[30];   zm967a8[3] = dzd86b6[15] ^ dzd86b6[14] ^ dzd86b6[10] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[3] ^                dzd86b6[2] ^ dzd86b6[1] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[23] ^ fp9b0d6[24] ^                fp9b0d6[25] ^ fp9b0d6[26] ^ fp9b0d6[30] ^ fp9b0d6[31];   zm967a8[4] = dzd86b6[15] ^ dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[6] ^ dzd86b6[4] ^ dzd86b6[3] ^                dzd86b6[2] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[22] ^                fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[28] ^ fp9b0d6[31];   zm967a8[5] = dzd86b6[13] ^ dzd86b6[10] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[4] ^ dzd86b6[3] ^                dzd86b6[1] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[21] ^                fp9b0d6[22] ^ fp9b0d6[23] ^ fp9b0d6[26] ^ fp9b0d6[29];   zm967a8[6] = dzd86b6[14] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[4] ^                dzd86b6[2] ^ dzd86b6[1] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[22] ^                fp9b0d6[23] ^ fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[30];   zm967a8[7] = dzd86b6[15] ^ dzd86b6[10] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[5] ^ dzd86b6[3] ^ dzd86b6[2] ^                dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[21] ^ fp9b0d6[23] ^ fp9b0d6[24] ^                fp9b0d6[26] ^ fp9b0d6[31];   zm967a8[8] = dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[10] ^ dzd86b6[8] ^ dzd86b6[4] ^ dzd86b6[3] ^ dzd86b6[1] ^                dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[24] ^ fp9b0d6[26] ^                fp9b0d6[27] ^ fp9b0d6[28];   zm967a8[9] = dzd86b6[13] ^ dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[9] ^ dzd86b6[5] ^ dzd86b6[4] ^ dzd86b6[2] ^                dzd86b6[1] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[25] ^ fp9b0d6[27] ^                fp9b0d6[28] ^ fp9b0d6[29];   zm967a8[10] = dzd86b6[14] ^ dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[5] ^ dzd86b6[3] ^ dzd86b6[2] ^ dzd86b6[0] ^                 fp9b0d6[16] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[21] ^ fp9b0d6[25] ^ fp9b0d6[29] ^ fp9b0d6[30];   zm967a8[11] = dzd86b6[15] ^ dzd86b6[14] ^ dzd86b6[12] ^ dzd86b6[9] ^ dzd86b6[4] ^ dzd86b6[3] ^ dzd86b6[1] ^                 dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[25] ^ fp9b0d6[28] ^                 fp9b0d6[30] ^ fp9b0d6[31];   zm967a8[12] = dzd86b6[15] ^ dzd86b6[13] ^ dzd86b6[12] ^ dzd86b6[9] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[4] ^                 dzd86b6[2] ^ dzd86b6[1] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[20] ^                 fp9b0d6[21] ^ fp9b0d6[22] ^ fp9b0d6[25] ^ fp9b0d6[28] ^ fp9b0d6[29] ^ fp9b0d6[31];   zm967a8[13] = dzd86b6[14] ^ dzd86b6[13] ^ dzd86b6[10] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[3] ^                 dzd86b6[2] ^ dzd86b6[1] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[21] ^ fp9b0d6[22] ^                 fp9b0d6[23] ^ fp9b0d6[26] ^ fp9b0d6[29] ^ fp9b0d6[30];   zm967a8[14] = dzd86b6[15] ^ dzd86b6[14] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[4] ^                 dzd86b6[3] ^ dzd86b6[2] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[22] ^ fp9b0d6[23] ^                 fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[30] ^ fp9b0d6[31];   zm967a8[15] = dzd86b6[15] ^ dzd86b6[12] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[5] ^ dzd86b6[4] ^                 dzd86b6[3] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[23] ^ fp9b0d6[24] ^ fp9b0d6[25] ^                 fp9b0d6[28] ^ fp9b0d6[31];   zm967a8[16] = dzd86b6[13] ^ dzd86b6[12] ^ dzd86b6[8] ^ dzd86b6[5] ^ dzd86b6[4] ^ dzd86b6[0] ^ fp9b0d6[0] ^                 fp9b0d6[16] ^ fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[24] ^ fp9b0d6[28] ^ fp9b0d6[29];   zm967a8[17] = dzd86b6[14] ^ dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[1] ^ fp9b0d6[1] ^                fp9b0d6[17] ^ fp9b0d6[21] ^ fp9b0d6[22] ^ fp9b0d6[25] ^ fp9b0d6[29] ^ fp9b0d6[30];   zm967a8[18] = dzd86b6[15] ^ dzd86b6[14] ^ dzd86b6[10] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[2] ^ fp9b0d6[2] ^                 fp9b0d6[18] ^ fp9b0d6[22] ^ fp9b0d6[23] ^ fp9b0d6[26] ^ fp9b0d6[30] ^ fp9b0d6[31];   zm967a8[19] = dzd86b6[15] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[3] ^ fp9b0d6[3] ^ fp9b0d6[19] ^                 fp9b0d6[23] ^ fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[31];   zm967a8[20] = dzd86b6[12] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[4] ^ fp9b0d6[4] ^ fp9b0d6[20] ^ fp9b0d6[24] ^                 fp9b0d6[25] ^ fp9b0d6[28];   zm967a8[21] = dzd86b6[13] ^ dzd86b6[10] ^ dzd86b6[9] ^ dzd86b6[5] ^ fp9b0d6[5] ^ fp9b0d6[21] ^ fp9b0d6[25] ^                 fp9b0d6[26] ^ fp9b0d6[29];   zm967a8[22] = dzd86b6[14] ^ dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[9] ^ dzd86b6[0] ^ fp9b0d6[6] ^ fp9b0d6[16] ^                 fp9b0d6[25] ^ fp9b0d6[27] ^ fp9b0d6[28] ^ fp9b0d6[30];   zm967a8[23] = dzd86b6[15] ^ dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[6] ^ dzd86b6[1] ^ dzd86b6[0] ^ fp9b0d6[7] ^                 fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[22] ^ fp9b0d6[25] ^ fp9b0d6[29] ^ fp9b0d6[31];   zm967a8[24] = dzd86b6[14] ^ dzd86b6[10] ^ dzd86b6[7] ^ dzd86b6[2] ^ dzd86b6[1] ^ fp9b0d6[8] ^ fp9b0d6[17] ^                 fp9b0d6[18] ^ fp9b0d6[23] ^ fp9b0d6[26] ^ fp9b0d6[30];   zm967a8[25] = dzd86b6[15] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[3] ^ dzd86b6[2] ^ fp9b0d6[9] ^ fp9b0d6[18] ^                 fp9b0d6[19] ^ fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[31];   zm967a8[26] = dzd86b6[10] ^ dzd86b6[6] ^ dzd86b6[4] ^ dzd86b6[3] ^ dzd86b6[0] ^ fp9b0d6[10] ^ fp9b0d6[16] ^                 fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[22] ^ fp9b0d6[26];   zm967a8[27] = dzd86b6[11] ^ dzd86b6[7] ^ dzd86b6[5] ^ dzd86b6[4] ^ dzd86b6[1] ^ fp9b0d6[11] ^ fp9b0d6[17] ^                 fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[23] ^ fp9b0d6[27];   zm967a8[28] = dzd86b6[12] ^ dzd86b6[8] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[2] ^ fp9b0d6[12] ^ fp9b0d6[18] ^                 fp9b0d6[21] ^ fp9b0d6[22] ^ fp9b0d6[24] ^ fp9b0d6[28];   zm967a8[29] = dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[3] ^ fp9b0d6[13] ^ fp9b0d6[19] ^                 fp9b0d6[22] ^ fp9b0d6[23] ^ fp9b0d6[25] ^ fp9b0d6[29];   zm967a8[30] = dzd86b6[14] ^ dzd86b6[10] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[4] ^ fp9b0d6[14] ^ fp9b0d6[20] ^                 fp9b0d6[23] ^ fp9b0d6[24] ^ fp9b0d6[26] ^ fp9b0d6[30];   zm967a8[31] = dzd86b6[15] ^ dzd86b6[11] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[5] ^ fp9b0d6[15] ^ fp9b0d6[21] ^                 fp9b0d6[24] ^ fp9b0d6[25] ^ fp9b0d6[27] ^ fp9b0d6[31];
end




assign jea8438 = { ~ay72cf5[24], ~ay72cf5[25], ~ay72cf5[26], ~ay72cf5[27],                        ~ay72cf5[28], ~ay72cf5[29], ~ay72cf5[30], ~ay72cf5[31] } ;
assign tu421c3 = { ~ay72cf5[16], ~ay72cf5[17], ~ay72cf5[18], ~ay72cf5[19],                        ~ay72cf5[20], ~ay72cf5[21], ~ay72cf5[22], ~ay72cf5[23] } ;
assign aa10e1b = { ~ay72cf5[8], ~ay72cf5[9], ~ay72cf5[10], ~ay72cf5[11],                        ~ay72cf5[12], ~ay72cf5[13], ~ay72cf5[14], ~ay72cf5[15] } ;
assign ie870d8 = { ~ay72cf5[0], ~ay72cf5[1], ~ay72cf5[2], ~ay72cf5[3],                        ~ay72cf5[4], ~ay72cf5[5], ~ay72cf5[6], ~ay72cf5[7] } ;



`ifdef X4
   assign byca9d0 = { ~alc360e[24], ~alc360e[25], ~alc360e[26], ~alc360e[27],                           ~alc360e[28], ~alc360e[29], ~alc360e[30], ~alc360e[31] } ;   assign of54e82 = { ~alc360e[16], ~alc360e[17], ~alc360e[18], ~alc360e[19],                           ~alc360e[20], ~alc360e[21], ~alc360e[22], ~alc360e[23] } ;   assign ria7414 = { ~alc360e[8], ~alc360e[9], ~alc360e[10], ~alc360e[11],                           ~alc360e[12], ~alc360e[13], ~alc360e[14], ~alc360e[15] } ;   assign xy3a0a2 = { ~alc360e[0], ~alc360e[1], ~alc360e[2], ~alc360e[3],                           ~alc360e[4], ~alc360e[5], ~alc360e[6], ~alc360e[7] } ;


`endif


assign mr4e59e = {qtc35b7, co1adbd, ipd6de9, ymb6f4d} ;

`ifdef X4
   assign pfe9cb3 = {byca9d0, of54e82, ria7414, xy3a0a2} ;

`endif


always@* begin qtf7c10<={data_in>>1,ux17adf[0]};xy144d8<=ux17adf[1];pua26c3<={zm967a8>>1,ux17adf[2]};jr1361a<={aab3d42>>1,ux17adf[3]};fp9b0d6<={bn9ea10>>1,ux17adf[4]};dzd86b6<={ykf5087>>1,ux17adf[5]};qtc35b7<={jea8438>>1,ux17adf[6]};co1adbd<={tu421c3>>1,ux17adf[7]};ipd6de9<={aa10e1b>>1,ux17adf[8]};ymb6f4d<={ie870d8>>1,ux17adf[9]};end
always@* begin db22f5b[2047]<=fp8ba72;db22f5b[2046]<=zm967a8[0];db22f5b[2044]<=aab3d42[0];db22f5b[2041]<=bn9ea10[0];db22f5b[2035]<=ykf5087[0];db22f5b[2022]<=jea8438[0];db22f5b[1996]<=tu421c3[0];db22f5b[1945]<=aa10e1b[0];db22f5b[1842]<=ie870d8[0];db22f5b[1023]<=data_in[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule








































`timescale 1 ns / 100 ps
module pcie_x1_rxtp_x1(
   input wire              sys_clk ,    
   input wire              rst_n ,      

   input wire             tlp_debug,    
   input wire             dl_up,        
   input wire             phy_l0,       

   input wire [15:0]      dfrm_tdata,   
   input wire             dfrm_tval,    
   input wire             dfrm_st,      
   input wire             dfrm_end,     
   input wire             dfrm_edb,     

   output wire [15:0]     rxtp_data,     
   output wire            rxtp_st,       
   output reg             rxtp_end,      
   output wire [11:0]     rxtp_seq,      
   output wire            rxtp_bad_tlp,  
   output reg             rxtp_ack,      
   output reg             rxtp_nak,      
   output reg             rxtp_duptlp      ) ;

`ifdef MAX_TLP_512
localparam TLP_MEM_DEPTH   = 1024;
localparam fnc7632  = 10 ;

`endif

`ifdef MAX_TLP_1K
localparam TLP_MEM_DEPTH   = 1024;
localparam fnc7632  = 10 ;

`endif

`ifdef MAX_TLP_2K
localparam TLP_MEM_DEPTH   = 2048;
localparam fnc7632  = 11 ;

`endif

`ifdef MAX_TLP_4K
localparam TLP_MEM_DEPTH   = 3072;
localparam fnc7632  = 12 ;

`endif
parameter RXTP_IDLE = 2'b00;
parameter RXTP_PKT  = 2'b01;
parameter RXTP_ERR  = 2'b11;
reg  [15:0]            vx3dab9;
reg  [15:0]            uved5cf;
reg  [15:0]            en6ae7d;
reg                    fa573ed;
reg                    wyb9f6a;
reg                    bycfb51;
reg                    me7da8a;
reg                    aled451;
reg                    al6a28d;
reg  [11:0]            wj5146c;
reg                    ir8a365;
reg                    wj51b2d;
reg                    co8d96c;
reg                    zk6cb61;
reg  [11:0]            of65b0a;
reg                    bn2d854;
reg                    dm6c2a6;
reg                    zx61533;
reg                    mga99f;
reg  [1:0]             yx54cf8;
reg                    swa67c4;
reg                    gd33e20;
reg                    wl9f104;
reg                    ipf8824;
reg                    suc4125;
reg                    pu20928;
reg                    hq4942;
reg [fnc7632-1:0] do25098;
reg [fnc7632-1:0] lq4261f;
reg                    rv130fb;
reg                    ou987de;
reg                    alc3ef1;
reg [fnc7632-1:0] nefbc60;
reg [17:0]             cmde302;
wire  [31:0]           dmf1810;
wire  [17:0]           ba8c083;
wire  [17:0]           of6041a;
wire  [11:0]           ep20d5;
wire                   ks106ad;

`ifdef MAX_TLP_4K

`else

`endif

`ifdef MAX_TLP_4K

`else

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef X4

`endif
reg pu83569;
reg uk1ab4b;
reg vid5a59;
reg [15 : 0] vkad2ca;
reg lq69653;
reg kd4b29b;
reg kq594dd;
reg tuca6e9;
reg [15 : 0] ea5374b;
reg [15 : 0] rv9ba58;
reg [15 : 0] zxdd2c7;
reg lde963f;
reg kd4b1ff;
reg lq58ffd;
reg zxc7fea;
reg tw3ff56;
reg ykffab2;
reg [11 : 0] offd590;
reg kqeac84;
reg ay56421;
reg jeb2108;
reg yz90843;
reg [11 : 0] vx8421c;
reg mg210e6;
reg oh8731;
reg me4398c;
reg vx1cc60;
reg [1 : 0] ble6306;
reg ym31836;
reg ng8c1b1;
reg gb60d8a;
reg ph6c54;
reg sj362a6;
reg sjb1535;
reg oh8a9ac;
reg [fnc7632 - 1 : 0] qia6b24;
reg [fnc7632 - 1 : 0] ymac90b;
reg hb64858;
reg uk242c6;
reg ym21631;
reg [fnc7632 - 1 : 0] xw58c4b;
reg [17 : 0] qtc625a;
reg [31 : 0] co312d5;
reg [17 : 0] pu896a8;
reg [17 : 0] wj4b542;
reg [11 : 0] fn5aa15;
reg fad50af;
reg [2047:0] db22f5b;
wire [46:0] ux17adf;

`ifdef MAX_TLP_512

`endif

`ifdef MAX_TLP_1K

`endif

`ifdef MAX_TLP_2K

`endif

`ifdef MAX_TLP_4K

`endif

`ifdef MAX_TLP_4K

`else

`endif

`ifdef MAX_TLP_4K

`else

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif


`ifdef X4

`endif

localparam ribd6fd = 47,jceb7ea = 32'hfdffd84b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef MAX_TLP_512


`endif


`ifdef MAX_TLP_1K


`endif


`ifdef MAX_TLP_2K


`endif


`ifdef MAX_TLP_4K


`endif


`ifdef MAX_TLP_4K


`else


`endif


`ifdef MAX_TLP_4K


`else


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef X4


`endif





`ifdef MAX_TLP_512
      


`endif



`ifdef MAX_TLP_1K
      


`endif



`ifdef MAX_TLP_2K
      


`endif



`ifdef MAX_TLP_4K
      


`endif








always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vx3dab9  <= 16'd0;      uved5cf  <= 16'd0;      en6ae7d  <= 16'd0;      fa573ed    <= 1'b0;      wyb9f6a    <= 1'b0;      bycfb51    <= 1'b0;      me7da8a    <= 1'b0;      aled451   <= 1'b0;      al6a28d   <= 1'b0;   end   else  begin      vx3dab9  <= vkad2ca;      uved5cf  <= ea5374b;      en6ae7d  <= rv9ba58;      fa573ed    <= kd4b29b;      wyb9f6a    <= lde963f;      bycfb51    <= kd4b1ff;      me7da8a    <= lq58ffd;         aled451   <= kq594dd;      al6a28d   <= tuca6e9;   end
end




assign ep20d5   = ea5374b[11:0];
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ir8a365   <= 1'b0;      wj51b2d   <= 1'b0;      co8d96c  <= 1'b0;      zk6cb61   <= 1'b0;      of65b0a  <= 12'h000;      bn2d854     <= 1'b0;      dm6c2a6      <= 1'b0;      zx61533      <= 1'b0;      mga99f     <= 1'b0;   end   else  begin      ir8a365   <= ({ea5374b, vkad2ca} == co312d5) ? 1'b1 : 1'b0;      wj51b2d   <= ({ea5374b, vkad2ca} == ~co312d5) ? 1'b1 : 1'b0;      of65b0a  <= offd590 - fn5aa15;      if(kd4b1ff) begin         co8d96c <= (vx8421c == 12'h000) ? 1'b1 : 1'b0;         zk6cb61  <= (vx8421c <= 12'd2048) ? 1'b1 : 1'b0;      end      bn2d854 <= 1'b0;      dm6c2a6  <= 1'b0;      zx61533  <= 1'b0;      mga99f <= 1'b0;      if(ng8c1b1) begin         if(tw3ff56) begin            if(kqeac84)               if(jeb2108)                       bn2d854 <= 1'b1;               else if(yz90843)                   zx61533  <= 1'b1;               else                                  dm6c2a6  <= 1'b1;            else                                  dm6c2a6  <= 1'b1;         end         else if(ykffab2) begin            if(ay56421)                        mga99f <= 1'b1;            else                                  dm6c2a6  <= 1'b1;         end     end     end
end



assign rxtp_bad_tlp  = oh8731;
assign rxtp_seq      = offd590 - 12'h001;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rxtp_ack      <= 1'b0;      rxtp_duptlp   <= 1'b0;      rxtp_nak      <= 1'b0;   end   else begin      rxtp_ack      <= mg210e6;      rxtp_duptlp   <= me4398c;      rxtp_nak      <= oh8731 | ym31836;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yx54cf8  <= RXTP_IDLE;      swa67c4    <= 1'b0;      gd33e20 <= 1'b0;      ipf8824  <= 1'b0;   end   else  begin      swa67c4    <= 1'b0;      gd33e20 <= 1'b0;      ipf8824  <= vid5a59;      suc4125   <= (vid5a59 & ~ph6c54);      if (sj362a6) begin         yx54cf8  <= RXTP_IDLE;      end      else begin      case(ble6306)         RXTP_IDLE : begin                                    if(uk1ab4b) begin               if(kq594dd || tuca6e9) begin                  swa67c4    <= 1'b1;                  yx54cf8  <= RXTP_ERR;               end               else if(kd4b29b) begin                  yx54cf8  <= RXTP_PKT;               end       else begin                  yx54cf8  <= RXTP_IDLE;                  swa67c4    <= 1'b0;               end            end    else begin               yx54cf8  <= RXTP_IDLE;               swa67c4    <= 1'b0;            end         end         RXTP_PKT : begin                                    if(sj362a6) begin               yx54cf8  <= RXTP_IDLE;               swa67c4    <= 1'b1;            end            else if(uk1ab4b) begin               swa67c4 <= (kd4b29b) ? 1'b1 : 1'b0;               if(kq594dd || tuca6e9) begin                  yx54cf8  <= RXTP_IDLE;                  gd33e20 <= 1'b1;               end            end            else               yx54cf8  <= RXTP_IDLE;         end         RXTP_ERR : begin            if(sj362a6) begin               yx54cf8  <= RXTP_IDLE;               swa67c4    <= 1'b1;            end            else if(uk1ab4b) begin               if(kd4b29b)                  yx54cf8  <= RXTP_PKT;       else if(kq594dd || tuca6e9) begin                  yx54cf8  <= RXTP_ERR;                  swa67c4 <= 1'b1;               end       else begin                  yx54cf8  <= RXTP_IDLE;                  swa67c4 <= 1'b0;               end            end            else               yx54cf8  <= RXTP_IDLE;        end        default : begin           yx54cf8  <= RXTP_IDLE;        end      endcase      end   end
end









assign of6041a = {zxdd2c7, zxc7fea, kq594dd};
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      pu20928          <= 1'b0;      wl9f104<= 1'b0;      hq4942        <= 1'b0;      do25098   <= 0;      lq4261f <= 0;      wj5146c    <= 12'h000;   end   else  begin      if(ym31836 || kq594dd || tuca6e9 || !uk1ab4b)         pu20928  <= 1'b0;      else if(kd4b1ff)         pu20928  <= 1'b1;      hq4942          <= sjb1535;      wl9f104  <= ng8c1b1;      if(!uk1ab4b || ym31836 || (gb60d8a && !mg210e6))          do25098 <= ymac90b;      else if(sjb1535)


`ifdef MAX_TLP_4K
            do25098 <= (qia6b24 == 12'd3071) ? 12'd0 : qia6b24 + 1;


`else
            do25098 <= qia6b24 + 1;


`endif

            if(!uk1ab4b)          lq4261f <= 0;      else if(mg210e6)            lq4261f <= qia6b24;            if(!uk1ab4b)         wj5146c  <= 12'h000;      else if(mg210e6)           wj5146c  <= offd590 + 12'h001 ;   end
end




assign rxtp_data      =  qtc625a[17:2];
assign rxtp_st        =  ym21631 ? qtc625a[1] : 1'b0;
assign fn646cb = ym21631 ? qtc625a[0] : 1'b0;
assign kdd97e2 = uk242c6 ? pu896a8[0] : 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rv130fb      <= 1'b0;      ou987de    <= 1'b0;      alc3ef1   <= 1'b0;      nefbc60 <= 0;      rxtp_end     <= 1'b0;      cmde302 <= 18'd0;   end   else  begin      cmde302  <= pu896a8;      rv130fb    <= 1'b0;      if(!uk1ab4b)         nefbc60 <= 0;      else if((xw58c4b != ymac90b) && !kdd97e2) begin         rv130fb      <= 1'b1;


`ifdef MAX_TLP_4K
            nefbc60 <= (xw58c4b == 12'd3071) ? 12'd0 : xw58c4b + 1;


`else
            nefbc60 <= xw58c4b + 1;


`endif
      end      rxtp_end        <= fn646cb;      ou987de       <= hb64858;      alc3ef1      <= uk242c6;   end
end




pmi_ram_dp #(   .pmi_wr_addr_depth    (TLP_MEM_DEPTH),   .pmi_wr_addr_width    (fnc7632),   .pmi_wr_data_width    (18),   .pmi_rd_addr_depth    (TLP_MEM_DEPTH),   .pmi_rd_addr_width    (fnc7632),   .pmi_rd_data_width    (18),   .pmi_regmode          ("noreg"),   .pmi_gsr              ("enable"),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),         .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_ram_dp")   )   bnbae45 (   .Data         (of6041a),   .WrAddress    (do25098),   .RdAddress    (nefbc60),   .WrClock      (sys_clk),   .RdClock      (sys_clk),   .WrClockEn    (1'b1),   .RdClockEn    (rv130fb),   .WE           (hq4942),


`ifdef ECP5UM
   .Reset        (1'b0),


`else



`ifdef ECP3
      .Reset     (1'b0),


`else
      .Reset     (~rst_n),


`endif



`endif
   .Q            (ba8c083)   );



pcie_x1_ks8229e #(   .D_WIDTH       ( 16 ) )   vv5f0f0(   .sys_clk       (sys_clk),   .rst_n         (rst_n),      .data_in       (ea5374b),   .fp8ba72         (kd4b29b),


`ifdef X4
      .tu5d396      (),         .pfe9cb3  (),


`endif
   .mr4e59e     (dmf1810)   ) ;
always@* begin pu83569<=ux17adf[0];uk1ab4b<=ux17adf[1];vid5a59<=ux17adf[2];vkad2ca<={dfrm_tdata>>1,ux17adf[3]};lq69653<=ux17adf[4];kd4b29b<=ux17adf[5];kq594dd<=ux17adf[6];tuca6e9<=ux17adf[7];ea5374b<={vx3dab9>>1,ux17adf[8]};rv9ba58<={uved5cf>>1,ux17adf[9]};zxdd2c7<={en6ae7d>>1,ux17adf[10]};lde963f<=ux17adf[11];kd4b1ff<=ux17adf[12];lq58ffd<=ux17adf[13];zxc7fea<=ux17adf[14];tw3ff56<=ux17adf[15];ykffab2<=ux17adf[16];offd590<={wj5146c>>1,ux17adf[17]};kqeac84<=ux17adf[18];ay56421<=ux17adf[19];jeb2108<=ux17adf[20];yz90843<=ux17adf[21];vx8421c<={of65b0a>>1,ux17adf[22]};mg210e6<=ux17adf[23];oh8731<=ux17adf[24];me4398c<=ux17adf[25];vx1cc60<=ux17adf[26];ble6306<={yx54cf8>>1,ux17adf[27]};ym31836<=ux17adf[28];ng8c1b1<=ux17adf[29];gb60d8a<=ux17adf[30];ph6c54<=ux17adf[31];sj362a6<=ux17adf[32];sjb1535<=ux17adf[33];oh8a9ac<=ux17adf[34];qia6b24<={do25098>>1,ux17adf[35]};ymac90b<={lq4261f>>1,ux17adf[36]};hb64858<=ux17adf[37];uk242c6<=ux17adf[38];ym21631<=ux17adf[39];xw58c4b<={nefbc60>>1,ux17adf[40]};qtc625a<={cmde302>>1,ux17adf[41]};co312d5<={dmf1810>>1,ux17adf[42]};pu896a8<={ba8c083>>1,ux17adf[43]};wj4b542<={of6041a>>1,ux17adf[44]};fn5aa15<={ep20d5>>1,ux17adf[45]};fad50af<=ux17adf[46];end
always@* begin db22f5b[2047]<=dl_up;db22f5b[2046]<=phy_l0;db22f5b[2044]<=dfrm_tdata[0];db22f5b[2040]<=dfrm_tval;db22f5b[2033]<=dfrm_st;db22f5b[2019]<=dfrm_end;db22f5b[1999]<=do25098[0];db22f5b[1991]<=dfrm_edb;db22f5b[1950]<=lq4261f[0];db22f5b[1947]<=dmf1810[0];db22f5b[1934]<=vx3dab9[0];db22f5b[1892]<=co8d96c;db22f5b[1852]<=rv130fb;db22f5b[1851]<=aled451;db22f5b[1847]<=ba8c083[0];db22f5b[1820]<=uved5cf[0];db22f5b[1737]<=zk6cb61;db22f5b[1657]<=ou987de;db22f5b[1654]<=al6a28d;db22f5b[1647]<=of6041a[0];db22f5b[1610]<=dm6c2a6;db22f5b[1593]<=en6ae7d[0];db22f5b[1523]<=pu20928;db22f5b[1426]<=of65b0a[0];db22f5b[1404]<=ipf8824;db22f5b[1267]<=alc3ef1;db22f5b[1260]<=wj5146c[0];db22f5b[1246]<=ep20d5[0];db22f5b[1199]<=swa67c4;db22f5b[1173]<=zx61533;db22f5b[1139]<=fa573ed;db22f5b[1023]<=tlp_debug;db22f5b[999]<=hq4942;db22f5b[973]<=cmde302[0];db22f5b[946]<=wj51b2d;db22f5b[925]<=me7da8a;db22f5b[805]<=bn2d854;db22f5b[761]<=suc4125;db22f5b[702]<=wl9f104;db22f5b[599]<=yx54cf8[0];db22f5b[486]<=nefbc60[0];db22f5b[473]<=ir8a365;db22f5b[462]<=bycfb51;db22f5b[445]<=ks106ad;db22f5b[351]<=gd33e20;db22f5b[299]<=mga99f;db22f5b[231]<=wyb9f6a;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





































































`timescale 1 ns / 100 ps
module  pcie_x1_kqde748(
   
   sys_clk,              
   rst_n,                

   zxe9031,         
   
   rg4818f,              
   nr40c7a,               
   hd63d7,             

   
   phy_ltssm_state,      
   phy_link_up,          

   
   trnc_st,              

   
   ym97759,        
   uxbbac8,        
   jpdd644,         
   ie92eeb,        
   vi6cfff,            
 
   
   go67ffa,             
   ri3ffd1,            
   icffe8a,        
   osff450,        

   
   rxtp_nak,             
   osd1409,         

   
   
   dl_inactive,          
   dl_init,              
   dl_active,            
   dl_up,                

   
   me49bf6,           
   by4dfb1,          
   sh6fd8b,          
   pf7ec5d,          
   vvf62ee,          

   
   vcneg_pend            
                         

   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
parameter cb2c591   = 2'b00;
parameter os62c8d  = 2'b01;
parameter fp16469 = 2'b10;
parameter xyb234e = 1'b0;
parameter hd91a73 = 1'b1;
parameter mg8d39e = 2'b00;
parameter xw69cf0     = 2'b01;
parameter yx4e782   = 2'b10;
parameter tu73c15  = 3'b000;
parameter xl9e0aa     = 3'b001;
parameter osf0556    = 3'b010;
parameter gq82ab0   = 3'b011;
parameter wy15580 = 3'b100;
parameter jraac01   = 1'b0;
parameter su5600f   = 1'b1;
input                     sys_clk;
input                     rst_n;
input [11:0]              zxe9031;
input                     rg4818f;
input [`NUM_VC -1:0]      nr40c7a;
input [(`NUM_VC*3)-1:0]   hd63d7;
input [MSM_WIDTH:0]       phy_ltssm_state;
input                     phy_link_up;
input [`NUM_VC -1:0]      trnc_st;
input                     ym97759;
input                     uxbbac8;
input                     jpdd644;
input [1:0]               ie92eeb;
input [2:0]               vi6cfff;
input                     go67ffa;
input                     ri3ffd1;
input                     icffe8a;
input                     osff450;
input                     rxtp_nak;
input                     osd1409;
output                    dl_inactive;
output                    dl_init;
output                    dl_active;
output [`NUM_VC -1:0]     dl_up;
output                    me49bf6;
output                    by4dfb1;
output [2:0]              sh6fd8b;
output                    pf7ec5d;
output [1:0]              vvf62ee;
output [`NUM_VC -1:0]     vcneg_pend;
reg                       dl_inactive;
reg                       dl_init;
reg                       dl_active;
reg    [`NUM_VC -1:0]     dl_up;
reg                       me49bf6;
reg                       by4dfb1;
reg    [2:0]              sh6fd8b;
reg                       pf7ec5d;
reg    [1:0]              vvf62ee;
reg    [`NUM_VC -1:0]     vcneg_pend;
reg  [1:0]                ri2a814;
reg  [2:0]                gb540a3;
reg                       lfa051d;
reg                       gd28ef;
reg  [11:0]               xy1477c;
reg                       oua3be3;
reg                       ep1df19;
reg                       suef8cc;
reg                       ne7c661;
reg                       fne330a;
reg                       hd19856;
reg                       shcc2b6;
reg                       vv615b4;
reg                       gqada7;
reg                       ay56d38;
reg                       mgb69c1;
reg  [`NUM_VC -1:0]       sjb4e08;

`ifdef VC1
wire  [2:0]               ria7045;

`else
reg   [2:0]               ria7045;

`endif

`ifndef VC1

`ifdef VC2
reg    uic1156;

`else 

`ifdef VC3 
reg  [1:0]   uic1156;

`else

`ifdef VC4
reg  [1:0]   uic1156;

`else   // 5 - 8
reg  [2:0]   uic1156;

`endif

`endif

`endif

`endif
wire  [7:0]               me56173;
wire  [2:0]               dbb0b98;
wire  [2:0]               cb85cc7;
wire  [2:0]               uk2e63d;
wire  [2:0]               zk731e8;
wire  [2:0]               uk98f43;
wire  [2:0]               thc7a18;
wire  [2:0]               zz3d0c6;
wire  [2:0]               wje8636;
wire                      su431b5;
wire                      ux18da9;

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1

`else

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifndef VC1

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`else

`endif

`ifdef EN_VC1

`else

`endif

`ifdef EN_VC2

`else

`endif

`ifdef EN_VC3

`else

`endif

`ifdef EN_VC4

`else

`endif

`ifdef EN_VC5

`else

`endif

`ifdef EN_VC6

`else

`endif

`ifdef EN_VC7

`else

`endif
reg [8*10:1]     shc6d4c;
reg [8*10:1]     qv36a64;
reg [8*10:1]     zzb5324;
reg [11 : 0] qia9926;
reg su4c930;
reg [`NUM_VC - 1 : 0] zx64981;
reg [(`NUM_VC * 3) - 1 : 0] ie24c0e;
reg [MSM_WIDTH : 0] xy30384;
reg db81c22;
reg [`NUM_VC - 1 : 0] doe117;
reg ip708bb;
reg rv845dd;
reg jr22eee;
reg [1 : 0] qv17777;
reg [2 : 0] irbbbbc;
reg rtddde4;
reg tueef26;
reg ui77933;
reg cobc998;
reg xwe4cc1;
reg ux2660a;
reg [1 : 0] wl33054;
reg [2 : 0] wy982a5;
reg kqc1529;
reg coa948;
reg [11 : 0] wj54a40;
reg fpa5204;
reg kf29027;
reg by4813d;
reg pf409ea;
reg vk4f57;
reg tj27abb;
reg tj3d5df;
reg ykeaefe;
reg jc577f1;
reg epbbf8a;
reg jcdfc54;
reg [`NUM_VC - 1 : 0] lqfe2a3;
reg [7 : 0] rgf151b;
reg [2 : 0] gd8a8da;
reg [2 : 0] cz546d4;
reg [2 : 0] coa36a5;
reg [2 : 0] hq1b528;
reg [2 : 0] rgda942;
reg [2 : 0] wwd4a13;
reg [2 : 0] fpa5098;
reg [2 : 0] lf284c7;
reg jc4263f;
reg bn131fb;
reg [8 * 10 : 1] qi98fde;
reg [8 * 10 : 1] nrc7ef0;
reg [8 * 10 : 1] ba3f786;
reg [2047:0] db22f5b;
wire [48:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef VC1

`else

`endif

`ifndef VC1

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else   // 5 - 8

`endif

`endif

`endif

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1

`else

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifndef VC1

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`endif

`ifdef VC1   //VC0 only

`else

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`else

`endif

`ifdef EN_VC1

`else

`endif

`ifdef EN_VC2

`else

`endif

`ifdef EN_VC3

`else

`endif

`ifdef EN_VC4

`else

`endif

`ifdef EN_VC5

`else

`endif

`ifdef EN_VC6

`else

`endif

`ifdef EN_VC7

`else

`endif

localparam ribd6fd = 49,jceb7ea = 32'hfdfff02b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef VC1


`else


`endif


`ifndef VC1


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else   // 5 - 8


`endif


`endif


`endif


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1


`else


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif


`ifndef VC1


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1   //VC0 only


`else


`endif


`ifdef VC1   //VC0 only


`else


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`else


`endif


`ifdef EN_VC1


`else


`endif


`ifdef EN_VC2


`else


`endif


`ifdef EN_VC3


`else


`endif


`ifdef EN_VC4


`else


`endif


`ifdef EN_VC5


`else


`endif


`ifdef EN_VC6


`else


`endif


`ifdef EN_VC7


`else


`endif






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif



















`ifdef VC1



`else



`endif




`ifndef VC1



`ifdef VC2



`else 



`ifdef VC3 



`else



`ifdef VC4



`else   // 5 - 8



`endif



`endif



`endif



`endif












always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      dl_inactive  <= 1'b0;      dl_init      <= 1'b0;      dl_active    <= 1'b0;            ri2a814    <= mg8d39e;   end   else begin      dl_inactive  <= 1'b0;      dl_init      <= 1'b0;      dl_active    <= 1'b0;      case(wl33054)         mg8d39e : begin            dl_inactive  <= 1'b1;                        if(su4c930 && db81c22)               ri2a814  <= xw69cf0;         end         xw69cf0 : begin            dl_init    <= 1'b1;                                       if(!db81c22 || !su4c930)               ri2a814  <= mg8d39e;            else if(rgf151b[0] && ykeaefe)               ri2a814  <= yx4e782;         end         yx4e782 : begin                        dl_active <= 1'b1;            if(!db81c22 || !su4c930)               ri2a814  <= mg8d39e;         end         default : begin            ri2a814    <= mg8d39e;         end      endcase   end
end
















always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gb540a3   <= tu73c15;      pf7ec5d <= xyb234e;      me49bf6  <= 1'b0;      by4dfb1 <= 1'b0;      vvf62ee <= cb2c591;      lfa051d <= 1'b0;      dl_up       <= 0;   end   else begin      lfa051d <= 1'b0;      case(wy982a5)         tu73c15 : begin            lfa051d <= 1'b1;            pf7ec5d <= xyb234e;                        if(wl33054 != yx4e782)               dl_up      <= 0;            if(epbbf8a && (wl33054 != mg8d39e))               gb540a3  <= xl9e0aa;         end         xl9e0aa : begin            if(dl_active) begin               gb540a3   <= wy15580;               me49bf6  <= 1'b0;               by4dfb1 <= 1'b0;            end            else if(coa948) begin               if(rtddde4) begin                  gb540a3   <= osf0556;                  me49bf6  <= 1'b1;                  vvf62ee <= cb2c591;               end            end            else if(tueef26) begin               lfa051d <= 1'b1;               gb540a3   <= osf0556;               by4dfb1 <= 1'b1;               vvf62ee <= cb2c591;            end         end         osf0556 : begin            if(coa948) begin               if(ui77933) begin                  gb540a3   <= gq82ab0;                  vvf62ee <= os62c8d;               end            end            else if(cobc998) begin               gb540a3   <= gq82ab0;               vvf62ee <= os62c8d;            end         end         gq82ab0 : begin            if(coa948) begin               if(ui77933) begin                  gb540a3   <= wy15580;                  vvf62ee <= fp16469;               end            end            else if(cobc998) begin               gb540a3   <= wy15580;               vvf62ee <= fp16469;            end         end         wy15580 : begin            if((cobc998 && !coa948) || (ui77933 && coa948)) begin               me49bf6  <= 1'b0;               by4dfb1 <= 1'b0;               if(tj3d5df)                   pf7ec5d <= hd91a73;               if(dl_inactive)                  dl_up       <= 0;               else if(tj3d5df && !jc577f1) begin 


`ifdef VC1   //VC0 only
                     dl_up[0]      <= 1'b1;


`else
                     dl_up[uic1156] <= 1'b1;


`endif
               end               if(ykeaefe || dl_inactive || jc577f1)                    gb540a3   <= tu73c15;               else                  gb540a3   <= xl9e0aa;            end         end         default : begin            gb540a3   <= tu73c15;         end      endcase   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gd28ef  <= 1'b0;      xy1477c <= 0;   end   else begin      if(coa948 && ui77933 && (wy982a5 == wy15580))         gd28ef  <= 1'b0;      else if(wj54a40 == qia9926)         gd28ef  <= 1'b1;            if(kqc1529)         xy1477c  <= 0;      else if(xy30384 != RECOVERY)         xy1477c  <= wj54a40 + 1;   end
end










`ifdef VC1   //VC0 only
   assign su431b5 = kf29027;   assign ux18da9        = kf29027 | dl_inactive;

`else
   assign su431b5 = kf29027 | ~rgf151b[uic1156] ;   assign ux18da9        = kf29027 | dl_inactive | ~rgf151b[uic1156];

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      oua3be3   <= 1'b0;      ep1df19 <= 1'b0;      suef8cc    <= 1'b0;      ne7c661   <= 1'b0;      fne330a  <= 1'b0;      hd19856      <= 1'b0;   end   else begin                                                oua3be3  <= doe117[ria7045];      if( jc4263f )         ep1df19 <= 1'b0;               else if(ykeaefe && (wy982a5 == wy15580))         ep1df19 <= 1'b1;      if( bn131fb ) begin         suef8cc   <= 1'b0;         ne7c661  <= 1'b0;         fne330a <= 1'b0;         hd19856     <= 1'b0;      end      else if(pf7ec5d == xyb234e) begin         if((irbbbbc == ria7045) && (ip708bb || rv845dd)) begin            if(qv17777 == cb2c591)               suef8cc   <= 1'b1;            if(qv17777 == os62c8d)               ne7c661   <= 1'b1;            if(qv17777 == fp16469)               fne330a  <= 1'b1;         end      end      else begin          if(((irbbbbc == ria7045) && (rv845dd || jr22eee)) || fpa5204)            hd19856  <= 1'b1;      end   end
end







`ifdef VC1
   assign ria7045  = 3'b000;

`else
   always@(*) begin         ria7045  = 3'b000;         case(uic1156)            0 : ria7045  = 3'b000;


`ifdef EN_VC1
               1 : ria7045  = cz546d4;


`endif



`ifdef EN_VC2
               2 : ria7045  = coa36a5;


`endif



`ifdef EN_VC3
               3 : ria7045  = hq1b528;


`endif



`ifdef EN_VC4
               4 : ria7045  = rgda942;


`endif



`ifdef EN_VC5
               5 : ria7045  = wwd4a13;


`endif



`ifdef EN_VC6
               6 : ria7045  = fpa5098;


`endif



`ifdef EN_VC7
               7 : ria7045  = lf284c7;


`endif
         endcase   end

`endif










always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      shcc2b6  <= 1'b0;      vv615b4  <= 1'b0;


`ifndef VC1
         uic1156           <= 0;


`endif
      ay56d38        <= 1'b0;      mgb69c1         <= jraac01;      gqada7      <= 1'b0;   end   else begin      if(jcdfc54 == su5600f) begin         


`ifdef VC1   //VC0 only
            ay56d38   <= (ykeaefe) ? 1'b0 : 1'b1;


`else
            ay56d38   <= (ykeaefe || !rgf151b[uic1156]) ? 1'b0 : 1'b1;


`endif
         if(wy982a5 == tu73c15)            shcc2b6  <= 1'b0;         else if(by4813d && pf409ea && vk4f57)            shcc2b6  <= 1'b1;         if(wy982a5 == tu73c15)            vv615b4  <= 1'b0;         else if(tj27abb)            vv615b4  <= 1'b1;      end      else if(dl_inactive) begin         shcc2b6  <= 1'b0;         vv615b4  <= 1'b0;         ay56d38        <= 1'b0;      end


`ifdef VC1   //VC0 only
         gqada7  <= 1'b0;


`else
         if(jcdfc54 == su5600f) begin            if(rgf151b[uic1156] == 1'b0)                 gqada7  <= 1'b1;         end         else            gqada7  <= 1'b0;


`endif




`ifdef VC1   //VC0 only
         case(jcdfc54)            jraac01 : begin               if(!dl_inactive && rgf151b[0] && ~lqfe2a3[0])                 mgb69c1  <= su5600f;            end            su5600f : begin               if((ykeaefe && (wy982a5 == tu73c15)) || dl_inactive)                  mgb69c1 <= jraac01;            end            default : begin               mgb69c1         <= jraac01;            end         endcase


`else
                           case(jcdfc54)            jraac01 : begin               if(!dl_inactive && rgf151b[uic1156] && ~lqfe2a3[uic1156])                 mgb69c1  <= su5600f;                              if(dl_inactive)                  uic1156   <= 0;               else if((!rgf151b[uic1156] || lqfe2a3[uic1156]) && (uic1156 != 0))                                                uic1156   <= (uic1156 == (`NUM_VC -1)) ? 1 : (uic1156 + 1);            end            su5600f : begin                              if(kf29027 || (jc577f1 && (wy982a5 == tu73c15)))                  uic1156   <= (uic1156 == (`NUM_VC -1)) ? 1 : (uic1156 + 1);               if(((ykeaefe || jc577f1) && (wy982a5 == tu73c15)) || dl_inactive)                  mgb69c1 <= jraac01;            end            default : begin               mgb69c1         <= jraac01;            end         endcase


`endif
   end
end








always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      sh6fd8b      <= 3'b000;      sjb4e08              <= {(`NUM_VC){1'b0}};      vcneg_pend       <= {(`NUM_VC){1'b1}};   end   else begin      vcneg_pend     <= ~lqfe2a3;      


`ifdef VC1   //VC0 only
         sh6fd8b  <= 3'b000;


`else
         if(wy982a5 == tu73c15) begin            case(uic1156)                0 : sh6fd8b    <= 3'b000;


`ifdef EN_VC1
                  1 : sh6fd8b    <= 3'd1;


`endif



`ifdef EN_VC2
                  2 : sh6fd8b    <= 3'd2;


`endif



`ifdef EN_VC3
                  3 : sh6fd8b    <= 3'd3;


`endif



`ifdef EN_VC4
                  4 : sh6fd8b    <= 3'd4;


`endif



`ifdef EN_VC5
                  5 : sh6fd8b    <= 3'd5;


`endif



`ifdef EN_VC6
                  6 : sh6fd8b    <= 3'd6;


`endif



`ifdef EN_VC7
                  7 : sh6fd8b    <= 3'd7;


`endif
            endcase         end


`endif




`ifdef EN_VC0
                  if(dl_inactive)            sjb4e08[0]  <= 1'b0;                  else if(kf29027)            sjb4e08[0] <= 1'b1;


`endif



`ifdef EN_VC1
         if(dl_inactive || !rgf151b[1])            sjb4e08[1]  <= 1'b0;         else if(kf29027 && (uic1156 == 1))            sjb4e08[1] <= 1'b1;


`endif



`ifdef EN_VC2
         if(dl_inactive || !rgf151b[2])            sjb4e08[2]  <= 1'b0;         else if(kf29027 && (uic1156 == 2))            sjb4e08[2] <= 1'b1;


`endif



`ifdef EN_VC3
         if(dl_inactive || !rgf151b[3])            sjb4e08[3]  <= 1'b0;         else if(kf29027 && (uic1156 == 3))            sjb4e08[3] <= 1'b1;


`endif



`ifdef EN_VC4
         if(dl_inactive || !rgf151b[4])            sjb4e08[4]  <= 1'b0;         else if(kf29027 && (uic1156 == 4))            sjb4e08[4] <= 1'b1;


`endif



`ifdef EN_VC5
         if(dl_inactive || !rgf151b[5])            sjb4e08[5]  <= 1'b0;         else if(kf29027 && (uic1156 == 5))            sjb4e08[5] <= 1'b1;


`endif



`ifdef EN_VC6
         if(dl_inactive || !rgf151b[6])            sjb4e08[6]  <= 1'b0;         else if(kf29027 && (uic1156 == 6))            sjb4e08[6] <= 1'b1;


`endif



`ifdef EN_VC7
         if(dl_inactive || !rgf151b[7])            sjb4e08[7]  <= 1'b0;         else if(kf29027 && (uic1156 == 7))            sjb4e08[7] <= 1'b1;


`endif
   end
end




`ifdef EN_VC0
   assign dbb0b98    = ie24c0e[2:0];   assign me56173[0] = zx64981[0];

`else
   assign dbb0b98    = 3'b000;   assign me56173[0] = 1'b0;

`endif



`ifdef EN_VC1
   assign cb85cc7    = ie24c0e[5:3];   assign me56173[1] = zx64981[1];

`else
   assign cb85cc7    = 3'b000;   assign me56173[1] = 1'b0;

`endif



`ifdef EN_VC2
   assign uk2e63d    = ie24c0e[8:6];   assign me56173[2] = zx64981[2];

`else
   assign uk2e63d    = 3'b000;   assign me56173[2] = 1'b0;

`endif



`ifdef EN_VC3
   assign zk731e8    = ie24c0e[11:9];   assign me56173[3] = zx64981[3];

`else
   assign zk731e8    = 3'b000;   assign me56173[3] = 1'b0;

`endif



`ifdef EN_VC4
   assign uk98f43    = ie24c0e[14:12];   assign me56173[4] = zx64981[4];

`else
   assign uk98f43    = 3'b000;   assign me56173[4] = 1'b0;

`endif



`ifdef EN_VC5
   assign thc7a18    = ie24c0e[17:15];   assign me56173[5] = zx64981[5];

`else
   assign thc7a18    = 3'b000;   assign me56173[5] = 1'b0;

`endif



`ifdef EN_VC6
   assign zz3d0c6    = ie24c0e[20:18];   assign me56173[6] = zx64981[6];

`else
   assign zz3d0c6    = 3'b000;   assign me56173[6] = 1'b0;

`endif



`ifdef EN_VC7
   assign wje8636    = ie24c0e[23:21];   assign me56173[7] = zx64981[7];

`else
   assign wje8636    = 3'b000;   assign me56173[7] = 1'b0;

`endif





always @(wl33054 or wy982a5 or jcdfc54) begin   case(wl33054)      mg8d39e : shc6d4c = "INACTIVE";      xw69cf0     : shc6d4c = "  INIT  ";      yx4e782   : shc6d4c = " ACTIVE ";   endcase   case(wy982a5)      tu73c15  : qv36a64 = "IDLE";      xl9e0aa     : qv36a64 = " P  ";      osf0556    : qv36a64 = " NP ";      gq82ab0   : qv36a64 = " CPL";      wy15580 : qv36a64 = "CHCK";   endcase   case(jcdfc54)      jraac01 : zzb5324 = "IDLE";      su5600f : zzb5324 = "WAIT";   endcase
end

always@* begin qia9926<={zxe9031>>1,ux17adf[0]};su4c930<=ux17adf[1];zx64981<={nr40c7a>>1,ux17adf[2]};ie24c0e<={hd63d7>>1,ux17adf[3]};xy30384<={phy_ltssm_state>>1,ux17adf[4]};db81c22<=ux17adf[5];doe117<={trnc_st>>1,ux17adf[6]};ip708bb<=ux17adf[7];rv845dd<=ux17adf[8];jr22eee<=ux17adf[9];qv17777<={ie92eeb>>1,ux17adf[10]};irbbbbc<={vi6cfff>>1,ux17adf[11]};rtddde4<=ux17adf[12];tueef26<=ux17adf[13];ui77933<=ux17adf[14];cobc998<=ux17adf[15];xwe4cc1<=ux17adf[16];ux2660a<=ux17adf[17];wl33054<={ri2a814>>1,ux17adf[18]};wy982a5<={gb540a3>>1,ux17adf[19]};kqc1529<=ux17adf[20];coa948<=ux17adf[21];wj54a40<={xy1477c>>1,ux17adf[22]};fpa5204<=ux17adf[23];kf29027<=ux17adf[24];by4813d<=ux17adf[25];pf409ea<=ux17adf[26];vk4f57<=ux17adf[27];tj27abb<=ux17adf[28];tj3d5df<=ux17adf[29];ykeaefe<=ux17adf[30];jc577f1<=ux17adf[31];epbbf8a<=ux17adf[32];jcdfc54<=ux17adf[33];lqfe2a3<={sjb4e08>>1,ux17adf[34]};rgf151b<={me56173>>1,ux17adf[35]};gd8a8da<={dbb0b98>>1,ux17adf[36]};cz546d4<={cb85cc7>>1,ux17adf[37]};coa36a5<={uk2e63d>>1,ux17adf[38]};hq1b528<={zk731e8>>1,ux17adf[39]};rgda942<={uk98f43>>1,ux17adf[40]};wwd4a13<={thc7a18>>1,ux17adf[41]};fpa5098<={zz3d0c6>>1,ux17adf[42]};lf284c7<={wje8636>>1,ux17adf[43]};jc4263f<=ux17adf[44];bn131fb<=ux17adf[45];qi98fde<={shc6d4c>>1,ux17adf[46]};nrc7ef0<={qv36a64>>1,ux17adf[47]};ba3f786<={zzb5324>>1,ux17adf[48]};end
always@* begin db22f5b[2047]<=rg4818f;db22f5b[2046]<=nr40c7a[0];db22f5b[2044]<=hd63d7[0];db22f5b[2041]<=phy_ltssm_state[0];db22f5b[2035]<=phy_link_up;db22f5b[2022]<=trnc_st[0];db22f5b[1996]<=ym97759;db22f5b[1945]<=uxbbac8;db22f5b[1843]<=jpdd644;db22f5b[1752]<=shc6d4c[1];db22f5b[1746]<=ri2a814[0];db22f5b[1685]<=gd28ef;db22f5b[1645]<=icffe8a;db22f5b[1638]<=ie92eeb[0];db22f5b[1605]<=mgb69c1;db22f5b[1456]<=qv36a64[1];db22f5b[1445]<=gb540a3[0];db22f5b[1425]<=gqada7;db22f5b[1380]<=shcc2b6;db22f5b[1369]<=fne330a;db22f5b[1334]<=thc7a18[0];db22f5b[1322]<=xy1477c[0];db22f5b[1243]<=wje8636[0];db22f5b[1242]<=osff450;db22f5b[1229]<=vi6cfff[0];db22f5b[1195]<=ep1df19;db22f5b[1162]<=sjb4e08[0];db22f5b[1107]<=cb85cc7[0];db22f5b[1023]<=zxe9031[0];db22f5b[876]<=ux18da9;db22f5b[873]<=osd1409;db22f5b[864]<=zzb5324[1];db22f5b[842]<=lfa051d;db22f5b[822]<=ri3ffd1;db22f5b[802]<=ay56d38;db22f5b[712]<=vv615b4;db22f5b[690]<=hd19856;db22f5b[684]<=ne7c661;db22f5b[667]<=uk98f43[0];db22f5b[621]<=zz3d0c6[0];db22f5b[597]<=oua3be3;db22f5b[553]<=dbb0b98[0];db22f5b[438]<=su431b5;db22f5b[436]<=rxtp_nak;db22f5b[411]<=go67ffa;db22f5b[342]<=suef8cc;db22f5b[333]<=zk731e8[0];db22f5b[276]<=me56173[0];db22f5b[166]<=uk2e63d[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule









































































































`timescale 1 ns / 100 ps
module  pcie_x1_td_mux_x1 (
   input wire                sys_clk,           
   input wire                rst_n,             

   input wire                phy_link_up,       

   
   input wire [15:0]         txtp_tdata,        
   input wire                txtp_st,           
   input wire                txtp_end,          
   input wire                txtp_edb,          
   input wire                txtp_erly_tval,    

   
    input wire               txdp_req1,            
    input wire               txdp_req2,            
    input wire               txdp_val,             
    input wire               txdp_dllp_st,         
    input wire               txdp_dllp_end,        

    input wire [3:0]         txdp_skip_cnt,        
    input wire [15:0]        txdp_data,            

   
   output reg [15:0]         tdmux_data,           
   output reg                tdmux_val,            
   output reg                tdmux_st,             
   output reg                tdmux_end,            
   output reg                tdmux_edb,            
   output reg                tdmux_dllp_st,        
   output reg                tdmux_dllp_end,       
   output reg                tdmux_skip,           

   
   output reg                tdmux_rdy1,           
   output reg                tdmux_rdy2               );
parameter  CHECK = 1'b0;
parameter  WAIT  = 1'b1;
reg    [15:0]             vx3dab9, uved5cf, en6ae7d, go676a2, mg3b510, zkda881, icd440b, zma2059;
reg                       ie102ca;
reg                       bn81651,  jeb28e,  cm59473,  hoca399,  of51ccb,  tj8e65c,  fa732e7, ri9973b;
reg                       wwcb9db,    yk5ced8,    yxe76c0,    aa3b604,    godb021,    ldd8108,    byc0847,   ng423b;
reg                       aa211da,   wl8ed1,   dm4768d,   co3b46b,   xwda359,   osd1aca,   qi8d650,  fn6b280;
reg                       ic59406,   dpcie_x1_mca031,   jp5018b,   ir80c5f,   tj62fd,   aa317ef,   bn8bf78,  pf5fbc6;
reg                       ipfde37, suef1bd, ic78de8, uvc6f41;
reg                       hd37a0c;
reg  [3:0]                dobd066;
reg  [1:0]                cze8332;
reg  [7:0]                qt41995;
reg db81c22;
reg [15 : 0] xw6656f;
reg vx32b7a;
reg mt95bd6;
reg baadeb4;
reg en6f5a2;
reg cz7ad14;
reg uvd68a4;
reg sjb4525;
reg nga292c;
reg vk14963;
reg [3 : 0] wla4b1a;
reg [15 : 0] ls258d4;
reg [15 : 0] ea5374b;
reg [15 : 0] rv9ba58;
reg [15 : 0] zxdd2c7;
reg [15 : 0] med4551;
reg [15 : 0] fca2a89;
reg [15 : 0] ie1544b;
reg [15 : 0] bnaa259;
reg [15 : 0] en512ce;
reg tw89675;
reg cz4b3aa;
reg yk59d55;
reg wwceaa8;
reg al75540;
reg bnaaa04;
reg jp55027;
reg hqa813f;
reg fn409fb;
reg tw4fdf;
reg db27efb;
reg tw3f7df;
reg dmfbefb;
reg bydf7da;
reg vifbed2;
reg psdf692;
reg dmfb492;
reg fada493;
reg dzd249a;
reg gq924d6;
reg ec926b0;
reg pu93580;
reg an9ac02;
reg shd6015;
reg zzb00ac;
reg sj80566;
reg qv2b34;
reg ym159a4;
reg swacd20;
reg jc66900;
reg ou34803;
reg mta4019;
reg ng200cd;
reg uk66b;
reg hd3358;
reg lf19ac7;
reg zxcd63e;
reg zx6b1f6;
reg [3 : 0] ne58fb6;
reg [1 : 0] pfc7db2;
reg [7 : 0] qi3ed96;
reg [2047:0] db22f5b;
wire [61:0] ux17adf;

localparam ribd6fd = 62,jceb7ea = 32'hfdfff02b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;








always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ie102ca  <= 1'b0;      vx3dab9 <= 0; bn81651  <= 1'b0; wwcb9db    <= 1'b0; aa211da   <= 1'b0; ic59406   <= 1'b0;      uved5cf <= 0; jeb28e  <= 1'b0; yk5ced8    <= 1'b0; wl8ed1   <= 1'b0; dpcie_x1_mca031   <= 1'b0;      en6ae7d <= 0; cm59473  <= 1'b0; yxe76c0    <= 1'b0; dm4768d   <= 1'b0; jp5018b   <= 1'b0;      go676a2 <= 0; hoca399  <= 1'b0; aa3b604    <= 1'b0; co3b46b   <= 1'b0; ir80c5f   <= 1'b0;      mg3b510 <= 0; of51ccb  <= 1'b0; godb021    <= 1'b0; xwda359   <= 1'b0; tj62fd   <= 1'b0;      zkda881 <= 0; tj8e65c  <= 1'b0; ldd8108    <= 1'b0; osd1aca   <= 1'b0; aa317ef   <= 1'b0;      icd440b <= 0; fa732e7  <= 1'b0; byc0847    <= 1'b0; qi8d650   <= 1'b0; bn8bf78   <= 1'b0;      zma2059 <= 0; ri9973b  <= 1'b0; ng423b    <= 1'b0; fn6b280   <= 1'b0; pf5fbc6   <= 1'b0;   end   else begin      ie102ca  <= en6f5a2;      vx3dab9 <= xw6656f; bn81651 <= tw89675; wwcb9db <= vx32b7a; aa211da <= mt95bd6; ic59406 <= baadeb4;      uved5cf <= ea5374b;     jeb28e <= cz4b3aa;     yk5ced8 <= tw4fdf;     wl8ed1 <= fada493;     dpcie_x1_mca031 <= sj80566;      en6ae7d <= rv9ba58;     cm59473 <= yk59d55;     yxe76c0 <= db27efb;     dm4768d <= dzd249a;     jp5018b <= qv2b34;      go676a2 <= zxdd2c7;     hoca399 <= wwceaa8;     aa3b604 <= tw3f7df;     co3b46b <= gq924d6;     ir80c5f <= ym159a4;      mg3b510 <= med4551;     of51ccb <= al75540;     godb021 <= dmfbefb;     xwda359 <= ec926b0;     tj62fd <= swacd20;      zkda881 <= fca2a89;     tj8e65c <= bnaaa04;     ldd8108 <= bydf7da;     osd1aca <= pu93580;     aa317ef <= jc66900;      icd440b <= ie1544b;     fa732e7 <= jp55027;     byc0847 <= vifbed2;     qi8d650 <= an9ac02;     bn8bf78 <= ou34803;      zma2059 <= bnaa259;     ri9973b <= hqa813f;     ng423b <= psdf692;     fn6b280 <= shd6015;     pf5fbc6 <= mta4019;   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      tdmux_data     <= 0;      tdmux_val      <= 1'b0;      tdmux_st       <= 1'b0;      tdmux_end      <= 1'b0;      tdmux_edb      <= 1'b0;      tdmux_dllp_st  <= 1'b0;      tdmux_dllp_end <= 1'b0;      tdmux_skip     <= 1'b0;      qt41995    <= 8'h00;   end   else begin      tdmux_dllp_st     <= nga292c;      tdmux_dllp_end    <= vk14963;      qt41995       <= ls258d4[7:0];            tdmux_skip        <= zxcd63e;      tdmux_data        <= sjb4525 ? {qi3ed96, ls258d4[15:8]} : {en512ce[7:0], bnaa259[15:8]};      tdmux_val         <= hqa813f | sjb4525 | zxcd63e;      tdmux_st          <= psdf692;      tdmux_end         <= zzb00ac;      tdmux_edb         <= ng200cd;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      hd37a0c    <= CHECK;      tdmux_rdy1     <= 1'b0;      tdmux_rdy2     <= 1'b0;      cze8332       <= 2'b00;      dobd066 <= 4'b0000;      ipfde37     <= 1'b0;      suef1bd    <= 1'b0;      ic78de8    <= 1'b0;      uvc6f41    <= 1'b0;   end   else begin      suef1bd  <= uk66b;      ic78de8  <= hd3358;      uvc6f41  <= lf19ac7;                        case(zx6b1f6)         CHECK : begin                         ipfde37  <= 1'b0;            tdmux_rdy1  <= 1'b0;            tdmux_rdy2  <= 1'b0;            cze8332    <= 2'b00;            if(!tw89675 && !cz4b3aa && !yk59d55 && !wwceaa8 && !al75540) begin                if(wla4b1a != ne58fb6) begin                  hd37a0c    <= WAIT;                  ipfde37     <= 1'b1;                  dobd066 <= ne58fb6 + 4'd1;               end               else if(cz7ad14) begin                  hd37a0c    <= WAIT;                  tdmux_rdy1     <= 1'b1;                  tdmux_rdy2     <= 1'b0;               end               else if(uvd68a4) begin                  hd37a0c    <= WAIT;                  tdmux_rdy1     <= 1'b0;                  tdmux_rdy2     <= 1'b1;               end            end         end         WAIT : begin            tdmux_rdy1  <= 1'b0;            tdmux_rdy2  <= 1'b0;            cze8332    <= pfc7db2 + 1'b1;                                    if(uk66b)               hd37a0c  <= CHECK;            else if(pfc7db2 == 2'b10)               hd37a0c  <= CHECK;         end         default : begin            hd37a0c    <= CHECK;         end      endcase   end
end
always@* begin db81c22<=ux17adf[0];xw6656f<={txtp_tdata>>1,ux17adf[1]};vx32b7a<=ux17adf[2];mt95bd6<=ux17adf[3];baadeb4<=ux17adf[4];en6f5a2<=ux17adf[5];cz7ad14<=ux17adf[6];uvd68a4<=ux17adf[7];sjb4525<=ux17adf[8];nga292c<=ux17adf[9];vk14963<=ux17adf[10];wla4b1a<={txdp_skip_cnt>>1,ux17adf[11]};ls258d4<={txdp_data>>1,ux17adf[12]};ea5374b<={vx3dab9>>1,ux17adf[13]};rv9ba58<={uved5cf>>1,ux17adf[14]};zxdd2c7<={en6ae7d>>1,ux17adf[15]};med4551<={go676a2>>1,ux17adf[16]};fca2a89<={mg3b510>>1,ux17adf[17]};ie1544b<={zkda881>>1,ux17adf[18]};bnaa259<={icd440b>>1,ux17adf[19]};en512ce<={zma2059>>1,ux17adf[20]};tw89675<=ux17adf[21];cz4b3aa<=ux17adf[22];yk59d55<=ux17adf[23];wwceaa8<=ux17adf[24];al75540<=ux17adf[25];bnaaa04<=ux17adf[26];jp55027<=ux17adf[27];hqa813f<=ux17adf[28];fn409fb<=ux17adf[29];tw4fdf<=ux17adf[30];db27efb<=ux17adf[31];tw3f7df<=ux17adf[32];dmfbefb<=ux17adf[33];bydf7da<=ux17adf[34];vifbed2<=ux17adf[35];psdf692<=ux17adf[36];dmfb492<=ux17adf[37];fada493<=ux17adf[38];dzd249a<=ux17adf[39];gq924d6<=ux17adf[40];ec926b0<=ux17adf[41];pu93580<=ux17adf[42];an9ac02<=ux17adf[43];shd6015<=ux17adf[44];zzb00ac<=ux17adf[45];sj80566<=ux17adf[46];qv2b34<=ux17adf[47];ym159a4<=ux17adf[48];swacd20<=ux17adf[49];jc66900<=ux17adf[50];ou34803<=ux17adf[51];mta4019<=ux17adf[52];ng200cd<=ux17adf[53];uk66b<=ux17adf[54];hd3358<=ux17adf[55];lf19ac7<=ux17adf[56];zxcd63e<=ux17adf[57];zx6b1f6<=ux17adf[58];ne58fb6<={dobd066>>1,ux17adf[59]};pfc7db2<={cze8332>>1,ux17adf[60]};qi3ed96<={qt41995>>1,ux17adf[61]};end
always@* begin db22f5b[2047]<=txtp_tdata[0];db22f5b[2046]<=txtp_st;db22f5b[2044]<=txtp_end;db22f5b[2041]<=txtp_edb;db22f5b[2035]<=txtp_erly_tval;db22f5b[2022]<=txdp_req1;db22f5b[1996]<=txdp_req2;db22f5b[1945]<=txdp_val;db22f5b[1843]<=txdp_dllp_st;db22f5b[1752]<=ic59406;db22f5b[1746]<=zkda881[0];db22f5b[1728]<=ir80c5f;db22f5b[1685]<=ie102ca;db22f5b[1645]<=uved5cf[0];db22f5b[1638]<=txdp_dllp_end;db22f5b[1605]<=aa3b604;db22f5b[1536]<=bn8bf78;db22f5b[1456]<=dpcie_x1_mca031;db22f5b[1445]<=icd440b[0];db22f5b[1425]<=yk5ced8;db22f5b[1408]<=tj62fd;db22f5b[1380]<=ri9973b;db22f5b[1369]<=tj8e65c;db22f5b[1334]<=co3b46b;db22f5b[1322]<=bn81651;db22f5b[1243]<=osd1aca;db22f5b[1242]<=en6ae7d[0];db22f5b[1229]<=txdp_skip_cnt[0];db22f5b[1195]<=cm59473;db22f5b[1162]<=godb021;db22f5b[1107]<=ng423b;db22f5b[1024]<=pf5fbc6;db22f5b[1023]<=phy_link_up;db22f5b[876]<=fn6b280;db22f5b[873]<=mg3b510[0];db22f5b[864]<=jp5018b;db22f5b[842]<=zma2059[0];db22f5b[822]<=vx3dab9[0];db22f5b[802]<=yxe76c0;db22f5b[768]<=aa317ef;db22f5b[712]<=wwcb9db;db22f5b[690]<=fa732e7;db22f5b[684]<=of51ccb;db22f5b[667]<=dm4768d;db22f5b[621]<=xwda359;db22f5b[597]<=jeb28e;db22f5b[553]<=byc0847;db22f5b[438]<=qi8d650;db22f5b[436]<=go676a2[0];db22f5b[411]<=txdp_data[0];db22f5b[342]<=hoca399;db22f5b[333]<=wl8ed1;db22f5b[276]<=ldd8108;db22f5b[170]<=qt41995[0];db22f5b[166]<=aa211da;db22f5b[85]<=cze8332[0];db22f5b[42]<=dobd066[0];db22f5b[21]<=hd37a0c;db22f5b[10]<=uvc6f41;db22f5b[5]<=ic78de8;db22f5b[2]<=suef1bd;db22f5b[1]<=ipfde37;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule
















































`timescale 1 ns / 100 ps
module pcie_x1_ym9264d(
   input wire            sys_clk,      
   input wire            rst_n,        

   `ifdef X1
      input wire         gbc9a13,    
      output reg         txdp_val,     
      output reg         txdp_dllp_st, 
      output reg         txdp_dllp_end,
      output reg [15:0]  hd13a8b,         
   `endif
   `ifdef X4
      output wire [47:0] hd13a8b,         
   `endif

   
   input wire            osea2f9,   
   input wire [31:0]     en517c8,     
   input wire [31:0]     vx8be45   
);
reg     [31:0] an90dd3;
reg     [15:0] ldf9176;
reg     [15:0] pfc8bb6;
wire    [31:0] je86e9c;
wire    [15:0] twb21ba;
wire    [15:0] rg76df9;
reg     [31:0] ecb6fca;
reg     [1:0]  fcb7e50;

`ifdef X1
reg     [31:0] qt41995;

`endif

`ifdef X4
wire    [31:0] qt41995;

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg vica0be;
reg [31 : 0] xj505f3;
reg [31 : 0] ou82f9f;
reg [31 : 0] dz746a7;
reg [15 : 0] qvbe7c5;
reg [15 : 0] hbf3e2d;
reg [31 : 0] wya353e;
reg [15 : 0] xj6e8d4;
reg [15 : 0] lqc5ba5;
reg [31 : 0] rv2dd2b;
reg [1 : 0] dz6e95e;
reg [2047:0] db22f5b;
wire [10:0] ux17adf;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 11,jceb7ea = 32'hfdffd48b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif



`ifdef X1



`endif



`ifdef X4



`endif




`ifdef X1
         always @ (posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         txdp_val      <= 1'b0;         txdp_dllp_st  <= 1'b0;         txdp_dllp_end <= 1'b0;         fcb7e50       <= 2'b00;      end      else begin                  txdp_dllp_st  <= gbc9a13;         txdp_dllp_end <= (dz6e95e == 2'b10) ? 1'b1 : 1'b0;         if(gbc9a13)            txdp_val      <= 1'b1;         else if(dz6e95e == 2'b11)            txdp_val      <= 1'b0;         if(txdp_val)            fcb7e50    <= dz6e95e + 1'b1;      end   end

`endif





`ifdef X1
   always @ (posedge sys_clk or negedge rst_n) begin      if (!rst_n)         qt41995  <= 32'd0;      else if(gbc9a13)         qt41995  <= (vica0be) ? ou82f9f : xj505f3;   end

`endif



`ifdef X4
   assign qt41995 = (vica0be) ? ou82f9f : xj505f3;

`endif


assign  je86e9c   =  qt41995;
assign  twb21ba   =  16'h32B9;




always @ (posedge sys_clk or negedge rst_n) begin   if (!rst_n)      pfc8bb6 <= 16'h0000 ;   else      pfc8bb6 <= qvbe7c5;
end


`ifdef X1
   always @ (posedge sys_clk or negedge rst_n) begin      if (!rst_n)         hd13a8b    <= 16'h0000;      else if(gbc9a13)         hd13a8b  <= (vica0be) ? ou82f9f[31:16] : xj505f3[31:16];      else if(dz6e95e == 2'b00)         hd13a8b  <= qt41995[15:0];      else         hd13a8b  <= lqc5ba5;   end

`endif



`ifdef X4
   always @ (posedge sys_clk or negedge rst_n) begin      if (!rst_n)         ecb6fca<= 32'd0;      else         ecb6fca<= wya353e;   end   assign hd13a8b = {rv2dd2b, lqc5ba5};

`endif





assign   rg76df9 = {~hbf3e2d[ 8], ~hbf3e2d[ 9], ~hbf3e2d[10], ~hbf3e2d[11],                     ~hbf3e2d[12], ~hbf3e2d[13], ~hbf3e2d[14], ~hbf3e2d[15],                     ~hbf3e2d[ 0], ~hbf3e2d[ 1], ~hbf3e2d[ 2], ~hbf3e2d[ 3],                     ~hbf3e2d[ 4], ~hbf3e2d[ 5], ~hbf3e2d[ 6], ~hbf3e2d[ 7] };




always @(*) begin    an90dd3 = { wya353e[24], wya353e[25], wya353e[26], wya353e[27], wya353e[28], wya353e[29], wya353e[30], wya353e[31],           wya353e[16], wya353e[17], wya353e[18], wya353e[19], wya353e[20], wya353e[21], wya353e[22], wya353e[23],           wya353e[ 8], wya353e[ 9], wya353e[10], wya353e[11], wya353e[12], wya353e[13], wya353e[14], wya353e[15],           wya353e[ 0], wya353e[ 1], wya353e[ 2], wya353e[ 3], wya353e[ 4], wya353e[ 5], wya353e[ 6], wya353e[ 7]};    ldf9176[0] = dz746a7[31] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[26] ^ dz746a7[23] ^ dz746a7[21] ^ dz746a7[20] ^                dz746a7[15] ^ dz746a7[13] ^ dz746a7[12] ^ dz746a7[8] ^ dz746a7[4] ^ dz746a7[0] ^ xj6e8d4[0];
    ldf9176[1] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[24] ^ dz746a7[23] ^                dz746a7[22] ^ dz746a7[20] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^ dz746a7[12] ^ dz746a7[9] ^                dz746a7[8] ^ dz746a7[5] ^ dz746a7[4] ^ dz746a7[1] ^ dz746a7[0] ^ xj6e8d4[1];
    ldf9176[2] = dz746a7[31] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^                dz746a7[21] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[13] ^ dz746a7[10] ^ dz746a7[9] ^                dz746a7[6] ^ dz746a7[5] ^ dz746a7[2] ^ dz746a7[1] ^ xj6e8d4[2];
    ldf9176[3] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^                dz746a7[20] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^ dz746a7[13] ^                dz746a7[12] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[8] ^ dz746a7[7] ^ dz746a7[6] ^ dz746a7[4] ^                dz746a7[3] ^ dz746a7[2] ^ dz746a7[0] ^ xj6e8d4[3];
    ldf9176[4] = dz746a7[31] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^                dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^ dz746a7[13] ^                dz746a7[12] ^ dz746a7[11] ^ dz746a7[9] ^ dz746a7[8] ^ dz746a7[7] ^ dz746a7[5] ^ dz746a7[4] ^                dz746a7[3] ^ dz746a7[1] ^ xj6e8d4[4];    ldf9176[5] = dz746a7[27] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^ dz746a7[22] ^ dz746a7[20] ^                dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^ dz746a7[13] ^                dz746a7[12] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[8] ^ dz746a7[6] ^ dz746a7[5] ^ dz746a7[4] ^                dz746a7[2] ^ xj6e8d4[5];
    ldf9176[6] = dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[23] ^ dz746a7[21] ^                dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^ dz746a7[14] ^                dz746a7[13] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[7] ^ dz746a7[6] ^ dz746a7[5] ^                dz746a7[3]  ^ xj6e8d4[6];
    ldf9176[7] = dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[22] ^                dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^ dz746a7[15] ^                dz746a7[14] ^ dz746a7[12] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[8] ^ dz746a7[7] ^ dz746a7[6] ^                dz746a7[4]  ^ xj6e8d4[7];    ldf9176[8] = dz746a7[30] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[23] ^                dz746a7[22] ^ dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^ dz746a7[16] ^                dz746a7[15] ^ dz746a7[13] ^ dz746a7[12] ^ dz746a7[11] ^ dz746a7[9] ^ dz746a7[8] ^ dz746a7[7] ^                dz746a7[5]  ^ xj6e8d4[8];
    ldf9176[9] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[24] ^                dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^                dz746a7[16] ^ dz746a7[14] ^ dz746a7[13] ^ dz746a7[12] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[8] ^                dz746a7[6]  ^ xj6e8d4[9];
    ldf9176[10] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[25] ^ dz746a7[24] ^                 dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[17] ^                 dz746a7[15] ^ dz746a7[14] ^ dz746a7[13] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[7] ^ xj6e8d4[10];
    ldf9176[11] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[24] ^                 dz746a7[23] ^ dz746a7[22] ^ dz746a7[21] ^ dz746a7[20] ^ dz746a7[19] ^ dz746a7[18] ^ dz746a7[16] ^                 dz746a7[15] ^ dz746a7[14] ^ dz746a7[12] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[8] ^ xj6e8d4[11];
    ldf9176[12] = dz746a7[30] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[25] ^ dz746a7[24] ^ dz746a7[22] ^ dz746a7[19] ^                 dz746a7[17] ^ dz746a7[16] ^ dz746a7[11] ^ dz746a7[9] ^ dz746a7[8] ^ dz746a7[4] ^ dz746a7[0] ^ xj6e8d4[12];
    ldf9176[13] = dz746a7[31] ^ dz746a7[29] ^ dz746a7[28] ^ dz746a7[26] ^ dz746a7[25] ^ dz746a7[23] ^ dz746a7[20] ^                 dz746a7[18] ^ dz746a7[17] ^ dz746a7[12] ^ dz746a7[10] ^ dz746a7[9] ^ dz746a7[5] ^ dz746a7[1] ^ xj6e8d4[13];
    ldf9176[14] = dz746a7[30] ^ dz746a7[29] ^ dz746a7[27] ^ dz746a7[26] ^ dz746a7[24] ^ dz746a7[21] ^ dz746a7[19] ^                 dz746a7[18] ^ dz746a7[13] ^ dz746a7[11] ^ dz746a7[10] ^ dz746a7[6] ^ dz746a7[2] ^ xj6e8d4[14];
    ldf9176[15] = dz746a7[31] ^ dz746a7[30] ^ dz746a7[28] ^ dz746a7[27] ^ dz746a7[25] ^ dz746a7[22] ^ dz746a7[20] ^                 dz746a7[19] ^ dz746a7[14] ^ dz746a7[12] ^ dz746a7[11] ^ dz746a7[7] ^ dz746a7[3] ^ xj6e8d4[15];
end


always@* begin vica0be<=ux17adf[0];xj505f3<={en517c8>>1,ux17adf[1]};ou82f9f<={vx8be45>>1,ux17adf[2]};dz746a7<={an90dd3>>1,ux17adf[3]};qvbe7c5<={ldf9176>>1,ux17adf[4]};hbf3e2d<={pfc8bb6>>1,ux17adf[5]};wya353e<={je86e9c>>1,ux17adf[6]};xj6e8d4<={twb21ba>>1,ux17adf[7]};lqc5ba5<={rg76df9>>1,ux17adf[8]};rv2dd2b<={ecb6fca>>1,ux17adf[9]};dz6e95e<={fcb7e50>>1,ux17adf[10]};end
always@* begin db22f5b[2047]<=en517c8[0];db22f5b[2046]<=vx8be45[0];db22f5b[2044]<=an90dd3[0];db22f5b[2040]<=ldf9176[0];db22f5b[2032]<=pfc8bb6[0];db22f5b[2017]<=je86e9c[0];db22f5b[1987]<=twb21ba[0];db22f5b[1927]<=rg76df9[0];db22f5b[1806]<=ecb6fca[0];db22f5b[1565]<=fcb7e50[0];db22f5b[1023]<=osea2f9;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule












































`timescale 1 ns / 100 ps
module  pcie_x1_yma6fe #(
   parameter FADDR    = 3 )
   (
   input wire            sys_clk,           
   input wire            rst_n,             

   input wire [13:0]     lqfe23b,   
                                            
   `ifdef X4
      input wire         rgf11db,       
      input wire [1:0]   phy_skpq_nclks,    
   `endif
   input wire            phy_skpq_val,      
   input wire            uk3b68b,    

   
   input wire            kqdb459,        
   input wire [2:0]      psda2c8,          
   input wire [1:0]      cmd1642,          

   input wire            fp8b211,        
   input wire [2:0]      ww5908f,          
   input wire [1:0]      nrc8479,          
 
   input wire [`NUM_VC -1:0]     fa423ce,    
   input wire [`NUM_VC -1:0]     tw11e73,   
   input wire [`NUM_VC -1:0]     gd8f39a,  
   input wire [(`NUM_VC*3) -1:0] hd63d7,         
   `ifdef EN_VC0
      input wire [23:0]      uice6ab,               
      input wire [23:0]      ne73559,
      input wire [23:0]      ep9aacb,
   `endif
   `ifdef EN_VC1
      input wire [23:0]      xwd565d,               
      input wire [23:0]      qvab2eb,
      input wire [23:0]      su5975c,
   `endif
   `ifdef EN_VC2
      input wire [23:0]      eacbae1,               
      input wire [23:0]      lq5d708,
      input wire [23:0]      byeb843,
   `endif
   `ifdef EN_VC3
      input wire [23:0]      go5c21b,               
      input wire [23:0]      nee10d9,
      input wire [23:0]      wl86cb,
   `endif
   `ifdef EN_VC4
      input wire [23:0]      yk4365c,               
      input wire [23:0]      pu1b2e1,
      input wire [23:0]      end970a,
   `endif
   `ifdef EN_VC5
      input wire [23:0]      wwcb855,               
      input wire [23:0]      yk5c2a8,
      input wire [23:0]      bye1541,
   `endif
   `ifdef EN_VC6
      input wire [23:0]      coaa0b,               
      input wire [23:0]      xj55058,
      input wire [23:0]      pua82c7,
   `endif
   `ifdef EN_VC7
      input wire [23:0]      qt4163b,               
      input wire [23:0]      zmb1dc,
      input wire [23:0]      by58ee3,
   `endif

   
   input wire                xjc771a,                
   input wire                gq3b8d7,            
   input wire [2:0]          aldc6b8,          
   input wire [23:0]         tx_vsd_data,          

   
   input wire                rxtp_nak,             
   input wire                osd1409,         
   input wire                rxtp_ack,             
   input wire [11:0]         rxtp_seq,             

   
   input wire                me49bf6,           
   input wire                by4dfb1,          
   input wire [2:0]          sh6fd8b,          
   input wire                pf7ec5d,          
   input wire [1:0]          vvf62ee,          
   input wire [`NUM_VC -1:0] vcneg_pend,           

   
   input wire                tdmux_rdy1,           
   input wire                tdmux_rdy2,           

   input wire                rgfbdb3,        

   
   
   output reg [FADDR:0]      dll_pause_cnt,       

   
   output reg                txdp_req1,           
   output reg                txdp_req2,           
   `ifdef X1
      output reg [3:0]       txdp_skip_cnt,       
   `endif
   `ifdef X4
      output reg [2:0]       txdp_skip_cnt,       
      output reg             vx8e260,           
      output reg             xj71307,           
   `endif

   
   output reg [`NUM_VC -1:0] ba8983e,         
   output reg [`NUM_VC -1:0] qg4c1f3,        
   output reg [`NUM_VC -1:0] en60f98,       

   
   output reg                go67ffa,            
   output reg                ri3ffd1,           

   
   output wire               ldf3121,        

   
   `ifdef X1
      output reg             gbc9a13,           
   `endif
   output reg                osea2f9,          
   output reg [31:0]         en517c8,            
   output reg [31:0]         vx8be45,         

   output reg                ksf048             );

`ifdef VC1
parameter  kq78241=2;
parameter  eac1208=7;
parameter  jr9040       =  3'b011;
parameter  zk48206  =  3'b111;
parameter  yx41032     =  3'b000;
parameter  mt8194    =  3'b001;
parameter  zx40ca4   =  3'b010;

`else 

`ifdef VC2
parameter  kq78241=2;
parameter  eac1208=7;
parameter  jr9040       =  3'b011;
parameter  zk48206  =  3'b111;
parameter  yx41032     =  3'b000;
parameter  mt8194    =  3'b001;
parameter  zx40ca4   =  3'b010;
parameter  fnf69d2     =  3'b100;
parameter  ohb4e96    =  3'b101;
parameter  lsa74b5   =  3'b110;

`else 

`ifdef VC3 
parameter  kq78241=3;
parameter  eac1208=15;
parameter  jr9040       =  4'b0011;
parameter  zk48206  =  4'b1111;
parameter  yx41032     =  4'b0000;
parameter  mt8194    =  4'b0001;
parameter  zx40ca4   =  4'b0010;
parameter  fnf69d2     =  4'b0100;
parameter  ohb4e96    =  4'b0101;
parameter  lsa74b5   =  4'b0110;
parameter  sjb188f     =  4'b1000;
parameter  ri8c47d    =  4'b1001;
parameter  kq623ea   =  4'b1010;

`else

`ifdef VC4
parameter  kq78241=3;
parameter  eac1208=15;
parameter  jr9040       =  4'b0011;
parameter  zk48206  =  4'b1111;
parameter  yx41032     =  4'b0000;
parameter  mt8194    =  4'b0001;
parameter  zx40ca4   =  4'b0010;
parameter  fnf69d2     =  4'b0100;
parameter  ohb4e96    =  4'b0101;
parameter  lsa74b5   =  4'b0110;
parameter  sjb188f     =  4'b1000;
parameter  ri8c47d    =  4'b1001;
parameter  kq623ea   =  4'b1010;
parameter  thf9ba0     =  4'b1100;
parameter  fncdd07    =  4'b1101;
parameter  zx6e83f   =  4'b1110;

`else
parameter  kq78241=4;
parameter  eac1208=31;
parameter  jr9040       =  5'b00011;
parameter  zk48206  =  5'b11111;
parameter  yx41032     =  5'b00000;
parameter  mt8194    =  5'b00001;
parameter  zx40ca4   =  5'b00010;
parameter  fnf69d2     =  5'b00100;
parameter  ohb4e96    =  5'b00101;
parameter  lsa74b5   =  5'b00110;
parameter  sjb188f     =  5'b01000;
parameter  ri8c47d    =  5'b01001;
parameter  kq623ea   =  5'b01010;
parameter  thf9ba0     =  5'b01100;
parameter  fncdd07    =  5'b01101;
parameter  zx6e83f   =  5'b01110;
parameter  tu47899     =  5'b10000;
parameter  yz3c4ca    =  5'b10001;
parameter  ofe2654   =  5'b10010;
parameter  bn132a4     =  5'b10100;
parameter  ri99526    =  5'b10101;
parameter  xwca933   =  5'b10110;
parameter  ip5499a     =  5'b11000;
parameter  wla4cd4    =  5'b11001;
parameter  mt266a4   =  5'b11010;
parameter  kf33524     =  5'b11100;
parameter  gd9a925    =  5'b11101;
parameter  med492d   =  5'b11110;

`endif

`endif

`endif

`endif
parameter cb2c591   = 2'b00;
parameter os62c8d  = 2'b01;
parameter fp16469 = 2'b10;

`ifdef X4
parameter tj2d102   =  1'b0;
parameter ui68817    =  1'b1;
parameter al440b8   =  1'b0;
parameter ba205c4    =  1'b1;
parameter ep2e23  =  2'b00;
parameter ir1711c =  2'b01;
parameter vkb88e4 =  2'b10;
parameter suc4723 =  2'b11;
parameter qv23918  =  2'b00;
parameter vx1c8c5 =  2'b01;
parameter zke462e =  2'b10;
parameter oh23173 =  2'b11;

`endif
reg                       an18b9c;
reg    [`NUM_VC -1:0]     nec5ce4;
reg  [31:0]               ec2e723[0:`NUM_VC -1];
reg  [31:0]               by73918[0:`NUM_VC -1];
reg  [31:0]               hq9c8c2[0:`NUM_VC -1];
reg  [`NUM_VC -1:0]       rge4612;
reg  [`NUM_VC -1:0]       cb23093;
reg  [`NUM_VC -1:0]       ir1849c;
reg  [`NUM_VC -1:0]       fnc24e5;
reg  [`NUM_VC -1:0]       ux1272f;
reg  [`NUM_VC -1:0]       ng9397c;
reg  [`NUM_VC -1:0]       ng9cbe3;
reg  [`NUM_VC -1:0]       mee5f1a;
reg  [`NUM_VC -1:0]       je2f8d0;
reg  [`NUM_VC -1:0]       tu7c683;
reg  [`NUM_VC -1:0]       ble341a;
reg                       ym1a0d6;
reg                       xwd06b0;
reg  [kq78241:0]            uk1ac1b;
reg                       wjd60d9;
reg                       fpb06cc;
reg  [kq78241:0]            fc1b333;
reg  [kq78241:0]            encccd4;
reg  [1:0]                ps666a5 [0:`NUM_VC -1];
reg  [1:0]                ir3352a [0:`NUM_VC -1];
reg  [1:0]                qv9a955 [0:`NUM_VC -1];
reg                       osd4aad;
reg                       tja5568;
reg  [kq78241:0]            hb55a3b;
reg  [kq78241:0]            yk68ef3;
reg                       fa47798;
reg                       sw3bcc3;
reg  [31:0]               qgde618;
reg  [31:0]               nrf30c0;
reg                       co98607;
reg                       ipc3039;
reg                       sj181cd;
reg                       fac0e6d;
reg                       ux736b;
reg  [31:0]               kf39b5d;
reg                       ldcdaed;
reg                       su6d76f;
reg                       pf6bb79;
reg                       ps5dbcf;
reg                       enede7a;
reg  [kq78241:0]            lq79ea4;
reg  [kq78241:0]            qt7a91b [eac1208:0];
reg  [kq78241:0]            yz23705;
reg  [kq78241:0]            aldc163;
reg  [kq78241:0]            ou58e8;
reg  [kq78241:0]            ho63a0d;
reg                       an1d06b;
reg  [kq78241:0]            of41aed;
reg                       ohd76d;
reg  [kq78241:0]            ps5db67;
reg  [kq78241:0]            ay6d9d4 [eac1208:0];
reg  [kq78241:0]            ng3a810;
reg  [kq78241:0]            fpa0411;
reg  [kq78241:0]            gq1047d;
reg  [kq78241:0]            ri11f49;
reg                       qv8fa4a;
reg  [kq78241:0]            vve92a0;
reg  [13:0]               kq49507;
reg                       jp4a838;
reg                       al541c6;
reg                       pha0e35;
reg                       ir71ae;
reg  [FADDR:0]            enc6baf;
reg                       hq35d7c;
reg    [FADDR:0]          mr75f1d;
reg    [FADDR:0]          by7c76f;
reg    [FADDR:0]          wl1dbd7;
integer                   ipedebc, ip6f5e4, ip7af24, rtd7924, swbc927, vie4939;
reg  [kq78241:0]            gq24e50 [`NUM_VC -1:0];
reg  [kq78241:0]            ir39406 [`NUM_VC -1:0];
reg  [kq78241:0]            bl501a3 [`NUM_VC -1:0];
wire [kq78241:0]            bn68fd;
wire [kq78241:0]            ksa3f70;
wire [kq78241:0]            mrfdc09;

`ifdef X1
reg  [3:0]                zkee04d;
reg  [3:0]                of7026a;
reg  [3:0]                jr81354;
reg  [3:0]                xl9aa6;

`endif

`ifdef X4
reg                       lq4d537;
reg                       qt6a9ba;
reg                       yx54dd5;
reg                       swa6eac;
reg                       lf37561;
reg                       phbab0f;
reg                       tud587e;
reg                       ecac3f2;
reg  [1:0]                hb61f91;
reg                       ukfc8e;
reg  [1:0]                ld7e470;
reg                       shf2387;
reg                       tj91c3d;
reg  [2:0]                zkee04d;
reg  [2:0]                of7026a;
reg  [2:0]                jr81354;
reg  [2:0]                xl9aa6;
reg  [2:0]                vieef47;

`endif

`ifdef X4

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef EN_VC0
wire [2:0] dbb0b98 = 3'b000;

`endif

`ifdef EN_VC1
wire [2:0] cb85cc7 = hd63d7[5:3];

`endif

`ifdef EN_VC2
wire [2:0] uk2e63d = hd63d7[8:6];

`endif

`ifdef EN_VC3
wire [2:0] zk731e8 = hd63d7[11:9];

`endif

`ifdef EN_VC4
wire [2:0] uk98f43 = hd63d7[14:12];

`endif

`ifdef EN_VC5
wire [2:0] thc7a18 = hd63d7[17:15];

`endif

`ifdef EN_VC6
wire [2:0] zz3d0c6 = hd63d7[20:18];

`endif

`ifdef EN_VC7
wire [2:0] wje8636 = hd63d7[23:21];

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif
wire [1:0]  xl32fc5  = ps666a5[0];
wire [1:0]  phbf171  = ir3352a[0];
wire [1:0]  rgc5c7d  = qv9a955[0];
wire [31:0]  zx71f58     = ec2e723[0];
wire [31:0]  yk7d63c    = by73918[0];
wire [31:0]  vi58f02   = hq9c8c2[0];
reg [13 : 0] kf3c096;
reg eae04b4;
reg cb25a1;
reg wl12d0d;
reg [2 : 0] hq9686d;
reg [1 : 0] sjb436b;
reg oha1b5c;
reg [2 : 0] andae4;
reg [1 : 0] ic6d725;
reg [`NUM_VC - 1 : 0] nr6b929;
reg [`NUM_VC - 1 : 0] yk5c94f;
reg [`NUM_VC - 1 : 0] xwe4a78;
reg [(`NUM_VC * 3) - 1 : 0] ie24c0e;
reg sj29e13;
reg ld4f09c;
reg [2 : 0] su784e7;
reg [23 : 0] thc2738;
reg xwe4cc1;
reg ux2660a;
reg yxe71fa;
reg [11 : 0] db38fd4;
reg hbc7ea7;
reg fc3f53e;
reg [2 : 0] uifa9f3;
reg god4f98;
reg [1 : 0] fca7cc0;
reg [`NUM_VC - 1 : 0] ie3e603;
reg vvf3019;
reg ou980cf;
reg zkc0679;
reg vx33ca;
reg [`NUM_VC - 1 : 0] tj19e57;
reg [`NUM_VC - 1 : 0] jccf2be;
reg [`NUM_VC - 1 : 0] dm795f3;
reg [`NUM_VC - 1 : 0] bycaf9a;
reg [`NUM_VC - 1 : 0] ne57cd2;
reg [`NUM_VC - 1 : 0] ohbe693;
reg [`NUM_VC - 1 : 0] rtf349d;
reg [`NUM_VC - 1 : 0] kf9a4ef;
reg [`NUM_VC - 1 : 0] rtd277c;
reg [`NUM_VC - 1 : 0] pu93be6;
reg [`NUM_VC - 1 : 0] co9df33;
reg [`NUM_VC - 1 : 0] cmef998;
reg ps7ccc1;
reg zxe660b;
reg [kq78241 : 0] ec982f5;
reg wwc17a9;
reg vkbd48;
reg [kq78241 : 0] eaf5215;
reg [kq78241 : 0] fa48541;
reg tu42a0a;
reg wy15052;
reg [kq78241 : 0] en4148b;
reg [kq78241 : 0] fa522e1;
reg zz9170a;
reg hd8b857;
reg [31 : 0] ic5c2be;
reg [31 : 0] dme15f1;
reg swaf8b;
reg tu57c58;
reg kfbe2c3;
reg jcf161d;
reg vx8b0ea;
reg [31 : 0] vi58757;
reg enc3abb;
reg ir1d5dc;
reg cmeaee5;
reg ps57729;
reg anbb94a;
reg [kq78241 : 0] sue52a4;
reg [kq78241 : 0] dz4a90d;
reg [kq78241 : 0] qva4374;
reg [kq78241 : 0] gddd28;
reg [kq78241 : 0] fn74a2f;
reg tja517f;
reg [kq78241 : 0] th45ffe;
reg ba2fff7;
reg [kq78241 : 0] osffddc;
reg [kq78241 : 0] off7702;
reg [kq78241 : 0] wjdc0ac;
reg [kq78241 : 0] yz2b29;
reg [kq78241 : 0] ksaca60;
reg yx65300;
reg [kq78241 : 0] qg4c02c;
reg [13 : 0] en60160;
reg aab05;
reg ec5829;
reg mt2c149;
reg sh60a4d;
reg [FADDR : 0] ir29360;
reg kq49b05;
reg [FADDR : 0] tu6c14b;
reg [FADDR : 0] ks52dc;
reg [FADDR : 0] gb4b705;
reg [kq78241 : 0] ofdc16d;
reg [kq78241 : 0] aa5b68;
reg [kq78241 : 0] yk6da0e;
reg [1 : 0] ea6d070;
reg [1 : 0] ea68381;
reg [1 : 0] gb41c09;
reg [31 : 0] bae04d;
reg [31 : 0] sh7026b;
reg [31 : 0] ph8135c;
reg [2047:0] db22f5b;
wire [102:0] ux17adf;

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

localparam ribd6fd = 103,jceb7ea = 32'hfdffca4b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif 


`ifdef X4


`endif 


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif





`ifdef VC1
         


`else 



`ifdef VC2
                  


`else 



`ifdef VC3 
                           


`else



`ifdef VC4
                                    


`else
                                                            


`endif



`endif



`endif



`endif




`ifdef X4



`endif













`ifdef X1



`endif



`ifdef X4



`endif






`ifdef X4
   always @(posedge sys_clk or negedge rst_n) begin      if (rst_n == 1'b0) begin         lq4d537  <= 1'b0;         qt6a9ba  <= 1'b0;         yx54dd5  <= 1'b0;         swa6eac  <= 1'b0;      end      else begin         lq4d537  <= rgf11db;         qt6a9ba  <= lq4d537;         yx54dd5  <= qt6a9ba;         swa6eac  <= yx54dd5;      end   end

`endif




















always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      nrf30c0      <= 32'd0;      co98607   <= 1'b0;      ipc3039 <= 1'b0;      sj181cd     <= 1'b0;      fac0e6d      <= 1'b0;      ux736b        <= 1'b0;   end   else begin            if(xwe4cc1 || ux2660a || yxe71fa)         nrf30c0[11:0]  <= db38fd4;      nrf30c0[23:12] <= 12'h000;              if(xwe4cc1)         nrf30c0[31:24]  <= 8'b0001_0000;          else if(((ux2660a || zkc0679) && !vx8b0ea) || yxe71fa)         nrf30c0[31:24]  <= 8'b0000_0000;    
            fac0e6d  <= (xwe4cc1 || ux2660a || zkc0679) ? 1'b1 : 1'b0;            if(tja517f && (th45ffe == zk48206))         ux736b <= 1'b0;      else if(xwe4cc1)         ux736b <= 1'b1;
            if(tja517f && (th45ffe == zk48206))         sj181cd <= 1'b0;      else if(jcf161d)         sj181cd <= 1'b1;            co98607  <= jcf161d & !kfbe2c3;            ipc3039  <= swaf8b | vkbd48;   end
end


`ifdef VC1
   assign bn68fd  = {1'b0, sjb436b};           assign ksa3f70  = {1'b0, ic6d725};   assign mrfdc09 = {1'b0, fca7cc0};

`else 



`ifdef VC2
      assign bn68fd  = {hq9686d[0], sjb436b};      assign ksa3f70  = {andae4[0], ic6d725};      assign mrfdc09 = {uifa9f3[0], fca7cc0};


`else 



`ifdef VC3 
         assign bn68fd  = {hq9686d[1:0], sjb436b};         assign ksa3f70  = {andae4[1:0], ic6d725};         assign mrfdc09 = {uifa9f3[1:0], fca7cc0};


`else



`ifdef VC4
            assign bn68fd  = {hq9686d[1:0], sjb436b};              assign ksa3f70  = {andae4[1:0], ic6d725};              assign mrfdc09 = {uifa9f3[1:0], fca7cc0};  


`else
            assign bn68fd  = {hq9686d, sjb436b};                  assign ksa3f70  = {andae4, ic6d725};                  assign mrfdc09 = {uifa9f3, fca7cc0};  


`endif



`endif



`endif



`endif





always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      enede7a   <= 1'b0;      lq79ea4       <= 0;      for(ipedebc=0; ipedebc<=eac1208; ipedebc=ipedebc+1)         qt7a91b[ipedebc]     <= 0;      yz23705       <= 0;      aldc163     <= 0;      ou58e8    <= 0;   end   else begin                        yz23705 <= ofdc16d;            aldc163  <= dz4a90d;            if(swaf8b)         ou58e8 <= zk48206;      else         ou58e8 <= (vkbd48) ? fa48541 : qva4374;            enede7a  <= |jccf2be;                  if(anbb94a || tu57c58)         lq79ea4  <= sue52a4 + 1;      if(anbb94a || tu57c58)         qt7a91b[sue52a4]  <= gddd28;   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      for(ip6f5e4=0; ip6f5e4<`NUM_VC; ip6f5e4=ip6f5e4+1) begin                  ps666a5[ip6f5e4]       <= 2'b01;         ir3352a[ip6f5e4]      <= 2'b01;         qv9a955[ip6f5e4]     <= 2'b01;      end      wjd60d9         <= 1'b0;      fpb06cc       <= 1'b0;      fc1b333         <= 0;      encccd4       <= 0;      go67ffa           <= 1'b1;      jp4a838         <= 1'b1;   end   else begin
                  for(ip6f5e4=0; ip6f5e4<`NUM_VC; ip6f5e4=ip6f5e4+1) begin         if((uifa9f3 == ip6f5e4) && (hbc7ea7 || fc3f53e)) begin            if(god4f98) begin                  ps666a5[ip6f5e4]   <= 2'b11;               ir3352a[ip6f5e4]  <= 2'b11;               qv9a955[ip6f5e4] <= 2'b11;            end            else begin                 ps666a5[ip6f5e4]   <= 2'b01;               ir3352a[ip6f5e4]  <= 2'b01;               qv9a955[ip6f5e4] <= 2'b01;            end         end         else if(!tj19e57[ip6f5e4]) begin                          if(!nr6b929[ip6f5e4])               ps666a5[ip6f5e4]   <= 2'b10;                if(!yk5c94f[ip6f5e4])               ir3352a[ip6f5e4]  <= 2'b10;                if(!xwe4a78[ip6f5e4])               qv9a955[ip6f5e4] <= 2'b10;             end      end            wjd60d9   <= hbc7ea7;      if(hbc7ea7)            fc1b333   <= yk6da0e;            fpb06cc  <= wwc17a9;      encccd4  <= eaf5215;
                  if(hbc7ea7)         go67ffa  <= 1'b0;      else if(tja517f && (th45ffe == eaf5215))         go67ffa  <= 1'b1;
      jp4a838  <= go67ffa;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      osd4aad        <= 1'b0;      tja5568      <= 1'b0;      hb55a3b        <= 0;      yk68ef3      <= 0;      ri3ffd1          <= 1'b1;   end   else begin            osd4aad   <= fc3f53e;      if(fc3f53e)            hb55a3b   <= yk6da0e;            tja5568  <= tu42a0a;      yk68ef3  <= en4148b;
                  if(fc3f53e)         ri3ffd1  <= 1'b0;      else if(yx65300 && (qg4c02c == en4148b))         ri3ffd1  <= 1'b1;
   end
end













always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      pha0e35          <= 1'b0;      ir71ae          <= 1'b0;      zkee04d          <= 0;


`ifdef X4
         vieef47   <= 0;


`endif
      of7026a     <= 0;      jr81354     <= 0;      xl9aa6     <= 0;   end   else begin      pha0e35 <= 1'b0;      ir71ae <= 1'b0;      if(eae04b4 || mt2c149) begin         if(anbb94a || tu57c58 || cb25a1)             pha0e35     <= 1'b1;         else begin            ir71ae     <= 1'b1;


`ifdef X1
       zkee04d     <= zkee04d + 3'b001;   


`endif



`ifdef X4
               vieef47 <= phy_skpq_nclks;                             zkee04d     <= zkee04d + phy_skpq_nclks;    


`endif
         end      end      of7026a <= zkee04d;      jr81354 <= of7026a;      xl9aa6 <= jr81354;   end
end












always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      al541c6            <= 1'b0;      dll_pause_cnt       <= 0;      mr75f1d  <= 0;      by7c76f       <= 0;      txdp_skip_cnt       <= 0;      enc6baf             <= 0;      hq35d7c       <= 1'b0;   end   else begin      al541c6       <= anbb94a | tu57c58;      dll_pause_cnt  <= ir29360;      hq35d7c  <= cb25a1;      if(cb25a1)          txdp_skip_cnt <= xl9aa6;        mr75f1d <= ~dll_pause_cnt + 1;              if((anbb94a || tu57c58) && cb25a1)          by7c76f  <= tu6c14b + 1;              else         by7c76f  <= tu6c14b;        enc6baf <= ir29360 + gb4b705;   end
end




always @(*) begin      case({ec5829, sh60a4d, kq49b05})


`ifdef X1
         3'b100,         3'b010   : wl1dbd7 = 1;   


`endif 



`ifdef X4
         3'b100   : wl1dbd7 = 1;         3'b010   : wl1dbd7 = vieef47;


`endif 
         3'b001,         3'b101   : wl1dbd7 = ks52dc;         default  : wl1dbd7 = 0;      endcase
end


`ifdef X1







always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gbc9a13     <= 1'b0;      uk1ac1b       <= 0;      txdp_req1     <= 1'b0;      an1d06b     <= 1'b0;      ho63a0d     <= 0;      of41aed   <= 0;      txdp_req2     <= 1'b0;      qv8fa4a     <= 1'b0;      ri11f49     <= 0;      vve92a0   <= 0;   end   else begin            gbc9a13   <= tja517f || yx65300;         if(ou980cf)         uk1ac1b    <= ay6d9d4[ksaca60];      else         uk1ac1b    <= qt7a91b[fn74a2f];            txdp_req1   <= (sue52a4 != fn74a2f) ? 1'b1 : 1'b0;      of41aed <= qt7a91b[fn74a2f];      an1d06b     <= 1'b0;      if(vvf3019) begin         an1d06b     <= 1'b1;         ho63a0d     <= fn74a2f + 1;      end            txdp_req2   <= (osffddc != ksaca60) ? 1'b1 : 1'b0;      vve92a0 <= ay6d9d4[ksaca60];      qv8fa4a     <= 1'b0;      if(ou980cf) begin         qv8fa4a     <= 1'b1;         ri11f49     <= ksaca60 + 1;      end   end
end

`endif



`ifdef X4














always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      hb61f91 <= ep2e23;      an1d06b     <= 1'b0;      ecac3f2   <= 1'b0;      vx8e260     <= 1'b0;      ho63a0d     <= 0;      of41aed   <= 0;      uk1ac1b       <= 0;   end   else begin      ecac3f2 <= tja517f;      vx8e260   <= ecac3f2;      of41aed <= qt7a91b[fn74a2f];      if(ou980cf)         uk1ac1b    <= ay6d9d4[ksaca60];      else         uk1ac1b    <= qt7a91b[fn74a2f];      an1d06b     <= 1'b0;      case(hb61f91)         ep2e23 : begin            if(sue52a4 != fn74a2f)               hb61f91 <= ir1711c;         end         ir1711c : begin            if(swa6eac && vvf3019) begin               hb61f91 <= vkb88e4;               an1d06b     <= 1'b1;               ho63a0d     <= fn74a2f + 1;               end         end         vkb88e4 : begin            if(lq4d537 && (sue52a4 == fn74a2f)) begin               hb61f91 <= suc4723;            end            else if(swa6eac && vvf3019) begin                  an1d06b     <= 1'b1;               ho63a0d     <= fn74a2f + 1;            end         end         suc4723 : begin            hb61f91 <= ep2e23;         end      endcase   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      lf37561     <= tj2d102;      txdp_req1    <= 1'b0;      tud587e       <= 1'b0;      phbab0f       <= 1'b0;   end   else begin      tud587e  <= txdp_req1;      if(tud587e && txdp_req1) begin         phbab0f  <= vvf3019;      end      else begin         phbab0f  <= 1'b0;      end      case(lf37561)         tj2d102 : begin            if(sue52a4 != fn74a2f) begin               txdp_req1 <= 1'b1;            end            lf37561  <= (phbab0f && swa6eac) ? ui68817 : tj2d102;         end         ui68817 : begin            txdp_req1    <= tja517f;            lf37561     <= (ecac3f2) ? ui68817 : tj2d102;         end      endcase   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ukfc8e     <= al440b8;      txdp_req2    <= 1'b0;      shf2387       <= 1'b0;   end   else begin      if(txdp_req2)         shf2387  <= ou980cf;      else         shf2387  <= 1'b0;      case(ukfc8e)         al440b8 : begin            if(osffddc != ksaca60)               txdp_req2 <= 1'b1;            ukfc8e  <= (shf2387 && txdp_req2) ? ba205c4 : al440b8;         end         ba205c4 : begin            if((osffddc == ksaca60) || !ou980cf)               txdp_req2    <= 1'b0;            ukfc8e     <= (txdp_req2) ? ba205c4 : al440b8;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ld7e470 <= qv23918;      qv8fa4a     <= 1'b0;      tj91c3d   <= 1'b0;      xj71307     <= 1'b0;      ri11f49     <= 0;      vve92a0   <= 0;   end   else begin      tj91c3d <= yx65300;      xj71307   <= tj91c3d;      vve92a0 <= ay6d9d4[ksaca60];      qv8fa4a     <= 1'b0;      case(ld7e470)         qv23918 : begin            if(osffddc != ksaca60)               ld7e470 <= vx1c8c5;         end         vx1c8c5 : begin            if(swa6eac && ou980cf) begin               ld7e470 <= zke462e;               qv8fa4a     <= 1'b1;               ri11f49     <= ksaca60 + 1;               end         end         zke462e : begin            if(lq4d537 && (osffddc == ksaca60)) begin               ld7e470 <= oh23173;            end            else if(swa6eac && ou980cf) begin                  qv8fa4a     <= 1'b1;               ri11f49     <= ksaca60 + 1;            end         end         oh23173 : begin            ld7e470 <= qv23918;         end      endcase   end
end

`endif






always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ps5dbcf          <= 1'b0;      pf6bb79         <= 1'b0;      ldcdaed       <= 1'b0;      su6d76f       <= 1'b0;      ksf048      <= 1'b0;      kq49507 <= 14'd0;   end   else begin            ps5dbcf  <= (yxe71fa && !kfbe2c3) ? 1'b1 : 1'b0;            if((yx65300 && (qg4c02c == zk48206)) || (tja517f && (th45ffe == zk48206)))         pf6bb79 <= 1'b0;      else if(ps57729)         pf6bb79 <= 1'b1;            ldcdaed  <= ps57729 & !cmeaee5;            su6d76f    <= enc3abb | hd8b857 | wy15052;                  if(cmeaee5)         kq49507 <= en60160 + 1;      else         kq49507 <= 14'd0;
      if(en60160 == kf3c096)         ksf048  <= 1'b1;      else         ksf048  <= 1'b0;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ohd76d    <= 1'b0;      ps5db67     <= 0;      for(ip7af24=0; ip7af24<=eac1208; ip7af24=ip7af24+1)         ay6d9d4[ip7af24]     <= 0;      ng3a810       <= 0;      fpa0411     <= 0;      gq1047d    <= 0;   end   else begin                        ng3a810 <= aa5b68;            fpa0411  <= off7702;            if(hd8b857)         gq1047d  <= jr9040;      else if(wy15052)         gq1047d  <= fa522e1;      else         gq1047d <= (enc3abb) ? zk48206 : wjdc0ac;                ohd76d  <= |dm795f3;                  if(ba2fff7 || ir1d5dc)         ps5db67  <= osffddc + 1;      if(ba2fff7 || ir1d5dc)         ay6d9d4[osffddc]  <= yz2b29;   end
end










always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      fa47798      <= 1'b0;      sw3bcc3    <= 1'b0;      qgde618     <= 32'd0;      vx8be45 <= 32'd0;      osea2f9  <= 1'b0;      an18b9c  <= 1'b0;   end   else begin            fa47798 <= sj29e13 || ld4f09c;      if(sj29e13)          qgde618   <= {5'b00100, su784e7, 24'd0};      else if(ld4f09c)           qgde618   <= {8'b00110000, thc2738};            sw3bcc3  <= zz9170a;      if((qg4c02c == jr9040) && ou980cf)         vx8be45 <= ic5c2be;            an18b9c  <= ((qg4c02c == jr9040) && ou980cf)  ? 1'b1 : 1'b0;


`ifdef X1
         osea2f9 <= vx33ca;


`endif



`ifdef X4
         osea2f9 <= ((qg4c02c == jr9040) && yx65300)  ? 1'b1 : 1'b0;  


`endif
   end
end
assign ldf3121 = osea2f9;












`ifdef EN_VC0
   always @(ps666a5[0] or ir3352a[0] or qv9a955[0] or      dbb0b98 or uice6ab or ne73559 or ep9aacb) begin      ec2e723[0]   = {ps666a5[0], 2'b00, 1'b0, dbb0b98, uice6ab};      by73918[0]  = {ir3352a[0], 2'b01, 1'b0, dbb0b98, ne73559};      hq9c8c2[0] = {qv9a955[0], 2'b10, 1'b0, dbb0b98, ep9aacb};   end

`endif



`ifdef EN_VC1
   always @(ps666a5[1] or ir3352a[1] or qv9a955[1] or      cb85cc7 or xwd565d or qvab2eb or su5975c) begin      ec2e723[1]   = {ps666a5[1], 2'b00, 1'b0, cb85cc7, xwd565d};      by73918[1]  = {ir3352a[1], 2'b01, 1'b0, cb85cc7, qvab2eb};      hq9c8c2[1] = {qv9a955[1], 2'b10, 1'b0, cb85cc7, su5975c};   end

`endif



`ifdef EN_VC2
   always @(ps666a5[2] or ir3352a[2] or qv9a955[2] or      uk2e63d or eacbae1 or lq5d708 or byeb843) begin      ec2e723[2]   = {ps666a5[2], 2'b00, 1'b0, uk2e63d, eacbae1};      by73918[2]  = {ir3352a[2], 2'b01, 1'b0, uk2e63d, lq5d708};      hq9c8c2[2] = {qv9a955[2], 2'b10, 1'b0, uk2e63d, byeb843};   end

`endif



`ifdef EN_VC3
   always @(ps666a5[3] or ir3352a[3] or qv9a955[3] or      zk731e8 or go5c21b or nee10d9 or wl86cb) begin      ec2e723[3]   = {ps666a5[3], 2'b00, 1'b0, zk731e8, go5c21b};      by73918[3]  = {ir3352a[3], 2'b01, 1'b0, zk731e8, nee10d9};      hq9c8c2[3] = {qv9a955[3], 2'b10, 1'b0, zk731e8, wl86cb};   end

`endif



`ifdef EN_VC4
   always @(ps666a5[4] or ir3352a[4] or qv9a955[4] or      uk98f43 or yk4365c or pu1b2e1 or end970a) begin      ec2e723[4]   = {ps666a5[4], 2'b00, 1'b0, uk98f43, yk4365c};      by73918[4]  = {ir3352a[4], 2'b01, 1'b0, uk98f43, pu1b2e1};      hq9c8c2[4] = {qv9a955[4], 2'b10, 1'b0, uk98f43, end970a};   end

`endif



`ifdef EN_VC5
   always @(ps666a5[5] or ir3352a[5] or qv9a955[5] or      thc7a18 or wwcb855 or yk5c2a8 or bye1541) begin      ec2e723[5]   = {ps666a5[5], 2'b00, 1'b0, thc7a18, wwcb855};      by73918[5]  = {ir3352a[5], 2'b01, 1'b0, thc7a18, yk5c2a8};      hq9c8c2[5] = {qv9a955[5], 2'b10, 1'b0, thc7a18, bye1541};   end

`endif



`ifdef EN_VC6
   always @(ps666a5[6] or ir3352a[6] or qv9a955[6] or      zz3d0c6 or coaa0b or xj55058 or pua82c7) begin      ec2e723[6]   = {ps666a5[6], 2'b00, 1'b0, zz3d0c6, coaa0b};      by73918[6]  = {ir3352a[6], 2'b01, 1'b0, zz3d0c6, xj55058};      hq9c8c2[6] = {qv9a955[6], 2'b10, 1'b0, zz3d0c6, pua82c7};   end

`endif



`ifdef EN_VC7
   always @(ps666a5[7] or ir3352a[7] or qv9a955[7] or      wje8636 or qt4163b or zmb1dc or by58ee3) begin      ec2e723[7]   = {ps666a5[7], 2'b00, 1'b0, wje8636, qt4163b};      by73918[7]  = {ir3352a[7], 2'b01, 1'b0, wje8636, zmb1dc};      hq9c8c2[7] = {qv9a955[7], 2'b10, 1'b0, wje8636, by58ee3};   end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      en517c8   <= 32'd0;   end   else begin      case(ec982f5[kq78241:0])


`ifdef EN_VC0
            yx41032     : en517c8  <= ec2e723[0];            mt8194    : en517c8  <= by73918[0];            zx40ca4   : en517c8  <= hq9c8c2[0];


`endif



`ifdef EN_VC1
            fnf69d2     : en517c8  <= ec2e723[1];            ohb4e96    : en517c8  <= by73918[1];            lsa74b5   : en517c8  <= hq9c8c2[1];


`endif



`ifdef EN_VC2
            sjb188f     : en517c8  <= ec2e723[2];            ri8c47d    : en517c8  <= by73918[2];            kq623ea   : en517c8  <= hq9c8c2[2];


`endif



`ifdef EN_VC3
            thf9ba0     : en517c8  <= ec2e723[3];            fncdd07    : en517c8  <= by73918[3];            zx6e83f   : en517c8  <= hq9c8c2[3];


`endif



`ifdef EN_VC4
            tu47899     : en517c8  <= ec2e723[4];            yz3c4ca    : en517c8  <= by73918[4];            ofe2654   : en517c8  <= hq9c8c2[4];


`endif



`ifdef EN_VC5
            bn132a4     : en517c8  <= ec2e723[5];            ri99526    : en517c8  <= by73918[5];            xwca933   : en517c8  <= hq9c8c2[5];


`endif



`ifdef EN_VC6
            ip5499a     : en517c8  <= ec2e723[6];            wla4cd4    : en517c8  <= by73918[6];            mt266a4   : en517c8  <= hq9c8c2[6];


`endif



`ifdef EN_VC7
            kf33524     : en517c8  <= ec2e723[7];            gd9a925    : en517c8  <= by73918[7];            med492d   : en517c8  <= hq9c8c2[7];


`endif
         default  : en517c8  <= dme15f1;       endcase   end
end




`ifdef EN_VC0

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gq24e50[0]   <= yx41032;      ir39406[0]  <= mt8194;      bl501a3[0] <= zx40ca4;   end   else begin      gq24e50[0]   <= yx41032;      ir39406[0]  <= mt8194;      bl501a3[0] <= zx40ca4;   end
end

`endif



`ifdef EN_VC1

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gq24e50[1]   <= fnf69d2;      ir39406[1]  <= ohb4e96;      bl501a3[1] <= lsa74b5;   end   else begin      gq24e50[1]   <= fnf69d2;      ir39406[1]  <= ohb4e96;      bl501a3[1] <= lsa74b5;   end
end

`endif



`ifdef EN_VC2

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gq24e50[2]   <= sjb188f;      ir39406[2]  <= ri8c47d;      bl501a3[2] <= kq623ea;   end   else begin      gq24e50[2]   <= sjb188f;      ir39406[2]  <= ri8c47d;      bl501a3[2] <= kq623ea;   end
end

`endif



`ifdef EN_VC3

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gq24e50[3]   <= thf9ba0;      ir39406[3]  <= fncdd07;      bl501a3[3] <= zx6e83f;   end   else begin      gq24e50[3]   <= thf9ba0;      ir39406[3]  <= fncdd07;      bl501a3[3] <= zx6e83f;   end
end

`endif



`ifdef EN_VC4

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gq24e50[4]   <= tu47899;      ir39406[4]  <= yz3c4ca;      bl501a3[4] <= ofe2654;   end   else begin      gq24e50[4]   <= tu47899;      ir39406[4]  <= yz3c4ca;      bl501a3[4] <= ofe2654;   end
end

`endif



`ifdef EN_VC5

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gq24e50[5]   <= bn132a4;      ir39406[5]  <= ri99526;      bl501a3[5] <= xwca933;   end   else begin      gq24e50[5]   <= bn132a4;      ir39406[5]  <= ri99526;      bl501a3[5] <= xwca933;   end
end

`endif



`ifdef EN_VC6

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gq24e50[6]   <= ip5499a;      ir39406[6]  <= wla4cd4;      bl501a3[6] <= mt266a4;   end   else begin      gq24e50[6]   <= ip5499a;      ir39406[6]  <= wla4cd4;      bl501a3[6] <= mt266a4;   end
end

`endif



`ifdef EN_VC7

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      gq24e50[7]   <= kf33524;      ir39406[7]  <= gd9a925;      bl501a3[7] <= med492d;   end   else begin      gq24e50[7]   <= kf33524;      ir39406[7]  <= gd9a925;      bl501a3[7] <= med492d;   end
end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      for(rtd7924=0; rtd7924<`NUM_VC; rtd7924=rtd7924+1) begin         ir1849c[rtd7924]   <= 1'b0;         fnc24e5[rtd7924]  <= 1'b0;         ux1272f[rtd7924] <= 1'b0;         ng9397c[rtd7924]  <= 1'b0;         ng9cbe3[rtd7924] <= 1'b0;         mee5f1a[rtd7924]<= 1'b0;         je2f8d0[rtd7924]  <= 1'b0;         tu7c683[rtd7924] <= 1'b0;         ble341a[rtd7924]<= 1'b0;      end      ym1a0d6     <= 1'b0;      xwd06b0     <= 1'b0;      rge4612   <= 0;      cb23093   <= 0;   end   else begin      ym1a0d6  <= wl12d0d;      xwd06b0  <= oha1b5c & ~wl12d0d;      for(rtd7924=0; rtd7924<`NUM_VC; rtd7924=rtd7924+1) begin                  ir1849c[rtd7924]   <= 1'b0;         fnc24e5[rtd7924]  <= 1'b0;         ux1272f[rtd7924] <= 1'b0;         if((wl12d0d && hq9686d == rtd7924) || (oha1b5c && andae4 == rtd7924)) begin            case(sjb436b)               cb2c591   : ir1849c[rtd7924]   <= 1'b1;               os62c8d  : fnc24e5[rtd7924]  <= 1'b1;               fp16469 : ux1272f[rtd7924] <= 1'b1;            endcase         end                                    if(tja517f && (th45ffe == gq24e50[rtd7924]))            ng9397c[rtd7924] <= 1'b0;         else if(bycaf9a[rtd7924] && ps7ccc1)            ng9397c[rtd7924] <= 1'b1;         if(tja517f && (th45ffe == ir39406[rtd7924]))            ng9cbe3[rtd7924] <= 1'b0;         else if(ne57cd2[rtd7924] && ps7ccc1)            ng9cbe3[rtd7924] <= 1'b1;         if(tja517f && (th45ffe == bl501a3[rtd7924]))            mee5f1a[rtd7924] <= 1'b0;         else if(ohbe693[rtd7924] && ps7ccc1)            mee5f1a[rtd7924] <= 1'b1;                  rge4612[rtd7924]    <= ps7ccc1 & ((bycaf9a[rtd7924] & !rtf349d[rtd7924]) |                          (ne57cd2[rtd7924] & !kf9a4ef[rtd7924]) | (ohbe693[rtd7924] & !rtd277c[rtd7924]));                           if(yx65300 && (qg4c02c == gq24e50[rtd7924]))            je2f8d0[rtd7924] <= 1'b0;                  else if(bycaf9a[rtd7924] && zxe660b && !rtf349d[rtd7924])            je2f8d0[rtd7924] <= 1'b1;         if(yx65300 && (qg4c02c == ir39406[rtd7924]))            tu7c683[rtd7924] <= 1'b0;         else if(ne57cd2[rtd7924] && zxe660b && !kf9a4ef[rtd7924])            tu7c683[rtd7924] <= 1'b1;         if(yx65300 && (qg4c02c == bl501a3[rtd7924]))            ble341a[rtd7924] <= 1'b0;         else if(ohbe693[rtd7924] && zxe660b && !rtd277c[rtd7924])            ble341a[rtd7924] <= 1'b1;                  cb23093[rtd7924]    <= zxe660b & ((bycaf9a[rtd7924] & !rtf349d[rtd7924] & !pu93be6[rtd7924]) |                          (ne57cd2[rtd7924] & !kf9a4ef[rtd7924] & !co9df33[rtd7924]) |                          (ohbe693[rtd7924] & !rtd277c[rtd7924] & !cmef998[rtd7924]));      end    end
end




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ba8983e   <= 0;      qg4c1f3  <= 0;      en60f98 <= 0;   end   else begin      for(swbc927=0; swbc927<`NUM_VC; swbc927=swbc927+1) begin         ba8983e[swbc927]   <= 1'b0;         qg4c1f3[swbc927]  <= 1'b0;         en60f98[swbc927] <= 1'b0;         if((tja517f && (th45ffe == gq24e50[swbc927])) ||            (yx65300 && (qg4c02c == gq24e50[swbc927])))            ba8983e[swbc927] <= 1'b1;         if((tja517f && (th45ffe == ir39406[swbc927])) ||            (yx65300 && (qg4c02c == ir39406[swbc927])))            qg4c1f3[swbc927] <= 1'b1;         if((tja517f && (th45ffe == bl501a3[swbc927])) ||            (yx65300 && (qg4c02c == bl501a3[swbc927])))            en60f98[swbc927] <= 1'b1;      end   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      nec5ce4 <= 1;   end   else begin      for(vie4939=0; vie4939<`NUM_VC; vie4939=vie4939+1) begin         if(ie3e603[vie4939])            nec5ce4[vie4939] <= 1'b1;         else if(!ie3e603[vie4939] && (en60f98[vie4939] || yxe71fa || xwe4cc1))            nec5ce4[vie4939] <= 1'b0;      end   end
end




always@* begin kf3c096<={lqfe23b>>1,ux17adf[0]};eae04b4<=ux17adf[1];cb25a1<=ux17adf[2];wl12d0d<=ux17adf[3];hq9686d<={psda2c8>>1,ux17adf[4]};sjb436b<={cmd1642>>1,ux17adf[5]};oha1b5c<=ux17adf[6];andae4<={ww5908f>>1,ux17adf[7]};ic6d725<={nrc8479>>1,ux17adf[8]};nr6b929<={fa423ce>>1,ux17adf[9]};yk5c94f<={tw11e73>>1,ux17adf[10]};xwe4a78<={gd8f39a>>1,ux17adf[11]};ie24c0e<={hd63d7>>1,ux17adf[12]};sj29e13<=ux17adf[13];ld4f09c<=ux17adf[14];su784e7<={aldc6b8>>1,ux17adf[15]};thc2738<={tx_vsd_data>>1,ux17adf[16]};xwe4cc1<=ux17adf[17];ux2660a<=ux17adf[18];yxe71fa<=ux17adf[19];db38fd4<={rxtp_seq>>1,ux17adf[20]};hbc7ea7<=ux17adf[21];fc3f53e<=ux17adf[22];uifa9f3<={sh6fd8b>>1,ux17adf[23]};god4f98<=ux17adf[24];fca7cc0<={vvf62ee>>1,ux17adf[25]};ie3e603<={vcneg_pend>>1,ux17adf[26]};vvf3019<=ux17adf[27];ou980cf<=ux17adf[28];zkc0679<=ux17adf[29];vx33ca<=ux17adf[30];tj19e57<={nec5ce4>>1,ux17adf[31]};jccf2be<={rge4612>>1,ux17adf[32]};dm795f3<={cb23093>>1,ux17adf[33]};bycaf9a<={ir1849c>>1,ux17adf[34]};ne57cd2<={fnc24e5>>1,ux17adf[35]};ohbe693<={ux1272f>>1,ux17adf[36]};rtf349d<={ng9397c>>1,ux17adf[37]};kf9a4ef<={ng9cbe3>>1,ux17adf[38]};rtd277c<={mee5f1a>>1,ux17adf[39]};pu93be6<={je2f8d0>>1,ux17adf[40]};co9df33<={tu7c683>>1,ux17adf[41]};cmef998<={ble341a>>1,ux17adf[42]};ps7ccc1<=ux17adf[43];zxe660b<=ux17adf[44];ec982f5<={uk1ac1b>>1,ux17adf[45]};wwc17a9<=ux17adf[46];vkbd48<=ux17adf[47];eaf5215<={fc1b333>>1,ux17adf[48]};fa48541<={encccd4>>1,ux17adf[49]};tu42a0a<=ux17adf[50];wy15052<=ux17adf[51];en4148b<={hb55a3b>>1,ux17adf[52]};fa522e1<={yk68ef3>>1,ux17adf[53]};zz9170a<=ux17adf[54];hd8b857<=ux17adf[55];ic5c2be<={qgde618>>1,ux17adf[56]};dme15f1<={nrf30c0>>1,ux17adf[57]};swaf8b<=ux17adf[58];tu57c58<=ux17adf[59];kfbe2c3<=ux17adf[60];jcf161d<=ux17adf[61];vx8b0ea<=ux17adf[62];vi58757<={kf39b5d>>1,ux17adf[63]};enc3abb<=ux17adf[64];ir1d5dc<=ux17adf[65];cmeaee5<=ux17adf[66];ps57729<=ux17adf[67];anbb94a<=ux17adf[68];sue52a4<={lq79ea4>>1,ux17adf[69]};dz4a90d<={yz23705>>1,ux17adf[70]};qva4374<={aldc163>>1,ux17adf[71]};gddd28<={ou58e8>>1,ux17adf[72]};fn74a2f<={ho63a0d>>1,ux17adf[73]};tja517f<=ux17adf[74];th45ffe<={of41aed>>1,ux17adf[75]};ba2fff7<=ux17adf[76];osffddc<={ps5db67>>1,ux17adf[77]};off7702<={ng3a810>>1,ux17adf[78]};wjdc0ac<={fpa0411>>1,ux17adf[79]};yz2b29<={gq1047d>>1,ux17adf[80]};ksaca60<={ri11f49>>1,ux17adf[81]};yx65300<=ux17adf[82];qg4c02c<={vve92a0>>1,ux17adf[83]};en60160<={kq49507>>1,ux17adf[84]};aab05<=ux17adf[85];ec5829<=ux17adf[86];mt2c149<=ux17adf[87];sh60a4d<=ux17adf[88];ir29360<={enc6baf>>1,ux17adf[89]};kq49b05<=ux17adf[90];tu6c14b<={mr75f1d>>1,ux17adf[91]};ks52dc<={by7c76f>>1,ux17adf[92]};gb4b705<={wl1dbd7>>1,ux17adf[93]};ofdc16d<={bn68fd>>1,ux17adf[94]};aa5b68<={ksa3f70>>1,ux17adf[95]};yk6da0e<={mrfdc09>>1,ux17adf[96]};ea6d070<={xl32fc5>>1,ux17adf[97]};ea68381<={phbf171>>1,ux17adf[98]};gb41c09<={rgc5c7d>>1,ux17adf[99]};bae04d<={zx71f58>>1,ux17adf[100]};sh7026b<={yk7d63c>>1,ux17adf[101]};ph8135c<={vi58f02>>1,ux17adf[102]};end
always@* begin db22f5b[2047]<=phy_skpq_val;db22f5b[2046]<=uk3b68b;db22f5b[2044]<=kqdb459;db22f5b[2040]<=psda2c8[0];db22f5b[2033]<=cmd1642[0];db22f5b[2032]<=jp4a838;db22f5b[2019]<=fp8b211;db22f5b[2017]<=al541c6;db22f5b[2011]<=aldc6b8[0];db22f5b[1991]<=ww5908f[0];db22f5b[1987]<=pha0e35;db22f5b[1974]<=tx_vsd_data[0];db22f5b[1935]<=nrc8479[0];db22f5b[1926]<=ir71ae;db22f5b[1925]<=uk1ac1b[0];db22f5b[1919]<=yk7d63c[0];db22f5b[1900]<=rxtp_nak;db22f5b[1892]<=sw3bcc3;db22f5b[1862]<=cb23093[0];db22f5b[1847]<=ps5db67[0];db22f5b[1823]<=fa423ce[0];db22f5b[1805]<=enc6baf[0];db22f5b[1803]<=wjd60d9;db22f5b[1791]<=vi58f02[0];db22f5b[1790]<=qv8fa4a;db22f5b[1753]<=osd1409;db22f5b[1738]<=me49bf6;db22f5b[1737]<=qgde618[0];db22f5b[1723]<=mrfdc09[0];db22f5b[1721]<=ou58e8[0];db22f5b[1676]<=ir1849c[0];db22f5b[1656]<=tu7c683[0];db22f5b[1647]<=ng3a810[0];db22f5b[1619]<=pf7ec5d;db22f5b[1608]<=ipc3039;db22f5b[1598]<=tw11e73[0];db22f5b[1562]<=hq35d7c;db22f5b[1559]<=fpb06cc;db22f5b[1532]<=vve92a0[0];db22f5b[1503]<=rgc5c7d[0];db22f5b[1497]<=yk68ef3[0];db22f5b[1485]<=of41aed[0];db22f5b[1458]<=rxtp_ack;db22f5b[1454]<=yz23705[0];db22f5b[1428]<=by4dfb1;db22f5b[1426]<=nrf30c0[0];db22f5b[1399]<=xl32fc5[0];db22f5b[1395]<=ho63a0d[0];db22f5b[1338]<=tdmux_rdy2;db22f5b[1305]<=fnc24e5[0];db22f5b[1264]<=ble341a[0];db22f5b[1256]<=an18b9c;db22f5b[1247]<=fpa0411[0];db22f5b[1191]<=vvf62ee[0];db22f5b[1169]<=sj181cd;db22f5b[1163]<=kf39b5d[0];db22f5b[1149]<=gd8f39a[0];db22f5b[1127]<=ng9397c[0];db22f5b[1114]<=pf6bb79;db22f5b[1077]<=mr75f1d[0];db22f5b[1070]<=fc1b333[0];db22f5b[1023]<=lqfe23b[0];db22f5b[1016]<=kq49507[0];db22f5b[1005]<=gq3b8d7;db22f5b[962]<=xwd06b0;db22f5b[959]<=zx71f58[0];db22f5b[946]<=fa47798;db22f5b[931]<=rge4612[0];db22f5b[923]<=ohd76d;db22f5b[895]<=ri11f49[0];db22f5b[869]<=rxtp_seq[0];db22f5b[861]<=ksa3f70[0];db22f5b[860]<=aldc163[0];db22f5b[828]<=je2f8d0[0];db22f5b[809]<=sh6fd8b[0];db22f5b[804]<=co98607;db22f5b[751]<=phbf171[0];db22f5b[748]<=hb55a3b[0];db22f5b[742]<=an1d06b;db22f5b[727]<=lq79ea4[0];db22f5b[669]<=tdmux_rdy1;db22f5b[628]<=rgfbdb3;db22f5b[581]<=ux736b;db22f5b[563]<=ux1272f[0];db22f5b[557]<=su6d76f;db22f5b[502]<=xjc771a;db22f5b[481]<=ym1a0d6;db22f5b[465]<=nec5ce4[0];db22f5b[447]<=gq1047d[0];db22f5b[430]<=bn68fd[0];db22f5b[414]<=mee5f1a[0];db22f5b[374]<=tja5568;db22f5b[363]<=enede7a;db22f5b[334]<=vcneg_pend[0];db22f5b[290]<=fac0e6d;db22f5b[278]<=ldcdaed;db22f5b[251]<=hd63d7[0];db22f5b[215]<=wl1dbd7[0];db22f5b[207]<=ng9cbe3[0];db22f5b[187]<=osd4aad;db22f5b[181]<=ps5dbcf;db22f5b[107]<=by7c76f[0];db22f5b[93]<=encccd4[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule















































































`timescale 1 ns / 100 ps
module  pcie_x1_ph2de42 #(
   parameter FADDR    = 6,   parameter D_WIDTH  = 64 )
   (
   input wire                   sys_clk,           
   input wire                   rst_n,             

   input wire [13:0]            lqfe23b,   
                                            
   `ifdef X4
      input wire                rgf11db,       
      input wire                vka2cbc,        
      input wire [2:0]          phy_cfgln_sum,     
      input wire [1:0]          phy_skpq_nclks,    
   `endif
   input wire                   phy_link_up,       
   input wire                   phy_skpq_val,      
   input wire                   uk3b68b,    

   
   input wire                   kqdb459,        
   input wire [2:0]             psda2c8,          
   input wire [1:0]             cmd1642,          

   input wire                   fp8b211,        
   input wire [2:0]             ww5908f,          
   input wire [1:0]             nrc8479,          
 
   input wire [`NUM_VC -1:0]     fa423ce,    
   input wire [`NUM_VC -1:0]     tw11e73,   
   input wire [`NUM_VC -1:0]     gd8f39a,  
   input wire [(`NUM_VC*3) -1:0] hd63d7,         
   `ifdef EN_VC0
      input wire [23:0]      uice6ab,               
      input wire [23:0]      ne73559,
      input wire [23:0]      ep9aacb,
   `endif
   `ifdef EN_VC1
      input wire [23:0]      xwd565d,               
      input wire [23:0]      qvab2eb,
      input wire [23:0]      su5975c,
   `endif
   `ifdef EN_VC2
      input wire [23:0]      eacbae1,               
      input wire [23:0]      lq5d708,
      input wire [23:0]      byeb843,
   `endif
   `ifdef EN_VC3
      input wire [23:0]      go5c21b,               
      input wire [23:0]      nee10d9,
      input wire [23:0]      wl86cb,
   `endif
   `ifdef EN_VC4
      input wire [23:0]      yk4365c,               
      input wire [23:0]      pu1b2e1,
      input wire [23:0]      end970a,
   `endif
   `ifdef EN_VC5
      input wire [23:0]      wwcb855,               
      input wire [23:0]      yk5c2a8,
      input wire [23:0]      bye1541,
   `endif
   `ifdef EN_VC6
      input wire [23:0]      coaa0b,               
      input wire [23:0]      xj55058,
      input wire [23:0]      pua82c7,
   `endif
   `ifdef EN_VC7
      input wire [23:0]      qt4163b,               
      input wire [23:0]      zmb1dc,
      input wire [23:0]      by58ee3,
   `endif

   
   input wire                xjc771a,                
   input wire                gq3b8d7,            
   input wire [2:0]          aldc6b8,          
   input wire [23:0]         tx_vsd_data,          

   
   input wire                rxtp_nak,             
   input wire                osd1409,         
   input wire                rxtp_ack,             
   input wire [11:0]         rxtp_seq,             

   
   input wire                me49bf6,           
   input wire                by4dfb1,          
   input wire [2:0]          sh6fd8b,          
   input wire                pf7ec5d,          
   input wire [1:0]          vvf62ee,          
   input wire [`NUM_VC -1:0] vcneg_pend,           


   
   input wire [D_WIDTH-1:0]  txtp_tdata,           
   input wire                txtp_st,              
   input wire                txtp_end,             
   input wire                txtp_edb,             
   `ifdef X1
      input wire             txtp_erly_tval,       
   `endif
   `ifdef X4
      input wire             ks10686,            
      input wire             pu83431 ,           
   `endif

   
   output wire [FADDR:0]     dll_pause_cnt,        

   
   output wire [D_WIDTH-1:0]  tdmux_data,           
   output wire               tdmux_val,            
   output wire               tdmux_st,             
   output wire               tdmux_end,            
   output wire               tdmux_edb,            
   `ifdef X1
      output wire            tdmux_dllp_st,        
      output wire            tdmux_dllp_end,       
   `endif
   `ifdef X4
      output wire            suf0301,           
      output wire            xlc047,           
   `endif
   output wire               tdmux_skip,           

   
   output wire [`NUM_VC -1:0] ba8983e,         
   output wire [`NUM_VC -1:0] qg4c1f3,        
   output wire [`NUM_VC -1:0] en60f98,       
   output wire                wjc364e,          
   output wire                zm1b275,          
   output wire                icffe8a,       
   output wire                osff450,       

   
   output wire                go67ffa,            
   output wire                ri3ffd1,           

   
   output wire                ldf3121           );
wire                      txdp_req1;
wire                      txdp_req2;

`ifdef X1
wire   [3:0]           txdp_skip_cnt;
wire   [15:0]          txdp_data;

`endif

`ifdef X4
wire   [2:0]           txdp_skip_cnt;
wire                   vx8e260;
wire                   xj71307;
wire   [47:0]          txdp_data;
wire                   zm96e69;

`endif
reg                       rgfbdb3;
reg                       qib9a5b;
reg                       hbcd2d9;
reg                       jc696ce;
reg   [11:0]              uv4b673;
reg                       of5b39d;
reg   [2:0]               wjd9cec;
reg                       goce764;
reg    [23:0]             fa73b21;
reg                       mg9d90a;
reg                       hbec850;
wire                      osea2f9;
wire   [31:0]             en517c8;
wire   [31:0]             vx8be45;
wire                      ksf048;
wire                      je86e4e;
wire                      xl37272;
wire                      tdmux_rdy1;
wire                      tdmux_rdy2;

`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`define TDMUX_MOD pcie_x1_td_mux_x1

`endif

`ifdef X4

`define TDMUX_MOD td_mux

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [13 : 0] kf3c096;
reg db81c22;
reg eae04b4;
reg cb25a1;
reg wl12d0d;
reg [2 : 0] hq9686d;
reg [1 : 0] sjb436b;
reg oha1b5c;
reg [2 : 0] andae4;
reg [1 : 0] ic6d725;
reg [`NUM_VC - 1 : 0] nr6b929;
reg [`NUM_VC - 1 : 0] yk5c94f;
reg [`NUM_VC - 1 : 0] xwe4a78;
reg [(`NUM_VC * 3) - 1 : 0] ie24c0e;
reg sj29e13;
reg ld4f09c;
reg [2 : 0] su784e7;
reg [23 : 0] thc2738;
reg xwe4cc1;
reg ux2660a;
reg yxe71fa;
reg [11 : 0] db38fd4;
reg hbc7ea7;
reg fc3f53e;
reg [2 : 0] uifa9f3;
reg god4f98;
reg [1 : 0] fca7cc0;
reg [`NUM_VC - 1 : 0] ie3e603;
reg [D_WIDTH - 1 : 0] xw6656f;
reg vx32b7a;
reg mt95bd6;
reg baadeb4;
reg uvd68a4;
reg zkc0679;
reg ym1ac77;
reg czd63b9;
reg anb1dcc;
reg [11 : 0] fp8ee65;
reg su7732e;
reg [2 : 0] qib9971;
reg gbccb89;
reg [23 : 0] gb65c4d;
reg mg2e26c;
reg pf71360;
reg vica0be;
reg [31 : 0] xj505f3;
reg [31 : 0] ou82f9f;
reg ip60cdb;
reg fp66dc;
reg ux336e7;
reg vvf3019;
reg ou980cf;
reg [2047:0] db22f5b;
wire [51:0] ux17adf;

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X4

`endif

`ifdef X1

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`define TDMUX_MOD pcie_x1_td_mux_x1

`endif

`ifdef X4

`define TDMUX_MOD td_mux

`endif


`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 52,jceb7ea = 32'hfdffe81b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`define TDMUX_MOD pcie_x1_td_mux_x1


`endif


`ifdef X4


`define TDMUX_MOD td_mux


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X1



`endif



`ifdef X4



`endif

















assign wjc364e = xwe4cc1 | ux2660a | ip60cdb;
assign zm1b275 = yxe71fa | sj29e13 | ld4f09c;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      rgfbdb3    <= 1'b0;      qib9a5b       <= 1'b0;      hbcd2d9   <= 1'b0;      jc696ce       <= 1'b0;      uv4b673       <= 12'd0;      of5b39d          <= 1'b0;      wjd9cec      <= 3'b000;      goce764      <= 1'b0;      fa73b21     <= 24'd0;   end   else begin      rgfbdb3    <= ip60cdb;      qib9a5b       <= xwe4cc1;      hbcd2d9   <= ux2660a;      jc696ce       <= yxe71fa;      uv4b673       <= db38fd4;      of5b39d          <= sj29e13;      wjd9cec      <= su784e7;      goce764      <= ld4f09c;      fa73b21     <= thc2738;   end
end






assign icffe8a    = !(mg2e26c || wl12d0d);
assign osff450    = !(pf71360 || oha1b5c);
assign je86e4e  = hbc7ea7 && icffe8a;
assign xl37272 = fc3f53e && osff450;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin     mg9d90a    <= 1'b0;     hbec850   <= 1'b0;   end   else begin     mg9d90a       <= xwe4cc1 | ux2660a | ip60cdb;     hbec850      <= yxe71fa | sj29e13 | ld4f09c;   end
end




pcie_x1_yma6fe #(   .FADDR                ( FADDR ))   ipdc131 (      .sys_clk                  (sys_clk),   .rst_n                    (rst_n),   .lqfe23b          (kf3c096),


`ifdef X4
      .rgf11db           (rgf11db),      .phy_skpq_nclks        (phy_skpq_nclks),


`endif
      .phy_skpq_val             (eae04b4),   .uk3b68b           (cb25a1),      .kqdb459               (wl12d0d),   .psda2c8                 (hq9686d),   .cmd1642                 (sjb436b),   .fp8b211               (oha1b5c),   .ww5908f                 (andae4),   .nrc8479                 (ic6d725),
   .fa423ce            (nr6b929),   .tw11e73           (yk5c94f),   .gd8f39a          (xwe4a78),   .hd63d7                 (ie24c0e),


`ifdef EN_VC0
      .uice6ab                   (uice6ab),      .ne73559                  (ne73559),      .ep9aacb                 (ep9aacb),


`endif



`ifdef EN_VC1
      .xwd565d                   (xwd565d),      .qvab2eb                  (qvab2eb),      .su5975c                 (su5975c),


`endif



`ifdef EN_VC2
      .eacbae1                   (eacbae1),      .lq5d708                  (lq5d708),      .byeb843                 (byeb843),


`endif



`ifdef EN_VC3
      .go5c21b                   (go5c21b),      .nee10d9                  (nee10d9),      .wl86cb                 (wl86cb),


`endif



`ifdef EN_VC4
      .yk4365c                   (yk4365c),      .pu1b2e1                  (pu1b2e1),      .end970a                 (end970a),


`endif



`ifdef EN_VC5
      .wwcb855                   (wwcb855),      .yk5c2a8                  (yk5c2a8),      .bye1541                 (bye1541),


`endif



`ifdef EN_VC6
      .coaa0b                   (coaa0b),      .xj55058                  (xj55058),      .pua82c7                 (pua82c7),


`endif



`ifdef EN_VC7
      .qt4163b                   (qt4163b),      .zmb1dc                  (zmb1dc),      .by58ee3                 (by58ee3),


`endif


      .xjc771a                    (su7732e),   .aldc6b8              (qib9971),   .gq3b8d7                (gbccb89),   .tx_vsd_data              (gb65c4d),      .rxtp_nak                 (ym1ac77),   .osd1409             (czd63b9),   .rxtp_ack                 (anb1dcc),   .rxtp_seq                 (fp8ee65),      .vcneg_pend               (ie3e603),   .me49bf6               (fp66dc),   .by4dfb1              (ux336e7),   .sh6fd8b              (uifa9f3),   .pf7ec5d              (god4f98),   .vvf62ee              (fca7cc0),      .tdmux_rdy1               (vvf3019),   .tdmux_rdy2               (ou980cf),   .rgfbdb3            (zkc0679),         .dll_pause_cnt            (dll_pause_cnt),      .txdp_req1                (txdp_req1),   .txdp_req2                (txdp_req2),   .txdp_skip_cnt            (txdp_skip_cnt),


`ifdef X4
      .vx8e260             (vx8e260),      .xj71307             (xj71307),


`endif

      .ba8983e              (ba8983e),   .qg4c1f3             (qg4c1f3),   .en60f98            (en60f98),      .go67ffa                 (go67ffa),   .ri3ffd1                (ri3ffd1),      .ldf3121             (ldf3121),   


`ifdef X1
      .gbc9a13             (gbc9a13),


`endif
   .osea2f9               (osea2f9),   .en517c8                 (en517c8),   .vx8be45              (vx8be45),   .ksf048              (ksf048)   );



pcie_x1_ym9264d  gqa0db(   .sys_clk                  (sys_clk),   .rst_n                    (rst_n),


`ifdef X1
      .gbc9a13             (gbc9a13),      .txdp_val              (txdp_val),      .txdp_dllp_st          (txdp_dllp_st),      .txdp_dllp_end         (txdp_dllp_end),      .hd13a8b                  (txdp_data[15:0]),


`endif



`ifdef X4
      .hd13a8b                  (txdp_data[47:0]),


`endif
   .osea2f9               (vica0be),   .en517c8                 (xj505f3),   .vx8be45              (ou82f9f)   );




`ifdef X1



`define TDMUX_MOD pcie_x1_td_mux_x1



`endif



`ifdef X4



`define TDMUX_MOD td_mux



`endif

`TDMUX_MOD gq9d386 (      .sys_clk                  (sys_clk),   .rst_n                    (rst_n),      .phy_link_up              (phy_link_up),


`ifdef X4
      .tlpgen_tval           (rgf11db),      .phy_x4_val            (vka2cbc),      .phy_cfgln_sum         (phy_cfgln_sum),


`endif

      .txtp_tdata               (txtp_tdata),   .txtp_st                  (txtp_st),   .txtp_end                 (txtp_end),   .txtp_edb                 (txtp_edb),


`ifdef X1
      .txtp_erly_tval        (txtp_erly_tval),


`endif



`ifdef X4
      .txtp_tval             (ks10686),      .txtp_dwen             (pu83431),


`endif

   


`ifdef X1
      .txdp_req1             (txdp_req1),      .txdp_req2             (txdp_req2),      .txdp_val              (txdp_val),      .txdp_dllp_st          (txdp_dllp_st),      .txdp_dllp_end         (txdp_dllp_end),


`endif



`ifdef X4
      .txdp_req1             (txdp_req1),      .txdp_val1             (vx8e260),      .txdp_val2             (xj71307),


`endif
   .txdp_skip_cnt            (txdp_skip_cnt),   .txdp_data                (txdp_data),         .tdmux_data               (tdmux_data),   .tdmux_val                (tdmux_val),   .tdmux_st                 (tdmux_st),   .tdmux_end                (tdmux_end),   .tdmux_edb                (tdmux_edb),   .tdmux_skip               (tdmux_skip),


`ifdef X1
      .tdmux_dllp_st         (tdmux_dllp_st),      .tdmux_dllp_end        (tdmux_dllp_end),


`endif



`ifdef X4
      .tdmux_dwen            (suf0301),      .tdmux_dllp            (xlc047),


`endif

      .tdmux_rdy1               (tdmux_rdy1),   .tdmux_rdy2               (tdmux_rdy2)   );

always@* begin kf3c096<={lqfe23b>>1,ux17adf[0]};db81c22<=ux17adf[1];eae04b4<=ux17adf[2];cb25a1<=ux17adf[3];wl12d0d<=ux17adf[4];hq9686d<={psda2c8>>1,ux17adf[5]};sjb436b<={cmd1642>>1,ux17adf[6]};oha1b5c<=ux17adf[7];andae4<={ww5908f>>1,ux17adf[8]};ic6d725<={nrc8479>>1,ux17adf[9]};nr6b929<={fa423ce>>1,ux17adf[10]};yk5c94f<={tw11e73>>1,ux17adf[11]};xwe4a78<={gd8f39a>>1,ux17adf[12]};ie24c0e<={hd63d7>>1,ux17adf[13]};sj29e13<=ux17adf[14];ld4f09c<=ux17adf[15];su784e7<={aldc6b8>>1,ux17adf[16]};thc2738<={tx_vsd_data>>1,ux17adf[17]};xwe4cc1<=ux17adf[18];ux2660a<=ux17adf[19];yxe71fa<=ux17adf[20];db38fd4<={rxtp_seq>>1,ux17adf[21]};hbc7ea7<=ux17adf[22];fc3f53e<=ux17adf[23];uifa9f3<={sh6fd8b>>1,ux17adf[24]};god4f98<=ux17adf[25];fca7cc0<={vvf62ee>>1,ux17adf[26]};ie3e603<={vcneg_pend>>1,ux17adf[27]};xw6656f<={txtp_tdata>>1,ux17adf[28]};vx32b7a<=ux17adf[29];mt95bd6<=ux17adf[30];baadeb4<=ux17adf[31];uvd68a4<=ux17adf[32];zkc0679<=ux17adf[33];ym1ac77<=ux17adf[34];czd63b9<=ux17adf[35];anb1dcc<=ux17adf[36];fp8ee65<={uv4b673>>1,ux17adf[37]};su7732e<=ux17adf[38];qib9971<={wjd9cec>>1,ux17adf[39]};gbccb89<=ux17adf[40];gb65c4d<={fa73b21>>1,ux17adf[41]};mg2e26c<=ux17adf[42];pf71360<=ux17adf[43];vica0be<=ux17adf[44];xj505f3<={en517c8>>1,ux17adf[45]};ou82f9f<={vx8be45>>1,ux17adf[46]};ip60cdb<=ux17adf[47];fp66dc<=ux17adf[48];ux336e7<=ux17adf[49];vvf3019<=ux17adf[50];ou980cf<=ux17adf[51];end
always@* begin db22f5b[2047]<=phy_link_up;db22f5b[2046]<=phy_skpq_val;db22f5b[2045]<=uk3b68b;db22f5b[2042]<=kqdb459;db22f5b[2037]<=psda2c8[0];db22f5b[2026]<=cmd1642[0];db22f5b[2005]<=fp8b211;db22f5b[1962]<=ww5908f[0];db22f5b[1891]<=vvf62ee[0];db22f5b[1877]<=nrc8479[0];db22f5b[1844]<=hbcd2d9;db22f5b[1742]<=osd1409;db22f5b[1735]<=vcneg_pend[0];db22f5b[1707]<=fa423ce[0];db22f5b[1666]<=goce764;db22f5b[1654]<=me49bf6;db22f5b[1640]<=jc696ce;db22f5b[1593]<=txtp_end;db22f5b[1459]<=tx_vsd_data[0];db22f5b[1437]<=rxtp_ack;db22f5b[1422]<=txtp_tdata[0];db22f5b[1388]<=gq3b8d7;db22f5b[1371]<=hd63d7[0];db22f5b[1366]<=tw11e73[0];db22f5b[1351]<=xl37272;db22f5b[1308]<=tdmux_rdy2;db22f5b[1285]<=fa73b21[0];db22f5b[1260]<=by4dfb1;db22f5b[1232]<=uv4b673[0];db22f5b[1139]<=txtp_edb;db22f5b[1045]<=hbec850;db22f5b[1023]<=lqfe23b[0];db22f5b[945]<=pf7ec5d;db22f5b[922]<=qib9a5b;db22f5b[871]<=rxtp_nak;db22f5b[833]<=wjd9cec[0];db22f5b[827]<=rxtp_seq[0];db22f5b[796]<=txtp_st;db22f5b[729]<=aldc6b8[0];db22f5b[694]<=xjc771a;db22f5b[685]<=gd8f39a[0];db22f5b[675]<=je86e4e;db22f5b[654]<=tdmux_rdy1;db22f5b[522]<=mg9d90a;db22f5b[472]<=sh6fd8b[0];db22f5b[461]<=rgfbdb3;db22f5b[416]<=of5b39d;db22f5b[337]<=ksf048;db22f5b[230]<=txdp_req2;db22f5b[168]<=vx8be45[0];db22f5b[84]<=en517c8[0];db22f5b[42]<=osea2f9;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule
























































`timescale 1 ns / 100 ps
module pcie_x1_xj5fa0e #(
   parameter D_WIDTH  = 64 )
   (
   input wire        sys_clk ,       
   input wire        rst_n ,         

   input wire [D_WIDTH-1:0] go7796a ,     
   input wire        ukbcb50 ,       
   input wire        kqe5a81 ,      
   input wire        vx2d408 ,      
   `ifdef X4
      input wire     mr6a047 ,     
      input wire     pf5023c ,     
      output wire    ks10686 ,     
      output reg     pu83431 ,     
   `endif

   output reg [D_WIDTH-1:0] txtp_tdata ,    
   output wire       ene7d55 , 
   output reg        txtp_st ,       
   output reg        txtp_end ,      
   output reg        txtp_edb          ) ;
reg [D_WIDTH-1:0]    ngad03e ;
reg                  yk681f3 ;
reg                  ld40f99 ;
reg                  qv7ccf ;
reg                  ym3e67c ;
reg                  thf33e1 ;
reg                  zm99f0f ;
reg                  facf87a ;
reg [31:0]           tu7c3d2;
wire                 enable_crc ;
wire [31:0]          mr4e59e;
reg                    wj7a491;
reg                    dzd248d ;

`ifdef X4
reg                 gq9246e ;
reg                 ec92370 ;
reg                 rv91b80 ;
wire [31:0]         pfe9cb3;
reg [15:0]          th6e031 ;
reg                 sh7018e;
wire                half_data ;
reg                 ph63a5 ;
reg                 uk31d2f ;

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] bl74bce;
reg nta5e77;
reg ri2f3be;
reg by79df2;
reg oscef93;
reg me77c98;
reg sjbe4c0;
reg wjf2605;
reg xy9302d;
reg ks9816a;
reg tuc0b51;
reg [31 : 0] aa5a8b;
reg hd2d459;
reg [31 : 0] en6a2cf;
reg cz5167c;
reg fp8b3e5;
reg [2047:0] db22f5b;
wire [15:0] ux17adf;

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 16,jceb7ea = 32'hfdffe81b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X4



`endif







always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ngad03e <= {D_WIDTH{1'b0}} ;      yk681f3   <= 1'b0 ;      ld40f99  <= 1'b0 ;      qv7ccf  <= 1'b0 ;      ym3e67c  <= 1'b0 ;      thf33e1  <= 1'b0 ;
      zm99f0f  <= 1'b0 ;      facf87a  <= 1'b0 ;



`ifdef X4
         gq9246e <= 1'b0 ;         ec92370 <= 1'b0 ;         rv91b80 <= 1'b0 ;


`endif
   end


`ifdef X4
   else if (mr6a047) begin      ngad03e <= bl74bce ;      yk681f3   <= nta5e77 ;      ld40f99 <= ri2f3be ;      qv7ccf <= by79df2 ;      ym3e67c <= me77c98 ;      thf33e1 <= sjbe4c0 ;      zm99f0f <= wjf2605 ;      facf87a <= xy9302d ;      gq9246e <= pf5023c ;      ec92370 <= gq9246e ;      rv91b80 <= ec92370 ;   end


`endif



`ifdef X1
   else begin      ngad03e <= bl74bce ;      yk681f3   <= nta5e77 ;      ld40f99 <= ri2f3be ;      qv7ccf <= by79df2 ;      ym3e67c <= me77c98 ;      thf33e1 <= sjbe4c0 ;      zm99f0f <= wjf2605 ;      facf87a <= xy9302d ;   end


`endif

end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      dzd248d <= 1'b0 ;


`ifdef X1
   else if (nta5e77)      dzd248d <= 1'b1 ;   else if (me77c98 || sjbe4c0 )      dzd248d <= 1'b0 ;


`endif



`ifdef X4
   else if (nta5e77 & mr6a047)      dzd248d <= 1'b1 ;   else if ((ri2f3be || by79df2) & mr6a047)      dzd248d <= 1'b0 ;


`endif

end

`ifdef X1
   assign enable_crc = fp8b3e5 ;

`endif



`ifdef X4
   assign enable_crc = (nta5e77 & mr6a047) | fp8b3e5 ;

`endif



pcie_x1_je2a373 #(   .D_WIDTH     ( D_WIDTH ) )   hb6e6a1(      .sys_clk     ( sys_clk ) ,   .rst_n       ( rst_n ),   


`ifdef X1
      .data_in    ( ngad03e ),


`endif



`ifdef X4
      .data_in    ( bl74bce ),


`endif
   .enable_crc ( hd2d459 ),


`ifdef X4
      .ec1a382   ( mr6a047 ),      .half_data  ( half_data ),      .pfe9cb3  ( pfe9cb3 ),


`endif
   .mr4e59e  ( mr4e59e )   ) ;




`ifdef X1
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         txtp_tdata <= 16'h00 ;      else if (wjf2605)         txtp_tdata <= en6a2cf[31:16] ;      else if (ks9816a)         txtp_tdata <= aa5a8b[15:0] ;      else if (xy9302d)         txtp_tdata <= ~en6a2cf[31:16] ;      else if (tuc0b51)         txtp_tdata <= ~aa5a8b[15:0] ;      else         txtp_tdata <= ngad03e ;   end   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         tu7c3d2 <= 32'h0000 ;      else         tu7c3d2 <= en6a2cf ;   end

`endif



`ifdef X4
   always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         txtp_tdata <= 64'h0000_0000 ;      else if (ph63a5)         case ({gq9246e, sjbe4c0})            2'b11 :               txtp_tdata <= {ngad03e[63:48], ~(en6a2cf[31:0]), 16'h0000} ;            2'b10 :               txtp_tdata <= {ngad03e[63:48], en6a2cf[31:0], 16'h0000} ;            2'b01 :               txtp_tdata <= {ngad03e[63:16], ~(pfe9cb3[31:16])} ;            2'b00 :               txtp_tdata <= {ngad03e[63:16], pfe9cb3[31:16]} ;            default :                txtp_tdata <= {ngad03e[63:16], pfe9cb3[31:16]} ;         endcase      else if (uk31d2f && !ec92370 )         if (xy9302d)            txtp_tdata <= {~(th6e031[15:0]), 48'h0000_0000_0000} ;         else            txtp_tdata <= {th6e031[15:0], 48'h0000_0000_0000} ;      else         txtp_tdata <= ngad03e ;   end

`endif




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      wj7a491 <= 1'b0 ;   else if (nta5e77)      wj7a491 <= 1'b1 ;


`ifdef X1
      else if (ks9816a || tuc0b51)         wj7a491 <= 1'b0 ;


`endif



`ifdef X4
      else if (gq9246e && (me77c98 | sjbe4c0))         wj7a491 <= 1'b0 ;      else if (!ec92370 && (wjf2605 | xy9302d))         wj7a491 <= 1'b0 ;


`endif

end


`ifdef X1
   assign ene7d55 = cz5167c ;

`endif



`ifdef X4
   assign ene7d55 = cz5167c & mr6a047 ;

`endif




`ifdef X4
      assign half_data = ri2f3be | by79df2 ;      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n) begin         ph63a5 <= 1'b0 ;         uk31d2f <= 1'b0 ;         th6e031 <= 16'h0000 ;      end      else if (mr6a047) begin         ph63a5 <= half_data ;         uk31d2f <= ph63a5 ;         th6e031 <= pfe9cb3 ;      end   end      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         sh7018e <= 1'b0 ;      else if (oscef93 )         sh7018e <= 1'b1 ;      else if (ec92370 && (wjf2605 | xy9302d))         sh7018e <= 1'b0 ;      else if (!rv91b80 && (ks9816a | tuc0b51))         sh7018e <= 1'b0 ;   end   assign ks10686 = sh7018e & mr6a047 ;

`endif




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      txtp_st    <= 1'b0 ;      txtp_end   <= 1'b0 ;      txtp_edb   <= 1'b0 ;


`ifdef X4
         pu83431  <= 1'b0 ;


`endif
   end   else begin


`ifdef X1
         txtp_st    <= oscef93 ;         txtp_end   <= ks9816a ;         txtp_edb   <= tuc0b51 ;


`endif



`ifdef X4
         txtp_st <= oscef93 ;         if (gq9246e) begin            txtp_end  <= me77c98 ;            txtp_edb  <= sjbe4c0 ;            pu83431 <= ~gq9246e & (me77c98 | sjbe4c0)  ;         end         else if (!ec92370) begin            txtp_end  <= wjf2605 ;            txtp_edb  <= xy9302d ;            pu83431 <= ~ec92370 & (wjf2605 | xy9302d)  ;         end         else begin            txtp_end  <= 1'b0 ;            txtp_edb  <= 1'b0 ;            pu83431 <= 1'b0 ;         end


`endif
   end
end
always@* begin bl74bce<={go7796a>>1,ux17adf[0]};nta5e77<=ux17adf[1];ri2f3be<=ux17adf[2];by79df2<=ux17adf[3];oscef93<=ux17adf[4];me77c98<=ux17adf[5];sjbe4c0<=ux17adf[6];wjf2605<=ux17adf[7];xy9302d<=ux17adf[8];ks9816a<=ux17adf[9];tuc0b51<=ux17adf[10];aa5a8b<={tu7c3d2>>1,ux17adf[11]};hd2d459<=ux17adf[12];en6a2cf<={mr4e59e>>1,ux17adf[13]};cz5167c<=ux17adf[14];fp8b3e5<=ux17adf[15];end
always@* begin db22f5b[2047]<=ukbcb50;db22f5b[2046]<=kqe5a81;db22f5b[2045]<=vx2d408;db22f5b[2042]<=yk681f3;db22f5b[2037]<=ld40f99;db22f5b[2026]<=qv7ccf;db22f5b[2005]<=ym3e67c;db22f5b[1962]<=thf33e1;db22f5b[1877]<=zm99f0f;db22f5b[1707]<=facf87a;db22f5b[1388]<=dzd248d;db22f5b[1371]<=mr4e59e[0];db22f5b[1366]<=tu7c3d2[0];db22f5b[1023]<=go7796a[0];db22f5b[694]<=wj7a491;db22f5b[685]<=enable_crc;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule

































`timescale 1 ns / 100 ps
module pcie_x1_je2a373 #(
   parameter D_WIDTH = 64 )
   (
   input wire         sys_clk ,    
   input wire         rst_n ,      

   input wire [D_WIDTH-1:0]  data_in ,    
   input wire         enable_crc , 
   `ifdef X4
      input wire         ec1a382 ,   
      input wire         half_data ,  
      output wire [31:0] pfe9cb3 , 
   `endif
   output wire [31:0] mr4e59e         ) ;
reg  [31:0]            ay72cf5 ;
reg  [31:0]            zm967a8 ;
reg  [15:0]            aab3d42 ;
reg  [31:0]            bn9ea10 ;
reg  [15:0]            ykf5087 ;
wire [7:0]             jea8438 ;
wire [7:0]             tu421c3 ;
wire [7:0]             aa10e1b ;
wire [7:0]             ie870d8 ;

`ifdef X4
reg  [31:0]            crc_reg64 ;
reg  [31:0]            alc360e ;
reg  [31:0]            fc1b075 ;
reg  [31:0]            dzd83aa ;
reg  [63:0]            osc1d57 ;
reg  [31:0]            ngeab9 ;
reg  [63:0]            gb755ca ;
reg  [47:0]            xlaae54 ;
reg  [31:0]            by572a7 ;
reg  [47:0]            qib953a ;
wire [7:0]             byca9d0 ;
wire [7:0]             of54e82 ;
wire [7:0]             ria7414 ;
wire [7:0]             xy3a0a2 ;
reg                    ph63a5 ;
wire                   ps765f9 ;

`endif

`ifdef X1
reg                    twb2fcb ;
wire                   uk97e5a ;

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] qtf7c10;
reg hd2d459;
reg [31 : 0] pua26c3;
reg [15 : 0] jr1361a;
reg [31 : 0] fp9b0d6;
reg [15 : 0] dzd86b6;
reg [7 : 0] qtc35b7;
reg [7 : 0] co1adbd;
reg [7 : 0] ipd6de9;
reg [7 : 0] ymb6f4d;
reg [2047:0] db22f5b;
wire [9:0] ux17adf;

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 10,jceb7ea = 32'hfdffca8b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X4



`endif



`ifdef X1



`endif







`ifdef X4
      always @* begin   osc1d57 = qtf7c10[63:0];   gb755ca = {          osc1d57[56], osc1d57[57], osc1d57[58], osc1d57[59], osc1d57[60], osc1d57[61], osc1d57[62], osc1d57[63],          osc1d57[48], osc1d57[49], osc1d57[50], osc1d57[51], osc1d57[52], osc1d57[53], osc1d57[54], osc1d57[55],          osc1d57[40], osc1d57[41], osc1d57[42], osc1d57[43], osc1d57[44], osc1d57[45], osc1d57[46], osc1d57[47],          osc1d57[32], osc1d57[33], osc1d57[34], osc1d57[35], osc1d57[36], osc1d57[37], osc1d57[38], osc1d57[39],          osc1d57[24], osc1d57[25], osc1d57[26], osc1d57[27], osc1d57[28], osc1d57[29], osc1d57[30], osc1d57[31],          osc1d57[16], osc1d57[17], osc1d57[18], osc1d57[19], osc1d57[20], osc1d57[21], osc1d57[22], osc1d57[23],          osc1d57[8], osc1d57[9], osc1d57[10], osc1d57[11], osc1d57[12], osc1d57[13], osc1d57[14], osc1d57[15],          osc1d57[0], osc1d57[1], osc1d57[2], osc1d57[3], osc1d57[4], osc1d57[5], osc1d57[6], osc1d57[7]         } ;   ngeab9 = crc_reg64;   fc1b075[0] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[53] ^                  gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[37] ^ gb755ca[34] ^                  gb755ca[32] ^ gb755ca[31] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[26] ^ gb755ca[25] ^                  gb755ca[24] ^ gb755ca[16] ^ gb755ca[12] ^ gb755ca[10] ^ gb755ca[9] ^ gb755ca[6] ^ gb755ca[0] ^                  ngeab9[0] ^ ngeab9[2] ^ ngeab9[5] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[15] ^ ngeab9[16] ^                  ngeab9[18] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[26] ^ ngeab9[28] ^ ngeab9[29] ^                  ngeab9[31];   fc1b075[1] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[53] ^                  gb755ca[51] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[38] ^                  gb755ca[37] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[33] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[24] ^                  gb755ca[17] ^ gb755ca[16] ^ gb755ca[13] ^ gb755ca[12] ^ gb755ca[11] ^ gb755ca[9] ^ gb755ca[7] ^                  gb755ca[6] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[5] ^ ngeab9[6] ^                  ngeab9[12] ^ ngeab9[14] ^ ngeab9[15] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[21] ^                  ngeab9[24] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[28] ^ ngeab9[30] ^ ngeab9[31];   fc1b075[2] = gb755ca[59] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[53] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[44] ^ gb755ca[39] ^ gb755ca[38] ^ gb755ca[37] ^ gb755ca[36] ^ gb755ca[35] ^ gb755ca[32] ^                  gb755ca[31] ^ gb755ca[30] ^ gb755ca[26] ^ gb755ca[24] ^ gb755ca[18] ^ gb755ca[17] ^ gb755ca[16] ^                  gb755ca[14] ^ gb755ca[13] ^ gb755ca[9] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[6] ^ gb755ca[2] ^                  gb755ca[1] ^ gb755ca[0] ^ ngeab9[0] ^ ngeab9[3] ^ ngeab9[4] ^ ngeab9[5] ^ ngeab9[6] ^ ngeab9[7] ^                  ngeab9[12] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[23] ^ ngeab9[25] ^ ngeab9[26] ^                  ngeab9[27];   fc1b075[3] = gb755ca[60] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[54] ^ gb755ca[53] ^ gb755ca[52] ^                  gb755ca[45] ^ gb755ca[40] ^ gb755ca[39] ^ gb755ca[38] ^ gb755ca[37] ^ gb755ca[36] ^ gb755ca[33] ^                  gb755ca[32] ^ gb755ca[31] ^ gb755ca[27] ^ gb755ca[25] ^ gb755ca[19] ^ gb755ca[18] ^ gb755ca[17] ^                  gb755ca[15] ^ gb755ca[14] ^ gb755ca[10] ^ gb755ca[9] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[3] ^                  gb755ca[2] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[4] ^ ngeab9[5] ^ ngeab9[6] ^ ngeab9[7] ^                  ngeab9[8] ^ ngeab9[13] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[24] ^ ngeab9[26] ^                  ngeab9[27] ^ ngeab9[28];   fc1b075[4] = gb755ca[63] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^                  gb755ca[46] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[41] ^ gb755ca[40] ^ gb755ca[39] ^ gb755ca[38] ^                  gb755ca[33] ^ gb755ca[31] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[25] ^ gb755ca[24] ^ gb755ca[20] ^                  gb755ca[19] ^ gb755ca[18] ^ gb755ca[15] ^ gb755ca[12] ^ gb755ca[11] ^ gb755ca[8] ^ gb755ca[6] ^                  gb755ca[4] ^ gb755ca[3] ^ gb755ca[2] ^ gb755ca[0] ^ ngeab9[1] ^ ngeab9[6] ^ ngeab9[7] ^ ngeab9[8] ^                  ngeab9[9] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[14] ^ ngeab9[15] ^ ngeab9[16] ^ ngeab9[18] ^                  ngeab9[25] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[31];   fc1b075[5] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[53] ^ gb755ca[51] ^                  gb755ca[50] ^ gb755ca[49] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[42] ^ gb755ca[41] ^ gb755ca[40] ^                  gb755ca[39] ^ gb755ca[37] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[24] ^ gb755ca[21] ^ gb755ca[20] ^                  gb755ca[19] ^ gb755ca[13] ^ gb755ca[10] ^ gb755ca[7] ^ gb755ca[6] ^ gb755ca[5] ^ gb755ca[4] ^                  gb755ca[3] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[5] ^ ngeab9[7] ^ ngeab9[8] ^ ngeab9[9] ^ ngeab9[10] ^                  ngeab9[12] ^ ngeab9[14] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[21] ^ ngeab9[22] ^                  ngeab9[23] ^ ngeab9[27] ^ ngeab9[29] ^ ngeab9[31];   fc1b075[6] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[50] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^ gb755ca[41] ^ gb755ca[40] ^                  gb755ca[38] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[25] ^ gb755ca[22] ^ gb755ca[21] ^ gb755ca[20] ^                  gb755ca[14] ^ gb755ca[11] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[6] ^ gb755ca[5] ^ gb755ca[4] ^                  gb755ca[2] ^ gb755ca[1] ^ ngeab9[6] ^ ngeab9[8] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[11] ^                  ngeab9[13] ^ ngeab9[15] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[22] ^ ngeab9[23] ^                  ngeab9[24] ^ ngeab9[28] ^ ngeab9[30];   fc1b075[7] = gb755ca[60] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[54] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[50] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^ gb755ca[41] ^                  gb755ca[39] ^ gb755ca[37] ^ gb755ca[34] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[25] ^                  gb755ca[24] ^ gb755ca[23] ^ gb755ca[22] ^ gb755ca[21] ^ gb755ca[16] ^ gb755ca[15] ^ gb755ca[10] ^                  gb755ca[8] ^ gb755ca[7] ^ gb755ca[5] ^ gb755ca[3] ^ gb755ca[2] ^ gb755ca[0] ^ ngeab9[0] ^ ngeab9[2] ^                  ngeab9[5] ^ ngeab9[7] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[11] ^ ngeab9[13] ^ ngeab9[14] ^                  ngeab9[15] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[22] ^ ngeab9[24] ^ ngeab9[25] ^                  ngeab9[26] ^ ngeab9[28];   fc1b075[8] = gb755ca[63] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[54] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[50] ^ gb755ca[46] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^ gb755ca[40] ^ gb755ca[38] ^                  gb755ca[37] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[33] ^ gb755ca[32] ^ gb755ca[31] ^ gb755ca[28] ^                  gb755ca[23] ^ gb755ca[22] ^ gb755ca[17] ^ gb755ca[12] ^ gb755ca[11] ^ gb755ca[10] ^ gb755ca[8] ^                  gb755ca[4] ^ gb755ca[3] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[3] ^                  ngeab9[5] ^ ngeab9[6] ^ ngeab9[8] ^ ngeab9[10] ^ ngeab9[11] ^ ngeab9[13] ^ ngeab9[14] ^                  ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[22] ^ ngeab9[25] ^ ngeab9[27] ^ ngeab9[28] ^                  ngeab9[31];   fc1b075[9] = gb755ca[61] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[55] ^ gb755ca[53] ^ gb755ca[52] ^ gb755ca[51] ^                  gb755ca[47] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[41] ^ gb755ca[39] ^ gb755ca[38] ^                  gb755ca[36] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[33] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[24] ^                  gb755ca[23] ^ gb755ca[18] ^ gb755ca[13] ^ gb755ca[12] ^ gb755ca[11] ^ gb755ca[9] ^ 
gb755ca[5] ^                  gb755ca[4] ^ gb755ca[2] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[4] ^                  ngeab9[6] ^ ngeab9[7] ^ ngeab9[9] ^ ngeab9[11] ^ ngeab9[12] ^ ngeab9[14] ^ ngeab9[15] ^                  ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[23] ^ ngeab9[26] ^ ngeab9[28] ^ ngeab9[29];   fc1b075[10] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[55] ^                   gb755ca[52] ^ gb755ca[50] ^ gb755ca[42] ^ gb755ca[40] ^ gb755ca[39] ^ gb755ca[36] ^ gb755ca[35] ^                   gb755ca[33] ^ gb755ca[32] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[26] ^ gb755ca[19] ^                   gb755ca[16] ^ gb755ca[14] ^ gb755ca[13] ^ gb755ca[9] ^ gb755ca[5] ^ gb755ca[3] ^ gb755ca[2] ^                   gb755ca[0] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[3] ^ ngeab9[4] ^ ngeab9[7] ^ ngeab9[8] ^ ngeab9[10] ^                   ngeab9[18] ^ ngeab9[20] ^ ngeab9[23] ^ ngeab9[24] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[28] ^                   ngeab9[30] ^ ngeab9[31];   fc1b075[11] = gb755ca[59] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[51] ^                   gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[41] ^                   gb755ca[40] ^ gb755ca[36] ^ gb755ca[33] ^ gb755ca[31] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[26] ^                   gb755ca[25] ^ gb755ca[24] ^ gb755ca[20] ^ gb755ca[17] ^ gb755ca[16] ^ gb755ca[15] ^ gb755ca[14] ^                   gb755ca[12] ^ gb755ca[9] ^ gb755ca[4] ^ gb755ca[3] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[1] ^ ngeab9[4] ^                   ngeab9[8] ^ ngeab9[9] ^ ngeab9[11] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[15] ^ ngeab9[16] ^                   ngeab9[18] ^ ngeab9[19] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[24] ^ ngeab9[25] ^ ngeab9[26] ^                   ngeab9[27];   fc1b075[12] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[54] ^ gb755ca[53] ^                   gb755ca[52] ^ gb755ca[51] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[42] ^                   gb755ca[41] ^ gb755ca[31] ^ gb755ca[30] ^ gb755ca[27] ^ gb755ca[24] ^ gb755ca[21] ^ gb755ca[18] ^                   gb755ca[17] ^ gb755ca[15] ^ gb755ca[13] ^ gb755ca[12] ^ gb755ca[9] ^ gb755ca[6] ^ gb755ca[5] ^                   gb755ca[4] ^ gb755ca[2] ^ gb755ca[1] ^ gb755ca[0] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[14] ^                   ngeab9[15] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^                   ngeab9[24] ^ ngeab9[25] ^ ngeab9[27] ^ ngeab9[29] ^ ngeab9[31];   fc1b075[13] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[53] ^                   gb755ca[52] ^ gb755ca[51] ^ gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[43] ^ gb755ca[42] ^                   gb755ca[32] ^ gb755ca[31] ^ gb755ca[28] ^ gb755ca[25] ^ gb755ca[22] ^ gb755ca[19] ^ gb755ca[18] ^                   gb755ca[16] ^ gb755ca[14] ^ gb755ca[13] ^ gb755ca[10] ^ gb755ca[7] ^ gb755ca[6] ^ gb755ca[5] ^                   gb755ca[3] ^ gb755ca[2] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[10] ^ ngeab9[11] ^ ngeab9[15] ^                   ngeab9[16] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[23] ^                   ngeab9[25] ^ ngeab9[26] ^ ngeab9[28] ^ ngeab9[30];   fc1b075[14] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^                   gb755ca[53] ^ gb755ca[52] ^ gb755ca[51] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[44] ^ gb755ca[43] ^                   gb755ca[33] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[26] ^ gb755ca[23] ^ gb755ca[20] ^ gb755ca[19] ^                   gb755ca[17] ^ gb755ca[15] ^ gb755ca[14] ^ gb755ca[11] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[6] ^                   gb755ca[4] ^ gb755ca[3] ^ gb755ca[2] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[11] ^ ngeab9[12] ^                   ngeab9[16] ^ ngeab9[17] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[23] ^                   ngeab9[24] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[29] ^ ngeab9[31];   fc1b075[15] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^                   gb755ca[53] ^ gb755ca[52] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[34] ^                   gb755ca[33] ^ gb755ca[30] ^ gb755ca[27] ^ gb755ca[24] ^ gb755ca[21] ^ gb755ca[20] ^ gb755ca[18] ^                   gb755ca[16] ^ gb755ca[15] ^ gb755ca[12] ^ gb755ca[9] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[5] ^                   gb755ca[4] ^ gb755ca[3] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[17] ^                   ngeab9[18] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[24] ^ ngeab9[25] ^                   ngeab9[27] ^ ngeab9[28] ^ ngeab9[30];   fc1b075[16] = gb755ca[57] ^ gb755ca[56] ^ gb755ca[51] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[44] ^                   gb755ca[37] ^ gb755ca[35] ^ gb755ca[32] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[26] ^ gb755ca[24] ^                   gb755ca[22] ^ gb755ca[21] ^ gb755ca[19] ^ gb755ca[17] ^ gb755ca[13] ^ gb755ca[12] ^ gb755ca[8] ^                   gb755ca[5] ^ gb755ca[4] ^ gb755ca[0] ^ ngeab9[0] ^ ngeab9[3] ^ ngeab9[5] ^ ngeab9[12] ^ ngeab9[14] ^                   ngeab9[15] ^ ngeab9[16] ^ ngeab9[19] ^ ngeab9[24] ^ ngeab9[25];   fc1b075[17] = gb755ca[58] ^ gb755ca[57] ^ gb755ca[52] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[45] ^                   gb755ca[38] ^ gb755ca[36] ^ gb755ca[33] ^ gb755ca[31] ^ gb755ca[30] ^ gb755ca[27] ^ gb755ca[25] ^                   gb755ca[23] ^ gb755ca[22] ^ gb755ca[20] ^ gb755ca[18] ^ gb755ca[14] ^ gb755ca[13] ^ gb755ca[9] ^                   gb755ca[6] ^ gb755ca[5] ^ gb755ca[1] ^ ngeab9[1] ^ ngeab9[4] ^ ngeab9[6] ^ ngeab9[13] ^ ngeab9[15] ^                   ngeab9[16] ^ ngeab9[17] ^ ngeab9[20] ^ ngeab9[25] ^ ngeab9[26];   fc1b075[18] = gb755ca[59] ^ gb755ca[58] ^ gb755ca[53] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[46] ^                   gb755ca[39] ^ gb755ca[37] ^ gb755ca[34] ^ gb755ca[32] ^ gb755ca[31] ^ gb755ca[28] ^ gb755ca[26] ^                   gb755ca[24] ^ gb755ca[23] ^ gb755ca[21] ^ gb755ca[19] ^ gb755ca[15] ^ gb755ca[14] ^ gb755ca[10] ^                   gb755ca[7] ^ gb755ca[6] ^ gb755ca[2] ^ ngeab9[0] ^ ngeab9[2] ^ ngeab9[5] ^ ngeab9[7] ^ ngeab9[14] ^                   ngeab9[16] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[21] ^ ngeab9[26] ^ ngeab9[27];   fc1b075[19] = gb755ca[60] ^ gb755ca[59] ^ gb755ca[54] ^ gb755ca[51] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[47] ^                   gb755ca[40] ^ gb755ca[38] ^ gb755ca[35] ^ gb755ca[33] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[27] ^                   gb755ca[25] ^ gb755ca[24] ^ gb755ca[22] ^ gb755ca[20] ^ gb755ca[16] ^ gb755ca[15] ^ gb755ca[11] ^                   gb755ca[8] ^ gb755ca[7] ^ gb755ca[3] ^ ngeab9[0] ^ ngeab9[1] ^ ngeab9[3] ^ ngeab9[6] ^ ngeab9[8] ^                   ngeab9[15] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[22] ^ ngeab9[27] ^ ngeab9[28];   fc1b075[20] = gb755ca[61] ^ gb755ca[60] ^ gb755ca[55] ^ gb755ca[52] ^ gb755ca[51] ^ gb755ca[50] ^ gb755ca[48] ^                   gb755ca[41] ^ gb755ca[39] ^ gb755ca[36] ^ gb755ca[34] ^ gb755ca[33] ^ gb755ca[30] ^ gb755ca[28] ^                   gb755ca[26] ^ gb755ca[25] ^ gb755ca[23] ^ gb755ca[21] ^ gb755ca[17] ^ gb755ca[16] ^ gb755ca[12] ^                   gb755ca[9] ^ gb755ca[8] ^ gb755ca[4] ^ ngeab9[1] ^ ngeab9[2] ^ ngeab9[4] ^ ngeab9[7] ^ ngeab9[9] ^                   ngeab9[16] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[23] ^ ngeab9[28] ^ ngeab9[29];   fc1b075[21] = gb755ca[62] ^ gb755ca[61] ^ gb755ca[56] ^ gb755ca[53] ^ gb755ca[52] ^ gb755ca[51] ^ gb755ca[49] ^                   gb755ca[42] ^ gb755ca[40] ^ gb755ca[37] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[31] ^ gb755ca[29] ^                   gb755ca[27] ^ gb755ca[26] ^ gb755ca[24] ^ gb755ca[22] ^ gb755ca[18] ^ gb755ca[17] ^ gb755ca[13] ^                   gb755ca[10] ^ gb755ca[9] ^ gb755ca[5] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[5] ^ ngeab9[8] ^ ngeab9[10] ^                   ngeab9[17] ^ ngeab9[19] ^ 
ngeab9[20] ^ ngeab9[21] ^ ngeab9[24] ^ ngeab9[29] ^ ngeab9[30];   fc1b075[22] = gb755ca[62] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[52] ^                   gb755ca[48] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[41] ^ gb755ca[38] ^                   gb755ca[37] ^ gb755ca[36] ^ gb755ca[35] ^ gb755ca[34] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[27] ^                   gb755ca[26] ^ gb755ca[24] ^ gb755ca[23] ^ gb755ca[19] ^ gb755ca[18] ^ gb755ca[16] ^ gb755ca[14] ^                   gb755ca[12] ^ gb755ca[11] ^ gb755ca[9] ^ gb755ca[0] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[4] ^                   ngeab9[5] ^ ngeab9[6] ^ ngeab9[9] ^ ngeab9[11] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[15] ^                   ngeab9[16] ^ ngeab9[20] ^ ngeab9[23] ^ ngeab9[25] ^ ngeab9[26] ^ ngeab9[28] ^ ngeab9[29] ^                   ngeab9[30];   fc1b075[23] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[54] ^ gb755ca[50] ^                   gb755ca[49] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[42] ^ gb755ca[39] ^ gb755ca[38] ^ gb755ca[36] ^                   gb755ca[35] ^ gb755ca[34] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[20] ^                   gb755ca[19] ^ gb755ca[17] ^ gb755ca[16] ^ gb755ca[15] ^ gb755ca[13] ^ gb755ca[9] ^ gb755ca[6] ^                   gb755ca[1] ^ gb755ca[0] ^ ngeab9[2] ^ ngeab9[3] ^ ngeab9[4] ^ ngeab9[6] ^ ngeab9[7] ^ ngeab9[10] ^                   ngeab9[14] ^ ngeab9[15] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[24] ^                   ngeab9[27] ^ ngeab9[28] ^ ngeab9[30];   fc1b075[24] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[55] ^ gb755ca[51] ^                   gb755ca[50] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[43] ^ gb755ca[40] ^ gb755ca[39] ^ gb755ca[37] ^                   gb755ca[36] ^ gb755ca[35] ^ gb755ca[32] ^ gb755ca[30] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[21] ^                   gb755ca[20] ^ gb755ca[18] ^ gb755ca[17] ^ gb755ca[16] ^ gb755ca[14] ^ gb755ca[10] ^ gb755ca[7] ^                   gb755ca[2] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[3] ^ ngeab9[4] ^ ngeab9[5] ^ ngeab9[7] ^ ngeab9[8] ^                   ngeab9[11] ^ ngeab9[15] ^ ngeab9[16] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[23] ^ ngeab9[24] ^                   ngeab9[25] ^ ngeab9[28] ^ ngeab9[29] ^ ngeab9[31];   fc1b075[25] = gb755ca[62] ^ gb755ca[61] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[52] ^ gb755ca[51] ^                   gb755ca[49] ^ gb755ca[48] ^ gb755ca[44] ^ gb755ca[41] ^ gb755ca[40] ^ gb755ca[38] ^ gb755ca[37] ^                   gb755ca[36] ^ gb755ca[33] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[22] ^ gb755ca[21] ^                   gb755ca[19] ^ gb755ca[18] ^ gb755ca[17] ^ gb755ca[15] ^ gb755ca[11] ^ gb755ca[8] ^ gb755ca[3] ^                   gb755ca[2] ^ ngeab9[1] ^ ngeab9[4] ^ ngeab9[5] ^ ngeab9[6] ^ ngeab9[8] ^ ngeab9[9] ^ ngeab9[12] ^                   ngeab9[16] ^ ngeab9[17] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[24] ^ ngeab9[25] ^ ngeab9[26] ^                   ngeab9[29] ^ ngeab9[30];   fc1b075[26] = gb755ca[62] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[54] ^                   gb755ca[52] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[47] ^ gb755ca[44] ^ gb755ca[42] ^ gb755ca[41] ^                   gb755ca[39] ^ gb755ca[38] ^ gb755ca[31] ^ gb755ca[28] ^ gb755ca[26] ^ gb755ca[25] ^ gb755ca[24] ^                   gb755ca[23] ^ gb755ca[22] ^ gb755ca[20] ^ gb755ca[19] ^ gb755ca[18] ^ gb755ca[10] ^ gb755ca[6] ^                   gb755ca[4] ^ gb755ca[3] ^ gb755ca[0] ^ ngeab9[6] ^ ngeab9[7] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[12] ^                   ngeab9[15] ^ ngeab9[16] ^ ngeab9[17] ^ ngeab9[20] ^ ngeab9[22] ^ ngeab9[23] ^ ngeab9[25] ^                   ngeab9[27] ^ ngeab9[28] ^ ngeab9[29] ^ ngeab9[30];   fc1b075[27] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[61] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[55] ^                   gb755ca[53] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[48] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^                   gb755ca[40] ^ gb755ca[39] ^ gb755ca[32] ^ gb755ca[29] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[25] ^                   gb755ca[24] ^ gb755ca[23] ^ gb755ca[21] ^ gb755ca[20] ^ gb755ca[19] ^ gb755ca[11] ^ gb755ca[7] ^                   gb755ca[5] ^ gb755ca[4] ^ gb755ca[1] ^ ngeab9[0] ^ ngeab9[7] ^ ngeab9[8] ^ ngeab9[10] ^ ngeab9[11] ^                   ngeab9[13] ^ ngeab9[16] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[21] ^ ngeab9[23] ^ ngeab9[24] ^                   ngeab9[26] ^ ngeab9[28] ^ ngeab9[29] ^ ngeab9[30] ^ ngeab9[31];   fc1b075[28] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[56] ^ gb755ca[54] ^                   gb755ca[51] ^ gb755ca[50] ^ gb755ca[49] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[41] ^                   gb755ca[40] ^ gb755ca[33] ^ gb755ca[30] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[25] ^                   gb755ca[24] ^ gb755ca[22] ^ gb755ca[21] ^ gb755ca[20] ^ gb755ca[12] ^ gb755ca[8] ^ gb755ca[6] ^                   gb755ca[5] ^ gb755ca[2] ^ ngeab9[1] ^ ngeab9[8] ^ ngeab9[9] ^ ngeab9[11] ^ ngeab9[12] ^                   ngeab9[14] ^ ngeab9[17] ^ ngeab9[18] ^ ngeab9[19] ^ ngeab9[22] ^ ngeab9[24] ^ ngeab9[25] ^                   ngeab9[27] ^ ngeab9[29] ^ ngeab9[30] ^ ngeab9[31];   fc1b075[29] = gb755ca[63] ^ gb755ca[62] ^ gb755ca[60] ^ gb755ca[58] ^ gb755ca[57] ^ gb755ca[55] ^ gb755ca[52] ^                   gb755ca[51] ^ gb755ca[50] ^ gb755ca[47] ^ gb755ca[45] ^ gb755ca[44] ^ gb755ca[42] ^ gb755ca[41] ^                   gb755ca[34] ^ gb755ca[31] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[25] ^                   gb755ca[23] ^ gb755ca[22] ^ gb755ca[21] ^ gb755ca[13] ^ gb755ca[9] ^ gb755ca[7] ^ gb755ca[6] ^                   gb755ca[3] ^ ngeab9[2] ^ ngeab9[9] ^ ngeab9[10] ^ ngeab9[12] ^ ngeab9[13] ^ ngeab9[15] ^                   ngeab9[18] ^ ngeab9[19] ^ ngeab9[20] ^ ngeab9[23] ^ ngeab9[25] ^ ngeab9[26] ^ ngeab9[28] ^                   ngeab9[30] ^ ngeab9[31];   fc1b075[30] = gb755ca[63] ^ gb755ca[61] ^ gb755ca[59] ^ gb755ca[58] ^ gb755ca[56] ^ gb755ca[53] ^ gb755ca[52] ^                   gb755ca[51] ^ gb755ca[48] ^ gb755ca[46] ^ gb755ca[45] ^ gb755ca[43] ^ gb755ca[42] ^ gb755ca[35] ^                   gb755ca[32] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[26] ^ gb755ca[24] ^                   gb755ca[23] ^ gb755ca[22] ^ gb755ca[14] ^ gb755ca[10] ^ gb755ca[8] ^ gb755ca[7] ^ gb755ca[4] ^                   ngeab9[0] ^ ngeab9[3] ^ ngeab9[10] ^ ngeab9[11] ^ ngeab9[13] ^ ngeab9[14] ^ ngeab9[16] ^                   ngeab9[19] ^ ngeab9[20] ^ ngeab9[21] ^ ngeab9[24] ^ ngeab9[26] ^ ngeab9[27] ^ ngeab9[29] ^                   ngeab9[31];   fc1b075[31] = gb755ca[62] ^ gb755ca[60] ^ gb755ca[59] ^ gb755ca[57] ^ gb755ca[54] ^ gb755ca[53] ^ gb755ca[52] ^                   gb755ca[49] ^ gb755ca[47] ^ gb755ca[46] ^ gb755ca[44] ^ gb755ca[43] ^ gb755ca[36] ^ gb755ca[33] ^                   gb755ca[31] ^ gb755ca[30] ^ gb755ca[29] ^ gb755ca[28] ^ gb755ca[27] ^ gb755ca[25] ^ gb755ca[24] ^                   gb755ca[23] ^ gb755ca[15] ^ gb755ca[11] ^ gb755ca[9] ^ gb755ca[8] ^ gb755ca[5] ^ ngeab9[1] ^                   ngeab9[4] ^ ngeab9[11] ^ ngeab9[12] ^ ngeab9[14] ^ ngeab9[15] ^ ngeab9[17] ^ ngeab9[20] ^                   ngeab9[21] ^ ngeab9[22] ^ ngeab9[25] ^ ngeab9[27] ^ ngeab9[28] ^ ngeab9[30];   end      always @* begin   xlaae54 = qtf7c10[63:16];   qib953a = {          xlaae54[40], xlaae54[41], xlaae54[42], xlaae54[43], xlaae54[44], xlaae54[45], xlaae54[46], xlaae54[47],          xlaae54[32], xlaae54[33], xlaae54[34], xlaae54[35], xlaae54[36], xlaae54[37], xlaae54[38], xlaae54[39],          xlaae54[24], xlaae54[25], xlaae54[26], xlaae54[27], xlaae54[28], xlaae54[29], xlaae54[30], xlaae54[31],          xlaae54[16], xlaae54[17], xlaae54[18], xlaae54[19], xlaae54[20], xlaae54[21], xlaae54[22], xlaae54[23],          xlaae54[8], xlaae54[9], xlaae54[10], xlaae54[11], xlaae54[12], xlaae54[13], xlaae54[14], xlaae54[15],          xlaae54[0], xlaae54[1], xlaae54[2], xlaae54[3], xlaae54[4], xlaae54[5], xlaae54[6], xlaae54
[7]         } ;   by572a7 = crc_reg64;   dzd83aa[0] = qib953a[47] ^ qib953a[45] ^ qib953a[44] ^ qib953a[37] ^ qib953a[34] ^ qib953a[32] ^ qib953a[31] ^                qib953a[30] ^ qib953a[29] ^ qib953a[28] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^ qib953a[16] ^                qib953a[12] ^ qib953a[10] ^ qib953a[9] ^ qib953a[6] ^ qib953a[0] ^ by572a7[0] ^ by572a7[8] ^                by572a7[9] ^ by572a7[10] ^ by572a7[12] ^ by572a7[13] ^ by572a7[14] ^ by572a7[15] ^ by572a7[16] ^                by572a7[18] ^ by572a7[21] ^ by572a7[28] ^ by572a7[29] ^ by572a7[31];   dzd83aa[1] = qib953a[47] ^ qib953a[46] ^ qib953a[44] ^ qib953a[38] ^ qib953a[37] ^ qib953a[35] ^ qib953a[34] ^                qib953a[33] ^ qib953a[28] ^ qib953a[27] ^ qib953a[24] ^ qib953a[17] ^ qib953a[16] ^ qib953a[13] ^                qib953a[12] ^ qib953a[11] ^ qib953a[9] ^ qib953a[7] ^ qib953a[6] ^ qib953a[1] ^ qib953a[0] ^                by572a7[0] ^ by572a7[1] ^ by572a7[8] ^ by572a7[11] ^ by572a7[12] ^ by572a7[17] ^ by572a7[18] ^                by572a7[19] ^ by572a7[21] ^ by572a7[22] ^ by572a7[28] ^ by572a7[30] ^ by572a7[31];   dzd83aa[2] = qib953a[44] ^ qib953a[39] ^ qib953a[38] ^ qib953a[37] ^ qib953a[36] ^ qib953a[35] ^ qib953a[32] ^                qib953a[31] ^ qib953a[30] ^ qib953a[26] ^ qib953a[24] ^ qib953a[18] ^ qib953a[17] ^ qib953a[16] ^                qib953a[14] ^ qib953a[13] ^ qib953a[9] ^ qib953a[8] ^ qib953a[7] ^ qib953a[6] ^ qib953a[2] ^                qib953a[1] ^ qib953a[0] ^ by572a7[0] ^ by572a7[1] ^ by572a7[2] ^ by572a7[8] ^ by572a7[10] ^ by572a7[14] ^                by572a7[15] ^ by572a7[16] ^ by572a7[19] ^ by572a7[20] ^ by572a7[21] ^ by572a7[22] ^ by572a7[23] ^                by572a7[28];   dzd83aa[3] = qib953a[45] ^ qib953a[40] ^ qib953a[39] ^ qib953a[38] ^ qib953a[37] ^ qib953a[36] ^ qib953a[33] ^                qib953a[32] ^ qib953a[31] ^ qib953a[27] ^ qib953a[25] ^ qib953a[19] ^ qib953a[18] ^ qib953a[17] ^                qib953a[15] ^ qib953a[14] ^ qib953a[10] ^ qib953a[9] ^ qib953a[8] ^ qib953a[7] ^ qib953a[3] ^                qib953a[2] ^ qib953a[1] ^ by572a7[1] ^ by572a7[2] ^ by572a7[3] ^ by572a7[9] ^ by572a7[11] ^ by572a7[15] ^                by572a7[16] ^ by572a7[17] ^ by572a7[20] ^ by572a7[21] ^ by572a7[22] ^ by572a7[23] ^ by572a7[24] ^                by572a7[29];   dzd83aa[4] = qib953a[47] ^ qib953a[46] ^ qib953a[45] ^ qib953a[44] ^ qib953a[41] ^ qib953a[40] ^ qib953a[39] ^                qib953a[38] ^ qib953a[33] ^ qib953a[31] ^ qib953a[30] ^ qib953a[29] ^ qib953a[25] ^ qib953a[24] ^                qib953a[20] ^ qib953a[19] ^ qib953a[18] ^ qib953a[15] ^ qib953a[12] ^ qib953a[11] ^ qib953a[8] ^                qib953a[6] ^ qib953a[4] ^ qib953a[3] ^ qib953a[2] ^ qib953a[0] ^ by572a7[2] ^ by572a7[3] ^ by572a7[4] ^                by572a7[8] ^ by572a7[9] ^ by572a7[13] ^ by572a7[14] ^ by572a7[15] ^ by572a7[17] ^ by572a7[22] ^                by572a7[23] ^ by572a7[24] ^ by572a7[25] ^ by572a7[28] ^ by572a7[29] ^ by572a7[30] ^ by572a7[31];   dzd83aa[5] = qib953a[46] ^ qib953a[44] ^ qib953a[42] ^ qib953a[41] ^ qib953a[40] ^ qib953a[39] ^ qib953a[37] ^                qib953a[29] ^ qib953a[28] ^ qib953a[24] ^ qib953a[21] ^ qib953a[20] ^ qib953a[19] ^ qib953a[13] ^                qib953a[10] ^ qib953a[7] ^ qib953a[6] ^ qib953a[5] ^ qib953a[4] ^ qib953a[3] ^ qib953a[1] ^ qib953a[0] ^                by572a7[3] ^ by572a7[4] ^ by572a7[5] ^ by572a7[8] ^ by572a7[12] ^ by572a7[13] ^ by572a7[21] ^                by572a7[23] ^ by572a7[24] ^ by572a7[25] ^ by572a7[26] ^ by572a7[28] ^ by572a7[30];   dzd83aa[6] = qib953a[47] ^ qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[41] ^ qib953a[40] ^ qib953a[38] ^                qib953a[30] ^ qib953a[29] ^ qib953a[25] ^ qib953a[22] ^ qib953a[21] ^ qib953a[20] ^ qib953a[14] ^                qib953a[11] ^ qib953a[8] ^ qib953a[7] ^ qib953a[6] ^ qib953a[5] ^ qib953a[4] ^ qib953a[2] ^ qib953a[1] ^                by572a7[4] ^ by572a7[5] ^ by572a7[6] ^ by572a7[9] ^ by572a7[13] ^ by572a7[14] ^ by572a7[22] ^                by572a7[24] ^ by572a7[25] ^ by572a7[26] ^ by572a7[27] ^ by572a7[29] ^ by572a7[31];   dzd83aa[7] = qib953a[47] ^ qib953a[46] ^ qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[41] ^ qib953a[39] ^                qib953a[37] ^ qib953a[34] ^ qib953a[32] ^ qib953a[29] ^ qib953a[28] ^ qib953a[25] ^ qib953a[24] ^                qib953a[23] ^ qib953a[22] ^ qib953a[21] ^ qib953a[16] ^ qib953a[15] ^ qib953a[10] ^ qib953a[8] ^                qib953a[7] ^ qib953a[5] ^ qib953a[3] ^ qib953a[2] ^ qib953a[0] ^ by572a7[0] ^ by572a7[5] ^ by572a7[6] ^                by572a7[7] ^ by572a7[8] ^ by572a7[9] ^ by572a7[12] ^ by572a7[13] ^ by572a7[16] ^ by572a7[18] ^                by572a7[21] ^ by572a7[23] ^ by572a7[25] ^ by572a7[26] ^ by572a7[27] ^ by572a7[29] ^ by572a7[30] ^                by572a7[31];   dzd83aa[8] = qib953a[46] ^ qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[40] ^ qib953a[38] ^ qib953a[37] ^                qib953a[35] ^ qib953a[34] ^ qib953a[33] ^ qib953a[32] ^ qib953a[31] ^ qib953a[28] ^ qib953a[23] ^                qib953a[22] ^ qib953a[17] ^ qib953a[12] ^ qib953a[11] ^ qib953a[10] ^ qib953a[8] ^ qib953a[4] ^                qib953a[3] ^ qib953a[1] ^ qib953a[0] ^ by572a7[1] ^ by572a7[6] ^ by572a7[7] ^ by572a7[12] ^ by572a7[15] ^                by572a7[16] ^ by572a7[17] ^ by572a7[18] ^ by572a7[19] ^ by572a7[21] ^ by572a7[22] ^ by572a7[24] ^                by572a7[26] ^ by572a7[27] ^ by572a7[29] ^ by572a7[30];   dzd83aa[9] = qib953a[47] ^ qib953a[46] ^ qib953a[44] ^ qib953a[43] ^ qib953a[41] ^ qib953a[39] ^ qib953a[38] ^                qib953a[36] ^ qib953a[35] ^ qib953a[34] ^ qib953a[33] ^ qib953a[32] ^ qib953a[29] ^ qib953a[24] ^                qib953a[23] ^ qib953a[18] ^ qib953a[13] ^ qib953a[12] ^ qib953a[11] ^ qib953a[9] ^ qib953a[5] ^                qib953a[4] ^ qib953a[2] ^ qib953a[1] ^ by572a7[2] ^ by572a7[7] ^ by572a7[8] ^ by572a7[13] ^ by572a7[16] ^                by572a7[17] ^ by572a7[18] ^ by572a7[19] ^ by572a7[20] ^ by572a7[22] ^ by572a7[23] ^ by572a7[25] ^                by572a7[27] ^ by572a7[28] ^ by572a7[30] ^ by572a7[31];   dzd83aa[10] = qib953a[42] ^ qib953a[40] ^ qib953a[39] ^ qib953a[36] ^ qib953a[35] ^ qib953a[33] ^ qib953a[32] ^                 qib953a[31] ^ qib953a[29] ^ qib953a[28] ^ qib953a[26] ^ qib953a[19] ^ qib953a[16] ^ qib953a[14] ^                 qib953a[13] ^ qib953a[9] ^ qib953a[5] ^ qib953a[3] ^ qib953a[2] ^ qib953a[0] ^ by572a7[0] ^ by572a7[3] ^                 by572a7[10] ^ by572a7[12] ^ by572a7[13] ^ by572a7[15] ^ by572a7[16] ^ by572a7[17] ^ by572a7[19] ^                 by572a7[20] ^ by572a7[23] ^ by572a7[24] ^ by572a7[26];   dzd83aa[11] = qib953a[47] ^ qib953a[45] ^ qib953a[44] ^ qib953a[43] ^ qib953a[41] ^ qib953a[40] ^ qib953a[36] ^                 qib953a[33] ^ qib953a[31] ^ qib953a[28] ^ qib953a[27] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^                 qib953a[20] ^ qib953a[17] ^ qib953a[16] ^ qib953a[15] ^ qib953a[14] ^ qib953a[12] ^ qib953a[9] ^                 qib953a[4] ^ qib953a[3] ^ qib953a[1] ^ qib953a[0] ^ by572a7[0] ^ by572a7[1] ^ by572a7[4] ^ by572a7[8] ^                 by572a7[9] ^ by572a7[10] ^ by572a7[11] ^ by572a7[12] ^ by572a7[15] ^ by572a7[17] ^ by572a7[20] ^                 by572a7[24] ^ by572a7[25] ^ by572a7[27] ^ by572a7[28] ^ by572a7[29] ^ by572a7[31];   dzd83aa[12] = qib953a[47] ^ qib953a[46] ^ qib953a[42] ^ qib953a[41] ^ qib953a[31] ^ qib953a[30] ^ qib953a[27] ^                 qib953a[24] ^ qib953a[21] ^ qib953a[18] ^ qib953a[17] ^ qib953a[15] ^ qib953a[13] ^ qib953a[12] ^                 qib953a[9] ^ qib953a[6] ^ qib953a[5] ^ qib953a[4] ^ qib953a[2] ^ qib953a[1] ^ qib953a[0] ^ by572a7[1] ^                 by572a7[2] ^ by572a7[5] ^ by572a7[8] ^ by572a7[11] ^ by572a7[14] ^ by572a7[15] ^ by572a7[25] ^                 by572a7[26] ^ by572a7[30] ^ by572a7[31];   dzd83aa[13] = qib953a[47] ^ qib953a[43] ^ qib953a[42] ^ qib953a[32] ^ qib953a[31] ^ qib953a[28] ^ qib953a[25] ^                 qib953a[22] ^ qib953a[19] ^ qib953a[18] ^ qib953a[16] ^ qib953a[14] ^ qib953a[13] ^ qib953a[10] ^                 qib953a[7] ^ qib953a[6] ^ qib953a[5] ^ qib953a[3] ^ qib953a[2] ^ qib953a[1] ^ by572a7[0] ^ by572a7[2] ^                 by572a7[3] ^ by572a7[6] ^
 by572a7[9] ^ by572a7[12] ^ by572a7[15] ^ by572a7[16] ^ by572a7[26] ^                 by572a7[27] ^ by572a7[31];   dzd83aa[14] = qib953a[44] ^ qib953a[43] ^ qib953a[33] ^ qib953a[32] ^ qib953a[29] ^ qib953a[26] ^ qib953a[23] ^                 qib953a[20] ^ qib953a[19] ^ qib953a[17] ^ qib953a[15] ^ qib953a[14] ^ qib953a[11] ^ qib953a[8] ^                 qib953a[7] ^ qib953a[6] ^ qib953a[4] ^ qib953a[3] ^ qib953a[2] ^ by572a7[1] ^ by572a7[3] ^ by572a7[4] ^                 by572a7[7] ^ by572a7[10] ^ by572a7[13] ^ by572a7[16] ^ by572a7[17] ^ by572a7[27] ^ by572a7[28];   dzd83aa[15] = qib953a[45] ^ qib953a[44] ^ qib953a[34] ^ qib953a[33] ^ qib953a[30] ^ qib953a[27] ^ qib953a[24] ^                 qib953a[21] ^ qib953a[20] ^ qib953a[18] ^ qib953a[16] ^ qib953a[15] ^ qib953a[12] ^ qib953a[9] ^                 qib953a[8] ^ qib953a[7] ^ qib953a[5] ^ qib953a[4] ^ qib953a[3] ^ by572a7[0] ^ by572a7[2] ^ by572a7[4] ^                 by572a7[5] ^ by572a7[8] ^ by572a7[11] ^ by572a7[14] ^ by572a7[17] ^ by572a7[18] ^ by572a7[28] ^                 by572a7[29];   dzd83aa[16] = qib953a[47] ^ qib953a[46] ^ qib953a[44] ^ qib953a[37] ^ qib953a[35] ^ qib953a[32] ^ qib953a[30] ^                 qib953a[29] ^ qib953a[26] ^ qib953a[24] ^ qib953a[22] ^ qib953a[21] ^ qib953a[19] ^ qib953a[17] ^                 qib953a[13] ^ qib953a[12] ^ qib953a[8] ^ qib953a[5] ^ qib953a[4] ^ qib953a[0] ^ by572a7[1] ^                 by572a7[3] ^ by572a7[5] ^ by572a7[6] ^ by572a7[8] ^ by572a7[10] ^ by572a7[13] ^ by572a7[14] ^                 by572a7[16] ^ by572a7[19] ^ by572a7[21] ^ by572a7[28] ^ by572a7[30] ^ by572a7[31];   dzd83aa[17] = qib953a[47] ^ qib953a[45] ^ qib953a[38] ^ qib953a[36] ^ qib953a[33] ^ qib953a[31] ^ qib953a[30] ^                 qib953a[27] ^ qib953a[25] ^ qib953a[23] ^ qib953a[22] ^ qib953a[20] ^ qib953a[18] ^ qib953a[14] ^                 qib953a[13] ^ qib953a[9] ^ qib953a[6] ^ qib953a[5] ^ qib953a[1] ^ by572a7[2] ^ by572a7[4] ^ by572a7[6] ^                 by572a7[7] ^ by572a7[9] ^ by572a7[11] ^ by572a7[14] ^ by572a7[15] ^ by572a7[17] ^ by572a7[20] ^                 by572a7[22] ^ by572a7[29] ^ by572a7[31];   dzd83aa[18] = qib953a[46] ^ qib953a[39] ^ qib953a[37] ^ qib953a[34] ^ qib953a[32] ^ qib953a[31] ^ qib953a[28] ^                 qib953a[26] ^ qib953a[24] ^ qib953a[23] ^ qib953a[21] ^ qib953a[19] ^ qib953a[15] ^ qib953a[14] ^                 qib953a[10] ^ qib953a[7] ^ qib953a[6] ^ qib953a[2] ^ by572a7[3] ^ by572a7[5] ^ by572a7[7] ^ by572a7[8] ^                 by572a7[10] ^ by572a7[12] ^ by572a7[15] ^ by572a7[16] ^ by572a7[18] ^ by572a7[21] ^ by572a7[23] ^                 by572a7[30];   dzd83aa[19] = qib953a[47] ^ qib953a[40] ^ qib953a[38] ^ qib953a[35] ^ qib953a[33] ^ qib953a[32] ^ qib953a[29] ^                 qib953a[27] ^ qib953a[25] ^ qib953a[24] ^ qib953a[22] ^ qib953a[20] ^ qib953a[16] ^ qib953a[15] ^                 qib953a[11] ^ qib953a[8] ^ qib953a[7] ^ qib953a[3] ^ by572a7[0] ^ by572a7[4] ^ by572a7[6] ^ by572a7[8] ^                 by572a7[9] ^ by572a7[11] ^ by572a7[13] ^ by572a7[16] ^ by572a7[17] ^ by572a7[19] ^ by572a7[22] ^                 by572a7[24] ^ by572a7[31];   dzd83aa[20] = qib953a[41] ^ qib953a[39] ^ qib953a[36] ^ qib953a[34] ^ qib953a[33] ^ qib953a[30] ^ qib953a[28] ^                 qib953a[26] ^ qib953a[25] ^ qib953a[23] ^ qib953a[21] ^ qib953a[17] ^ qib953a[16] ^ qib953a[12] ^                 qib953a[9] ^ qib953a[8] ^ qib953a[4] ^ by572a7[0] ^ by572a7[1] ^ by572a7[5] ^ by572a7[7] ^ by572a7[9] ^                 by572a7[10] ^ by572a7[12] ^ by572a7[14] ^ by572a7[17] ^ by572a7[18] ^ by572a7[20] ^ by572a7[23] ^                 by572a7[25];   dzd83aa[21] = qib953a[42] ^ qib953a[40] ^ qib953a[37] ^ qib953a[35] ^ qib953a[34] ^ qib953a[31] ^ qib953a[29] ^                 qib953a[27] ^ qib953a[26] ^ qib953a[24] ^ qib953a[22] ^ qib953a[18] ^ qib953a[17] ^ qib953a[13] ^                 qib953a[10] ^ qib953a[9] ^ qib953a[5] ^ by572a7[1] ^ by572a7[2] ^ by572a7[6] ^ by572a7[8] ^ by572a7[10] ^                 by572a7[11] ^ by572a7[13] ^ by572a7[15] ^ by572a7[18] ^ by572a7[19] ^ by572a7[21] ^ by572a7[24] ^                 by572a7[26];   dzd83aa[22] = qib953a[47] ^ qib953a[45] ^ qib953a[44] ^ qib953a[43] ^ qib953a[41] ^ qib953a[38] ^ qib953a[37] ^                 qib953a[36] ^ qib953a[35] ^ qib953a[34] ^ qib953a[31] ^ qib953a[29] ^ qib953a[27] ^ qib953a[26] ^                 qib953a[24] ^ qib953a[23] ^ qib953a[19] ^ qib953a[18] ^ qib953a[16] ^ qib953a[14] ^ qib953a[12] ^                 qib953a[11] ^ qib953a[9] ^ qib953a[0] ^ by572a7[0] ^ by572a7[2] ^ by572a7[3] ^ by572a7[7] ^ by572a7[8] ^                 by572a7[10] ^ by572a7[11] ^ by572a7[13] ^ by572a7[15] ^ by572a7[18] ^ by572a7[19] ^ by572a7[20] ^                 by572a7[21] ^ by572a7[22] ^ by572a7[25] ^ by572a7[27] ^ by572a7[28] ^ by572a7[29] ^ by572a7[31];   dzd83aa[23] = qib953a[47] ^ qib953a[46] ^ qib953a[42] ^ qib953a[39] ^ qib953a[38] ^ qib953a[36] ^ qib953a[35] ^                 qib953a[34] ^ qib953a[31] ^ qib953a[29] ^ qib953a[27] ^ qib953a[26] ^ qib953a[20] ^ qib953a[19] ^                 qib953a[17] ^ qib953a[16] ^ qib953a[15] ^ qib953a[13] ^ qib953a[9] ^ qib953a[6] ^ qib953a[1] ^                 qib953a[0] ^ by572a7[0] ^ by572a7[1] ^ by572a7[3] ^ by572a7[4] ^ by572a7[10] ^ by572a7[11] ^                 by572a7[13] ^ by572a7[15] ^ by572a7[18] ^ by572a7[19] ^ by572a7[20] ^ by572a7[22] ^ by572a7[23] ^                 by572a7[26] ^ by572a7[30] ^ by572a7[31];   dzd83aa[24] = qib953a[47] ^ qib953a[43] ^ qib953a[40] ^ qib953a[39] ^ qib953a[37] ^ qib953a[36] ^ qib953a[35] ^                 qib953a[32] ^ qib953a[30] ^ qib953a[28] ^ qib953a[27] ^ qib953a[21] ^ qib953a[20] ^ qib953a[18] ^                 qib953a[17] ^ qib953a[16] ^ qib953a[14] ^ qib953a[10] ^ qib953a[7] ^ qib953a[2] ^ qib953a[1] ^                 by572a7[0] ^ by572a7[1] ^ by572a7[2] ^ by572a7[4] ^ by572a7[5] ^ by572a7[11] ^ by572a7[12] ^                 by572a7[14] ^ by572a7[16] ^ by572a7[19] ^ by572a7[20] ^ by572a7[21] ^ by572a7[23] ^ by572a7[24] ^                 by572a7[27] ^ by572a7[31];   dzd83aa[25] = qib953a[44] ^ qib953a[41] ^ qib953a[40] ^ qib953a[38] ^ qib953a[37] ^ qib953a[36] ^ qib953a[33] ^                 qib953a[31] ^ qib953a[29] ^ qib953a[28] ^ qib953a[22] ^ qib953a[21] ^ qib953a[19] ^ qib953a[18] ^                 qib953a[17] ^ qib953a[15] ^ qib953a[11] ^ qib953a[8] ^ qib953a[3] ^ qib953a[2] ^ by572a7[1] ^                 by572a7[2] ^ by572a7[3] ^ by572a7[5] ^ by572a7[6] ^ by572a7[12] ^ by572a7[13] ^ by572a7[15] ^                 by572a7[17] ^ by572a7[20] ^ by572a7[21] ^ by572a7[22] ^ by572a7[24] ^ by572a7[25] ^ by572a7[28];   dzd83aa[26] = qib953a[47] ^ qib953a[44] ^ qib953a[42] ^ qib953a[41] ^ qib953a[39] ^ qib953a[38] ^ qib953a[31] ^                 qib953a[28] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^ qib953a[23] ^ qib953a[22] ^ qib953a[20] ^                 qib953a[19] ^ qib953a[18] ^ qib953a[10] ^ qib953a[6] ^ qib953a[4] ^ qib953a[3] ^ qib953a[0] ^                 by572a7[2] ^ by572a7[3] ^ by572a7[4] ^ by572a7[6] ^ by572a7[7] ^ by572a7[8] ^ by572a7[9] ^ by572a7[10] ^                 by572a7[12] ^ by572a7[15] ^ by572a7[22] ^ by572a7[23] ^ by572a7[25] ^ by572a7[26] ^ by572a7[28] ^                 by572a7[31];   dzd83aa[27] = qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[40] ^ qib953a[39] ^ qib953a[32] ^ qib953a[29] ^                 qib953a[27] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^ qib953a[23] ^ qib953a[21] ^ qib953a[20] ^                 qib953a[19] ^ qib953a[11] ^ qib953a[7] ^ qib953a[5] ^ qib953a[4] ^ qib953a[1] ^ by572a7[3] ^                 by572a7[4] ^ by572a7[5] ^ by572a7[7] ^ by572a7[8] ^ by572a7[9] ^ by572a7[10] ^ by572a7[11] ^                 by572a7[13] ^ by572a7[16] ^ by572a7[23] ^ by572a7[24] ^ by572a7[26] ^ by572a7[27] ^ by572a7[29];   dzd83aa[28] = qib953a[46] ^ qib953a[44] ^ qib953a[43] ^ qib953a[41] ^ qib953a[40] ^ qib953a[33] ^ qib953a[30] ^                 qib953a[28] ^ qib953a[27] ^ qib953a[26] ^ qib953a[25] ^ qib953a[24] ^ qib953a[22] ^ qib953a[21] ^                 qib953a[20] ^ qib953a[12] ^ qib953a[8] ^ qib953a[6] ^ qib953a[5] ^ qib953a[2] ^ by572a7[4] ^                 by572a7[5] ^ by572a7[6] ^ by572a7[8] ^ by572a7[9] ^ by572a7[10] ^ by572a7[11] ^ by572a7[12] ^
                 by572a7[14] ^ by572a7[17] ^ by572a7[24] ^ by572a7[25] ^ by572a7[27] ^ by572a7[28] ^ by572a7[30];   dzd83aa[29] = qib953a[47] ^ qib953a[45] ^ qib953a[44] ^ qib953a[42] ^ qib953a[41] ^ qib953a[34] ^ qib953a[31] ^                 qib953a[29] ^ qib953a[28] ^ qib953a[27] ^ qib953a[26] ^ qib953a[25] ^ qib953a[23] ^ qib953a[22] ^                 qib953a[21] ^ qib953a[13] ^ qib953a[9] ^ qib953a[7] ^ qib953a[6] ^ qib953a[3] ^ by572a7[5] ^                 by572a7[6] ^ by572a7[7] ^ by572a7[9] ^ by572a7[10] ^ by572a7[11] ^ by572a7[12] ^ by572a7[13] ^                 by572a7[15] ^ by572a7[18] ^ by572a7[25] ^ by572a7[26] ^ by572a7[28] ^ by572a7[29] ^ by572a7[31];   dzd83aa[30] = qib953a[46] ^ qib953a[45] ^ qib953a[43] ^ qib953a[42] ^ qib953a[35] ^ qib953a[32] ^ qib953a[30] ^                 qib953a[29] ^ qib953a[28] ^ qib953a[27] ^ qib953a[26] ^ qib953a[24] ^ qib953a[23] ^ qib953a[22] ^                 qib953a[14] ^ qib953a[10] ^ qib953a[8] ^ qib953a[7] ^ qib953a[4] ^ by572a7[6] ^ by572a7[7] ^                 by572a7[8] ^ by572a7[10] ^ by572a7[11] ^ by572a7[12] ^ by572a7[13] ^ by572a7[14] ^ by572a7[16] ^                 by572a7[19] ^ by572a7[26] ^ by572a7[27] ^ by572a7[29] ^ by572a7[30];   dzd83aa[31] = qib953a[47] ^ qib953a[46] ^ qib953a[44] ^ qib953a[43] ^ qib953a[36] ^ qib953a[33] ^ qib953a[31] ^                 qib953a[30] ^ qib953a[29] ^ qib953a[28] ^ qib953a[27] ^ qib953a[25] ^ qib953a[24] ^ qib953a[23] ^                 qib953a[15] ^ qib953a[11] ^ qib953a[9] ^ qib953a[8] ^ qib953a[5] ^ by572a7[7] ^ by572a7[8] ^                 by572a7[9] ^ by572a7[11] ^ by572a7[12] ^ by572a7[13] ^ by572a7[14] ^ by572a7[15] ^ by572a7[17] ^                 by572a7[20] ^ by572a7[27] ^ by572a7[28] ^ by572a7[30] ^ by572a7[31];   end

`endif



always @* begin


`ifdef X4
      aab3d42 = qtf7c10[63:48];


`endif



`ifdef X1
      aab3d42 = qtf7c10;


`endif
   ykf5087 = {          jr1361a[8], jr1361a[9], jr1361a[10], jr1361a[11], jr1361a[12], jr1361a[13], jr1361a[14], jr1361a[15],          jr1361a[0], jr1361a[1], jr1361a[2], jr1361a[3], jr1361a[4], jr1361a[5], jr1361a[6], jr1361a[7]         } ;


`ifdef X4
      bn9ea10 = crc_reg64 ;


`endif



`ifdef X1
      bn9ea10 = ay72cf5 ;


`endif

   zm967a8[0] = dzd86b6[12] ^ dzd86b6[10] ^ dzd86b6[9] ^ dzd86b6[6] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[22] ^                 fp9b0d6[25] ^ fp9b0d6[26] ^ fp9b0d6[28];   zm967a8[1] = dzd86b6[13] ^ dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[9] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[1] ^                 dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[22] ^ fp9b0d6[23] ^ fp9b0d6[25] ^ fp9b0d6[27] ^                 fp9b0d6[28] ^ fp9b0d6[29];   zm967a8[2] = dzd86b6[14] ^ dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[2] ^                 dzd86b6[1] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[22] ^ fp9b0d6[23] ^                 fp9b0d6[24] ^ fp9b0d6[25] ^ fp9b0d6[29] ^ fp9b0d6[30];   zm967a8[3] = dzd86b6[15] ^ dzd86b6[14] ^ dzd86b6[10] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[3] ^                 dzd86b6[2] ^ dzd86b6[1] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[23] ^ fp9b0d6[24] ^                 fp9b0d6[25] ^ fp9b0d6[26] ^ fp9b0d6[30] ^ fp9b0d6[31];   zm967a8[4] = dzd86b6[15] ^ dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[6] ^ dzd86b6[4] ^ dzd86b6[3] ^                 dzd86b6[2] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[22] ^                 fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[28] ^ fp9b0d6[31];   zm967a8[5] = dzd86b6[13] ^ dzd86b6[10] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[4] ^ dzd86b6[3] ^                 dzd86b6[1] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[21] ^                 fp9b0d6[22] ^ fp9b0d6[23] ^ fp9b0d6[26] ^ fp9b0d6[29];   zm967a8[6] = dzd86b6[14] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[4] ^                 dzd86b6[2] ^ dzd86b6[1] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[22] ^                 fp9b0d6[23] ^ fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[30];   zm967a8[7] = dzd86b6[15] ^ dzd86b6[10] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[5] ^ dzd86b6[3] ^ dzd86b6[2] ^                 dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[21] ^ fp9b0d6[23] ^ fp9b0d6[24] ^                 fp9b0d6[26] ^ fp9b0d6[31];   zm967a8[8] = dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[10] ^ dzd86b6[8] ^ dzd86b6[4] ^ dzd86b6[3] ^ dzd86b6[1] ^                 dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[24] ^ fp9b0d6[26] ^                 fp9b0d6[27] ^ fp9b0d6[28];   zm967a8[9] = dzd86b6[13] ^ dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[9] ^ dzd86b6[5] ^ dzd86b6[4] ^ dzd86b6[2] ^                 dzd86b6[1] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[25] ^ fp9b0d6[27] ^                 fp9b0d6[28] ^ fp9b0d6[29];   zm967a8[10] = dzd86b6[14] ^ dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[5] ^ dzd86b6[3] ^ dzd86b6[2] ^ dzd86b6[0] ^                  fp9b0d6[16] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[21] ^ fp9b0d6[25] ^ fp9b0d6[29] ^ fp9b0d6[30];   zm967a8[11] = dzd86b6[15] ^ dzd86b6[14] ^ dzd86b6[12] ^ dzd86b6[9] ^ dzd86b6[4] ^ dzd86b6[3] ^ dzd86b6[1] ^                  dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[25] ^ fp9b0d6[28] ^                  fp9b0d6[30] ^ fp9b0d6[31];   zm967a8[12] = dzd86b6[15] ^ dzd86b6[13] ^ dzd86b6[12] ^ dzd86b6[9] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[4] ^                  dzd86b6[2] ^ dzd86b6[1] ^ dzd86b6[0] ^ fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[20] ^                  fp9b0d6[21] ^ fp9b0d6[22] ^ fp9b0d6[25] ^ fp9b0d6[28] ^ fp9b0d6[29] ^ fp9b0d6[31];   zm967a8[13] = dzd86b6[14] ^ dzd86b6[13] ^ dzd86b6[10] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[3] ^                  dzd86b6[2] ^ dzd86b6[1] ^ fp9b0d6[17] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[21] ^ fp9b0d6[22] ^                  fp9b0d6[23] ^ fp9b0d6[26] ^ fp9b0d6[29] ^ fp9b0d6[30];   zm967a8[14] = dzd86b6[15] ^ dzd86b6[14] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[4] ^                  dzd86b6[3] ^ dzd86b6[2] ^ fp9b0d6[18] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[22] ^ fp9b0d6[23] ^                  fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[30] ^ fp9b0d6[31];   zm967a8[15] = dzd86b6[15] ^ dzd86b6[12] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[5] ^ dzd86b6[4] ^                  dzd86b6[3] ^ fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[23] ^ fp9b0d6[24] ^ fp9b0d6[25] ^                  fp9b0d6[28] ^ fp9b0d6[31];   zm967a8[16] = dzd86b6[13] ^ dzd86b6[12] ^ dzd86b6[8] ^ dzd86b6[5] ^ dzd86b6[4] ^ dzd86b6[0] ^ fp9b0d6[0] ^                  fp9b0d6[16] ^ fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[24] ^ fp9b0d6[28] ^ fp9b0d6[29];   zm967a8[17] = dzd86b6[14] ^ dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[1] ^ fp9b0d6[1] ^                  fp9b0d6[17] ^ fp9b0d6[21] ^ fp9b0d6[22] ^ fp9b0d6[25] ^ fp9b0d6[29] ^ fp9b0d6[30];   zm967a8[18] = dzd86b6[15] ^ dzd86b6[14] ^ dzd86b6[10] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[2] ^ fp9b0d6[2] ^                  fp9b0d6[18] ^ fp9b0d6[22] ^ fp9b0d6[23] ^ fp9b0d6[26] ^ fp9b0d6[30] ^ fp9b0d6[31];   zm967a8[19] = dzd86b6[15] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[3] ^ fp9b0d6[3] ^ fp9b0d6[19] ^                  fp9b0d6[23] ^ fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[31];   zm967a8[20] = dzd86b6[12] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[4] ^ fp9b0d6[4] ^ fp9b0d6[20] ^ fp9b0d6[24] ^                  fp9b0d6[25] ^ fp9b0d6[28];   zm967a8[21] = dzd86b6[13] ^ dzd86b6[10] ^ dzd86b6[9] ^ dzd86b6[5] ^ fp9b0d6[5] ^ fp9b0d6[21] ^ fp9b0d6[25] ^                  fp9b0d6[26] ^ fp9b0d6[29];   zm967a8[22] = dzd86b6[14] ^ dzd86b6[12] ^ dzd86b6[11] ^ dzd86b6[9] ^ dzd86b6[0] ^ fp9b0d6[6] ^ fp9b0d6[16] ^                  fp9b0d6[25] ^ fp9b0d6[27] ^ fp9b0d6[28] ^ fp9b0d6[30];   zm967a8[23] = dzd86b6[15] ^ dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[6] ^ dzd86b6[1] ^ dzd86b6[0] ^ fp9b0d6[7] ^                  fp9b0d6[16] ^ fp9b0d6[17] ^ fp9b0d6[22] ^ fp9b0d6[25] ^ fp9b0d6[29] ^ fp9b0d6[31];   zm967a8[24] = dzd86b6[14] ^ dzd86b6[10] ^ dzd86b6[7] ^ dzd86b6[2] ^ dzd86b6[1] ^ fp9b0d6[8] ^ fp9b0d6[17] ^                  fp9b0d6[18] ^ fp9b0d6[23] ^ fp9b0d6[26] ^ fp9b0d6[30];   zm967a8[25] = dzd86b6[15] ^ dzd86b6[11] ^ dzd86b6[8] ^ dzd86b6[3] ^ dzd86b6[2] ^ fp9b0d6[9] ^ fp9b0d6[18] ^                  fp9b0d6[19] ^ fp9b0d6[24] ^ fp9b0d6[27] ^ fp9b0d6[31];   zm967a8[26] = dzd86b6[10] ^ dzd86b6[6] ^ dzd86b6[4] ^ dzd86b6[3] ^ dzd86b6[0] ^ fp9b0d6[10] ^ fp9b0d6[16] ^                  fp9b0d6[19] ^ fp9b0d6[20] ^ fp9b0d6[22] ^ fp9b0d6[26];   zm967a8[27] = dzd86b6[11] ^ dzd86b6[7] ^ dzd86b6[5] ^ dzd86b6[4] ^ dzd86b6[1] ^ fp9b0d6[11] ^ fp9b0d6[17] ^                  fp9b0d6[20] ^ fp9b0d6[21] ^ fp9b0d6[23] ^ fp9b0d6[27];   zm967a8[28] = dzd86b6[12] ^ dzd86b6[8] ^ dzd86b6[6] ^ dzd86b6[5] ^ dzd86b6[2] ^ fp9b0d6[12] ^ fp9b0d6[18] ^                  fp9b0d6[21] ^ fp9b0d6[22] ^ fp9b0d6[24] ^ fp9b0d6[28];   zm967a8[29] = dzd86b6[13] ^ dzd86b6[9] ^ dzd86b6[7] ^ dzd86b6[6] ^ dzd86b6[3] ^ fp9b0d6[13] ^ fp9b0d6[19] ^                  fp9b0d6[22] ^ fp9b0d6[23] ^ fp9b0d6[25] ^ fp9b0d6[29];   zm967a8[30] = dzd86b6[14] ^ dzd86b6[10] ^ dzd86b6[8] ^ dzd86b6[7] ^ dzd86b6[4] ^ fp9b0d6[14] ^ fp9b0d6[20] ^                  fp9b0d6[23] ^ fp9b0d6[24] ^ fp9b0d6[26] ^ fp9b0d6[30];   zm967a8[31] = dzd86b6[15] ^ dzd86b6[11] ^ dzd86b6[9] ^ dzd86b6[8] ^ dzd86b6[5] ^ fp9b0d6[15] ^ fp9b0d6[21] ^                  fp9b0d6[24] ^ fp9b0d6[25] ^ fp9b0d6[27] ^ fp9b0d6[31];
end

`ifdef X4
      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         ph63a5  <= 1'b0 ;      else if (ec1a382)         ph63a5  <= half_data ;   end   assign ps765f9 = half_data & ~ph63a5 ;         always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         crc_reg64 <= 32'hFFFF_FFFF ;      else if (ps765f9 && ec1a382)         crc_reg64 <= 32'hFFFF_FFFF ;      else if (hd2d459 && ec1a382)         crc_reg64 <= fc1b075 ;   end      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         alc360e <= 32'd0 ;      else if (ps765f9 && ec1a382)         alc360e <= dzd83aa ;   end      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         ay72cf5 <= 32'd0 ;      else if (ps765f9 && ec1a382)         ay72cf5 <= pua26c3 ;   end

`endif




`ifdef X1
      always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         twb2fcb  <= 1'b0 ;      else         twb2fcb  <= hd2d459 ;   end   assign uk97e5a = ~hd2d459 & twb2fcb ;         always @( posedge sys_clk, negedge rst_n ) begin      if (!rst_n)         ay72cf5 <= 32'hFFFF_FFFF ;      else if (uk97e5a)         ay72cf5 <= 32'hFFFF_FFFF ;      else if (hd2d459)         ay72cf5 <= pua26c3 ;      else         ay72cf5 <= ay72cf5 ;   end

`endif



assign jea8438 = { ~ay72cf5[24], ~ay72cf5[25], ~ay72cf5[26], ~ay72cf5[27],                        ~ay72cf5[28], ~ay72cf5[29], ~ay72cf5[30], ~ay72cf5[31] } ;
assign tu421c3 = { ~ay72cf5[16], ~ay72cf5[17], ~ay72cf5[18], ~ay72cf5[19],                        ~ay72cf5[20], ~ay72cf5[21], ~ay72cf5[22], ~ay72cf5[23] } ;
assign aa10e1b = { ~ay72cf5[8], ~ay72cf5[9], ~ay72cf5[10], ~ay72cf5[11],                        ~ay72cf5[12], ~ay72cf5[13], ~ay72cf5[14], ~ay72cf5[15] } ;
assign ie870d8 = { ~ay72cf5[0], ~ay72cf5[1], ~ay72cf5[2], ~ay72cf5[3],                        ~ay72cf5[4], ~ay72cf5[5], ~ay72cf5[6], ~ay72cf5[7] } ;



`ifdef X4
   assign byca9d0 = { ~alc360e[24], ~alc360e[25], ~alc360e[26], ~alc360e[27],                           ~alc360e[28], ~alc360e[29], ~alc360e[30], ~alc360e[31] } ;   assign of54e82 = { ~alc360e[16], ~alc360e[17], ~alc360e[18], ~alc360e[19],                           ~alc360e[20], ~alc360e[21], ~alc360e[22], ~alc360e[23] } ;   assign ria7414 = { ~alc360e[8], ~alc360e[9], ~alc360e[10], ~alc360e[11],                           ~alc360e[12], ~alc360e[13], ~alc360e[14], ~alc360e[15] } ;   assign xy3a0a2 = { ~alc360e[0], ~alc360e[1], ~alc360e[2], ~alc360e[3],                           ~alc360e[4], ~alc360e[5], ~alc360e[6], ~alc360e[7] } ;
      assign pfe9cb3 = {byca9d0, of54e82, ria7414, xy3a0a2} ;

`endif



assign mr4e59e = {qtc35b7, co1adbd, ipd6de9, ymb6f4d} ;

always@* begin qtf7c10<={data_in>>1,ux17adf[0]};hd2d459<=ux17adf[1];pua26c3<={zm967a8>>1,ux17adf[2]};jr1361a<={aab3d42>>1,ux17adf[3]};fp9b0d6<={bn9ea10>>1,ux17adf[4]};dzd86b6<={ykf5087>>1,ux17adf[5]};qtc35b7<={jea8438>>1,ux17adf[6]};co1adbd<={tu421c3>>1,ux17adf[7]};ipd6de9<={aa10e1b>>1,ux17adf[8]};ymb6f4d<={ie870d8>>1,ux17adf[9]};end
always@* begin db22f5b[2047]<=enable_crc;db22f5b[2046]<=zm967a8[0];db22f5b[2044]<=aab3d42[0];db22f5b[2040]<=bn9ea10[0];db22f5b[2032]<=ykf5087[0];db22f5b[2017]<=jea8438[0];db22f5b[1987]<=tu421c3[0];db22f5b[1926]<=aa10e1b[0];db22f5b[1804]<=ie870d8[0];db22f5b[1023]<=data_in[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





































`timescale 1 ns / 100 ps
module pcie_x1_fa7c8b5 #(
   parameter D_WIDTH = 64 ,   parameter FADDR = 3 )
   (
   input wire            sys_clk ,       
   input wire            rst_n ,         

   input wire            mtab7fe ,    
   input wire            tlpgen_rdy_ack ,
   input wire            zkdffa5 ,      
   input wire            icffd2b , 
   input wire            psfe958 , 
   input wire [FADDR:0]  dll_pause_cnt , 
   input wire            phy_l0 ,        
   input wire            lq584f8 ,     

   input wire [D_WIDTH-1:0] fp13e1f ,     
   input wire               cb9f0ff ,       
   input wire               enf87fc ,      
   input wire               kdc3fe4 ,     

   input wire [D_WIDTH-1:0] goff921 ,     
   input wire               blfc908 ,       
   input wire               pse4847 ,      
   input wire               gq2423a ,     
   `ifdef X4
      input wire            qi211d1 ,     
      input wire            ux8e89 ,     
      input wire            ne4744d ,     
   `endif

   `ifdef X1
      output wire [D_WIDTH-1:0] go7796a ,     
      output wire               ukbcb50 ,       
      output wire               kqe5a81 ,      
      output wire               vx2d408 ,      
   `endif
   `ifdef X4
      output reg [D_WIDTH-1:0]  go7796a ,     
      output reg                mr6a047 ,     
      output reg                ukbcb50 ,       
      output reg                kqe5a81 ,      
      output reg                vx2d408 ,      
      output reg                pf5023c ,     
   `endif

   output reg               txtp_rdy ,      
   output wire              th4fb7c ,      
   output wire              ay7dbe6,   
   output reg               ipedf31    ) ;
reg                 ip6f98c ;
reg                 lq7cc65 ;
reg                 the632b ;
reg                 mg3195e ;
reg                 vk8caf1 ;
reg                 wj6578b ;
reg                 ipf8824 ;
reg                 ip5e2e9 ;
reg                 zkf174c ;
reg                 tj8ba62 ;
reg [4:0]           by5d316 ;
reg                 ble98b3 ;
reg                 cm4c59e ;
reg                 ui62cf0 ;
reg                 bn16781 ;
reg                 qib3c0e ;
reg [4:0]           zz9e070 ;
wire                eaf0386 ;
wire                hd81c30 ;
wire                jee187 ;
wire                en70c3b ;
wire                je861dd ;
wire                zm30eeb ;
wire                uk8775b ;
wire                ie3bad9 ;
wire                rtdd6c8 ;
wire                xweb647 ;
wire                yx5b23a ;
wire                yxd91d4 ;
wire                dzc8ea5 ;
wire                ho4752f ;
wire                je3a97b ;
wire                wwd4bda ;
wire                fpa5ed0 ;
wire                fc2f686 ;

`ifdef X1

`endif 

`ifdef X4

`endif 
reg       ld7b432 ;
reg [2:0] rgda197 ;

`ifdef X1

`endif

`ifdef X4

`endif
parameter tud0cba = 16 ;
reg fc865d2;
reg vx32e93;
reg ks9749e;
reg ntba4f0;
reg jpd2787;
reg [FADDR : 0] nt9e1f3;
reg vid5a59;
reg uk87cf1;
reg [D_WIDTH - 1 : 0] pff3c41;
reg rv9e20e;
reg tuf1076;
reg uk883b2;
reg [D_WIDTH - 1 : 0] hqec85;
reg jc7642a;
reg xyb2153;
reg gd90a9b;
reg gd854dc;
reg xy2a6e4;
reg ww53722;
reg fp9b910;
reg gbdc887;
reg ph6c54;
reg rv221e3;
reg wy10f1e;
reg co878f0;
reg [4 : 0] sj3c780;
reg the3c04;
reg ri1e027;
reg suf013a;
reg oh809d0;
reg ng4e85;
reg [4 : 0] hd2742b;
reg vk3a15e;
reg tud0af3;
reg gd8579a;
reg wy2bcd4;
reg uv5e6a1;
reg thf350c;
reg an9a867;
reg qgd433d;
reg mta19e9;
reg lfcf4c;
reg su67a67;
reg lf3d339;
reg pfe99ce;
reg kq4ce76;
reg kq673b1;
reg ux39d88;
reg kqcec45;
reg ho76228;
reg irb1143;
reg [2 : 0] ks88a1c;
reg [2047:0] db22f5b;
wire [51:0] ux17adf;

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 52,jceb7ea = 32'hfdffc68b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif 


`ifdef X4


`endif 


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X1
   assign go7796a = (pff3c41 | hqec85) ;   assign ukbcb50   = (jc7642a | rv9e20e) ;   assign kqe5a81 = (tuf1076 | xyb2153) ;   assign vx2d408 = uk883b2 ;

`endif 



`ifdef X4
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         go7796a <= 64'd0 ;         mr6a047 <= 1'b0 ;         ukbcb50   <= 1'b0 ;         kqe5a81  <= 1'b0 ;         pf5023c <= 1'b0 ;         vx2d408  <= 1'b0 ;      end      else begin         go7796a <= (pff3c41 | hqec85) ;         mr6a047 <= qi211d1 ;         ukbcb50   <= (jc7642a | rv9e20e) ;         kqe5a81  <= (tuf1076 | xyb2153) ;         pf5023c <= (ux8e89 | ne4744d) ;         vx2d408  <= uk883b2 ;      end   end

`endif 




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      lq7cc65  <= 1'b0 ;      the632b <= 1'b0 ;      mg3195e <= 1'b0 ;      vk8caf1  <= 1'b0 ;      wj6578b  <= 1'b0 ;      ipf8824    <= 1'b0 ;      tj8ba62 <= 1'b0 ;   end   else begin      lq7cc65  <= fc865d2 ;      the632b <= ntba4f0 ;      mg3195e <= jpd2787 ;      vk8caf1  <= ks9749e ;      wj6578b  <= txtp_rdy ;      ipf8824    <= vid5a59 ;      tj8ba62 <= vx32e93 ;   end
end

assign uk8775b  = fc865d2 & ~gd854dc ;
assign rtdd6c8 = ntba4f0 & ~xy2a6e4 ;
assign xweb647 = jpd2787 & ~ww53722 ;
assign ie3bad9  = ks9749e & ~fp9b910 ;
assign yx5b23a    = vid5a59 & ~ph6c54 ;

assign yxd91d4  = ~fc865d2 & gd854dc ;
assign ho4752f = ~ntba4f0 & xy2a6e4 ;
assign je3a97b = ~jpd2787 & ww53722 ;
assign dzc8ea5  = ~ks9749e & fp9b910 ;
assign wwd4bda    = ~vid5a59 & ph6c54 ;

always @( posedge sys_clk, negedge rst_n ) begin   if (!rst_n)      ip5e2e9 <= 1'b0 ;   else if (txtp_rdy && (qgd433d || mta19e9 || uk87cf1 ||                         lfcf4c || ux39d88 || lf3d339))      ip5e2e9 <= 1'b1 ;   else if (vx32e93 || vk3a15e)      ip5e2e9 <= 1'b0 ;   else      ip5e2e9 <= rv221e3 ;
end
always @( posedge sys_clk, negedge rst_n ) begin   if (!rst_n)      zkf174c <= 1'b0 ;   else if (th4fb7c && (uk87cf1 || ux39d88))      zkf174c <= 1'b1 ;   else if (gd90a9b)      zkf174c <= 1'b0 ;   else      zkf174c <= wy10f1e ;
end

assign eaf0386  = an9a867 & ~ks9749e & ~ntba4f0 & ~jpd2787 && vid5a59 ;
assign hd81c30 = co878f0 & ~ks9749e & ~ntba4f0 & ~jpd2787 && vid5a59 & fc865d2 ;

assign jee187 = (pfe99ce  & ~ntba4f0 & ~jpd2787  & vid5a59 & fc865d2) ;
assign en70c3b = (kq4ce76 & ~ks9749e & ~jpd2787  & vid5a59 & fc865d2) ;
assign je861dd = (kq673b1 & ~ntba4f0 & ~ks9749e  & vid5a59 & fc865d2) ;
assign zm30eeb = (su67a67 & ~ntba4f0 & ~ks9749e  & ~jpd2787 & fc865d2) ;

always @( posedge sys_clk, negedge rst_n ) begin   if (!rst_n)      txtp_rdy <= 1'b0 ;   else if (((tud0af3 || gd8579a || wy2bcd4 || uv5e6a1 || thf350c) && !rv221e3) || vk3a15e)      txtp_rdy <= 1'b1 ;   else if (rv221e3)      txtp_rdy <= 1'b0 ;   else      txtp_rdy <= txtp_rdy ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ble98b3 <= 1'b0 ;   else if (xyb2153 && (nt9e1f3 > 'd2))      ble98b3 <= 1'b1 ;   else if (sj3c780 == 5'd3)      ble98b3 <= 1'b0 ;   else      ble98b3 <= the3c04 ;
end
assign ay7dbe6 =  xyb2153 ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      by5d316 <= 5'h00 ;   else if (gd90a9b)         by5d316 <= nt9e1f3 ;   else if (the3c04)      by5d316 <=  sj3c780 - 1'b1 ;   else      by5d316 <= sj3c780 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ld7b432 <= 1'b0 ;   else if (ks9749e && !txtp_rdy && gbdc887)      ld7b432 <= 1'b1 ;   else if (ks88a1c == 3'd4)      ld7b432 <= 1'b0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rgda197 <= 3'h0 ;


`ifdef X1
      else if (irb1143)         rgda197 <= ks88a1c + 1  ;      else if (ks88a1c == 3'd4)         rgda197 <= 3'h0 ;


`endif



`ifdef X4
      else if (irb1143 && qi211d1)         rgda197 <= ks88a1c + 1  ;      else if (ks88a1c == 3'd4 && qi211d1)         rgda197 <= 3'h0 ;


`endif

end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ip6f98c <= 1'b0 ;
else if (ks9749e && !txtp_rdy && !rv221e3 && !wy10f1e && !irb1143)      ip6f98c <= 1'b1 ;   else if (!ks9749e && th4fb7c )      ip6f98c <= 1'b0 ;   else      ip6f98c <= (th4fb7c & ~rv221e3 & ~wy10f1e & !irb1143) ;
end
assign th4fb7c = (ip6f98c & ~the3c04 & vid5a59) ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ui62cf0 <= 1'b0 ;   else if (uk87cf1)      ui62cf0 <= 1'b1 ;   else if (!txtp_rdy && !th4fb7c && !rv221e3)      ui62cf0 <= 1'b0 ;   else      ui62cf0 <= suf013a ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      bn16781 <= 1'b0 ;   else      bn16781 <= suf013a ;
end
assign fc2f686 = ~suf013a & oh809d0 ;






always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      qib3c0e <= 1'b0 ;   else if (ho76228)      qib3c0e <= 1'b1 ;   else if (hd2742b == tud0cba +2)      qib3c0e <= 1'b0 ;   else      qib3c0e <= ng4e85 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      zz9e070 <= 'd0 ;   else if (ng4e85)      zz9e070 <= hd2742b + 1 ;   else      zz9e070 <= 'd0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ipedf31 <= 'd0 ;   else      ipedf31 <= (hd2742b == tud0cba) ;
end
always@* begin fc865d2<=ux17adf[0];vx32e93<=ux17adf[1];ks9749e<=ux17adf[2];ntba4f0<=ux17adf[3];jpd2787<=ux17adf[4];nt9e1f3<={dll_pause_cnt>>1,ux17adf[5]};vid5a59<=ux17adf[6];uk87cf1<=ux17adf[7];pff3c41<={fp13e1f>>1,ux17adf[8]};rv9e20e<=ux17adf[9];tuf1076<=ux17adf[10];uk883b2<=ux17adf[11];hqec85<={goff921>>1,ux17adf[12]};jc7642a<=ux17adf[13];xyb2153<=ux17adf[14];gd90a9b<=ux17adf[15];gd854dc<=ux17adf[16];xy2a6e4<=ux17adf[17];ww53722<=ux17adf[18];fp9b910<=ux17adf[19];gbdc887<=ux17adf[20];ph6c54<=ux17adf[21];rv221e3<=ux17adf[22];wy10f1e<=ux17adf[23];co878f0<=ux17adf[24];sj3c780<={by5d316>>1,ux17adf[25]};the3c04<=ux17adf[26];ri1e027<=ux17adf[27];suf013a<=ux17adf[28];oh809d0<=ux17adf[29];ng4e85<=ux17adf[30];hd2742b<={zz9e070>>1,ux17adf[31]};vk3a15e<=ux17adf[32];tud0af3<=ux17adf[33];gd8579a<=ux17adf[34];wy2bcd4<=ux17adf[35];uv5e6a1<=ux17adf[36];thf350c<=ux17adf[37];an9a867<=ux17adf[38];qgd433d<=ux17adf[39];mta19e9<=ux17adf[40];lfcf4c<=ux17adf[41];su67a67<=ux17adf[42];lf3d339<=ux17adf[43];pfe99ce<=ux17adf[44];kq4ce76<=ux17adf[45];kq673b1<=ux17adf[46];ux39d88<=ux17adf[47];kqcec45<=ux17adf[48];ho76228<=ux17adf[49];irb1143<=ux17adf[50];ks88a1c<={rgda197>>1,ux17adf[51]};end
always@* begin db22f5b[2047]<=tlpgen_rdy_ack;db22f5b[2046]<=zkdffa5;db22f5b[2044]<=icffd2b;db22f5b[2040]<=psfe958;db22f5b[2032]<=dll_pause_cnt[0];db22f5b[2017]<=phy_l0;db22f5b[1987]<=lq584f8;db22f5b[1980]<=fc2f686;db22f5b[1963]<=hd81c30;db22f5b[1926]<=fp13e1f[0];db22f5b[1921]<=zkf174c;db22f5b[1913]<=ld7b432;db22f5b[1903]<=yx5b23a;db22f5b[1879]<=jee187;db22f5b[1805]<=cb9f0ff;db22f5b[1795]<=tj8ba62;db22f5b[1783]<=je3a97b;db22f5b[1778]<=rgda197[0];db22f5b[1758]<=yxd91d4;db22f5b[1710]<=en70c3b;db22f5b[1679]<=lq7cc65;db22f5b[1562]<=enf87fc;db22f5b[1543]<=by5d316[0];db22f5b[1519]<=wwd4bda;db22f5b[1499]<=rtdd6c8;db22f5b[1469]<=dzc8ea5;db22f5b[1398]<=uk8775b;db22f5b[1373]<=je861dd;db22f5b[1310]<=the632b;db22f5b[1144]<=vk8caf1;db22f5b[1076]<=kdc3fe4;db22f5b[1039]<=ble98b3;db22f5b[1023]<=mtab7fe;db22f5b[990]<=fpa5ed0;db22f5b[981]<=eaf0386;db22f5b[960]<=ip5e2e9;db22f5b[951]<=xweb647;db22f5b[891]<=ho4752f;db22f5b[839]<=gq2423a;db22f5b[749]<=ie3bad9;db22f5b[699]<=zm30eeb;db22f5b[572]<=mg3195e;db22f5b[490]<=zz9e070[0];db22f5b[480]<=ipf8824;db22f5b[419]<=pse4847;db22f5b[245]<=qib3c0e;db22f5b[240]<=wj6578b;db22f5b[209]<=blfc908;db22f5b[122]<=bn16781;db22f5b[104]<=goff921[0];db22f5b[61]<=ui62cf0;db22f5b[30]<=cm4c59e;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_vv6beb4 #(
   parameter D_WIDTH  = 64 )
   (
   input wire        sys_clk ,        
   input wire        rst_n ,          

   input wire [D_WIDTH-1:0] fp13e1f ,      
   input wire        cb9f0ff ,        
   input wire        enf87fc ,       
   input wire        kdc3fe4 ,      

   input wire [11:0] wyb38fd ,    
   input wire        tw9c7e8 ,       
   input wire        pfe3f43 ,      
   input wire        ks1fa1f ,     

   input wire        ne4df8d , 
   input wire        phy_l0 ,         
   input wire        wl3671f ,       
   input wire [2:0]  max_pl_size ,    
   `ifdef X4
      input wire     qi211d1 ,      
      input wire     ux8e89 ,      
      output reg     ne5dec7 ,      
      output reg     ne4744d ,      
   `endif
   output wire       pf7b1d0 ,  
   output reg [D_WIDTH-1:0] goff921 ,      
   output reg        blfc908 ,        
   output reg        pse4847 ,       
   output wire       qi87dda , 
   output reg        ym3eed0 ,     

   output wire       tx_rbuf_empty ,  
   output reg        nre6ce3 , 
   output reg        zkda02d , 
   output reg        ipedf31      ) ;

`ifdef X1

`ifdef MAX_TLP_512
localparam cb80b53    = ((512/2) + 4) ;
localparam TLP_MEM_DEPTH   = 512/2 * 4 ;
localparam fnc7632  = 10 ;
localparam kd6a74f = 20 ;
localparam ww53a7c = 8 ;
localparam gq9d3e1  = TLP_MEM_DEPTH/7 ;

`endif

`ifdef MAX_TLP_1K
localparam cb80b53    = ((1024/2) + 4) ;
localparam TLP_MEM_DEPTH   = 1024/2 * 4 ;
localparam fnc7632  = 11 ;
localparam kd6a74f = 22 ;
localparam ww53a7c = 9 ;
localparam gq9d3e1  = TLP_MEM_DEPTH/7 ;

`endif

`ifdef MAX_TLP_2K
localparam cb80b53    = ((2048/2) + 4) ;
localparam TLP_MEM_DEPTH   = 2048/2 * 4 ;
localparam fnc7632  = 12 ;
localparam kd6a74f = 24 ;
localparam ww53a7c = 10 ;
localparam gq9d3e1  = TLP_MEM_DEPTH/7 ;

`endif

`ifdef MAX_TLP_4K
localparam cb80b53    = ((4096/2) + 4) ;
localparam TLP_MEM_DEPTH   = 4096/2 * 4 ;
localparam fnc7632  = 13 ;
localparam kd6a74f = 26 ;
localparam ww53a7c = 11 ;
localparam gq9d3e1  = TLP_MEM_DEPTH/7 ;

`endif

`endif

`ifdef X4

`ifdef MAX_TLP_512
localparam cb80b53    = ((512/8) + 4) ;
localparam TLP_MEM_DEPTH   = 512/8 * 8 ;
localparam fnc7632  = 9 ;
localparam kd6a74f = 18 ;
localparam ww53a7c = 8 ;
localparam gq9d3e1  = TLP_MEM_DEPTH/2 ;

`endif

`ifdef MAX_TLP_1K
localparam cb80b53    = ((1024/8) + 4) ;
localparam TLP_MEM_DEPTH   = 1024/8 * 8 ;
localparam fnc7632  = 10 ;
localparam kd6a74f = 20 ;
localparam ww53a7c = 9 ;
localparam gq9d3e1  = TLP_MEM_DEPTH/2 ;

`endif

`ifdef MAX_TLP_2K
localparam cb80b53    = ((2048/8) + 4) ;
localparam TLP_MEM_DEPTH   = 2048/8 * 8 ;
localparam fnc7632  = 11 ;
localparam kd6a74f = 22 ;
localparam ww53a7c = 10 ;
localparam gq9d3e1  = TLP_MEM_DEPTH/2 ;

`endif

`ifdef MAX_TLP_4K
localparam cb80b53    = ((4096/8) + 4) ;
localparam TLP_MEM_DEPTH   = 4096/8 * 8 ;
localparam fnc7632  = 12 ;
localparam kd6a74f = 24 ;
localparam ww53a7c = 11 ;
localparam gq9d3e1  = TLP_MEM_DEPTH/2 ;

`endif

`endif
reg [D_WIDTH-1:0]          oh333d3 ;
reg                        ls99e9d ;
reg                        xwcf4ea ;
reg                        mr7a753 ;
reg                        ald3a9d ;
reg                        mg9d4ed ;
reg                        icea769 ;

`ifdef X4
reg                     go53b48 ;

`endif
reg                        ie9da41 ;
reg [fnc7632 -1:0]  zk69045 ;
reg [fnc7632 -1:0]  mr4115a ;
reg [fnc7632 -1:0]  pf456a5 ;
reg [fnc7632 -1:0]  vv5a970 ;
reg [fnc7632 -1:0]  bna5c38 ;
reg [fnc7632 -1:0]  gb70e30 ;
reg [ww53a7c -1:0] rv38c29 ;
reg [ww53a7c -1:0] ng30a7d ;
reg                        ep853eb ;
reg                        ir29f5c ;
reg                        jp4fae4 ;
reg                        yk7d726 ;
reg                        neeb930 ;
reg                        yk5c983 ;
reg                        xwe4c18 ;
reg                        ux260c2 ;
reg                        vk30614 ;
reg [fnc7632 -1:0]  qv18513 ;
reg [ww53a7c -1:0] hq144ee ;
reg                        ria2773 ;
reg                        vk8caf1 ;
reg                        ec9dcd7 ;
reg                        tuee6b8 ;
reg                        rg735c2 ;
reg                        kf9ae13 ;
reg                        vvd709d ;
reg                        vkb84ee ;
reg                        rtc2772 ;
reg [11:0]                 nt13b97 ;
reg [11:0]                 mg9dcbf ;
reg [11:0]                 faee5f8 ;
reg                        ic72fc2 ;
reg                        ks97e10 ;
reg [2:0]                  rvbf081 ;
reg [2:0]                  off840f ;
reg                        nrc207c ;
reg                        ec103e7 ;
reg                        vx81f39 ;
reg                        qif9cf ;
reg                        dm7ce78 ;
reg                        gbe73c3 ;
reg                        oh39e1c;
reg                        pscf0e5 ;
reg                        yk7872b ;
reg                        ipf8824 ;
reg [2:0]                  lf1cac4 ;
reg                        wwe5626 ;
reg                        ou2b131 ;
wire [ww53a7c -1:0] kqc4c42 ;
wire [fnc7632 -1:0]  co3108c ;
wire [fnc7632:0]     ne42300 ;
wire [kd6a74f -1:0] xy8c01a ;
wire [kd6a74f -1:0] gq695 ;
wire [ww53a7c -1:0] wy1a547 ;

`ifdef X1
reg [13:0]               jpd2a38 ;
wire [15:0]              ir951c7 ;
wire [15:0]              zma8e3d ;
wire [11:0]              nt3dbfc ;
wire                     qi211d1 = 1'b1 ;

`endif

`ifdef X4
reg [12:0]               jpd2a38 ;
wire [63 +1:0]           ir951c7 ;
wire [63 +1:0]           zma8e3d ;
wire [10:0]              nt3dbfc ;

`endif
wire                        sj9fd81 ;
wire                        fafec0d ;
wire                        thf606a ;
wire                        bnb0357 ;
wire                        jr81abe ;
wire                        and5f7 ;
wire                        gb6afbc ;
wire                        vi57de5 ;
wire                        anbef2b ;
wire                        enf795c ;
wire                        ecbcae4 ;
wire                        mee5721 ;
wire                        mg2b909 ;
wire                        qg5c849 ;
wire                        lqe4248 ;
wire                        ec21243 ;
wire                        db9219 ;
wire                        cm490ce ;

`ifdef X1
reg [12:0] vi48670 ;
reg [13:0] qg43382 ;

`endif

`ifdef X4
reg [12:0] vi48670 ;
reg [12:0] qg43382 ;

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] pff3c41;
reg rv9e20e;
reg tuf1076;
reg uk883b2;
reg [11 : 0] ba8c2bf;
reg pf615fa;
reg ksafd7;
reg ho57eb8;
reg tjbf5c3;
reg vid5a59;
reg su67b44;
reg [2 : 0] vkb87c6;
reg [D_WIDTH - 1 : 0] ym1f194;
reg yxf8ca0;
reg shc6505;
reg vx3282d;
reg nt9416e;
reg pha0b77;
reg gq5bbe;
reg db2ddf1;
reg [fnc7632 - 1 : 0] kq77c77;
reg [fnc7632 - 1 : 0] xwf1dc5;
reg [fnc7632 - 1 : 0] ic7715e;
reg [fnc7632 - 1 : 0] xwc578b;
reg [fnc7632 - 1 : 0] qt5e2d1;
reg [fnc7632 - 1 : 0] lf8b462;
reg [ww53a7c - 1 : 0] ykd18be;
reg [ww53a7c - 1 : 0] ay62f82;
reg wl17c11;
reg irbe08d;
reg suf046d;
reg mg82368;
reg xy11b41;
reg ks8da0a;
reg kq6d051;
reg ay68289;
reg al41449;
reg [fnc7632 - 1 : 0] kd51261;
reg [ww53a7c - 1 : 0] ui4986a;
reg me4c351;
reg fp9b910;
reg kfd446;
reg ip6a234;
reg ip511a4;
reg ym88d25;
reg su46929;
reg ou34948;
reg mta4a41;
reg [11 : 0] je2520c;
reg [11 : 0] qv29063;
reg [11 : 0] xw4831d;
reg ip418ea;
reg tjc755;
reg [2 : 0] by63aae;
reg [2 : 0] ep1d573;
reg wweab9d;
reg vv55ce9;
reg wlae74e;
reg ps73a74;
reg ou9d3a2;
reg ble9d11;
reg en4e88e;
reg nr74474;
reg zma23a6;
reg ph6c54;
reg [2 : 0] fp8e992;
reg vv74c96;
reg oua64b7;
reg [ww53a7c - 1 : 0] ks92dc7;
reg [fnc7632 - 1 : 0] dob71cb;
reg [fnc7632 : 0] rtc72db;
reg [kd6a74f - 1 : 0] uicb6fc;
reg [kd6a74f - 1 : 0] uidbf0c;
reg [ww53a7c - 1 : 0] fnfc30b;
reg rge185e;
reg zzc2f2;
reg zx61796;
reg ngbcb7;
reg gb5e5ba;
reg kdf2dd4;
reg ba96ea4;
reg vkb7523;
reg rvba91b;
reg icd48de;
reg wla46f0;
reg qv23785;
reg pu1bc2c;
reg gode163;
reg icf0b18;
reg qv858c1;
reg ep2c60d;
reg fa6306d;
reg [2047:0] db22f5b;
wire [91:0] ux17adf;

`ifdef X1

`ifdef MAX_TLP_512

`endif

`ifdef MAX_TLP_1K

`endif

`ifdef MAX_TLP_2K

`endif

`ifdef MAX_TLP_4K

`endif

`endif

`ifdef X4

`ifdef MAX_TLP_512

`endif

`ifdef MAX_TLP_1K

`endif

`ifdef MAX_TLP_2K

`endif

`ifdef MAX_TLP_4K

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 92,jceb7ea = 32'hfdfff10b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`ifdef MAX_TLP_512


`endif


`ifdef MAX_TLP_1K


`endif


`ifdef MAX_TLP_2K


`endif


`ifdef MAX_TLP_4K


`endif


`endif


`ifdef X4


`ifdef MAX_TLP_512


`endif


`ifdef MAX_TLP_1K


`endif


`ifdef MAX_TLP_2K


`endif


`ifdef MAX_TLP_4K


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif




`ifdef X1



`ifdef MAX_TLP_512



`endif



`ifdef MAX_TLP_1K



`endif



`ifdef MAX_TLP_2K



`endif



`ifdef MAX_TLP_4K



`endif



`endif




`ifdef X4



`ifdef MAX_TLP_512



`endif



`ifdef MAX_TLP_1K



`endif



`ifdef MAX_TLP_2K



`endif



`ifdef MAX_TLP_4K



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif



`ifdef X4



`endif









`ifdef X1



`endif



`ifdef X4



`endif


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      lf1cac4 <= 3'b000 ;   else      lf1cac4 <= vkb87c6 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      vi48670 <= 12'd0 ;   else begin      case (fp8e992)


`ifdef X1
            3'd0,            3'd1,            3'd2 : vi48670 <= 13'd752 ;              3'd3 : vi48670 <= 13'd1520 ;             3'd4 : vi48670 <= 13'd3056 ;             3'd5 : vi48670 <= 13'd6128 ;             3'd6 : vi48670 <= 13'd752 ;            3'd7 : vi48670 <= 13'd752 ;


`endif



`ifdef X4
            3'd0,            3'd1,            3'd2 : vi48670 <= 13'd376 ;              3'd3 : vi48670 <= 13'd760 ;              3'd4 : vi48670 <= 13'd1528 ;             3'd5 : vi48670 <= 13'd3064 ;             3'd6 : vi48670 <= 13'd376 ;            3'd7 : vi48670 <= 13'd376 ;


`endif
      endcase   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      qg43382 <= 'd0 ;   else begin      case (fp8e992)


`ifdef X1
            3'd0 : qg43382 <= 14'd622 ;               3'd1 : qg43382 <= 14'd1092 ;              3'd2 : qg43382 <= 14'd1468 ;              3'd3 : qg43382 <= 14'd2812 ;              3'd4 : qg43382 <= 14'd5500 ;              3'd5 : qg43382 <= 14'd10876 ;             3'd6 : qg43382 <= 14'd622 ;            3'd7 : qg43382 <= 14'd622 ;


`endif



`ifdef X4
            3'd0 : qg43382 <= 13'd192 ;              3'd1 : qg43382 <= 13'd310 ;              3'd2 : qg43382 <= 13'd404 ;              3'd3 : qg43382 <= 13'd740 ;              3'd4 : qg43382 <= 13'd1412 ;             3'd5 : qg43382 <= 13'd2756 ;             3'd6 : qg43382 <= 13'd192 ;            3'd7 : qg43382 <= 13'd192 ;


`endif
      endcase   end
end





always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      oh333d3  <= {D_WIDTH{1'd0}} ;      ls99e9d    <= 1'b0 ;      xwcf4ea   <= 1'b0 ;      mr7a753 <= 1'b0 ;


`ifdef X4
         go53b48  <= 1'b0 ;


`endif
   end   else if(qi211d1) begin      oh333d3  <= pff3c41 ;      ls99e9d    <= rv9e20e ;      xwcf4ea   <= tuf1076 ;      mr7a753 <= uk883b2 ;


`ifdef X4
         go53b48  <= ux8e89 ;


`endif
   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mg9d4ed <= 1'b0 ;   else if (rv9e20e && qi211d1)      mg9d4ed <= 1'b1 ;   else if ((shc6505 || vx3282d) && qi211d1)      mg9d4ed <= 1'b0 ;   else      mg9d4ed <= pha0b77 ;
end
assign sj9fd81 = pha0b77 & qi211d1 ;


`ifdef X1
   assign ir951c7 = {ym1f194} ;

`endif



`ifdef X4
   assign ir951c7 = {go53b48, ym1f194} ;

`endif



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      bna5c38 <= {(fnc7632){1'b1}} ;   else if (xy11b41 && rge185e)      bna5c38 <= {(fnc7632){1'b0}} ;   else if (rge185e)      bna5c38 <= qt5e2d1 + 1'b1 ;   else if (xy11b41)      bna5c38 <= {(fnc7632){1'b1}} ;   else      bna5c38 <= qt5e2d1 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      nt13b97 <= 12'hFFF ;   else if (rv9e20e && qi211d1) begin


`ifdef X1
         nt13b97 <= pff3c41[11:0];


`endif



`ifdef X4
         nt13b97 <= pff3c41[59:48];


`endif
   end   else      nt13b97 <= je2520c ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mg9dcbf <= 12'hFFF ;   else if (tuf1076 && qi211d1)      mg9dcbf <= je2520c;   else      mg9dcbf <= qv29063 ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      vv5a970 <= {(fnc7632){1'b0}} ;   else if (yxf8ca0 && qi211d1)      vv5a970 <= kq77c77 ;   else      vv5a970 <= xwc578b ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      zk69045 <= {(fnc7632){1'b0}} ;   else if (su67b44)      zk69045 <= {(fnc7632){1'b0}} ;   else if (vx3282d && qi211d1)      zk69045 <= xwc578b ;   else if (rge185e)      zk69045 <= kq77c77 + 1'b1 ;   else      zk69045 <= kq77c77 ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      icea769 <= 1'b0 ;   else if (me4c351 ||            (ip418ea && tjbf5c3 && al41449 && !wlae74e && qi211d1))      icea769 <= 1'b1 ;   else if (rvba91b && qi211d1 )      icea769 <= 1'b0 ;   else      icea769 <= gq5bbe  ;
end
assign fafec0d = gq5bbe & qi211d1 ;




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mr4115a <= {(fnc7632){1'b0}} ;   else if (su67b44)      mr4115a <= {(fnc7632){1'b0}} ;   else if (zx61796)      mr4115a <= xwc578b ;


`ifdef X1
      else if ( me4c351 ||             (shc6505 & ~tjbf5c3 & ~zx61796) ||     (vx3282d & ~tjbf5c3 & ~zx61796) ||             (!tjbf5c3 & ym88d25) ||             (ip418ea & tjbf5c3 & al41449 & ~wlae74e))         mr4115a <= uidbf0c[(kd6a74f/2)-1:0] ;



`endif



`ifdef X4
      else if ( me4c351 ||             (shc6505 & qi211d1 & ~tjbf5c3 & ~zx61796) ||     (vx3282d & qi211d1 & ~tjbf5c3 & ~zx61796) ||             (!tjbf5c3 & ip511a4) ||             (ip418ea & tjbf5c3 & al41449 & ~wlae74e))         mr4115a <= uidbf0c[(kd6a74f/2)-1:0] ;


`endif
   else if (vkb7523 & ~tjc755)      mr4115a <= kd51261 ;   else if (zzc2f2)      mr4115a <= xwf1dc5 + 1'b1 ;   else      mr4115a <= xwf1dc5 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      vx81f39 <= 1'b0 ;   else if (kq6d051 && qi211d1 && ngbcb7)      vx81f39 <= 1'b1 ;   else if (blfc908 && qi211d1 && !ngbcb7)      vx81f39 <= 1'b0 ;   else if (nre6ce3)      vx81f39 <= 1'b0 ;   else      vx81f39 <= wlae74e ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      gb70e30 <= {(fnc7632){1'b1}} ;   else if (wlae74e && nre6ce3)      gb70e30 <= {(fnc7632){1'b1}} ;   else if ( me4c351 ||             (ip418ea & tjbf5c3 & al41449 & !wlae74e))      gb70e30 <= uidbf0c[kd6a74f -1:(kd6a74f/2)] ;   else if (zzc2f2)      gb70e30 <= lf8b462 - 1'b1 ;   else      gb70e30 <= lf8b462 ;
end



assign ne42300 = kq77c77 + ~xwf1dc5 + 1'b1 ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pf456a5 <= {(fnc7632){1'b0}} ;   else if (su67b44 || zx61796)      pf456a5 <= {(fnc7632){1'b0}} ;


`ifdef X1
   else if ((su46929 && !ksafd7) ||            nre6ce3 || ((tuf1076 || uk883b2)) ||            (qt5e2d1 == cb80b53-18) ) begin      if (rtc72db[fnc7632] )         pf456a5 <= rtc72db[fnc7632 -1:0] + {(fnc7632){1'b1}} ;      else         pf456a5 <= rtc72db[fnc7632 -1:0] ;   end


`endif



`ifdef X4
   else if ((ip511a4 && !ksafd7) ||            nre6ce3 || ((tuf1076 || uk883b2) && qi211d1) ||            (qt5e2d1 == cb80b53-18) ) begin      if (rtc72db[fnc7632] )         pf456a5 <= rtc72db[fnc7632 -1:0] + {(fnc7632){1'b1}} ;      else         pf456a5 <= rtc72db[fnc7632 -1:0] ;   end


`endif
   else      pf456a5 <= ic7715e ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      wwe5626   <= 1'b0 ;      ou2b131   <= 1'b0 ;      ym3eed0 <= 1'b0 ;   end   else if (su67b44) begin      wwe5626   <= 1'b0 ;      ou2b131   <= 1'b0 ;      ym3eed0 <= 1'b0 ;   end   else if (ic7715e >= vi48670) begin      wwe5626   <= 1'b1 ;      ym3eed0 <= 1'b1 ;   end      else if (pf7b1d0) begin      ou2b131   <= 1'b1 ;      ym3eed0 <= 1'b1 ;   end      else if (~|nt3dbfc && oua64b7) begin      ou2b131   <= 1'b0 ;      ym3eed0 <= 1'b0 ;   end      else if (!pf7b1d0 & (ic7715e < vi48670) && vv74c96) begin      wwe5626   <= 1'b0 ;      ym3eed0 <= 1'b0 ;   end   else      ym3eed0 <= ym3eed0 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ie9da41    <= 1'b0 ;      ald3a9d     <= 1'b0 ;      dm7ce78 <= 1'b0 ;   end   else begin      ie9da41    <= ba96ea4 ;      ald3a9d     <= (shc6505 | vx3282d) && qi211d1 ;      dm7ce78 <= nt9416e ;   end
end


assign anbef2b = (lf8b462 == {(fnc7632){1'b0}}) & qi211d1 ;


assign gb6afbc = ((xwf1dc5 == {(fnc7632){1'b0}}) &                    (kq77c77 == {(fnc7632){1'b0}})) |                    (xwf1dc5 == (kq77c77 - 1)) ;


pmi_ram_dp #(   .pmi_wr_addr_depth    ( TLP_MEM_DEPTH ),   .pmi_wr_addr_width    ( fnc7632 ),   .pmi_rd_addr_depth    ( TLP_MEM_DEPTH ),   .pmi_rd_addr_width    ( fnc7632 ),


`ifdef X1
   .pmi_wr_data_width    ( 16 ),   .pmi_rd_data_width    ( 16 ),


`endif



`ifdef X4
   .pmi_wr_data_width    ( 64 +1 ),   .pmi_rd_data_width    ( 64 +1 ),


`endif
   .pmi_regmode          ( "noreg" ),   .pmi_gsr              ( "enable" ),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),         .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_ram_dp")   )   yk78933 (   .Data         ( ir951c7 ),   .WrAddress    ( zk69045 ),   .RdAddress    ( mr4115a ),   .WrClock      ( sys_clk ),   .RdClock      ( sys_clk ),   .WrClockEn    ( 1'b1 ),   .RdClockEn    ( fafec0d ),   .WE           ( sj9fd81 ),


`ifdef ECP5UM
   .Reset        (1'b0),


`else



`ifdef ECP3
      .Reset     (1'b0),


`else
      .Reset     (~rst_n),


`endif



`endif
   .Q            ( zma8e3d )   );





assign xy8c01a = {qt5e2d1, xwc578b} ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      neeb930     <= 1'b0 ;   else      neeb930     <= (shc6505 && !vx3282d && qi211d1) ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rv38c29 <= {(ww53a7c){1'b0}} ;   else if (su67b44)      rv38c29 <= {(ww53a7c){1'b0}} ;   else if (xy11b41)      rv38c29 <= ykd18be + 1'b1 ;   else      rv38c29 <= ykd18be ;
end

assign thf606a  = (ay62f82 == ykd18be) ;

assign kqc4c42 = (ykd18be-1) ;
assign bnb0357 = (ay62f82 == ks92dc7) ;



assign jr81abe = (rvba91b & ~wlae74e) & ~zx61796 ;







always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ng30a7d <= {(ww53a7c){1'b0}} ;   else if (su67b44)      ng30a7d <= {(ww53a7c){1'b0}} ;   else if (vkb7523 || ou9d3a2 ||            (!tjbf5c3 && !fp9b910 && ip6a234) ||            (pf615fa && ~|nt3dbfc) ) begin      if (tjc755 || ip6a234 )         ng30a7d <= fnfc30b ;      else         ng30a7d <= (ui4986a) ;   end   else if (suf046d)      ng30a7d <= ay62f82 + 1'b1 ;   else      ng30a7d <= ay62f82 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      tuee6b8  <= 1'b0 ;      rg735c2 <= 1'b0 ;      kf9ae13 <= 1'b0 ;      vvd709d <= 1'b0 ;      vkb84ee    <= 1'b0 ;      ep853eb  <= 1'b0 ;      ir29f5c <= 1'b0 ;      jp4fae4       <= 1'b0 ;      yk7d726   <= 1'b0 ;   end   else begin      tuee6b8  <= ho57eb8 ;      rg735c2 <= ip6a234 ;      kf9ae13 <= ip511a4 ;      vvd709d <= ym88d25 ;      vkb84ee    <= pf615fa ;      ep853eb  <= zx61796 ;      ir29f5c <= wl17c11 ;      jp4fae4       <= gb5e5ba  ;      yk7d726   <= suf046d ;   end
end
assign and5f7 = zx61796 & ~wl17c11 ;
assign tx_rbuf_empty = irbe08d ;

pmi_ram_dp #(   .pmi_wr_addr_depth    ( gq9d3e1 ),   .pmi_wr_addr_width    ( ww53a7c ),   .pmi_wr_data_width    ( kd6a74f ),   .pmi_rd_addr_depth    ( gq9d3e1 ),   .pmi_rd_addr_width    ( ww53a7c ),   .pmi_rd_data_width    ( kd6a74f ),   .pmi_regmode          ( "noreg" ),   .pmi_gsr              ( "enable" ),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),         .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_ram_dp")   )   fa52614 (   .Data         ( xy8c01a ),   .WrAddress    ( rv38c29 ),   .RdAddress    ( ng30a7d ),   .WrClock      ( sys_clk ),   .RdClock      ( sys_clk ),   .WrClockEn    ( 1'b1 ),   .RdClockEn    ( 1'b1 ),   .WE           ( neeb930 ),


`ifdef ECP5UM
   .Reset        (1'b0),


`else



`ifdef ECP3
      .Reset     (1'b0),


`else
      .Reset     (~rst_n),


`endif



`endif
   .Q            ( gq695 )   );



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      faee5f8 <= 12'h000 ;   else if (pf615fa || ho57eb8)      faee5f8 <= ba8c2bf ;   else      faee5f8 <= xw4831d ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ks97e10 <= 1'b0 ;   else if (ho57eb8)      ks97e10 <= 1'b1 ;   else if (mg82368 || rvba91b || ou9d3a2 )      ks97e10 <= 1'b0 ;   else      ks97e10 <= tjc755 ;
end



assign nt3dbfc = qv29063 + ~xw4831d + 1 ;




assign wy1a547 = ykd18be + ~nt3dbfc + 1 ;

assign co3108c =  uidbf0c[10:0] ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ec9dcd7    <= 1'b0 ;      rtc2772     <= 1'b0 ;      ria2773  <= 1'b0 ;      qif9cf <= 1'b0 ;      oh39e1c   <= 1'b0 ;      ipf8824       <= 1'b0 ;   end   else  begin      ec9dcd7    <= ksafd7 ;      rtc2772     <= tjbf5c3  ;      ria2773  <= (wla46f0 & ip418ea) |                          (tjbf5c3 & ble9d11 & en4e88e) ;      qif9cf <= rvba91b ;      oh39e1c   <= nre6ce3 ;      ipf8824       <= vid5a59 ;   end
end

assign enf795c = ksafd7 & ~kfd446 ;

assign ecbcae4  = tjbf5c3 & ~mta4a41 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      qv18513 <= {(fnc7632){1'b0}} ;      hq144ee <= {(ww53a7c){1'b0}} ;   end   else if (tjc755 & (rvba91b || ou9d3a2)) begin      qv18513  <= dob71cb ;      hq144ee <= fnfc30b ;   end   else if (qv23785) begin      qv18513  <= xwf1dc5 ;      hq144ee <= ay62f82 ;   end   else begin      qv18513  <= kd51261 ;      hq144ee <= ui4986a ;   end
end



assign vi57de5= (ps73a74 & wlae74e & tjbf5c3) ;







always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rvbf081 <= 3'b000 ;      else  if (su67b44 || ((by63aae == 3'b100) && nre6ce3 ) || (ho57eb8 && !ksafd7))      rvbf081 <= 3'b000 ;   else  if ((icd48de  || zkda02d) && !zx61796)      rvbf081 <= by63aae + 3'b001 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      off840f <= 3'b000 ;      ipedf31 <= 1'b0 ;   end   else begin      off840f <= by63aae ;      ipedf31 <= ((by63aae == 3'b100) & (ep1d573 == 3'b011)) ;   end
end










always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      jpd2a38  <= 'h0000 ;   else  if (ep2c60d || fa6306d || kdf2dd4)      jpd2a38 <= 'h0000 ;   else  if (pu1bc2c || nr74474 ||             zma23a6 || zx61796 )      jpd2a38 <= jpd2a38 ;   else if (qi211d1)      jpd2a38 <= jpd2a38 + 1 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      nrc207c <= 1'b0 ;   else  if (fa6306d)      nrc207c <= 1'b1 ;   else  if (ep2c60d || pu1bc2c ||             nr74474 || zma23a6 || db2ddf1)      nrc207c <= 1'b0 ;   else      nrc207c <= wweab9d ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ec103e7 <= 1'b0 ;   else  if (kfd446 && ay68289 )      ec103e7 <= 1'b1 ;   else  if (!kfd446)      ec103e7 <= 1'b0 ;   else      ec103e7 <= vv55ce9 ;
end


assign mg2b909 = ~vv55ce9 & kfd446 & (|nt3dbfc) ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pscf0e5 <= 1'b0 ;   else  if (gode163 )      pscf0e5 <= 1'b1 ;   else  if (fa6306d | qv858c1 | icf0b18 | ipedf31)      pscf0e5 <= 1'b0 ;   else      pscf0e5 <= nr74474 ;
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      yk7872b <= 1'b0 ;   else  if (ipedf31 )      yk7872b <= 1'b1 ;   else  if (vid5a59 & ~ph6c54)      yk7872b <= 1'b0 ;   else      yk7872b <= zma23a6 ;
end



assign lqe4248 = (~zx61796 & icd48de) ;



assign ec21243 = (~zx61796 & ou34948) ;


assign qg5c849 = (jpd2a38 == qg43382)  ;
assign db9219 = qv858c1 | icf0b18 | gode163 ;


assign cm490ce =  (!wweab9d & (tuf1076 | ay68289)) ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      zkda02d   <= 1'b0 ;   else      zkda02d   <= gode163 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      gbe73c3 <= 1'b0 ;   else if  (zkda02d && mta4a41)      gbe73c3 <= 1'b1 ;   else if (!mta4a41)      gbe73c3 <= 1'b0 ;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ic72fc2 <= 1'b0 ;   else if (su67b44)      ic72fc2 <= 1'b0 ;  else if ((icd48de  || zkda02d) && !zx61796 && (by63aae != 3'b011))      ic72fc2 <= 1'b1 ;  else  if ((vid5a59 & ~ph6c54) && !zx61796 && (by63aae == 3'b100))      ic72fc2 <= 1'b1 ;   else if (nre6ce3 || (pf615fa && ~|nt3dbfc))      ic72fc2 <= 1'b0 ;   else if (ble9d11 )      ic72fc2 <= 1'b1 ;   else      ic72fc2 <= ip418ea ;
end
assign pf7b1d0 = ip418ea | ble9d11 ;
assign mee5721 = ip418ea & ~fp9b910 ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      nre6ce3 <= 1'b0 ;      else if (vkb7523)      nre6ce3 <= 1'b1 ;   else if (ksafd7 && ~|nt3dbfc && zx61796)      nre6ce3 <= icd48de ;   else      nre6ce3 <= 1'b0 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      vk8caf1  <= 1'b0 ;      yk5c983  <= 1'b0 ;      goff921     <= {D_WIDTH{1'b0}} ;


`ifdef X4
         ne5dec7  <= 1'b0 ;         ne4744d  <= 1'b0 ;


`endif

      xwe4c18   <= 1'b0 ;      blfc908       <= 1'b0 ;      ux260c2 <= 1'b0 ;      pse4847     <= 1'b0 ;      vk30614 <= 1'b0 ;   end   else if (qi211d1) begin      vk8caf1  <= ip418ea ;      yk5c983  <= gq5bbe ;


`ifdef X1
         goff921     <= ks8da0a ? zma8e3d[15:0] : 16'h0000 ;


`endif



`ifdef X4
         goff921     <= ks8da0a ? zma8e3d[63:0] : 64'h0000_0000_0000_0000 ;         ne5dec7  <= ks8da0a ;         ne4744d  <= (zma8e3d[64] & ay68289) ;


`endif

      xwe4c18   <= (gq5bbe & ~ks8da0a) ;      blfc908       <= kq6d051 ;      ux260c2 <= rvba91b ;      pse4847     <= ay68289 ;      vk30614 <= pse4847 ;   end
end
assign qi87dda =  rvba91b ;
always@* begin pff3c41<={fp13e1f>>1,ux17adf[0]};rv9e20e<=ux17adf[1];tuf1076<=ux17adf[2];uk883b2<=ux17adf[3];ba8c2bf<={wyb38fd>>1,ux17adf[4]};pf615fa<=ux17adf[5];ksafd7<=ux17adf[6];ho57eb8<=ux17adf[7];tjbf5c3<=ux17adf[8];vid5a59<=ux17adf[9];su67b44<=ux17adf[10];vkb87c6<={max_pl_size>>1,ux17adf[11]};ym1f194<={oh333d3>>1,ux17adf[12]};yxf8ca0<=ux17adf[13];shc6505<=ux17adf[14];vx3282d<=ux17adf[15];nt9416e<=ux17adf[16];pha0b77<=ux17adf[17];gq5bbe<=ux17adf[18];db2ddf1<=ux17adf[19];kq77c77<={zk69045>>1,ux17adf[20]};xwf1dc5<={mr4115a>>1,ux17adf[21]};ic7715e<={pf456a5>>1,ux17adf[22]};xwc578b<={vv5a970>>1,ux17adf[23]};qt5e2d1<={bna5c38>>1,ux17adf[24]};lf8b462<={gb70e30>>1,ux17adf[25]};ykd18be<={rv38c29>>1,ux17adf[26]};ay62f82<={ng30a7d>>1,ux17adf[27]};wl17c11<=ux17adf[28];irbe08d<=ux17adf[29];suf046d<=ux17adf[30];mg82368<=ux17adf[31];xy11b41<=ux17adf[32];ks8da0a<=ux17adf[33];kq6d051<=ux17adf[34];ay68289<=ux17adf[35];al41449<=ux17adf[36];kd51261<={qv18513>>1,ux17adf[37]};ui4986a<={hq144ee>>1,ux17adf[38]};me4c351<=ux17adf[39];fp9b910<=ux17adf[40];kfd446<=ux17adf[41];ip6a234<=ux17adf[42];ip511a4<=ux17adf[43];ym88d25<=ux17adf[44];su46929<=ux17adf[45];ou34948<=ux17adf[46];mta4a41<=ux17adf[47];je2520c<={nt13b97>>1,ux17adf[48]};qv29063<={mg9dcbf>>1,ux17adf[49]};xw4831d<={faee5f8>>1,ux17adf[50]};ip418ea<=ux17adf[51];tjc755<=ux17adf[52];by63aae<={rvbf081>>1,ux17adf[53]};ep1d573<={off840f>>1,ux17adf[54]};wweab9d<=ux17adf[55];vv55ce9<=ux17adf[56];wlae74e<=ux17adf[57];ps73a74<=ux17adf[58];ou9d3a2<=ux17adf[59];ble9d11<=ux17adf[60];en4e88e<=ux17adf[61];nr74474<=ux17adf[62];zma23a6<=ux17adf[63];ph6c54<=ux17adf[64];fp8e992<={lf1cac4>>1,ux17adf[65]};vv74c96<=ux17adf[66];oua64b7<=ux17adf[67];ks92dc7<={kqc4c42>>1,ux17adf[68]};dob71cb<={co3108c>>1,ux17adf[69]};rtc72db<={ne42300>>1,ux17adf[70]};uicb6fc<={xy8c01a>>1,ux17adf[71]};uidbf0c<={gq695>>1,ux17adf[72]};fnfc30b<={wy1a547>>1,ux17adf[73]};rge185e<=ux17adf[74];zzc2f2<=ux17adf[75];zx61796<=ux17adf[76];ngbcb7<=ux17adf[77];gb5e5ba<=ux17adf[78];kdf2dd4<=ux17adf[79];ba96ea4<=ux17adf[80];vkb7523<=ux17adf[81];rvba91b<=ux17adf[82];icd48de<=ux17adf[83];wla46f0<=ux17adf[84];qv23785<=ux17adf[85];pu1bc2c<=ux17adf[86];gode163<=ux17adf[87];icf0b18<=ux17adf[88];qv858c1<=ux17adf[89];ep2c60d<=ux17adf[90];fa6306d<=ux17adf[91];end
always@* begin db22f5b[2047]<=cb9f0ff;db22f5b[2046]<=enf87fc;db22f5b[2044]<=kdc3fe4;db22f5b[2040]<=wyb38fd[0];db22f5b[2032]<=tw9c7e8;db22f5b[2016]<=pfe3f43;db22f5b[1985]<=ks1fa1f;db22f5b[1950]<=mg9d4ed;db22f5b[1930]<=vv5a970[0];db22f5b[1923]<=ne4df8d;db22f5b[1909]<=enf795c;db22f5b[1878]<=ec103e7;db22f5b[1874]<=qg5c849;db22f5b[1870]<=thf606a;db22f5b[1852]<=icea769;db22f5b[1813]<=bna5c38[0];db22f5b[1799]<=phy_l0;db22f5b[1770]<=ecbcae4;db22f5b[1708]<=vx81f39;db22f5b[1700]<=lqe4248;db22f5b[1693]<=bnb0357;db22f5b[1656]<=ie9da41;db22f5b[1578]<=gb70e30[0];db22f5b[1573]<=ipf8824;db22f5b[1551]<=wl3671f;db22f5b[1493]<=off840f[0];db22f5b[1492]<=mee5721;db22f5b[1491]<=sj9fd81;db22f5b[1417]<=pscf0e5;db22f5b[1396]<=gq695[0];db22f5b[1378]<=gbe73c3;db22f5b[1368]<=qif9cf;db22f5b[1353]<=vk8caf1;db22f5b[1352]<=ec21243;db22f5b[1345]<=jp4fae4;db22f5b[1339]<=jr81abe;db22f5b[1316]<=tuee6b8;db22f5b[1312]<=cm490ce;db22f5b[1285]<=neeb930;db22f5b[1265]<=zk69045[0];db22f5b[1262]<=gb6afbc;db22f5b[1198]<=co3108c[0];db22f5b[1169]<=kf9ae13;db22f5b[1163]<=rtc2772;db22f5b[1117]<=faee5f8[0];db22f5b[1108]<=rv38c29[0];db22f5b[1098]<=lf1cac4[0];db22f5b[1054]<=max_pl_size[0];db22f5b[1045]<=xwe4c18;db22f5b[1023]<=fp13e1f[0];db22f5b[975]<=ald3a9d;db22f5b[965]<=pf456a5[0];db22f5b[954]<=anbef2b;db22f5b[939]<=nrc207c;db22f5b[937]<=mg2b909;db22f5b[935]<=fafec0d;db22f5b[786]<=yk7872b;db22f5b[746]<=rvbf081[0];db22f5b[745]<=wy1a547[0];db22f5b[708]<=oh39e1c;db22f5b[698]<=xy8c01a[0];db22f5b[689]<=dm7ce78;db22f5b[676]<=ria2773;db22f5b[672]<=ir29f5c;db22f5b[658]<=ec9dcd7;db22f5b[656]<=db9219;db22f5b[642]<=yk7d726;db22f5b[631]<=and5f7;db22f5b[599]<=kqc4c42[0];db22f5b[584]<=rg735c2;db22f5b[581]<=vkb84ee;db22f5b[558]<=mg9dcbf[0];db22f5b[522]<=yk5c983;db22f5b[487]<=mr7a753;db22f5b[482]<=mr4115a[0];db22f5b[477]<=vi57de5;db22f5b[373]<=ks97e10;db22f5b[349]<=ne42300[0];db22f5b[338]<=hq144ee[0];db22f5b[336]<=ep853eb;db22f5b[299]<=ou2b131;db22f5b[290]<=vvd709d;db22f5b[279]<=nt13b97[0];db22f5b[243]<=xwcf4ea;db22f5b[186]<=ic72fc2;db22f5b[169]<=qv18513[0];db22f5b[168]<=ng30a7d[0];db22f5b[149]<=wwe5626;db22f5b[121]<=ls99e9d;db22f5b[84]<=vk30614;db22f5b[60]<=oh333d3[0];db22f5b[42]<=ux260c2;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_ux23ea2 #(
   parameter D_WIDTH  = 64,   parameter wwfa8a8  = 12'd0,   parameter wwd4540  = 12'd2048 )
   (
   input wire        sys_clk ,     
   input wire        rst_n ,       

   input wire [D_WIDTH-1:0] tlpgen_data , 
   input wire        tlpgen_st ,   
   input wire        tlpgen_end ,  
   input wire        tlpgen_nlfy , 

   input wire [11:0] wjcca07 ,    
   input wire        wl3671f ,    
   `ifdef X4
      input wire     rgf11db , 
      input wire     ls93225 , 
      output reg     ux8e89 ,   
   `endif

   output wire       pfc8953 ,   

   output reg [D_WIDTH-1:0] fp13e1f ,   
   output reg        cb9f0ff ,     
   output reg        enf87fc ,    
   output reg        kdc3fe4 ,   
   output reg [11:0] ho7cd9c     ) ;
reg [D_WIDTH-1:0]     jp5a362 ;
reg                   god1b16 ;
reg                   ec8d8b0 ;
reg                   ps6c581 ;

`ifdef X4
reg                os62c0b ;
reg                fp16059 ;
reg [15:0]         nrcd1f7 ;
reg                tj81676 ;
reg                xyb3b6 ;
reg                kq59db3 ;

`endif
wire [11:0]           yz7b7f ;
wire                  ne76cc0 ;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg [D_WIDTH - 1 : 0] mgb3011;
reg uk98089;
reg vic0449;
reg oh224a;
reg [11 : 0] of443e8;
reg su67b44;
reg ea4955a;
reg nr4aad0;
reg hb55686;
reg [11 : 0] ipe8800;
reg ld5a1bc;
reg [2047:0] db22f5b;
wire [10:0] ux17adf;

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 11,jceb7ea = 32'hfdffc68b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif



`ifdef X4



`endif












`ifdef X1
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         god1b16  <= 1'b0 ;         ec8d8b0 <= 1'b0 ;         jp5a362 <= {D_WIDTH{1'b0}} ;      end      else begin         god1b16  <= vic0449 ;         ec8d8b0 <= oh224a ;         jp5a362 <= mgb3011 ;      end   end

`endif



`ifdef X4
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         god1b16  <= 1'b0 ;         ec8d8b0 <= 1'b0 ;         jp5a362 <= {D_WIDTH{1'b0}} ;         os62c0b <= 1'b0 ;         fp16059   <= 1'b0 ;         tj81676  <= 1'b0 ;         xyb3b6 <= 1'b0 ;         kq59db3 <= 1'b0 ;      end      else if (rgf11db) begin         god1b16  <= vic0449 ;         ec8d8b0 <= oh224a ;         jp5a362 <= mgb3011 ;         os62c0b <= ls93225 ;         fp16059   <= uk98089 ;         tj81676  <= ea4955a ;         xyb3b6 <= nr4aad0 ;         kq59db3 <= os62c0b ;      end   end

`endif




`ifdef X1
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         cb9f0ff         <= 1'b0 ;         enf87fc        <= 1'b0 ;         kdc3fe4       <= 1'b0 ;      end      else begin         cb9f0ff         <= uk98089 ;         enf87fc        <= ea4955a ;         kdc3fe4       <= nr4aad0 ;      end   end

`endif



`ifdef X4
               always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         cb9f0ff   <= 1'b0 ;         enf87fc  <= 1'b0 ;         kdc3fe4 <= 1'b0 ;         ux8e89 <= 1'b0 ;      end      else begin if (rgf11db)            cb9f0ff <= fp16059 ; if (os62c0b & rgf11db) begin            enf87fc  <= ea4955a ;            kdc3fe4 <= nr4aad0 ;            ux8e89 <= ~os62c0b & (ea4955a | nr4aad0)  ;         end         else if (rgf11db) begin            if (!kq59db3) begin               enf87fc  <= tj81676 ;               kdc3fe4 <= xyb3b6 ;               ux8e89 <= ~kq59db3 & (tj81676 | xyb3b6)  ;            end            else begin               enf87fc  <= 1'b0 ;               kdc3fe4 <= 1'b0 ;               ux8e89 <= 1'b0 ;            end         end      end   end

`endif




`ifdef X1
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ps6c581  <= 1'b0 ;      else if (uk98089)         ps6c581  <= 1'b1 ;      else if (ea4955a)         ps6c581  <= 1'd0 ;   end         always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         fp13e1f  <= 16'd0 ;      else if (uk98089)         fp13e1f  <= ho7cd9c ;      else if (hb55686)         fp13e1f  <= jp5a362 ;      else         fp13e1f  <= 16'd0 ;   end

`endif



`ifdef X4
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ps6c581  <= 1'b0 ;      else if (fp16059 && rgf11db)         ps6c581  <= 1'b1 ;      else if (enf87fc && rgf11db)         ps6c581  <= 1'd0 ;   end         always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         nrcd1f7 <= 16'd0 ;         fp13e1f  <= 64'd0 ;      end      else begin                           if (fp16059 || rgf11db)            nrcd1f7 <= jp5a362[15:0] ;         else            nrcd1f7 <= nrcd1f7 ;         case (1'b1)            fp16059 & rgf11db  :               fp13e1f  <= {4'b0000, ho7cd9c, jp5a362[63:16]} ;            rgf11db & hb55686 :               fp13e1f  <= {nrcd1f7, jp5a362[63:16]} ;            ea4955a & rgf11db :               fp13e1f  <= {nrcd1f7, 48'h0000_0000_0000} ;            nr4aad0 & rgf11db :               fp13e1f  <= {nrcd1f7, 48'h0000_0000_0000} ;            rgf11db :               fp13e1f  <= 64'd0 ;            default :               fp13e1f  <= fp13e1f ;         endcase      end   end

`endif





always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ho7cd9c <= wwfa8a8 ;   else if (su67b44)      ho7cd9c <= wwfa8a8 ;


`ifdef X1
      else if (vic0449)         ho7cd9c <= ho7cd9c + 12'h001 ;


`endif



`ifdef X4
      else if (vic0449 && rgf11db)         ho7cd9c <= ho7cd9c + 12'h001 ;


`endif
   else      ho7cd9c <= ho7cd9c ;
end





assign yz7b7f = ((~of443e8) + 12'h001) ;




assign ne76cc0 = ((ho7cd9c + ipe8800) >= wwd4540 ) ;

assign pfc8953 = ld5a1bc  ;
always@* begin mgb3011<={tlpgen_data>>1,ux17adf[0]};uk98089<=ux17adf[1];vic0449<=ux17adf[2];oh224a<=ux17adf[3];of443e8<={wjcca07>>1,ux17adf[4]};su67b44<=ux17adf[5];ea4955a<=ux17adf[6];nr4aad0<=ux17adf[7];hb55686<=ux17adf[8];ipe8800<={yz7b7f>>1,ux17adf[9]};ld5a1bc<=ux17adf[10];end
always@* begin db22f5b[2047]<=tlpgen_st;db22f5b[2046]<=tlpgen_end;db22f5b[2044]<=tlpgen_nlfy;db22f5b[2040]<=wjcca07[0];db22f5b[2032]<=wl3671f;db22f5b[2017]<=god1b16;db22f5b[1987]<=ec8d8b0;db22f5b[1926]<=ps6c581;db22f5b[1805]<=yz7b7f[0];db22f5b[1562]<=ne76cc0;db22f5b[1023]<=tlpgen_data[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_god1bf3 #(
   parameter FADDR = 3,   parameter D_WIDTH  = 64 )
   (
   input wire            sys_clk ,         
   input wire            rst_n ,           

   input wire            mtab7fe ,      
   input wire [D_WIDTH-1:0]     tlpgen_data ,     
   input wire            tlpgen_st ,       
   input wire            tlpgen_end ,      
   input wire            tlpgen_nlfy ,     
   input wire            tlpgen_rdy_ack ,  

   input wire [11:0]     wyb38fd ,     
   input wire            tw9c7e8 ,        
   input wire            pfe3f43 ,       
   input wire            ks1fa1f ,      

   input wire            wl3671f ,        
   input wire [FADDR:0]  dll_pause_cnt ,   
   input wire            phy_l0 ,          
   input wire [2:0]      max_pl_size ,     
   `ifdef X4
      input wire         rgf11db ,     
      input wire         ls93225 ,     
      output wire        ks10686 ,       
      output wire        pu83431 ,       
   `endif

   output wire           txtp_rdy ,        
   output wire           ay7dbe6 ,
   output wire [D_WIDTH-1:0]    txtp_tdata ,      
   output wire           ene7d55 ,   
   output wire           txtp_st ,         
   output wire           txtp_end ,        
   output wire           txtp_edb ,        

   output wire           tx_rbuf_empty ,  
   output wire           nre6ce3 ,  
   output wire [11:0]    ho7cd9c ,     
   output wire           zkda02d ,  
   output wire           ipedf31       ) ;
wire[D_WIDTH-1:0]    fp13e1f ;
wire[D_WIDTH-1:0]    goff921 ;
wire[D_WIDTH-1:0]    go7796a ;

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif
reg rst_n_split;
reg fc865d2;
reg [D_WIDTH - 1 : 0] mgb3011;
reg uk98089;
reg vic0449;
reg oh224a;
reg vx32e93;
reg [11 : 0] ba8c2bf;
reg pf615fa;
reg ksafd7;
reg ho57eb8;
reg su67b44;
reg [FADDR : 0] nt9e1f3;
reg vid5a59;
reg [2 : 0] vkb87c6;
reg [D_WIDTH - 1 : 0] hqec85;
reg [D_WIDTH - 1 : 0] bl74bce;
reg [2047:0] db22f5b;
wire [16:0] ux17adf;


`ifdef X4

`endif


`ifdef X4

`endif


`ifdef X4

`endif


`ifdef X4

`endif

localparam ribd6fd = 17,jceb7ea = 32'hfdffd14b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


pcie_x1_ux23ea2 #(   .D_WIDTH              ( D_WIDTH ) )   ph68c6 (      .sys_clk       ( sys_clk ) ,   .rst_n         ( rst_n_split ),      .tlpgen_data   ( mgb3011 ) ,   .tlpgen_st     ( uk98089 ) ,   .tlpgen_end    ( vic0449 ) ,   .tlpgen_nlfy   ( oh224a ) ,   .wjcca07      ( ba8c2bf ) ,   .wl3671f      ( su67b44  ) ,


`ifdef X4
      .rgf11db( rgf11db ) ,      .ls93225( ls93225 ) ,      .ux8e89  ( ux8e89 ) ,


`endif
      .pfc8953     ( icffd2b ) ,   .fp13e1f     ( fp13e1f ) ,   .cb9f0ff       ( cb9f0ff ) ,   .enf87fc      ( enf87fc ) ,   .kdc3fe4     ( kdc3fe4 ) ,   .ho7cd9c   ( ho7cd9c )  ) ;  pcie_x1_vv6beb4 #(   .D_WIDTH              ( D_WIDTH ) )   ri89480 (      .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n_split ),      .fp13e1f      ( fp13e1f ) ,   .cb9f0ff        ( cb9f0ff ) ,   .enf87fc       ( enf87fc ) ,   .kdc3fe4      ( kdc3fe4 ) ,
   .wyb38fd    ( ba8c2bf ) ,   .tw9c7e8       ( pf615fa ) ,   .pfe3f43      ( ksafd7 ) ,   .ks1fa1f     ( ho57eb8 ) ,   .ne4df8d ( th4fb7c ) ,   .wl3671f       ( su67b44  ) ,   .phy_l0         ( vid5a59 ) ,   .max_pl_size    ( vkb87c6 ),


`ifdef X4
      .qi211d1   ( rgf11db ) ,      .ux8e89   ( ux8e89 ) ,      .ne5dec7   ( ) ,      .ne4744d   ( ne4744d ) ,


`endif

      .pf7b1d0  ( zkdffa5 ) ,   .goff921      ( goff921 ) ,   .blfc908        ( blfc908 ) ,   .pse4847       ( pse4847 ) ,   .qi87dda ( gd26050 ) ,   .ym3eed0     ( psfe958 ) ,   .tx_rbuf_empty  ( tx_rbuf_empty ) ,   .nre6ce3 ( nre6ce3 ) ,   .zkda02d ( zkda02d ) ,   .ipedf31 ( lq584f8 )   ) ;
pcie_x1_fa7c8b5 #(   .FADDR         ( FADDR ),   .D_WIDTH       ( D_WIDTH ) )   uk92861 (      .sys_clk       ( sys_clk ) ,   .rst_n         ( rst_n_split ),      .mtab7fe     ( fc865d2 ) ,   .tlpgen_rdy_ack ( vx32e93 ) ,   .zkdffa5       ( zkdffa5 ) ,   .icffd2b  ( icffd2b ) ,   .psfe958  ( psfe958 ) ,   .dll_pause_cnt  ( nt9e1f3 ) ,   .phy_l0         ( vid5a59 ) ,   .lq584f8      ( lq584f8 ) ,   .fp13e1f      ( fp13e1f ) ,   .cb9f0ff        ( cb9f0ff ) ,   .enf87fc       ( enf87fc ) ,   .kdc3fe4      ( kdc3fe4 ) ,   .goff921      ( hqec85 ) ,   .blfc908        ( blfc908 ) ,   .pse4847       ( pse4847 ) ,   .gq2423a      ( gd26050 ) ,


`ifdef X4
      .qi211d1   ( rgf11db ) ,      .ux8e89   ( ux8e89 ) ,      .ne4744d   ( ne4744d ) ,      .mr6a047   ( mr6a047 ) ,      .pf5023c   ( pf5023c ) ,


`endif

      .txtp_rdy       ( txtp_rdy ) ,   .th4fb7c       ( th4fb7c ) ,   .ay7dbe6 ( ay7dbe6 ) ,   .ipedf31 ( ipedf31 ) ,   .go7796a      ( go7796a ) ,   .ukbcb50        ( ukbcb50 ) ,   .kqe5a81       ( kqe5a81 ) ,   .vx2d408       ( vx2d408 )  ) ;
pcie_x1_xj5fa0e #(   .D_WIDTH              ( D_WIDTH ) )   hqad711 (      .sys_clk       ( sys_clk ) ,   .rst_n         ( rst_n_split ),      .go7796a     ( bl74bce ) ,   .ukbcb50       ( ukbcb50 ) ,   .kqe5a81      ( kqe5a81 ) ,   .vx2d408      ( vx2d408 ) ,


`ifdef X4
      .mr6a047 ( mr6a047 ) ,      .pf5023c ( pf5023c ) ,      .ks10686 ( ks10686 ) ,      .pu83431 ( pu83431 ) ,


`endif

      .txtp_tdata    ( txtp_tdata ) ,   .ene7d55 ( ene7d55 ) ,   .txtp_st       ( txtp_st ) ,   .txtp_end      ( txtp_end ) ,   .txtp_edb      ( txtp_edb )  ) ;

always@* begin rst_n_split<=ux17adf[0];fc865d2<=ux17adf[1];mgb3011<={tlpgen_data>>1,ux17adf[2]};uk98089<=ux17adf[3];vic0449<=ux17adf[4];oh224a<=ux17adf[5];vx32e93<=ux17adf[6];ba8c2bf<={wyb38fd>>1,ux17adf[7]};pf615fa<=ux17adf[8];ksafd7<=ux17adf[9];ho57eb8<=ux17adf[10];su67b44<=ux17adf[11];nt9e1f3<={dll_pause_cnt>>1,ux17adf[12]};vid5a59<=ux17adf[13];vkb87c6<={max_pl_size>>1,ux17adf[14]};hqec85<={goff921>>1,ux17adf[15]};bl74bce<={go7796a>>1,ux17adf[16]};end
always@* begin db22f5b[2047]<=mtab7fe;db22f5b[2046]<=tlpgen_data[0];db22f5b[2044]<=tlpgen_st;db22f5b[2040]<=tlpgen_end;db22f5b[2033]<=tlpgen_nlfy;db22f5b[2019]<=tlpgen_rdy_ack;db22f5b[1990]<=wyb38fd[0];db22f5b[1933]<=tw9c7e8;db22f5b[1819]<=pfe3f43;db22f5b[1778]<=goff921[0];db22f5b[1591]<=ks1fa1f;db22f5b[1508]<=go7796a[0];db22f5b[1135]<=wl3671f;db22f5b[1023]<=rst_n;db22f5b[889]<=max_pl_size[0];db22f5b[444]<=phy_l0;db22f5b[222]<=dll_pause_cnt[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_cfg_dec1_x1 (
   input wire          sys_clk ,      
   input wire          rst_n ,        

   input wire [15:0]   tlp_data ,     
   input wire          tlp_st ,       
   input wire          tlp_end ,      
   input wire          tlp_erly_st ,  
   input wire          phy_link_up ,  
   input wire          term_all_cfg , 

   `ifdef ECRC
      input wire       tlp_pcie_x1_ecrc_ok ,  
      input wire       pcie_x1_ecrc_chk_enb , 
   `endif

   
   input wire [9:0]    ADR_I ,        
   input wire [31:0]   DAT_I ,        
   input wire          WE_I ,         
   input wire          STB_I ,        

   output reg [7:0]    bus_num ,
   output reg [4:0]    dev_num ,
   output reg [2:0]    func_num ,
   output reg [15:0]   req_id ,
   output reg [7:0]    tag ,
   output reg [2:0]    tc ,

   output reg          reg_sel_t0 ,   
   output reg          reg_sel_pmsi , 
   output reg          reg_sel_cs ,   
   output reg          reg_sel_ec ,   
   `ifdef AER
      output reg       reg_sel_aer ,  
   `endif
   output reg          reg_sel_usp ,  
   output reg          reg_id_hit ,   
   output reg          type1_cfg ,    
   output reg          pois_cfg ,     
   output reg          cfg_hit ,
   output reg          nph_processed , 
   output reg          npd_processed , 

   output wire [5:0]   reg_addr ,     
   output wire [31:0]  reg_wdata ,    
   output wire [3:0]   reg_wdata_be , 
   output wire         reg_wr_t1 ,    
   output wire         reg_wr_pois ,  
   output wire         reg_wr ,       
   output wire         reg_rd ,       
   output reg          reg_rd_cpm ,   
   output reg          reg_wr_cpm ,   
   output reg          pcie_x1_ecrc_ok           ) ;
reg         cfgwr_tlp ;
reg         ice5038 ;
reg [3:0]   jr281c1 ;
reg [3:0]   vv40e0f ;
reg [5:0]   sj707f ;
reg [31:0]  vx383fd ;
reg [3:0]   osc1fee ;
reg         mgff71 ;
reg         yx7fb88 ;
reg         offdc44 ;
reg         psee225 ;
reg         nr7112a ;
reg         ym88956 ;
reg         uv44ab1 ;
reg         je2558d ;
reg         pu2ac6b ;
reg         tlp_st_reg2 ;
reg         sjb1ad8 ;
reg         tlp_end_reg2 ;
reg         fn6b628 ;
reg         kd5b146 ;
reg         rtd8a34 ;
reg         tuc51a6 ;
reg         zz28d32 ;
reg [7:0]   me46996 ;
reg [4:0]   sw34cb0 ;
reg [2:0]   qia6581 ;
reg [15:0]  rv32c08 ;
reg [7:0]   fc96046 ;
reg [2:0]   zzb0232 ;
reg         tj81196 ;
reg         yz8cb6 ;
reg         su465b5 ;
reg         vx32da9 ;
reg [7:0]   ls96d4e ;
reg [4:0]   wyb6a73 ;
reg [2:0]   vxb5398 ;
reg         ksa9cc6 ;
reg         yx4e630 ;
reg         tu73185 ;
reg         ym98c2b ;
reg         yxc6158 ;
reg         pu30ac5 ;
reg         ux8562b ;
wire        ec2b15c ;
wire [9:0]  by58ae0 ;
wire [9:0]  vic5702 ;
wire [9:0]  mg2b812 ;
wire        qg5c091 ;

`ifdef GEN2

`else

`endif

`ifdef AER

`endif

`ifdef AER

`endif

`ifdef GEN2

`else

`endif

`ifdef VC1

`endif

`ifdef VC2

`endif

`ifdef VC3

`endif

`ifdef VC4

`endif

`ifdef VC5

`endif

`ifdef VC6

`endif

`ifdef VC7

`endif

`ifdef VC8

`endif

`ifdef AER

`else

`endif

`ifdef ECRC

`else

`endif
reg [15 : 0] ose0489;
reg ep2449;
reg mt1224d;
reg db9126c;
reg db81c22;
reg os49b3a;
reg [9 : 0] rg4d9d1;
reg [31 : 0] ps6ce8b;
reg kq6745a;
reg tw3a2d0;
reg cmd1683;
reg [3 : 0] fp8b419;
reg [3 : 0] zx5a0cf;
reg [5 : 0] fad067e;
reg [31 : 0] ba833f3;
reg [3 : 0] ph19f9b;
reg dmcfcde;
reg fn7e6f2;
reg xjf3797;
reg hd9bcbf;
reg uide5ff;
reg shf2ff8;
reg mg97fc4;
reg hdbfe21;
reg goff10e;
reg enf8871;
reg mec438d;
reg sw21c68;
reg fce340;
reg zx71a03;
reg uk8d01f;
reg ic680f8;
reg nr407c1;
reg [7 : 0] db3e0e;
reg [4 : 0] ym1f076;
reg [2 : 0] yxf83b0;
reg [15 : 0] mec1d84;
reg [7 : 0] xyec21;
reg [2 : 0] ho7610a;
reg jrb0853;
reg zz8429f;
reg sw214fe;
reg iea7f1;
reg [7 : 0] ui53f89;
reg [4 : 0] sj9fc49;
reg [2 : 0] fafe24d;
reg vif126b;
reg ls8935a;
reg os49ad2;
reg rg4d691;
reg nr6b48a;
reg xj5a456;
reg rtd22b6;
reg rv915b6;
reg [9 : 0] ux8adb7;
reg [9 : 0] ic56dbc;
reg [9 : 0] ymb6de1;
reg ieb6f08;
reg [2047:0] db22f5b;
wire [57:0] ux17adf;

`ifdef GEN2

`else

`endif

`ifdef AER

`endif

`ifdef AER

`endif

`ifdef GEN2

`else

`endif

`ifdef VC1

`endif

`ifdef VC2

`endif

`ifdef VC3

`endif

`ifdef VC4

`endif

`ifdef VC5

`endif

`ifdef VC6

`endif

`ifdef VC7

`endif

`ifdef VC8

`endif

`ifdef AER

`else

`endif

`ifdef ECRC

`else

`endif

localparam ribd6fd = 58,jceb7ea = 32'hfdffe06b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef GEN2


`else


`endif


`ifdef AER


`endif


`ifdef AER


`endif


`ifdef GEN2


`else


`endif


`ifdef VC1


`endif


`ifdef VC2


`endif


`ifdef VC3


`endif


`ifdef VC4


`endif


`ifdef VC5


`endif


`ifdef VC6


`endif


`ifdef VC7


`endif


`ifdef VC8


`endif


`ifdef AER


`else


`endif


`ifdef ECRC


`else


`endif






assign dz5f1f6 = (ose0489[13:9] == 5'b0_0010) ; 
assign blc7db5 = ose0489[14] & dz5f1f6  ;
assign ecb6b86 = ~ose0489[14] & dz5f1f6 ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      cfgwr_tlp <= 1'b0;   else if (ep2449 && blc7db5)      cfgwr_tlp <= 1'b1;   else if (mt1224d && !ep2449)      cfgwr_tlp <= 1'b0;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ice5038 <= 1'b0;   else if (ep2449 && ecb6b86)      ice5038 <= 1'b1;   else if (mt1224d & !ep2449)      ice5038 <= 1'b0;
end

assign pu35ab3 = ((ep2449 & dz5f1f6)  | cfgwr_tlp | cmd1683) ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      jr281c1 <= 4'h0;   else if (pu35ab3)      jr281c1 <= fp8b419 + 1'b1;   else      jr281c1 <= 4'h0;
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      zzb0232 <= 3'd0;   else if (ep2449)      zzb0232 <= ose0489[6:4] ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      rv32c08   <= 16'd0 ;      fc96046      <= 8'd0 ;      tj81196         <= 1'd0 ;      yz8cb6         <= 1'd0 ;      su465b5   <= 1'b0 ;      vx32da9   <= 1'b0 ;      ls96d4e    <= 8'd0 ;      wyb6a73    <= 5'd0 ;      vxb5398   <= 3'd0 ;      vv40e0f <= 4'hF ;      sj707f  <= 6'h3F ;      vx383fd <= 32'd0 ;      osc1fee    <= 4'd0 ;      yx7fb88    <= 1'b0 ;      mgff71    <= 1'b0 ;   end   else begin      yx7fb88 <= 1'b0 ;      mgff71 <= 1'b0 ;      case (fp8b419)         4'd1 : begin            tj81196     <= ose0489[15] ;            yz8cb6     <= ose0489[14] ;


`ifdef GEN2
                              su465b5 <= ((ose0489[13:12] == 2'b00) && (ose0489[11:10] == 2'b00) && (ose0489[9:0] == 'd1)) ;


`else
                              su465b5 <= ((ose0489[13:12] == 2'b00) && (ose0489[9:0] == 'd1)) ;


`endif
         end         4'd2 : rv32c08 <= ose0489 ;         4'd3 : begin            fc96046        <= ose0489[15:8] ;            osc1fee   <= ose0489[3:0] ;                          vx32da9     <= (ose0489[7:4] == 4'b0000) ;          end         4'd4 : begin               ls96d4e  <= ose0489[15:8] ;               wyb6a73  <= ose0489[7:3] ;               vxb5398 <= ose0489[2:0] ;         end         4'd5 : begin            vv40e0f <= ose0489[11:8] ;            sj707f  <= ose0489[7:2] ;                                        yx7fb88    <= cmd1683 ;         end         4'd6 : begin            vx383fd[7:0]  <= cfgwr_tlp ? ose0489[15:8] : ba833f3[31:24] ;            vx383fd[15:8] <= cfgwr_tlp ? ose0489[7:0]  : ba833f3[23:16] ;         end         4'd7 : begin            vx383fd[23:16] <= ose0489[15:8] ;            vx383fd[31:24] <= ose0489[7:0] ;                                        mgff71           <= cfgwr_tlp ;         end      endcase   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      me46996    <= 8'd0 ;      sw34cb0    <= 5'd0 ;      qia6581   <= 3'd0 ;   end   else if (!db81c22) begin      me46996    <= 8'd0 ;      sw34cb0    <= 5'd0 ;      qia6581   <= 3'd0 ;   end            else if ((fp8b419 == 4'd4) && cfgwr_tlp && pcie_x1_ecrc_ok) begin      me46996  <= ose0489[15:8] ;      sw34cb0  <= ose0489[7:3] ;      qia6581 <= ose0489[2:0] ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      req_id <= 16'd0 ;      tag    <= 8'd0 ;      tc     <= 1'd0 ;   end   else if (dmcfcde || fn7e6f2) begin      req_id <= mec1d84 ;      tag    <= xyec21 ;      tc     <= ho7610a ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      bus_num    <= 8'd0 ;      dev_num    <= 5'd0 ;      func_num   <= 3'd0 ;   end   else if (dmcfcde) begin      bus_num    <= db3e0e ;      dev_num    <= ym1f076 ;      func_num   <= 3'd0 ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      reg_id_hit <= 1'b0 ;   else      reg_id_hit <= (fafe24d == func_num) ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ksa9cc6  <= 1'd0 ;   else if (ep2449 & (ose0489[13:8] == 6'b0_00101))      ksa9cc6 <= 1'b1 ;   else if (sw21c68)      ksa9cc6  <= 1'd0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      yx4e630 <= 1'd0 ;      type1_cfg      <= 1'd0 ;      tu73185 <= 1'd0 ;      ym98c2b <= 1'd0 ;      yxc6158  <= 1'd0 ;      pois_cfg       <= 1'd0 ;   end   else begin      yx4e630 <= vif126b ;      tu73185 <= ls8935a ;      ym98c2b <= os49ad2 ;      type1_cfg      <= rg4d691 ;      yxc6158  <= zz8429f ;      pois_cfg       <= nr6b48a ;   end
end










assign by58ae0 = {zx5a0cf[3:0],fad067e[5:4], fad067e[3:0]} ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      pu2ac6b  <= 1'b0 ;      tlp_st_reg2  <= 1'b0 ;      sjb1ad8 <= 1'b0 ;      tlp_end_reg2 <= 1'b0 ;      fn6b628 <= 1'b0 ;      kd5b146 <= 1'b0 ;      rtd8a34 <= 1'b0 ;      tuc51a6 <= 1'b0 ;      zz28d32 <= 1'b0 ;      psee225  <= 1'b0 ;      offdc44  <= 1'b0 ;   end   else begin      pu2ac6b  <= ep2449 & dz5f1f6 ;      tlp_st_reg2  <= goff10e ;      sjb1ad8 <= mt1224d ;      tlp_end_reg2 <= mec438d ;      fn6b628 <= sw21c68 ;      kd5b146 <= fce340 ;      rtd8a34 <= zx71a03 ;      tuc51a6 <= uk8d01f ;      zz28d32 <= ic680f8 ;      psee225  <= fn7e6f2 ;      offdc44  <= dmcfcde ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      je2558d <= 1'b0 ;   else if (enf8871)      je2558d <= 1'b1 ;   else if (ic680f8 && !pu35ab3)      je2558d <= 1'b0 ;
end
assign ec2b15c = ((ep2449 & dz5f1f6) | goff10e | enf8871) ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      reg_rd_cpm <= 1'b0 ;   else if (!hdbfe21 && ~kq6745a && tw3a2d0 && !reg_rd_cpm && !uide5ff && !shf2ff8 && !mg97fc4 && !rv915b6 )      reg_rd_cpm <= 1'b1 ;   else      reg_rd_cpm <= 1'b0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      reg_wr_cpm <= 1'b0 ;   else if (!hdbfe21 && kq6745a && tw3a2d0 && !reg_wr_cpm && !uide5ff && !shf2ff8 && !mg97fc4 && !rv915b6 )      reg_wr_cpm <= 1'b1 ;   else      reg_wr_cpm <= 1'b0 ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      nr7112a <= 1'b0 ;      ym88956 <= 1'b0 ;      uv44ab1 <= 1'b0 ;   end   else begin      nr7112a <= reg_rd_cpm | reg_wr_cpm ;      ym88956 <= uide5ff ;      uv44ab1 <= shf2ff8 ;   end
end
assign mg2b812 = hdbfe21 ? ux8adb7 : rg4d9d1[9:0] ;
assign reg_wdata     = hdbfe21 ? ba833f3 : ps6ce8b ;
assign reg_wdata_be  = hdbfe21 ? ph19f9b : 4'b1111 ;
assign reg_rd        = hdbfe21 ? hd9bcbf : reg_rd_cpm ;
assign reg_wr        = hdbfe21 ? (xjf3797 & ~ls8935a & ~nr6b48a) : reg_wr_cpm ;
assign reg_wr_t1     = xjf3797 & ls8935a ;
assign reg_wr_pois   = xjf3797 & nr6b48a ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      reg_sel_t0   <= 1'd0 ;      reg_sel_pmsi <= 1'd0 ;      reg_sel_cs   <= 1'd0 ;      reg_sel_ec   <= 1'd0 ;


`ifdef AER
         reg_sel_aer <= 1'd0 ;


`endif
      reg_sel_usp <= 1'd0 ;   end   else begin      reg_sel_t0   <= 1'd0 ;      reg_sel_pmsi <= 1'd0 ;      reg_sel_cs   <= 1'd0 ;      reg_sel_ec   <= 1'd0 ;


`ifdef AER
         reg_sel_aer <= 1'd0 ;


`endif
      reg_sel_usp <= 1'd0 ;      casex (ymb6de1[9:0])                  10'b0000_00_xxxx : reg_sel_t0   <= 1'b1 ;                  10'b0000_01_010x : reg_sel_pmsi <= 1'b1 ;                  10'b0000_01_011x ,         10'b0000_01_10xx : reg_sel_usp <= 1'b1 ;                  10'b0000_01_11xx : reg_sel_pmsi <= 1'b1 ;                  10'b0000_10_00xx : reg_sel_usp <= 1'b1 ;                  10'b0000_10_01xx ,         10'b0000_10_1000 : reg_sel_cs <= 1'b1 ;


`ifdef GEN2
                  10'b0000_10_1001 ,         10'b0000_10_101x ,         10'b0000_10_1100 : reg_sel_usp <= 1'b1 ;                  10'b0000_10_1101 ,         10'b0000_10_111x ,         10'b0000_11_0000 : reg_sel_cs <= 1'b1 ;                  10'b0000_11_0001 ,         10'b0000_11_001x ,         10'b0000_11_01xx ,         10'b0000_11_1xxx : reg_sel_usp <= 1'b1 ;


`else
                  10'b0000_10_1001 ,         10'b0000_10_101x ,         10'b0000_10_11xx ,         10'b0000_11_xxxx : reg_sel_usp <= 1'b1 ;


`endif
                  10'b0001_00_000x ,         10'b0001_00_0010 : reg_sel_ec <= 1'b1 ;


`ifdef VC1
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_xxxx ,            10'b0001_01_xxxx : reg_sel_usp <= 1'b1 ;


`endif




`ifdef VC2
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_10xx ,            10'b0001_00_1100 : reg_sel_ec <= 1'b1 ;                        10'b0001_00_1101 ,            10'b0001_00_111x ,            10'b0001_01_xxxx : reg_sel_usp <= 1'b1 ;


`endif




`ifdef VC3
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx : reg_sel_ec <= 1'b1 ;                        10'b0001_01_xxxx : reg_sel_usp <= 1'b1 ;


`endif




`ifdef VC4
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_000x ,            10'b0001_01_0010 : reg_sel_ec <= 1'b1 ;                        10'b0001_01_0011 ,            10'b0001_01_01xx ,            10'b0001_01_1xxx : reg_sel_usp <= 1'b1 ;


`endif




`ifdef VC5
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_00xx ,            10'b0001_01_010x : reg_sel_ec <= 1'b1 ;                        10'b0001_01_011x ,            10'b0001_01_1xxx : reg_sel_usp <= 1'b1 ;


`endif



`ifdef VC6
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_0xxx ,            10'b0001_01_1000 : reg_sel_ec <= 1'b1 ;                        10'b0001_01_1001 ,            10'b0001_01_101x ,            10'b0001_01_11xx : reg_sel_usp <= 1'b1 ;


`endif



`ifdef VC7
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_0xxx ,            10'b0001_01_10xx : reg_sel_ec <= 1'b1 ;                        10'b0001_01_11xx : reg_sel_usp <= 1'b1 ;


`endif



`ifdef VC8
                        10'b0001_00_0011 ,            10'b0001_00_01xx ,            10'b0001_00_1xxx ,            10'b0001_01_0xxx ,            10'b0001_01_10xx ,            10'b0001_01_110x ,            10'b0001_01_1110 : reg_sel_ec <= 1'b1 ;                        10'b0001_01_1111 : reg_sel_usp <= 1'b1 ;


`endif
                  10'b0001_10_0xxx : reg_sel_usp <= 1'b1 ;


`ifdef AER
                        10'b0001_10_1xxx ,            10'b0001_11_000x ,            10'b0001_11_0010 : reg_sel_aer <= 1'b1 ;


`else
                        10'b0001_10_1xxx ,            10'b0001_11_000x ,            10'b0001_11_0010 : reg_sel_usp <= 1'b1 ;


`endif

                  10'b0001_11_0011 ,         10'b0001_11_01xx ,         10'b0001_11_1xxx ,         10'bxx1x_xx_xxxx ,         10'bx1xx_xx_xxxx ,         10'b1xxx_xx_xxxx : reg_sel_usp <= 1'b1 ;                  default : reg_sel_usp <= 1'b1 ;      endcase   end
end
assign reg_addr = ymb6de1[5:0] ;


`ifdef ECRC
   assign qg5c091 = (pcie_x1_ecrc_chk_enb & jrb0853) ? tlp_pcie_x1_ecrc_ok : 1'b1 ;

`else
   assign qg5c091 = 1'b1 ;

`endif


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pcie_x1_ecrc_ok <= 1'd0 ;   else      pcie_x1_ecrc_ok <= ieb6f08 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      pu30ac5 <= 1'd0 ;      ux8562b <= 1'd0 ;   end   else if (!os49b3a) begin      if (fn7e6f2 & ~reg_sel_usp & ieb6f08) begin         pu30ac5 <= 1'd1 ;         ux8562b <= 1'd0 ;      end      else if (dmcfcde & ~reg_sel_usp & ieb6f08) begin         pu30ac5 <= 1'd1 ;         ux8562b <= 1'd1 ;      end      else begin         pu30ac5 <= 1'd0 ;         ux8562b <= 1'd0 ;      end   end   else begin      if (fn7e6f2 & ieb6f08) begin         pu30ac5 <= 1'd1 ;         ux8562b <= 1'd0 ;      end      else if (dmcfcde & ieb6f08) begin         pu30ac5 <= 1'd1 ;         ux8562b <= 1'd1 ;      end      else begin         pu30ac5 <= 1'd0 ;         ux8562b <= 1'd0 ;      end   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      nph_processed <= 1'd0 ;      npd_processed <= 1'd0 ;   end   else begin      nph_processed <= xj5a456 ;      npd_processed <= rtd22b6 ;   end
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      cfg_hit <= 1'd0 ;   else if (!os49b3a) begin      if (fn7e6f2 & ~reg_sel_usp & ieb6f08)         cfg_hit <= 1'd1 ;      else if (dmcfcde & ~reg_sel_usp & ieb6f08)         cfg_hit <= 1'd1 ;      else         cfg_hit <= 1'd0 ;   end   else begin      if (fn7e6f2 & ieb6f08)         cfg_hit <= 1'd1 ;      else if (dmcfcde & ieb6f08)         cfg_hit <= 1'd1 ;      else         cfg_hit <= 1'd0 ;   end
end
always@* begin ose0489<={tlp_data>>1,ux17adf[0]};ep2449<=ux17adf[1];mt1224d<=ux17adf[2];db9126c<=ux17adf[3];db81c22<=ux17adf[4];os49b3a<=ux17adf[5];rg4d9d1<={ADR_I>>1,ux17adf[6]};ps6ce8b<={DAT_I>>1,ux17adf[7]};kq6745a<=ux17adf[8];tw3a2d0<=ux17adf[9];cmd1683<=ux17adf[10];fp8b419<={jr281c1>>1,ux17adf[11]};zx5a0cf<={vv40e0f>>1,ux17adf[12]};fad067e<={sj707f>>1,ux17adf[13]};ba833f3<={vx383fd>>1,ux17adf[14]};ph19f9b<={osc1fee>>1,ux17adf[15]};dmcfcde<=ux17adf[16];fn7e6f2<=ux17adf[17];xjf3797<=ux17adf[18];hd9bcbf<=ux17adf[19];uide5ff<=ux17adf[20];shf2ff8<=ux17adf[21];mg97fc4<=ux17adf[22];hdbfe21<=ux17adf[23];goff10e<=ux17adf[24];enf8871<=ux17adf[25];mec438d<=ux17adf[26];sw21c68<=ux17adf[27];fce340<=ux17adf[28];zx71a03<=ux17adf[29];uk8d01f<=ux17adf[30];ic680f8<=ux17adf[31];nr407c1<=ux17adf[32];db3e0e<={me46996>>1,ux17adf[33]};ym1f076<={sw34cb0>>1,ux17adf[34]};yxf83b0<={qia6581>>1,ux17adf[35]};mec1d84<={rv32c08>>1,ux17adf[36]};xyec21<={fc96046>>1,ux17adf[37]};ho7610a<={zzb0232>>1,ux17adf[38]};jrb0853<=ux17adf[39];zz8429f<=ux17adf[40];sw214fe<=ux17adf[41];iea7f1<=ux17adf[42];ui53f89<={ls96d4e>>1,ux17adf[43]};sj9fc49<={wyb6a73>>1,ux17adf[44]};fafe24d<={vxb5398>>1,ux17adf[45]};vif126b<=ux17adf[46];ls8935a<=ux17adf[47];os49ad2<=ux17adf[48];rg4d691<=ux17adf[49];nr6b48a<=ux17adf[50];xj5a456<=ux17adf[51];rtd22b6<=ux17adf[52];rv915b6<=ux17adf[53];ux8adb7<={by58ae0>>1,ux17adf[54]};ic56dbc<={vic5702>>1,ux17adf[55]};ymb6de1<={mg2b812>>1,ux17adf[56]};ieb6f08<=ux17adf[57];end
always@* begin db22f5b[2047]<=tlp_st;db22f5b[2046]<=tlp_end;db22f5b[2044]<=tlp_erly_st;db22f5b[2041]<=phy_link_up;db22f5b[2034]<=term_all_cfg;db22f5b[2021]<=ADR_I[0];db22f5b[2017]<=ym88956;db22f5b[1995]<=DAT_I[0];db22f5b[1986]<=uv44ab1;db22f5b[1983]<=qg5c091;db22f5b[1943]<=WE_I;db22f5b[1925]<=je2558d;db22f5b[1908]<=me46996[0];db22f5b[1864]<=fc96046[0];db22f5b[1855]<=mgff71;db22f5b[1838]<=STB_I;db22f5b[1803]<=pu2ac6b;db22f5b[1769]<=sw34cb0[0];db22f5b[1680]<=zzb0232[0];db22f5b[1662]<=yx7fb88;db22f5b[1628]<=ice5038;db22f5b[1583]<=yxc6158;db22f5b[1559]<=tlp_st_reg2;db22f5b[1519]<=vic5702[0];db22f5b[1501]<=tuc51a6;db22f5b[1490]<=qia6581[0];db22f5b[1487]<=vx383fd[0];db22f5b[1312]<=tj81196;db22f5b[1276]<=offdc44;db22f5b[1209]<=jr281c1[0];db22f5b[1155]<=su465b5;db22f5b[1118]<=pu30ac5;db22f5b[1070]<=sjb1ad8;db22f5b[1048]<=wyb6a73[0];db22f5b[1023]<=tlp_data[0];db22f5b[1008]<=nr7112a;db22f5b[991]<=mg2b812[0];db22f5b[954]<=zz28d32;db22f5b[932]<=rv32c08[0];db22f5b[927]<=osc1fee[0];db22f5b[791]<=ym98c2b;db22f5b[759]<=by58ae0[0];db22f5b[750]<=rtd8a34;db22f5b[743]<=sj707f[0];db22f5b[577]<=yz8cb6;db22f5b[524]<=ls96d4e[0];db22f5b[504]<=psee225;db22f5b[395]<=tu73185;db22f5b[379]<=ec2b15c;db22f5b[375]<=kd5b146;db22f5b[371]<=vv40e0f[0];db22f5b[262]<=vx32da9;db22f5b[197]<=yx4e630;db22f5b[189]<=ux8562b;db22f5b[187]<=fn6b628;db22f5b[98]<=ksa9cc6;db22f5b[93]<=tlp_end_reg2;db22f5b[49]<=vxb5398[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_rib771d (
   
   input wire [31:0]   kfbb8eb , 
   input wire [31:0]   gbdc75c , 

   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_ec ,     
   input wire [4:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          pcie_x1_ecrc_ok ,        

   input wire          ps580c2 ,       

   output reg [31:0]   hoc0613   ) ;
reg  [2:0]         hd309a ;
reg  [2:0]         kf184d7 ;
wire [31:0]        vvc26bd ;
wire [31:0]        tj135ef ;
wire [31:0]        gd9af7e ;

`ifdef CFG_VCC

`else

`ifdef AER

`ifdef NO_DSN

`else

`endif

`else

`ifdef NO_DSN

`else

`endif

`endif

`endif

`ifdef NO_DSN

`else

`endif

`ifdef NO_DSN

`else

`endif
reg [31 : 0] pfd7bf5;
reg [31 : 0] dobdfaf;
reg eaefd7b;
reg [4 : 0] hb7ebd9;
reg [31 : 0] gof5ece;
reg bnaf671;
reg fn7b38e;
reg wjd9c77;
reg goce3bc;
reg [2 : 0] hb71de1;
reg [31 : 0] jr8ef0f;
reg [31 : 0] yk7787e;
reg [31 : 0] iebc3f0;
reg [2047:0] db22f5b;
wire [12:0] ux17adf;

`ifdef CFG_VCC

`else

`ifdef AER

`ifdef NO_DSN

`else

`endif

`else

`ifdef NO_DSN

`else

`endif

`endif

`endif

`ifdef NO_DSN

`else

`endif

`ifdef NO_DSN

`else

`endif

localparam ribd6fd = 13,jceb7ea = 32'hfdffca8b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef CFG_VCC


`else


`ifdef AER


`ifdef NO_DSN


`else


`endif


`else


`ifdef NO_DSN


`else


`endif


`endif


`endif


`ifdef NO_DSN


`else


`endif


`ifdef NO_DSN


`else


`endif



always @(hb7ebd9, eaefd7b) begin   case ({eaefd7b, hb7ebd9[4:0]})       6'b1_000_00 : hd309a = 3'b001 ;        6'b1_000_01 : hd309a = 3'b010 ;        6'b1_000_10 : hd309a = 3'b100 ;        default : hd309a = 3'b000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      kf184d7 <= 3'h0;   else      kf184d7 <= hd309a ;
end


`ifdef CFG_VCC
   assign vvc26bd = {12'h10C, `DSN_CAP_VER, 16'h0003} ;


`else



`ifdef AER



`ifdef NO_DSN
                  assign vvc26bd = {12'h1A0, 4'h1, 16'h000B} ; 


`else
         assign vvc26bd = {12'h1A0, `DSN_CAP_VER, 16'h0003} ;


`endif



`else



`ifdef NO_DSN
                  assign vvc26bd = {`USR_EXT_CAP_ADDR, 4'h1, 16'h000B} ; 


`else
         assign vvc26bd = {`USR_EXT_CAP_ADDR, `DSN_CAP_VER, 16'h0003} ;


`endif



`endif



`endif




`ifdef NO_DSN
      assign tj135ef = {12'h00C, 4'h0, 16'h0000} ; 

`else
   assign tj135ef = pfd7bf5 ;


`endif




`ifdef NO_DSN
      assign gd9af7e = 32'h0000_0000 ; 

`else
   assign gd9af7e = dobdfaf ;


`endif


always @(*) begin   case (1'b1)       hb71de1[0]  : hoc0613 = jr8ef0f ;      hb71de1[1]  : hoc0613 = yk7787e ;      hb71de1[2]  : hoc0613 = iebc3f0 ;      default            : hoc0613 = 32'd0 ;   endcase
end

always@* begin pfd7bf5<={kfbb8eb>>1,ux17adf[0]};dobdfaf<={gbdc75c>>1,ux17adf[1]};eaefd7b<=ux17adf[2];hb7ebd9<={reg_addr>>1,ux17adf[3]};gof5ece<={reg_wdata>>1,ux17adf[4]};bnaf671<=ux17adf[5];fn7b38e<=ux17adf[6];wjd9c77<=ux17adf[7];goce3bc<=ux17adf[8];hb71de1<={kf184d7>>1,ux17adf[9]};jr8ef0f<={vvc26bd>>1,ux17adf[10]};yk7787e<={tj135ef>>1,ux17adf[11]};iebc3f0<={gd9af7e>>1,ux17adf[12]};end
always@* begin db22f5b[2047]<=gbdc75c[0];db22f5b[2046]<=reg_sel_ec;db22f5b[2044]<=reg_addr[0];db22f5b[2040]<=reg_wdata[0];db22f5b[2032]<=reg_wr;db22f5b[2017]<=reg_rd;db22f5b[1987]<=pcie_x1_ecrc_ok;db22f5b[1926]<=ps580c2;db22f5b[1804]<=kf184d7[0];db22f5b[1560]<=vvc26bd[0];db22f5b[1072]<=tj135ef[0];db22f5b[1023]<=kfbb8eb[0];db22f5b[96]<=gd9af7e[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_gbf87a8 (
   
   input wire [31:0]   alc3d44 , 
   input wire [31:0]   ba1ea24 , 
   input wire [31:0]   ykf5123 , 
   input wire [31:0]   jea8918 , 
   `ifdef GEN2
      input wire [31:0]   qt448c2 , 
   `endif

   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_cs ,     
   input wire [3:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire [3:0]    reg_wdata_be ,   
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          pcie_x1_ecrc_ok ,        

   input wire          phy_link_up ,    
   input wire          ps580c2 ,       
   `ifdef GEN2
      input wire       sh41830 ,            
   `endif
   `ifdef AER
      input wire [31:0]   vxc185 ,   
   `endif

   
   input wire          sh60c2e ,   
   input wire          hd6174 ,
   input wire [2:0]    je30ba7 ,       
   input wire          dfrm_perr ,       
   input wire          dl_active ,       

   
   input wire          rxtp_bad_tlp,    
   input wire          do3aee2,   
   input wire          uvfd0f9,      
   input wire          ipedf31,  
   input wire          zkda02d , 
   input wire          nr4f43e , 
   input wire          kd7a1f7 ,  
   input wire          jcd0fbd ,     


   
   input wire          cmpln_tout ,     
   input wire          cmpltr_abort_np ,
   input wire          cmpltr_abort_p , 
   input wire          unexp_cmpln ,    
   input wire          ur_np_ext ,      
   input wire          ur_p_ext ,       
   input wire          np_req_pend ,    
   input wire  [7:0]   pu443d ,       
   input wire          tj221ea,  
   input wire          mg10f56,    
   input wire          aa87ab0,    

   
   input wire          tlpdec_pcie_x1_ecrc_err , 
   input wire          tlpdec_pois_tlp , 
   input wire          tlpdec_us_req ,   
   input wire          tlpdec_malf_tlp , 
   input wire          mt80c46 ,        

   output wire [10:0]  zz6235 ,   
   output wire [14:0]  dev_cntl_out ,  
   output wire [7:0]   lnk_cntl_out ,  
   output reg          ftl_err_out ,  
   output reg          nftl_err_out ,  
   output reg          cor_err_out ,  
   `ifdef GEN2
      output wire [4:0] dev_cntl_2_out ,  
      output wire      initiate_flr ,  
   `endif

   output wire [2:0]   sj8780 ,    
   output wire         su43c04 ,      
   output wire         pu1e020 ,    
   output wire         cmf0102 ,     
   output wire [2:0]   cfgcs_losel ,     

   output reg [31:0]   hoc0613   ) ;
reg [12:0]           zm2042a ;
reg [12:0]           oh2153 ;
reg [7:0]           mg10a9d ;
reg [15:0]          cb854e8 ;
reg [15:0]          ri2a744 ;
reg [15:0]          ay53a22 ;
reg [5:0]           mg9d111 ;
wire [31:0]         kde8889 ;
reg  [31:0]         yx4444c ;
wire [31:0]         nt22264 ;
wire [31:0]         ri11326 ;
wire [31:0]         tw89933 ;
wire [31:0]         ea4c99b ;
wire [31:0]         rt64cd9 ;
wire [31:0]         yz266ce ;
wire [31:0]         cb33674 ;
wire [31:0]         vx9b3a5 ;
wire [31:0]         ald9d2e ;
wire                mece974 ;
wire                zx74ba0 ;
wire                xla5d07 ;
wire                sw2e83e ;
wire                pf741f1 ;
wire                rva0f8e ;
wire                yz7c76 ;

`ifdef AER

`else

`endif

`ifdef GEN2

`endif

`ifdef LEGACY_EP

`else

`endif

`ifdef GEN2

`else

`endif

`ifdef ERO_HW
localparam ks3e3b4 = 1'b0 ;

`else
localparam ks3e3b4 = 1'b1 ;

`endif

`ifdef GEN2

`endif

`ifdef ERO_HW

`else

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`ifdef SWITCH_COMP

`ifdef DWN_STRM_PORT 

`else

`endif

`else

`endif

`endif

`ifdef ENDPOINT_COMP

`else

`ifdef SWITCH_COMP

`ifdef DWN_STRM_PORT 

`else

`endif

`else

`endif

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif
reg [31 : 0] zz8ed0b;
reg [31 : 0] xw7685e;
reg [31 : 0] cbb42f2;
reg [31 : 0] qva1794;
reg twbca5;
reg [3 : 0] hb7ebd9;
reg [31 : 0] gof5ece;
reg [3 : 0] hd94aa4;
reg bnaf671;
reg fn7b38e;
reg wjd9c77;
reg db81c22;
reg goce3bc;
reg zz37725;
reg wlbb92f;
reg [2 : 0] yxdc97c;
reg xwe4be4;
reg tw25f22;
reg ng2f912;
reg zk7c893;
reg zke449b;
reg ph224db;
reg ir126de;
reg vk936f4;
reg xl9b7a2;
reg osdbd16;
reg ykde8b1;
reg byf4589;
reg hqa2c4a;
reg bn16253;
reg sjb129e;
reg ng894f4;
reg hb4a7a2;
reg [7 : 0] me53d17;
reg hd9e8b9;
reg vif45cf;
reg lsa2e7a;
reg gd173d3;
reg ecb9e9c;
reg necf4e1;
reg kd7a70b;
reg kdd385d;
reg [12 : 0] pu9c2ed;
reg [7 : 0] hoe176b;
reg [15 : 0] zmbb5b;
reg [15 : 0] xw5dada;
reg [15 : 0] qted6d2;
reg [5 : 0] zx6b695;
reg [31 : 0] of5b4ae;
reg [31 : 0] vida574;
reg [31 : 0] bld2ba2;
reg [31 : 0] wl95d17;
reg [31 : 0] epae8bc;
reg [31 : 0] hb745e5;
reg [31 : 0] doa2f2e;
reg [31 : 0] ux17973;
reg [31 : 0] qibcb9d;
reg [31 : 0] eae5ce9;
reg [31 : 0] wy2e748;
reg ps73a40;
reg ou9d202;
reg ble9011;
reg ho4808f;
reg ld4047a;
reg mt23d6;
reg xy11eb5;
reg [2047:0] db22f5b;
wire [65:0] ux17adf;

`ifdef AER

`else

`endif

`ifdef GEN2

`endif

`ifdef LEGACY_EP

`else

`endif

`ifdef GEN2

`else

`endif

`ifdef ERO_HW

`else

`endif

`ifdef GEN2

`endif

`ifdef ERO_HW

`else

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`ifdef SWITCH_COMP

`ifdef DWN_STRM_PORT 

`else

`endif

`else

`endif

`endif

`ifdef ENDPOINT_COMP

`else

`ifdef SWITCH_COMP

`ifdef DWN_STRM_PORT 

`else

`endif

`else

`endif

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

localparam ribd6fd = 66,jceb7ea = 32'hfdffd42b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef AER


`else


`endif


`ifdef GEN2


`endif


`ifdef LEGACY_EP


`else


`endif


`ifdef GEN2


`else


`endif


`ifdef ERO_HW


`else


`endif


`ifdef GEN2


`endif


`ifdef ERO_HW


`else


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef ENDPOINT_COMP


`else


`ifdef SWITCH_COMP


`ifdef DWN_STRM_PORT 


`else


`endif


`else


`endif


`endif


`ifdef ENDPOINT_COMP


`else


`ifdef SWITCH_COMP


`ifdef DWN_STRM_PORT 


`else


`endif


`else


`endif


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif












`ifdef AER
      assign mece974 =                    ((zke449b      & vxc185[4])  |                     (xl9b7a2   & vxc185[5])  |                     (ecb9e9c & vxc185[12]) |                     (vk936f4  & vxc185[13]) |                     (ykde8b1      & vxc185[14]) |                     (byf4589 & vxc185[15]) |                     (hqa2c4a  & vxc185[15]) |                     (bn16253     & vxc185[16]) |                     (osdbd16      & vxc185[17]) |                     (kd7a70b & vxc185[18]) |                     (gd173d3 & vxc185[19]) |                     (necf4e1   & vxc185[20]) |                     (ng894f4        & vxc185[20]) |                     (sjb129e       & vxc185[20])                    ) ;
      assign xla5d07 =                     ((zke449b      & ~vxc185[4])  |                      (xl9b7a2   & ~vxc185[5])  |                      (vk936f4  & ~vxc185[13]) |                      (hqa2c4a  & ~vxc185[15]) |                      (osdbd16      & ~vxc185[17]) |                      (kd7a70b & ~vxc185[18]) |                      (gd173d3 & ~vxc185[19]) |                      (ng894f4        & ~vxc185[20])                     ) ;
         assign rva0f8e = (necf4e1   & ~vxc185[20]) |                        (sjb129e       & ~vxc185[20]) |                        (byf4589 & ~vxc185[15]) |                        (ecb9e9c & ~vxc185[12]) |                        (ykde8b1      & ~vxc185[14]) |                        (bn16253     & ~vxc185[16]) ;      assign pf741f1 =                    ng2f912 |                    zk7c893 |                    ir126de |                    ph224db |                    xwe4be4 |                    mt23d6 ;

`else
      assign mece974 =                    zke449b |                    vk936f4 |                    kd7a70b ;
      assign xla5d07 =                     ecb9e9c |                     ykde8b1 |                     hqa2c4a |                     bn16253 |                     necf4e1 |                     gd173d3 |                     ng894f4 ;
      assign sw2e83e = gd173d3 | ng894f4 ;
      assign pf741f1 =                    ng2f912 |                    zk7c893 |                    ir126de |                    ph224db |                    xwe4be4 ;

`endif





always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ftl_err_out  <= 1'b0 ;      nftl_err_out <= 1'b0 ;      cor_err_out  <= 1'b0 ;   end   else begin                  if (hd9e8b9) begin         ftl_err_out  <= ps73a40 ;         nftl_err_out <= ho4808f ;         cor_err_out  <= ld4047a;      end      else begin         ftl_err_out  <= ps73a40 & (xw5dada[2] | kdd385d) ;         nftl_err_out <= ho4808f & (xw5dada[1] | kdd385d) ;         cor_err_out  <= ld4047a & xw5dada[0] ;      end   end
end


always @(hb7ebd9, twbca5) begin   case ({twbca5, hb7ebd9[3:0]})       5'h1_4 : zm2042a = 13'b00000_00000001 ;        5'h1_5 : zm2042a = 13'b00000_00000010 ;        5'h1_6 : zm2042a = 13'b00000_00000100 ;        5'h1_7 : zm2042a = 13'b00000_00001000 ;        5'h1_8 : zm2042a = 13'b00000_00010000 ;  






`ifdef GEN2
      5'h1_D : zm2042a = 13'b00010_00000000 ;        5'h1_E : zm2042a = 13'b00100_00000000 ;        5'h1_F : zm2042a = 13'b01000_00000000 ;        5'h1_0 : zm2042a = 13'b10000_00000000 ;  


`endif
      default: zm2042a = 13'b00000_00000000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      oh2153 <= 9'd0 ;   else      oh2153 <= zm2042a ;
end



`ifdef LEGACY_EP
   assign  nt22264 = {2'b00, zz8ed0b[29:25], 1'b0, 4'h1, zz8ed0b[19:16], zz8ed0b[15:8], 8'h10} ; 

`else
   assign  nt22264 = {2'b00, zz8ed0b[29:25], 1'b0, 4'h0, zz8ed0b[19:16], zz8ed0b[15:8], 8'h10} ;


`endif



assign  kde8889 = {xw7685e[31:3], xw7685e[2:0]}  ;


`ifdef GEN2
   assign  ri11326 = {3'd0, xw7685e[28:18],2'b00, 1'b1, 3'b000, 3'b000, 3'b000, xw7685e[5:3], xw7685e[2:0]} ;


`else
   assign  ri11326 = {4'd0, xw7685e[27:18],2'b00, 1'b1, 3'b000, 3'b000, 3'b000, xw7685e[5:3], xw7685e[2:0]} ;


`endif




`ifdef ERO_HW



`else



`endif

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ri2a744 <= {8'h20, 3'b000, ks3e3b4, 4'h0} ;


`ifdef GEN2
      else if (sh41830) begin         ri2a744[4:0] <= {ks3e3b4, 4'h0} ;         ri2a744[15:8] <= 8'h20 ;      end


`endif
   else if (!db81c22)      ri2a744 <= {8'h20, 3'b000, ks3e3b4, 4'h0} ;   else if (bnaf671 && wjd9c77 && zm2042a[2]) begin      if (hd94aa4[0]) begin         ri2a744[3:0] <= gof5ece[3:0] ;


`ifdef ERO_HW
            ri2a744[4] <= 1'b0 ;


`else
            ri2a744[4] <= gof5ece[4] ;


`endif
         ri2a744[7:5]   <= (gof5ece [7:6]   != 2'b11) ? gof5ece[7:5]   : xw5dada[7:5] ;      end      if (hd94aa4[1]) begin         ri2a744[14:12] <= (gof5ece [14:13] != 2'b11) ? gof5ece[14:12] : xw5dada[14:12] ;


`ifdef GEN2
            ri2a744[15] <= (wl95d17[28] == 1'b1) ? gof5ece[15] : xw5dada[15] ;


`endif
      end   end
end

assign dev_cntl_out = {xw5dada[14:12],4'b0000,xw5dada[7:0]} ;
assign sj8780 = xw5dada[7:5] ;

`ifdef GEN2
   assign initiate_flr = xw5dada[15] ;

`endif




always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      mg9d111 <= 6'd0 ;


`ifdef GEN2
      else if (sh41830)         mg9d111 <= 6'd0 ;


`endif
   else if (!db81c22)      mg9d111 <= 6'd0 ;   else begin      case (1'b1)         (bnaf671 && wjd9c77 && zm2042a[2] && hd94aa4[2]) : begin            if (gof5ece[16]) mg9d111[0] <= 1'b0 ;            if (gof5ece[17]) mg9d111[1] <= 1'b0 ;            if (gof5ece[18]) mg9d111[2] <= 1'b0 ;         end         (ld4047a)  : mg9d111[0] <= 1'b1 ;         (ble9011) : mg9d111[1] <= 1'b1 ;         (ps73a40)  : mg9d111[2] <= 1'b1 ;      endcase      if (bnaf671 && wjd9c77 && zm2042a[2] && gof5ece[19] && hd94aa4[2])         mg9d111[3] <= 1'b0 ;      else if (necf4e1 || ng894f4 || sjb129e)         mg9d111[3] <= 1'b1 ;       mg9d111[4] <= 1'b0 ;      mg9d111[5] <= hb4a7a2 ;   end
end
assign  tw89933 = {10'd0, zx6b695[5:0], 1'b0, xw5dada[14:9], 1'b0, xw5dada[7:0]} ;



always @(*) begin   if (lsa2e7a)      yx4444c = {cbb42f2[31:24],1'b0,1'b1,4'b0000,3'b111,3'b111,2'b10,6'h01,4'h1} ;   else if (vif45cf)      yx4444c = {cbb42f2[31:24],1'b0,1'b1,4'b0000,3'b111,3'b111,2'b10,6'h02,4'h1} ;   else      yx4444c = {cbb42f2[31:24],1'b0,1'b1,4'b0000,3'b111,3'b111,2'b10,6'h04,4'h1} ;
end
assign  ea4c99b = vida574 ;
assign  cfgcs_losel = vida574[14:12] ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mg10a9d[1:0] <= 2'd0 ;   else if (!db81c22)      mg10a9d[1:0] <= 2'd0 ;   else if (bnaf671 && wjd9c77 && zm2042a[4] && hd94aa4[0])      mg10a9d[1:0] <= gof5ece[1:0] ;   else      mg10a9d[1:0] <= hoe176b[1:0] ;
end


`ifdef ENDPOINT_COMP
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         mg10a9d[3] <= 1'b0 ;      else if (!db81c22)         mg10a9d[3] <= 1'b0 ;      else if (bnaf671 && wjd9c77 && zm2042a[4] && hd94aa4[0])         mg10a9d[3] <= gof5ece[3] ;      else         mg10a9d[3] <= hoe176b[3] ;   end

`else
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         mg10a9d[3] <= 1'b0 ;      else         mg10a9d[3] <= hoe176b[3] ;   end

`endif




`ifdef ENDPOINT_COMP
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         mg10a9d[5:4] <= 2'b00 ;      else         mg10a9d[5:4] <= hoe176b[5:4] ;   end

`else



`ifdef SWITCH_COMP



`ifdef DWN_STRM_PORT 
         always @(posedge sys_clk, negedge rst_n) begin            if (!rst_n)               mg10a9d[5:4] <= 2'd0 ;            else if (!db81c22)               mg10a9d[5:4] <= 2'd0 ;            else if (bnaf671 && wjd9c77 && zm2042a[4] && hd94aa4[0])               mg10a9d[5:4] <= gof5ece[5:4] ;            else               mg10a9d[5:4] <= hoe176b[5:4] ;         end


`else
         always @(posedge sys_clk, negedge rst_n) begin            if (!rst_n)               mg10a9d[5:4] <= 2'b00 ;            else               mg10a9d[5:4] <= hoe176b[5:4] ;         end


`endif



`else
      always @(posedge sys_clk, negedge rst_n) begin         if (!rst_n)            mg10a9d[5:4] <= 2'd0 ;         else if (!db81c22)            mg10a9d[5:4] <= 2'd0 ;         else if (bnaf671 && wjd9c77 && zm2042a[4] && hd94aa4[0])            mg10a9d[5:4] <= gof5ece[5:4] ;         else            mg10a9d[5:4] <= hoe176b[5:4] ;      end


`endif



`endif


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mg10a9d[7:6] <= 2'd0 ;   else if (!db81c22)      mg10a9d[7:6] <= 2'd0 ;   else if (bnaf671 && wjd9c77 && zm2042a[4] && hd94aa4[0])      mg10a9d[7:6] <= gof5ece[7:6] ;   else      mg10a9d[7:6] <= hoe176b[7:6] ;
end
assign lnk_cntl_out = hoe176b ;
assign su43c04 = hoe176b[7] ;
assign cmf0102 = hoe176b[5] ;
assign pu1e020 = hoe176b[4] ;

always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n ) begin      cb854e8[3:0] <= 4'd1 ;      cb854e8[9:4] <= 6'd1 ;   end   else begin      cb854e8[3:0] <= 4'b0001 ;      cb854e8[9:4] <= {3'b000, yxdc97c} ;   end
end

`ifdef ENDPOINT_COMP
   always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         cb854e8[11] <= 1'b0 ;      else         cb854e8[11] <= zmbb5b[11] ;   end

`else



`ifdef SWITCH_COMP



`ifdef DWN_STRM_PORT 
         always @(posedge sys_clk, negedge rst_n) begin            if ( !rst_n )               cb854e8[11] <= 1'd0 ;            else               cb854e8[11] <= wlbb92f ;         end


`else
         always @(posedge sys_clk, negedge rst_n) begin            if ( !rst_n )               cb854e8[11] <= 1'b0 ;            else               cb854e8[11] <= zmbb5b[11] ;         end


`endif



`else
      always @(posedge sys_clk, negedge rst_n) begin         if ( !rst_n )            cb854e8[11] <= 1'd0 ;         else            cb854e8[11] <= wlbb92f ;      end


`endif



`endif


always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      cb854e8[13] <= 1'b0 ;

   else      cb854e8[13] <= 1'b0 ;
end
assign  rt64cd9 = {2'b00, zmbb5b[13], qva1794[28], zmbb5b[11], 1'b0, zmbb5b[9:0],                    7'd0, 1'b0, hoe176b[7:6], 1'b0, hoe176b[4:3], 1'b0, hoe176b[1:0]} ;



`ifdef GEN2
      assign  yz266ce = {27'd0, qt448c2[4:0]} ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ay53a22 <= {27'd0, 1'b0, 4'h0} ;      else if (sh41830)         ay53a22[4:0] <= {1'b0, 4'h0} ;      else if (!db81c22)         ay53a22[4:0] <= {1'b0, 4'h0} ;      else if (bnaf671 && wjd9c77 && zm2042a[10]) begin         if (hd94aa4[0]) begin            ay53a22[4:0] <= gof5ece[4:0] ;         end      end   end   assign dev_cntl_2_out = qted6d2[4:0] ;   assign cb33674 = {15'd0, 11'd0, qted6d2[4:0]} ;
      assign vx9b3a5 = 32'd0 ;
      assign ald9d2e = 32'd0 ;


`endif


always @(*) begin   case (1'b1)       pu9c2ed[0] : hoc0613 = bld2ba2 ;      pu9c2ed[1] : hoc0613 = wl95d17 ;      pu9c2ed[2] : hoc0613 = epae8bc ;      pu9c2ed[3] : hoc0613 = hb745e5 ;      pu9c2ed[4] : hoc0613 = doa2f2e ;






`ifdef GEN2
      pu9c2ed[9]  : hoc0613 = ux17973 ;      pu9c2ed[10] : hoc0613 = qibcb9d ;      pu9c2ed[11] : hoc0613 = eae5ce9 ;      pu9c2ed[12] : hoc0613 = wy2e748 ;


`endif
      default          : hoc0613 = 32'd0 ;   endcase
end
always@* begin zz8ed0b<={alc3d44>>1,ux17adf[0]};xw7685e<={ba1ea24>>1,ux17adf[1]};cbb42f2<={ykf5123>>1,ux17adf[2]};qva1794<={jea8918>>1,ux17adf[3]};twbca5<=ux17adf[4];hb7ebd9<={reg_addr>>1,ux17adf[5]};gof5ece<={reg_wdata>>1,ux17adf[6]};hd94aa4<={reg_wdata_be>>1,ux17adf[7]};bnaf671<=ux17adf[8];fn7b38e<=ux17adf[9];wjd9c77<=ux17adf[10];db81c22<=ux17adf[11];goce3bc<=ux17adf[12];zz37725<=ux17adf[13];wlbb92f<=ux17adf[14];yxdc97c<={je30ba7>>1,ux17adf[15]};xwe4be4<=ux17adf[16];tw25f22<=ux17adf[17];ng2f912<=ux17adf[18];zk7c893<=ux17adf[19];zke449b<=ux17adf[20];ph224db<=ux17adf[21];ir126de<=ux17adf[22];vk936f4<=ux17adf[23];xl9b7a2<=ux17adf[24];osdbd16<=ux17adf[25];ykde8b1<=ux17adf[26];byf4589<=ux17adf[27];hqa2c4a<=ux17adf[28];bn16253<=ux17adf[29];sjb129e<=ux17adf[30];ng894f4<=ux17adf[31];hb4a7a2<=ux17adf[32];me53d17<={pu443d>>1,ux17adf[33]};hd9e8b9<=ux17adf[34];vif45cf<=ux17adf[35];lsa2e7a<=ux17adf[36];gd173d3<=ux17adf[37];ecb9e9c<=ux17adf[38];necf4e1<=ux17adf[39];kd7a70b<=ux17adf[40];kdd385d<=ux17adf[41];pu9c2ed<={oh2153>>1,ux17adf[42]};hoe176b<={mg10a9d>>1,ux17adf[43]};zmbb5b<={cb854e8>>1,ux17adf[44]};xw5dada<={ri2a744>>1,ux17adf[45]};qted6d2<={ay53a22>>1,ux17adf[46]};zx6b695<={mg9d111>>1,ux17adf[47]};of5b4ae<={kde8889>>1,ux17adf[48]};vida574<={yx4444c>>1,ux17adf[49]};bld2ba2<={nt22264>>1,ux17adf[50]};wl95d17<={ri11326>>1,ux17adf[51]};epae8bc<={tw89933>>1,ux17adf[52]};hb745e5<={ea4c99b>>1,ux17adf[53]};doa2f2e<={rt64cd9>>1,ux17adf[54]};ux17973<={yz266ce>>1,ux17adf[55]};qibcb9d<={cb33674>>1,ux17adf[56]};eae5ce9<={vx9b3a5>>1,ux17adf[57]};wy2e748<={ald9d2e>>1,ux17adf[58]};ps73a40<=ux17adf[59];ou9d202<=ux17adf[60];ble9011<=ux17adf[61];ho4808f<=ux17adf[62];ld4047a<=ux17adf[63];mt23d6<=ux17adf[64];xy11eb5<=ux17adf[65];end
always@* begin db22f5b[2047]<=ba1ea24[0];db22f5b[2046]<=ykf5123[0];db22f5b[2044]<=jea8918[0];db22f5b[2041]<=reg_sel_cs;db22f5b[2035]<=reg_addr[0];db22f5b[2029]<=vx9b3a5[0];db22f5b[2022]<=reg_wdata[0];db22f5b[2011]<=ald9d2e[0];db22f5b[1996]<=reg_wdata_be[0];db22f5b[1974]<=mece974;db22f5b[1945]<=reg_wr;db22f5b[1943]<=yx4444c[0];db22f5b[1922]<=jcd0fbd;db22f5b[1901]<=zx74ba0;db22f5b[1842]<=reg_rd;db22f5b[1839]<=nt22264[0];db22f5b[1797]<=cmpln_tout;db22f5b[1778]<=ay53a22[0];db22f5b[1776]<=zkda02d;db22f5b[1759]<=rva0f8e;db22f5b[1755]<=xla5d07;db22f5b[1637]<=pcie_x1_ecrc_ok;db22f5b[1631]<=ri11326[0];db22f5b[1622]<=hd6174;db22f5b[1546]<=cmpltr_abort_np;db22f5b[1531]<=yz266ce[0];db22f5b[1509]<=mg9d111[0];db22f5b[1504]<=nr4f43e;db22f5b[1471]<=yz7c76;db22f5b[1468]<=uvfd0f9;db22f5b[1463]<=sw2e83e;db22f5b[1391]<=rxtp_bad_tlp;db22f5b[1312]<=tj221ea;db22f5b[1226]<=phy_link_up;db22f5b[1215]<=tw89933[0];db22f5b[1197]<=je30ba7[0];db22f5b[1153]<=aa87ab0;db22f5b[1044]<=cmpltr_abort_p;db22f5b[1037]<=tlpdec_us_req;db22f5b[1023]<=alc3d44[0];db22f5b[1014]<=cb33674[0];db22f5b[971]<=kde8889[0];db22f5b[961]<=kd7a1f7;db22f5b[889]<=ri2a744[0];db22f5b[888]<=ipedf31;db22f5b[879]<=pf741f1;db22f5b[811]<=sh60c2e;db22f5b[765]<=rt64cd9[0];db22f5b[734]<=do3aee2;db22f5b[695]<=dl_active;db22f5b[656]<=pu443d[0];db22f5b[576]<=mg10f56;db22f5b[518]<=tlpdec_pois_tlp;db22f5b[444]<=cb854e8[0];db22f5b[405]<=ps580c2;db22f5b[382]<=ea4c99b[0];db22f5b[347]<=dfrm_perr;db22f5b[328]<=np_req_pend;db22f5b[259]<=tlpdec_pcie_x1_ecrc_err;db22f5b[222]<=mg10a9d[0];db22f5b[164]<=ur_p_ext;db22f5b[111]<=oh2153[0];db22f5b[82]<=ur_np_ext;db22f5b[55]<=mt80c46;db22f5b[41]<=unexp_cmpln;db22f5b[27]<=tlpdec_malf_tlp;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_tw25a28 (
   
   input wire [31:0]   ph2d142 , 
   input wire [31:0]   os68a17 , 
   input wire [9:0]    fn450b8 , 
   input wire [9:0]    rv285c6 , 
   input wire [9:0]    fa42e37 , 
   input wire [9:0]    qv171ba , 
   input wire [9:0]    hqb8dd4 , 
   input wire [9:0]    mrc6ea3 , 
   input wire [9:0]    vx3751c , 
   input wire [9:0]    rvba8e7 , 

   input wire [31:0]   icd473e , 

   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_cs ,     
   input wire [3:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire [3:0]    reg_wdata_be ,   
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          pcie_x1_ecrc_ok ,        

   input wire          phy_link_up ,    
   input wire          ps580c2 ,       
   `ifdef GEN2
      input wire       sh41830 ,            
   `endif
   input wire          pme_status ,     

   output reg [1:0]    pm_power_state , 
   output reg          pme_en ,         
   output reg [2:0]    mm_enable ,      
   output reg          msi_enable ,     
   output reg [31:0]   mes_laddr ,      
   output reg [31:0]   mes_uaddr ,      
   output reg [15:0]   mes_data ,       

   output reg [31:0]   hoc0613   ) ;
reg  [5:0]         yk53041 ;
reg  [5:0]         sw98208 ;
reg  [1:0]         eac1041 ;
reg  [7:0]         ir8208 ;
reg  [3:0]         sh41044 ;
reg                qv8224 ;
reg                en41124 ;
wire [31:0]        ir8924 ;
wire [31:0]        wj44925 ;
wire [31:0]        ym2492d ;
wire [31:0]        aa24968 ;
wire [31:0]        qi24b40 ;
wire [31:0]        pu25a00 ;
wire [9:0]         jr2d002 ;
wire [9:0]         su68017 ;
wire [9:0]         pf400b9 ;
wire [9:0]         qi5ce ;
wire [9:0]         an2e70 ;
wire [9:0]         cb17384 ;
wire [9:0]         ymb9c24 ;
wire [9:0]         qgce121 ;
wire               ip70909 ;

`ifdef GEN2

`endif
reg [31 : 0] rv8484d;
reg [31 : 0] ks2426f;
reg [9 : 0] wy21379;
reg [9 : 0] rv9bc9;
reg [9 : 0] ps4de4f;
reg [9 : 0] al6f27b;
reg [9 : 0] vi793dc;
reg [9 : 0] qtc9ee2;
reg [9 : 0] jp4f715;
reg [9 : 0] fn7b8af;
reg [31 : 0] shdc57e;
reg twbca5;
reg [3 : 0] hb7ebd9;
reg [31 : 0] gof5ece;
reg [3 : 0] hd94aa4;
reg bnaf671;
reg fn7b38e;
reg wjd9c77;
reg db81c22;
reg goce3bc;
reg nef1611;
reg [5 : 0] bn8b08a;
reg [1 : 0] rg58457;
reg [7 : 0] zxc22bb;
reg [3 : 0] xy115df;
reg qv8aefb;
reg dm577dc;
reg [31 : 0] irbbee2;
reg [31 : 0] psdf714;
reg [31 : 0] dmfb8a2;
reg [31 : 0] czdc512;
reg [31 : 0] ipe2895;
reg [31 : 0] hq144ad;
reg [9 : 0] ria256b;
reg [9 : 0] yz12b5a;
reg [9 : 0] yz95ad5;
reg [9 : 0] twad6ac;
reg [9 : 0] xj6b563;
reg [9 : 0] zx5ab1e;
reg [9 : 0] jcd58f7;
reg [9 : 0] coac7ba;
reg ps63dd1;
reg [2047:0] db22f5b;
wire [41:0] ux17adf;

`ifdef GEN2

`endif

localparam ribd6fd = 42,jceb7ea = 32'hfdffe0cb;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef GEN2


`endif



always @(hb7ebd9, twbca5) begin   case ({twbca5, hb7ebd9[3:0]})       5'h1_4  : yk53041 = 6'b000001 ;        5'h1_5  : yk53041 = 6'b000010 ;        5'h1_C  : yk53041 = 6'b000100 ;        5'h1_D  : yk53041 = 6'b001000 ;        5'h1_E  : yk53041 = 6'b010000 ;        5'h1_F  : yk53041 = 6'b100000 ;        default : yk53041 = 6'b000000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      sw98208 <= 6'h0;   else      sw98208 <= yk53041 ;
end



assign ir8924 =  {rv8484d[31:21], 1'b0, 1'b0, rv8484d[18:16], 8'h70, 8'h01} ; 

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pm_power_state[1:0] <= 2'd0 ;   else if (bnaf671 && wjd9c77 && yk53041[1] && hd94aa4[0])      pm_power_state[1:0] <= gof5ece[1:0] ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      pme_en <= 1'b0 ;   else if (rv8484d[31] == 1'b0)      pme_en <= 1'b0 ;   else if (bnaf671 && wjd9c77 && yk53041[1] && hd94aa4[1])      pme_en <=  gof5ece[8] ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      sh41044 <= 4'd0 ;   else if (rv8484d[31:27] == 5'h00)      sh41044 <= 4'd0 ;   else if (bnaf671 && wjd9c77 && yk53041[1] && hd94aa4[1])      sh41044 <=  gof5ece[12:9] ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      en41124 <= 1'b0 ;   else      en41124 <= nef1611 ;
end
assign ip70909 = nef1611 & ~dm577dc ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      qv8224 <= 1'b0 ;   else if (rv8484d[31] == 1'b0)      qv8224 <= 1'b0 ;   else if (ps63dd1)      qv8224 <= 1'b1 ;   else if (bnaf671 && wjd9c77 && yk53041[1] && (gof5ece[15] == 1'b1) && hd94aa4[1])      qv8224 <= 1'b0 ;
end
always @* begin   case (xy115df)      4'd0    : {eac1041, ir8208} = wy21379 ;      4'd1    : {eac1041, ir8208} = rv9bc9 ;      4'd2    : {eac1041, ir8208} = ps4de4f ;      4'd3    : {eac1041, ir8208} = al6f27b ;      4'd4    : {eac1041, ir8208} = vi793dc ;      4'd5    : {eac1041, ir8208} = qtc9ee2 ;      4'd6    : {eac1041, ir8208} = jp4f715 ;      4'd7    : {eac1041, ir8208} = fn7b8af ;      default : {eac1041, ir8208} = 10'd0 ;   endcase
end
assign wj44925 = {zxc22bb[7:0], 2'b00, 6'd0,                    qv8aefb, rg58457[1:0], xy115df[3:0], pme_en,                    4'd0, ks2426f[3], 1'b0, pm_power_state[1:0]} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      mm_enable[2:0] <= 3'd0 ;      msi_enable     <= 1'd0 ;   end


`ifdef GEN2
      else if (sh41830) begin         mm_enable[2:0] <= 3'd0 ;         msi_enable     <= 1'd0 ;      end


`endif
   else if (bnaf671 && wjd9c77 && yk53041[2] && hd94aa4[2]) begin      mm_enable[2:0] <= gof5ece[22:20] ;      msi_enable     <= gof5ece[16] ;   end
end
assign ym2492d = {7'd0, shdc57e[24:23], mm_enable[2:0],                     shdc57e[19:17],msi_enable, 8'h90, 8'h05} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      mes_laddr[31:0] <= 32'd0 ;   end   else if (bnaf671 && wjd9c77 && yk53041[3]) begin      if (hd94aa4[0]) mes_laddr[7:2]   <= gof5ece[7:2] ;      if (hd94aa4[1]) mes_laddr[15:8]  <= gof5ece[15:8] ;      if (hd94aa4[2]) mes_laddr[23:16] <= gof5ece[23:16] ;      if (hd94aa4[3]) mes_laddr[31:24] <= gof5ece[31:24] ;   end
end
assign aa24968 = {mes_laddr[31:2], 2'b00} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mes_uaddr[31:0] <= 32'd0 ;   else if (bnaf671 && wjd9c77 && yk53041[4] && shdc57e[23]) begin      if (hd94aa4[0]) mes_uaddr[7:0]   <= gof5ece[7:0] ;      if (hd94aa4[1]) mes_uaddr[15:8]  <= gof5ece[15:8] ;      if (hd94aa4[2]) mes_uaddr[23:16] <= gof5ece[23:16] ;      if (hd94aa4[3]) mes_uaddr[31:24] <= gof5ece[31:24] ;   end
end
assign qi24b40 = mes_uaddr ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      mes_data <= 16'd0 ;   else if (bnaf671 && wjd9c77 && yk53041[5]) begin      if (hd94aa4[0]) mes_data[7:0]   <= gof5ece[7:0] ;      if (hd94aa4[1]) mes_data[15:8]  <= gof5ece[15:8] ;   end
end
assign pu25a00 = {16'd0, mes_data} ;


always @(*) begin   case (1'b1)       bn8b08a[0]  : hoc0613 = irbbee2 ;      bn8b08a[1]  : hoc0613 = psdf714 ;      bn8b08a[2]  : hoc0613 = dmfb8a2 ;      bn8b08a[3]  : hoc0613 = czdc512 ;      bn8b08a[4]  : hoc0613 = ipe2895 ;      bn8b08a[5]  : hoc0613 = hq144ad ;      default             : hoc0613 = 32'd0 ;   endcase
end
always@* begin rv8484d<={ph2d142>>1,ux17adf[0]};ks2426f<={os68a17>>1,ux17adf[1]};wy21379<={fn450b8>>1,ux17adf[2]};rv9bc9<={rv285c6>>1,ux17adf[3]};ps4de4f<={fa42e37>>1,ux17adf[4]};al6f27b<={qv171ba>>1,ux17adf[5]};vi793dc<={hqb8dd4>>1,ux17adf[6]};qtc9ee2<={mrc6ea3>>1,ux17adf[7]};jp4f715<={vx3751c>>1,ux17adf[8]};fn7b8af<={rvba8e7>>1,ux17adf[9]};shdc57e<={icd473e>>1,ux17adf[10]};twbca5<=ux17adf[11];hb7ebd9<={reg_addr>>1,ux17adf[12]};gof5ece<={reg_wdata>>1,ux17adf[13]};hd94aa4<={reg_wdata_be>>1,ux17adf[14]};bnaf671<=ux17adf[15];fn7b38e<=ux17adf[16];wjd9c77<=ux17adf[17];db81c22<=ux17adf[18];goce3bc<=ux17adf[19];nef1611<=ux17adf[20];bn8b08a<={sw98208>>1,ux17adf[21]};rg58457<={eac1041>>1,ux17adf[22]};zxc22bb<={ir8208>>1,ux17adf[23]};xy115df<={sh41044>>1,ux17adf[24]};qv8aefb<=ux17adf[25];dm577dc<=ux17adf[26];irbbee2<={ir8924>>1,ux17adf[27]};psdf714<={wj44925>>1,ux17adf[28]};dmfb8a2<={ym2492d>>1,ux17adf[29]};czdc512<={aa24968>>1,ux17adf[30]};ipe2895<={qi24b40>>1,ux17adf[31]};hq144ad<={pu25a00>>1,ux17adf[32]};ria256b<={jr2d002>>1,ux17adf[33]};yz12b5a<={su68017>>1,ux17adf[34]};yz95ad5<={pf400b9>>1,ux17adf[35]};twad6ac<={qi5ce>>1,ux17adf[36]};xj6b563<={an2e70>>1,ux17adf[37]};zx5ab1e<={cb17384>>1,ux17adf[38]};jcd58f7<={ymb9c24>>1,ux17adf[39]};coac7ba<={qgce121>>1,ux17adf[40]};ps63dd1<=ux17adf[41];end
always@* begin db22f5b[2047]<=os68a17[0];db22f5b[2046]<=fn450b8[0];db22f5b[2044]<=rv285c6[0];db22f5b[2040]<=fa42e37[0];db22f5b[2033]<=qv171ba[0];db22f5b[2024]<=sw98208[0];db22f5b[2018]<=hqb8dd4[0];db22f5b[2001]<=eac1041[0];db22f5b[1988]<=mrc6ea3[0];db22f5b[1954]<=ir8208[0];db22f5b[1929]<=vx3751c[0];db22f5b[1874]<=pf400b9[0];db22f5b[1860]<=sh41044[0];db22f5b[1811]<=rvba8e7[0];db22f5b[1789]<=phy_link_up;db22f5b[1700]<=qi5ce[0];db22f5b[1673]<=qv8224;db22f5b[1574]<=icd473e[0];db22f5b[1530]<=ps580c2;db22f5b[1353]<=an2e70[0];db22f5b[1317]<=ymb9c24[0];db22f5b[1299]<=en41124;db22f5b[1258]<=pu25a00[0];db22f5b[1247]<=reg_wr;db22f5b[1172]<=ip70909;db22f5b[1102]<=wj44925[0];db22f5b[1101]<=reg_sel_cs;db22f5b[1023]<=ph2d142[0];db22f5b[1012]<=pme_status;db22f5b[937]<=su68017[0];db22f5b[894]<=pcie_x1_ecrc_ok;db22f5b[658]<=cb17384[0];db22f5b[629]<=qi24b40[0];db22f5b[623]<=reg_wdata_be[0];db22f5b[586]<=qgce121[0];db22f5b[551]<=ir8924[0];db22f5b[468]<=jr2d002[0];db22f5b[447]<=reg_rd;db22f5b[314]<=aa24968[0];db22f5b[311]<=reg_wdata[0];db22f5b[157]<=ym2492d[0];db22f5b[155]<=reg_addr[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_cfg_resp_x1 (
   input wire          sys_clk ,      
   input wire          rst_n ,        

   input wire [7:0]    bus_num ,
   input wire [4:0]    dev_num ,
   input wire [2:0]    func_num ,
   input wire [15:0]   req_id ,
   input wire [7:0]    tag ,
   input wire [2:0]    tc ,
   input wire          term_all_cfg , 
   input wire          load_id ,      
   `ifdef GEN2
      input wire       drop_resp ,    
   `endif

   input wire [31:0]   reg_rdata0 ,   
   input wire [31:0]   reg_rdata1 ,   
   input wire [31:0]   reg_rdata2 ,   
   input wire [31:0]   reg_rdata3 ,   
   input wire [31:0]   reg_rdata4 ,   
   input wire [31:0]   reg_rdata5 ,   
   input wire          reg_wr ,       
   input wire          reg_rd ,       
   input wire          reg_rd_cpm ,   
   input wire          reg_wr_cpm ,   
   input wire          reg_sel_usp ,  
   input wire          reg_id_hit ,   
   input wire          type1_cfg ,    
   input wire          pois_cfg ,     
   input wire          pcie_x1_ecrc_ok ,      
   `ifdef ECRC
      input wire       pcie_x1_ecrc_chk_enb , 
      input wire       pcie_x1_ecrc_gen_enb , 
   `endif

   input wire          cfg_rmux_rd ,   
   input wire [7:0]    tx_ca_cplh ,     
   input wire          tx_ca_cplh_infi ,     

   
   output wire [31:0]  RDAT_O ,       
   output reg          ACK_O ,        

   output wire         us_req_int ,        
   output wire         cfg_rmux_req ,        
   output wire [15:0]  cfg_rmux_data ,     
   output wire         cfg_rmux_ae   ) ;
reg         wr_resp ;
reg         bl5523a ;
reg [2:0]   uka91d7 ;
reg [7:0]   ng996c5 ;
reg [7:0]   qgcb62b ;
reg [7:0]   je3ae5b ;
reg         zxd72da ;
reg [15:0]  aab96d6 ;
reg         cmcb6b0 ;
reg         al5b581 ;
reg         nedac0c ;
reg [15:0]  shd6063 ;
reg [15:0]  zzb031c ;
reg         tj818e6 ;
reg         dbc737 ;
reg         dm639be ;
reg         vx1cdf3 ;
reg         ble6f9e ;
wire        fp37cf7 ;
wire [1:0]  ohbe7be ;
wire [9:0]  rtf3df5 ;
wire [2:0]  hd9efae ;
wire [15:0] wjf7d77 ;
wire [15:0] uxbebbc ;
wire [15:0] gof5de4 ;
wire [15:0] anaef21 ;
wire [15:0] yk7790d ;
wire [15:0] iebc868 ;
wire        tue4341 ;

`ifdef ECRC

`else

`endif

`ifdef GEN2

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif
reg [7 : 0] qi21a0b;
reg [4 : 0] qvd058;
reg [2 : 0] cm682c4;
reg [15 : 0] qt41621;
reg [7 : 0] zmb10c;
reg [2 : 0] by58863;
reg os49b3a;
reg ec218d0;
reg [31 : 0] zzc680;
reg [31 : 0] xw63406;
reg [31 : 0] sw1a032;
reg [31 : 0] byd0190;
reg [31 : 0] wl80c83;
reg [31 : 0] bn641d;
reg bnaf671;
reg fn7b38e;
reg ri83bfd;
reg ir1dfea;
reg ykeff54;
reg kd7faa1;
reg gbfd50c;
reg ykea864;
reg wjd9c77;
reg qva190d;
reg [7 : 0] rvc86c;
reg rt64367;
reg aa21b3f;
reg [2 : 0] sjd9f8;
reg [7 : 0] xw6cfc5;
reg [7 : 0] ww67e2a;
reg [7 : 0] pu3f151;
reg yxf8a8b;
reg [15 : 0] rgc545d;
reg hq2a2ea;
reg al51752;
reg ph8ba95;
reg [15 : 0] vi5d4ae;
reg [15 : 0] cmea573;
reg lq52b98;
reg yz95cc3;
reg uxae61c;
reg zk730e4;
reg uk98723;
reg wjc3919;
reg [1 : 0] xl1c8cc;
reg [9 : 0] pse4666;
reg [2 : 0] mt23333;
reg [15 : 0] lf1999c;
reg [15 : 0] yxccce6;
reg [15 : 0] tu66735;
reg [15 : 0] oh339aa;
reg [15 : 0] hq9cd54;
reg [15 : 0] the6aa2;
reg ri35517;
reg [2047:0] db22f5b;
wire [53:0] ux17adf;

`ifdef ECRC

`else

`endif

`ifdef GEN2

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

localparam ribd6fd = 54,jceb7ea = 32'hfdffe06b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef ECRC


`else


`endif


`ifdef GEN2


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      wr_resp <= 1'b0;   else if (!os49b3a) begin      if (bnaf671 && wjd9c77 && !ir1dfea && !ykeff54 && !wjc3919)         wr_resp <= 1'b1;      else if (sjd9f8 == 3'd5)         wr_resp <= 1'b0;   end   else begin      if (bnaf671 && wjd9c77 && !ir1dfea && !wjc3919)         wr_resp <= 1'b1;      else if (sjd9f8 == 3'd5)         wr_resp <= 1'b0;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      dm639be <= 1'b0;      else if (((bnaf671 & !ir1dfea)  | (fn7b38e & !ri83bfd)) && !kd7faa1)      dm639be <= 1'b1;   else if (sjd9f8 == 3'd5)      dm639be <= 1'b0;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      bl5523a <= 1'b0;   else if (!os49b3a) begin      if (fn7b38e && wjd9c77 && !ri83bfd && !ykeff54 && !wjc3919)         bl5523a <= 1'b1;      else if (sjd9f8 == 3'd7)         bl5523a <= 1'b0;   end   else begin      if (fn7b38e && wjd9c77 && !ri83bfd && !wjc3919)         bl5523a <= 1'b1;      else if (sjd9f8 == 3'd5 && (uxae61c || uk98723))         bl5523a <= 1'b0;      else if (sjd9f8 == 3'd7)         bl5523a <= 1'b0;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      uka91d7 <= 3'd0;   else if (!os49b3a) begin      if (((bnaf671 & !ir1dfea)  | (fn7b38e & !ri83bfd) | wr_resp | aa21b3f) && !ykeff54)         uka91d7 <= sjd9f8 + 3'd1;      else         uka91d7 <= 3'd0;   end   else begin      if ((bnaf671 & !ir1dfea)  | (fn7b38e & !ri83bfd) | wr_resp | aa21b3f)         uka91d7 <= sjd9f8 + 3'd1;      else         uka91d7 <= 3'd0;   end
end

assign tue4341 =  (gbfd50c |                   (~kd7faa1 & aa21b3f) |                   (~kd7faa1 & wr_resp) |                   (ykea864 & wr_resp )          ) ;
assign hd9efae = (~zk730e4) ? 3'b010 : (ri35517 ? 3'b001 : 3'b000) ;
assign ohbe7be = (((fn7b38e & kd7faa1)  | (aa21b3f & ~uxae61c)) & ~gbfd50c) ? 2'b10 : 2'b00 ;
assign rtf3df5 = (xl1c8cc[1]) ? 10'h1 : 10'h0 ;
assign wjf7d77 = {1'b0, xl1c8cc, 5'b01010, 1'b0, by58863, 4'b0000} ;

`ifdef ECRC
   assign uxbebbc = {pcie_x1_ecrc_gen_enb, 1'b0, 2'b00, 2'b0, pse4666} ;

`else
   assign uxbebbc = {1'b0, 1'b0, 2'b00, 2'b0, pse4666} ;

`endif

assign gof5de4 = {qi21a0b, qvd058, cm682c4} ;
assign anaef21 = {mt23333, 1'b0, 12'h004} ;
assign yk7790d = qt41621 ;
assign iebc868 = {zmb10c, 1'b0, 7'h00} ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      vx1cdf3 <= 1'b0 ;      ble6f9e <= 1'b0 ;      al5b581 <= 1'b0 ;      nedac0c <= 1'b0 ;   end   else begin      vx1cdf3 <= ec218d0 ;      ble6f9e <= gbfd50c ;      al5b581 <= fn7b38e ;      nedac0c <= al51752 ;   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      shd6063 <= 16'd0;      zzb031c <= 16'd0;   end   else if (ph8ba95 && ykeff54) begin      shd6063 <= 16'd0;      zzb031c <= 16'd0;   end   else if (ph8ba95) begin      shd6063[15:8] <= (zzc680[7:0]  | xw63406[7:0] | sw1a032[7:0] |                        byd0190[7:0]  | wl80c83[7:0] | bn641d[7:0]) ;      shd6063[7:0]  <= (zzc680[15:8] | xw63406[15:8] | sw1a032[15:8] |                        byd0190[15:8] | wl80c83[15:8] | bn641d[15:8]) ;      zzb031c[15:8] <= (zzc680[23:16] | xw63406[23:16] | sw1a032[23:16] |                        byd0190[23:16] | wl80c83[23:16] | bn641d[23:16]) ;      zzb031c[7:0]  <= (zzc680[31:24] | xw63406[31:24] | sw1a032[31:24] |                        byd0190[31:24] | wl80c83[31:24] | bn641d[31:24]) ;   end
end

assign  RDAT_O = {vi5d4ae, cmea573} ;
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      tj818e6 <= 1'b0 ;      dbc737 <= 1'b0 ;      ACK_O       <= 1'b0 ;   end   else begin      tj818e6 <= ir1dfea | ri83bfd ;      dbc737 <= lq52b98 ;      ACK_O       <= yz95cc3 ;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      aab96d6 <= 16'd0;   else begin      case (sjd9f8)         3'd0 : aab96d6 <= lf1999c ;         3'd1 : aab96d6 <= yxccce6 ;         3'd2 : aab96d6 <= tu66735 ;         3'd3 : aab96d6 <= oh339aa ;         3'd4 : aab96d6 <= hq9cd54 ;         3'd5 : aab96d6 <= the6aa2 ;         3'd6 : aab96d6 <= vi5d4ae ;         3'd7 : aab96d6 <= cmea573 ;      endcase   end
end
assign us_req_int = ((sjd9f8 == 3'd3) & mt23333[0] & ~ykea864 ) ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      zxd72da <= 1'd0;


`ifdef GEN2
   else if (drop_resp)      zxd72da <= 1'd0;


`endif
   else if (!os49b3a) begin      if (((((bnaf671 && !ir1dfea) || (fn7b38e && !ri83bfd)) && wjd9c77) || wr_resp || aa21b3f) && !ykeff54)         zxd72da <= 1'b1;      else         zxd72da <= 1'b0;   end   else begin      if ((((bnaf671 && !ir1dfea) || (fn7b38e && !ri83bfd)) && wjd9c77) || wr_resp || aa21b3f)         zxd72da <= 1'b1;      else         zxd72da <= 1'b0;   end
end


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ng996c5 <= 8'd0 ;   else if (yxf8a8b)      ng996c5 <= xw6cfc5 + 8'd1 ;
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      qgcb62b <= 8'd0 ;   else if (qva190d)      qgcb62b <= ww67e2a + 8'd1 ;
end

pmi_ram_dp #(   .pmi_wr_addr_depth    ( 256 ),   .pmi_wr_addr_width    ( 8 ),   .pmi_wr_data_width    ( 16 ),   .pmi_rd_addr_depth    ( 256 ),   .pmi_rd_addr_width    ( 8 ),   .pmi_rd_data_width    ( 16 ),   .pmi_regmode          ( "noreg" ),   .pmi_gsr              ( "enable" ),   .pmi_init_file        ( "none" ),   .pmi_init_file_format ( "binary" ),


`ifdef ECP5UM
   .pmi_resetmode        ("sync"),   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_resetmode     ("sync"),         .pmi_family        ("ECP3"),


`else
      .pmi_resetmode     ("async"),      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ( "pmi_ram_dp" )   )   xy2aa7f (   .Data         ( aab96d6 ),   .WrAddress    ( ng996c5 ),   .RdAddress    ( qgcb62b ),   .WrClock      ( sys_clk ),   .RdClock      ( sys_clk ),   .WrClockEn    ( 1'b1 ),   .RdClockEn    ( cfg_rmux_rd ),   .WE           ( zxd72da ),


`ifdef ECP5UM
   .Reset        (1'b0),


`else



`ifdef ECP3
      .Reset     (1'b0),


`else
      .Reset     (~rst_n),


`endif



`endif
   .Q            ( cfg_rmux_data )   );


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      je3ae5b <= 8'd0 ;   else if (yxf8a8b && !qva190d)      je3ae5b <= pu3f151 + 8'd1 ;   else if (qva190d && !yxf8a8b)      je3ae5b <= pu3f151 - 8'd1 ;
end

assign fp37cf7 = (&pu3f151[7:3]) ;


always @(posedge sys_clk , negedge rst_n) begin   if (!rst_n)      cmcb6b0 <= 1'b0 ;   else if (rt64367)      cmcb6b0 <= 1'b1 ;   else if (rvc86c != 8'h00)      cmcb6b0 <= 1'b1 ;   else      cmcb6b0 <= 1'b0 ;
end

assign cfg_rmux_req = ((pu3f151 >= 8'h06) && hq2a2ea) ;


assign cfg_rmux_ae = (|pu3f151[7:1] == 1'b0) ;

always@* begin qi21a0b<={bus_num>>1,ux17adf[0]};qvd058<={dev_num>>1,ux17adf[1]};cm682c4<={func_num>>1,ux17adf[2]};qt41621<={req_id>>1,ux17adf[3]};zmb10c<={tag>>1,ux17adf[4]};by58863<={tc>>1,ux17adf[5]};os49b3a<=ux17adf[6];ec218d0<=ux17adf[7];zzc680<={reg_rdata0>>1,ux17adf[8]};xw63406<={reg_rdata1>>1,ux17adf[9]};sw1a032<={reg_rdata2>>1,ux17adf[10]};byd0190<={reg_rdata3>>1,ux17adf[11]};wl80c83<={reg_rdata4>>1,ux17adf[12]};bn641d<={reg_rdata5>>1,ux17adf[13]};bnaf671<=ux17adf[14];fn7b38e<=ux17adf[15];ri83bfd<=ux17adf[16];ir1dfea<=ux17adf[17];ykeff54<=ux17adf[18];kd7faa1<=ux17adf[19];gbfd50c<=ux17adf[20];ykea864<=ux17adf[21];wjd9c77<=ux17adf[22];qva190d<=ux17adf[23];rvc86c<={tx_ca_cplh>>1,ux17adf[24]};rt64367<=ux17adf[25];aa21b3f<=ux17adf[26];sjd9f8<={uka91d7>>1,ux17adf[27]};xw6cfc5<={ng996c5>>1,ux17adf[28]};ww67e2a<={qgcb62b>>1,ux17adf[29]};pu3f151<={je3ae5b>>1,ux17adf[30]};yxf8a8b<=ux17adf[31];rgc545d<={aab96d6>>1,ux17adf[32]};hq2a2ea<=ux17adf[33];al51752<=ux17adf[34];ph8ba95<=ux17adf[35];vi5d4ae<={shd6063>>1,ux17adf[36]};cmea573<={zzb031c>>1,ux17adf[37]};lq52b98<=ux17adf[38];yz95cc3<=ux17adf[39];uxae61c<=ux17adf[40];zk730e4<=ux17adf[41];uk98723<=ux17adf[42];wjc3919<=ux17adf[43];xl1c8cc<={ohbe7be>>1,ux17adf[44]};pse4666<={rtf3df5>>1,ux17adf[45]};mt23333<={hd9efae>>1,ux17adf[46]};lf1999c<={wjf7d77>>1,ux17adf[47]};yxccce6<={uxbebbc>>1,ux17adf[48]};tu66735<={gof5de4>>1,ux17adf[49]};oh339aa<={anaef21>>1,ux17adf[50]};hq9cd54<={yk7790d>>1,ux17adf[51]};the6aa2<={iebc868>>1,ux17adf[52]};ri35517<=ux17adf[53];end
always@* begin db22f5b[2047]<=dev_num[0];db22f5b[2046]<=func_num[0];db22f5b[2044]<=req_id[0];db22f5b[2041]<=tag[0];db22f5b[2034]<=tc[0];db22f5b[2021]<=term_all_cfg;db22f5b[2017]<=pois_cfg;db22f5b[1995]<=load_id;db22f5b[1986]<=pcie_x1_ecrc_ok;db22f5b[1943]<=reg_rdata0[0];db22f5b[1925]<=cfg_rmux_rd;db22f5b[1908]<=cmcb6b0;db22f5b[1864]<=zzb031c[0];db22f5b[1855]<=reg_rd_cpm;db22f5b[1838]<=reg_rdata1[0];db22f5b[1803]<=tx_ca_cplh[0];db22f5b[1769]<=al5b581;db22f5b[1680]<=tj818e6;db22f5b[1662]<=reg_wr_cpm;db22f5b[1628]<=reg_rdata2[0];db22f5b[1583]<=anaef21[0];db22f5b[1559]<=tx_ca_cplh_infi;db22f5b[1501]<=zxd72da;db22f5b[1490]<=nedac0c;db22f5b[1487]<=reg_wr;db22f5b[1312]<=dbc737;db22f5b[1276]<=reg_sel_usp;db22f5b[1209]<=reg_rdata3[0];db22f5b[1155]<=vx1cdf3;db22f5b[1118]<=yk7790d[0];db22f5b[1070]<=bl5523a;db22f5b[1048]<=ohbe7be[0];db22f5b[1023]<=bus_num[0];db22f5b[1008]<=type1_cfg;db22f5b[954]<=aab96d6[0];db22f5b[932]<=shd6063[0];db22f5b[927]<=reg_rd;db22f5b[791]<=gof5de4[0];db22f5b[750]<=je3ae5b[0];db22f5b[743]<=reg_rdata5[0];db22f5b[577]<=dm639be;db22f5b[524]<=fp37cf7;db22f5b[504]<=reg_id_hit;db22f5b[395]<=uxbebbc[0];db22f5b[379]<=tue4341;db22f5b[375]<=qgcb62b[0];db22f5b[371]<=reg_rdata4[0];db22f5b[262]<=ble6f9e;db22f5b[197]<=wjf7d77[0];db22f5b[189]<=iebc868[0];db22f5b[187]<=ng996c5[0];db22f5b[98]<=hd9efae[0];db22f5b[93]<=uka91d7[0];db22f5b[49]<=rtf3df5[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_ntafbaf (
   
   input wire [31:0]   yk7dd7f , 
   input wire [31:0]   rgeebf9 , 
   input wire [31:0]   gb75fcb ,
   input wire [31:0]   bnafe5d , 
   input wire [31:0]   ip7f2ef , 
   input wire [31:0]   vvf977d , 
   input wire [31:0]   oscbbee , 
   input wire [31:0]   ne5df70 , 
   input wire [31:0]   meefb82 , 
   input wire [31:0]   qg7dc11 , 
   input wire [31:0]   faee089 , 
   input wire [31:0]   kd7044a , 
   input wire [31:0]   aa82254 , 
   input wire          load_id ,        

   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_t0 ,     
   input wire [3:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire [3:0]    reg_wdata_be ,   
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          pcie_x1_ecrc_ok ,        

   input wire          phy_link_up ,    
   input wire          ps580c2 ,       
   `ifdef GEN2
      input wire       sh41830 ,            
   `endif
   input wire [15:0]   wwef7fd ,      

   
   output reg [31:0]   rt7bfe8 ,         
   output reg [31:0]   jcdff46 ,         
   output reg [31:0]   kqffa33 ,         
   output reg [31:0]   gbfd198 ,         
   output reg [31:0]   ale8cc4 ,         
   output reg [31:0]   ui46624 ,         
   output reg [31:0]   kf33121 ,         
   output wire [5:0]   cmd_reg_out ,    

   output reg [31:0]   hoc0613   ) ;
reg [15:0]          sw24341 ;
reg [15:0]          ie21a09 ;
reg                 vx1cdf3 ;
reg [15:0]          kq68244 ;
reg [15:0]          cz41221 ;
reg [7:0]           tj910c ;
reg [7:0]           by48866 ;
reg [31:0]          sh44333 ;
reg [31:0]          ou2199c ;
reg [31:0]          bncce0 ;
wire [31:0]         rg66707 ;
wire [31:0]         yz3383a ;
wire [31:0]         je9c1d4 ;
wire [15:0]         kqe0ea3 ;
wire [15:0]         ux7518 ;
wire [31:0]         je3a8c5 ;
wire [31:0]         wwd462a ;
wire [31:0]         gqa3151 ;
wire [31:0]         oh18a88 ;
wire [31:0]         vic5444 ;
wire [31:0]         ng2a222 ;
wire [31:0]         wj51112 ;
wire [31:0]         gq88895 ;
wire [31:0]         gb444a9 ;
wire [31:0]         zz2254c ;
wire [31:0]         kf12a66 ;
wire [31:0]         qv95335 ;
wire [31:0]         ksa99ad ;
wire [31:0]         ww4cd68 ;
wire [31:0]         dm66b41 ;
wire [31:0]         tw35a0b ;
wire [7:0]          zmad05b ;
wire [7:0]          qg682db ;

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif
reg [31 : 0] yx416d9;
reg [31 : 0] lsb6cc;
reg [31 : 0] uv5b663;
reg [31 : 0] qgdb31c;
reg [31 : 0] mrd98e0;
reg [31 : 0] gbcc704;
reg [31 : 0] by63824;
reg [31 : 0] fp1c123;
reg [31 : 0] eae091f;
reg [31 : 0] xy48f8;
reg [31 : 0] gq247c3;
reg [31 : 0] sj23e19;
reg [31 : 0] ie1f0cd;
reg ec218d0;
reg enc3344;
reg [3 : 0] hb7ebd9;
reg [31 : 0] gof5ece;
reg [3 : 0] hd94aa4;
reg bnaf671;
reg fn7b38e;
reg wjd9c77;
reg db81c22;
reg goce3bc;
reg [15 : 0] an8545f;
reg [15 : 0] ba2a2fc;
reg zk730e4;
reg [15 : 0] vx8bf15;
reg [15 : 0] th5f8ae;
reg [7 : 0] pffc577;
reg [7 : 0] uve2bbe;
reg [31 : 0] ym15df5;
reg [31 : 0] uxaefa8;
reg [31 : 0] cm77d45;
reg [31 : 0] qvbea28;
reg [31 : 0] ayf5144;
reg [31 : 0] zma8a20;
reg [15 : 0] pf45102;
reg [15 : 0] tj28816;
reg [31 : 0] sh440b6;
reg [31 : 0] pu205b4;
reg [31 : 0] mt2da3;
reg [31 : 0] vx16d1c;
reg [31 : 0] ymb68e7;
reg [31 : 0] kfb4738;
reg [31 : 0] aaa39c4;
reg [31 : 0] xl1ce21;
reg [31 : 0] qte710e;
reg [31 : 0] rv38874;
reg [31 : 0] mec43a7;
reg [31 : 0] sw21d38;
reg [31 : 0] fce9c0;
reg [31 : 0] vv74e02;
reg [31 : 0] pua7017;
reg [31 : 0] jr380ba;
reg [7 : 0] xwc05d6;
reg [7 : 0] ep2eb2;
reg [2047:0] db22f5b;
wire [55:0] ux17adf;

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

localparam ribd6fd = 56,jceb7ea = 32'hfdfff10b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


always @(hb7ebd9, enc3344) begin   case ({enc3344, hb7ebd9[3:0]})       5'h1_0 : sw24341 = 16'b0000_0000_0000_0001 ;        5'h1_1 : sw24341 = 16'b0000_0000_0000_0010 ;        5'h1_2 : sw24341 = 16'b0000_0000_0000_0100 ;        5'h1_3 : sw24341 = 16'b0000_0000_0000_1000 ;        5'h1_4 : sw24341 = 16'b0000_0000_0001_0000 ;        5'h1_5 : sw24341 = 16'b0000_0000_0010_0000 ;        5'h1_6 : sw24341 = 16'b0000_0000_0100_0000 ;        5'h1_7 : sw24341 = 16'b0000_0000_1000_0000 ;        5'h1_8 : sw24341 = 16'b0000_0001_0000_0000 ;        5'h1_9 : sw24341 = 16'b0000_0010_0000_0000 ;        5'h1_A : sw24341 = 16'b0000_0100_0000_0000 ;        5'h1_B : sw24341 = 16'b0000_1000_0000_0000 ;        5'h1_C : sw24341 = 16'b0001_0000_0000_0000 ;        5'h1_D : sw24341 = 16'b0010_0000_0000_0000 ;        5'h1_E : sw24341 = 16'b0100_0000_0000_0000 ;        5'h1_F : sw24341 = 16'b1000_0000_0000_0000 ;        default: sw24341 = 16'b0000_0000_0000_0000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ie21a09 <= 16'h0000 ;      vx1cdf3  <= 1'b0 ;   end   else begin      ie21a09 <= sw24341 ;      vx1cdf3  <= ec218d0 ;   end
end

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      sh44333 <= 32'd0 ;   else if (zk730e4)      sh44333 <= yx416d9 ;
end
assign  je3a8c5 = ym15df5 ;


always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      kq68244 <= 16'd0 ;


`ifdef GEN2
      else if (sh41830) begin         kq68244[0]  <= 1'b0 ;         kq68244[1]  <= 1'b0 ;         kq68244[2]  <= 1'b0 ;         kq68244[6]  <= 1'b0 ;         kq68244[8]  <= 1'b0 ;         kq68244[10] <= 1'b0 ;      end


`endif
   else if (!db81c22) begin      kq68244[0]  <= 1'b0 ;      kq68244[1]  <= 1'b0 ;      kq68244[2]  <= 1'b0 ;      kq68244[6]  <= 1'b0 ;      kq68244[8]  <= 1'b0 ;      kq68244[10] <= 1'b0 ;   end   else if (bnaf671 && wjd9c77 && sw24341[1] ) begin      if (hd94aa4[0]) begin         kq68244[0]  <= gof5ece[0] ;         kq68244[1]  <= gof5ece[1] ;         kq68244[2]  <= gof5ece[2] ;         kq68244[6]  <= gof5ece[6] ;      end      if (hd94aa4[1]) begin         kq68244[8]  <= gof5ece[8] ;         kq68244[10] <= gof5ece[10] ;      end   end
end
assign  cmd_reg_out = {vx8bf15[10], vx8bf15[8], vx8bf15[6], vx8bf15[2], vx8bf15[1:0]}  ;

assign  kqe0ea3 = {5'd0, vx8bf15[10], 1'b0, vx8bf15[8],                     1'b0, vx8bf15[6], 3'b000, vx8bf15[2], vx8bf15[1:0]}  ;


always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      cz41221 <= 16'd0 ;


`ifdef GEN2
      else if (sh41830)         cz41221 <= 16'd0 ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[1] && hd94aa4[3]) begin      if (gof5ece[24]) cz41221[8]  <= 1'b0 ;      if (gof5ece[27]) cz41221[11] <= 1'b0 ;      if (gof5ece[28]) cz41221[12] <= 1'b0 ;      if (gof5ece[29]) cz41221[13] <= 1'b0 ;      if (gof5ece[30]) cz41221[14] <= 1'b0 ;      if (gof5ece[31]) cz41221[15] <= 1'b0 ;   end   else begin      if (an8545f[3] )         cz41221[3]  <= 1'b1 ;      else         cz41221[3]  <= 1'b0 ;      if (an8545f[8] )  cz41221[8]  <= 1'b1 ;      if (an8545f[11] ) cz41221[11] <= 1'b1 ;      if (an8545f[12] ) cz41221[12] <= 1'b1 ;      if (an8545f[13] ) cz41221[13] <= 1'b1 ;      if (an8545f[14] ) cz41221[14] <= 1'b1 ;      if (an8545f[15] ) cz41221[15] <= 1'b1 ;   end
end
assign  ux7518 = {th5f8ae[15:11], 2'b00, th5f8ae[8], 3'b000, 1'b1, th5f8ae[3], 3'b000} ;
assign  wwd462a = {tj28816, pf45102} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ou2199c <= 32'd0 ;   else if (zk730e4)      ou2199c <= lsb6cc ;
end
assign  gqa3151 = uxaefa8 ;


assign  rg66707 = uv5b663 ;
always @(posedge sys_clk or negedge rst_n) begin   if ( !rst_n )      tj910c <= 8'd0 ;   else if (goce3bc)      tj910c <= uv5b663[7:0] ;


`ifdef GEN2
      else if (sh41830)         tj910c <= uv5b663[7:0] ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[3] && hd94aa4[0])      tj910c[7:0]  <= gof5ece[7:0] ;
end
assign  oh18a88 = {uv5b663[31:8], pffc577[7:0]} ;







always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rt7bfe8 <= 32'd0 ;   else if (goce3bc)      rt7bfe8 <= qgdb31c ;


`ifdef GEN2
      else if (sh41830)         rt7bfe8 <= qgdb31c ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[4]) begin      if (qgdb31c[2:0] == 3'b001) begin         if (hd94aa4[0]) rt7bfe8[7:0]   <= {(qgdb31c[7:2] & gof5ece[7:2]), qgdb31c[1:0]} ;         if (hd94aa4[1]) rt7bfe8[15:8]  <= (qgdb31c[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) rt7bfe8[23:16] <= (qgdb31c[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) rt7bfe8[31:24] <= (qgdb31c[31:24] & gof5ece[31:24]) ;      end      else if (qgdb31c[1:0] == 2'b00) begin         if (hd94aa4[0]) rt7bfe8[7:0]   <= {(qgdb31c[7:4] & gof5ece[7:4]), qgdb31c[3:0]} ;         if (hd94aa4[1]) rt7bfe8[15:8]  <= (qgdb31c[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) rt7bfe8[23:16] <= (qgdb31c[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) rt7bfe8[31:24] <= (qgdb31c[31:24] & gof5ece[31:24]) ;      end   end
end
assign  vic5444 = rt7bfe8 ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      jcdff46 <= 32'd0 ;   else if (goce3bc)      jcdff46 <= mrd98e0 ;


`ifdef GEN2
      else if (sh41830)         jcdff46 <= mrd98e0 ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[5]) begin      if (rt7bfe8[2:1] == 2'b10) begin         if (hd94aa4[0]) jcdff46[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[1]) jcdff46[15:8]  <= gof5ece[15:8] ;         if (hd94aa4[2]) jcdff46[23:16] <= gof5ece[23:16] ;         if (hd94aa4[3]) jcdff46[31:24] <= gof5ece[31:24] ;      end      else if (mrd98e0[2:0] == 3'b001) begin         if (hd94aa4[0]) jcdff46[7:0]   <= {(mrd98e0[7:2] & gof5ece[7:2]), mrd98e0[1:0]} ;         if (hd94aa4[1]) jcdff46[15:8]  <= (mrd98e0[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) jcdff46[23:16] <= (mrd98e0[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) jcdff46[31:24] <= (mrd98e0[31:24] & gof5ece[31:24]) ;      end      else if (mrd98e0[2:0] == 3'b000) begin         if (hd94aa4[0]) jcdff46[7:0]   <= {(mrd98e0[7:4] & gof5ece[7:4]), mrd98e0[3:0]} ;         if (hd94aa4[1]) jcdff46[15:8]  <= (mrd98e0[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) jcdff46[23:16] <= (mrd98e0[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) jcdff46[31:24] <= (mrd98e0[31:24] & gof5ece[31:24]) ;      end   end
end
assign  ng2a222 = jcdff46 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      kqffa33 <= 32'd0 ;   else if (goce3bc)      kqffa33 <= gbcc704 ;


`ifdef GEN2
      else if (sh41830)         kqffa33 <= gbcc704 ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[6]) begin      if (gbcc704[2:0] == 3'b001) begin         if (hd94aa4[0]) kqffa33[7:0]   <= {(gbcc704[7:2] & gof5ece[7:2]), gbcc704[1:0]} ;         if (hd94aa4[1]) kqffa33[15:8]  <= (gbcc704[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) kqffa33[23:16] <= (gbcc704[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) kqffa33[31:24] <= (gbcc704[31:24] & gof5ece[31:24]) ;      end      else if (gbcc704[1:0] == 2'b00) begin         if (hd94aa4[0]) kqffa33[7:0]   <= {(gbcc704[7:4] & gof5ece[7:4]), gbcc704[3:0]} ;         if (hd94aa4[1]) kqffa33[15:8]  <= (gbcc704[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) kqffa33[23:16] <= (gbcc704[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) kqffa33[31:24] <= (gbcc704[31:24] & gof5ece[31:24]) ;      end   end
end
assign  wj51112 = kqffa33 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      gbfd198 <= 32'd0 ;   else if (goce3bc)      gbfd198 <= by63824 ;


`ifdef GEN2
      else if (sh41830)         gbfd198 <= by63824 ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[7]) begin      if (kqffa33[2:1] == 2'b10) begin         if (hd94aa4[0]) gbfd198[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[1]) gbfd198[15:8]  <= gof5ece[15:8] ;         if (hd94aa4[2]) gbfd198[23:16] <= gof5ece[23:16] ;         if (hd94aa4[3]) gbfd198[31:24] <= gof5ece[31:24] ;      end      else if (by63824[2:0] == 3'b001) begin         if (hd94aa4[0]) gbfd198[7:0]   <= {(by63824[7:2] & gof5ece[7:2]), by63824[1:0]} ;         if (hd94aa4[1]) gbfd198[15:8]  <= (by63824[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) gbfd198[23:16] <= (by63824[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) gbfd198[31:24] <= (by63824[31:24] & gof5ece[31:24]) ;      end      else if (by63824[2:0] == 3'b000) begin         if (hd94aa4[0]) gbfd198[7:0]   <= {(by63824[7:4] & gof5ece[7:4]), by63824[3:0]} ;         if (hd94aa4[1]) gbfd198[15:8]  <= (by63824[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) gbfd198[23:16] <= (by63824[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) gbfd198[31:24] <= (by63824[31:24] & gof5ece[31:24]) ;      end   end
end
assign  gq88895 = gbfd198 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ale8cc4 <= 32'd0 ;   else if (goce3bc)      ale8cc4 <= fp1c123 ;


`ifdef GEN2
      else if (sh41830)         ale8cc4 <= fp1c123 ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[8]) begin      if (fp1c123[2:0] == 3'b001) begin         if (hd94aa4[0]) ale8cc4[7:0]   <= {(fp1c123[7:2] & gof5ece[7:2]), fp1c123[1:0]} ;         if (hd94aa4[1]) ale8cc4[15:8]  <= (fp1c123[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) ale8cc4[23:16] <= (fp1c123[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) ale8cc4[31:24] <= (fp1c123[31:24] & gof5ece[31:24]) ;      end      else if (fp1c123[1:0] == 2'b00) begin         if (hd94aa4[0]) ale8cc4[7:0]   <= {(fp1c123[7:4] & gof5ece[7:4]), fp1c123[3:0]} ;         if (hd94aa4[1]) ale8cc4[15:8]  <= (fp1c123[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) ale8cc4[23:16] <= (fp1c123[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) ale8cc4[31:24] <= (fp1c123[31:24] & gof5ece[31:24]) ;      end   end
end
assign  gb444a9 = ale8cc4 ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ui46624 <= 32'd0 ;   else if (goce3bc)      ui46624 <= eae091f ;


`ifdef GEN2
      else if (sh41830)         ui46624 <= eae091f ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[9]) begin      if (ale8cc4[2:1] == 2'b10) begin         if (hd94aa4[0]) ui46624[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[1]) ui46624[15:8]  <= gof5ece[15:8] ;         if (hd94aa4[2]) ui46624[23:16] <= gof5ece[23:16] ;         if (hd94aa4[3]) ui46624[31:24] <= gof5ece[31:24] ;      end      else if (eae091f[2:0] == 3'b001) begin         if (hd94aa4[0]) ui46624[7:0]   <= {(eae091f[7:2] & gof5ece[7:2]), eae091f[1:0]} ;         if (hd94aa4[1]) ui46624[15:8]  <= (eae091f[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) ui46624[23:16] <= (eae091f[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) ui46624[31:24] <= (eae091f[31:24] & gof5ece[31:24]) ;      end      else if (eae091f[2:0] == 3'b000) begin         if (hd94aa4[0]) ui46624[7:0]   <= {(eae091f[7:4] & gof5ece[7:4]), eae091f[3:0]} ;         if (hd94aa4[1]) ui46624[15:8]  <= (eae091f[15:8]  & gof5ece[15:8]) ;         if (hd94aa4[2]) ui46624[23:16] <= (eae091f[23:16] & gof5ece[23:16]) ;         if (hd94aa4[3]) ui46624[31:24] <= (eae091f[31:24] & gof5ece[31:24]) ;      end   end
end
assign  zz2254c = ui46624 ;


assign  je9c1d4 = xy48f8 ;
assign  kf12a66 = xy48f8 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      bncce0 <= 32'd0 ;   else if (zk730e4)      bncce0 <= gq247c3 ;
end
assign  qv95335 = cm77d45 ;


always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      kf33121 <= 32'd0 ;   else if (goce3bc)      kf33121 <= {sj23e19[31:11], 11'd0} ;


`ifdef GEN2
      else if (sh41830)         kf33121 <= {sj23e19[31:11], 11'd0} ;


`endif
   else if (!db81c22)         kf33121[0] <= 1'b0 ;   else if (bnaf671 && wjd9c77 && sw24341[12]) begin      if (hd94aa4[0]) kf33121[7:0]   <= {7'd0, gof5ece[0]} ;      if (hd94aa4[1]) kf33121[15:8]  <= {(sj23e19[15:11] & gof5ece[15:11]), 3'b000} ;      if (hd94aa4[2]) kf33121[23:16] <= (sj23e19[23:16] & gof5ece[23:16]) ;      if (hd94aa4[3]) kf33121[31:24] <= (sj23e19[31:24] & gof5ece[31:24]) ;   end
end
assign  ksa99ad = kf33121 ;


assign  qg682db  = 8'h50 ;
assign  ww4cd68 = {24'h0000_00, ep2eb2} ;


assign  dm66b41 = 32'h0000_0000 ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      by48866 <= 8'd0 ;   else if (goce3bc)      by48866 <= ie1f0cd[7:0] ;


`ifdef GEN2
      else if (sh41830)         by48866 <= ie1f0cd[7:0] ;


`endif
   else if (bnaf671 && wjd9c77 && sw24341[15] && hd94aa4[0])      by48866 <= gof5ece[7:0] ;   else      by48866 <= uve2bbe ;
end
assign  zmad05b = ie1f0cd[15:8] ;
assign  tw35a0b = {16'h0000, xwc05d6, uve2bbe} ;


always @(*) begin   case (1'b1)       ba2a2fc[0]  : hoc0613 = sh440b6 ;      ba2a2fc[1]  : hoc0613 = pu205b4 ;      ba2a2fc[2]  : hoc0613 = mt2da3 ;      ba2a2fc[3]  : hoc0613 = vx16d1c ;      ba2a2fc[4]  : hoc0613 = ymb68e7 ;      ba2a2fc[5]  : hoc0613 = kfb4738 ;      ba2a2fc[6]  : hoc0613 = aaa39c4 ;      ba2a2fc[7]  : hoc0613 = xl1ce21 ;      ba2a2fc[8]  : hoc0613 = qte710e ;      ba2a2fc[9]  : hoc0613 = rv38874 ;      ba2a2fc[10] : hoc0613 = mec43a7 ;      ba2a2fc[11] : hoc0613 = sw21d38 ;      ba2a2fc[12] : hoc0613 = fce9c0 ;      ba2a2fc[13] : hoc0613 = vv74e02 ;      ba2a2fc[14] : hoc0613 = pua7017 ;      ba2a2fc[15] : hoc0613 = jr380ba ;      default          : hoc0613 = 32'd0 ;   endcase
end
always@* begin yx416d9<={yk7dd7f>>1,ux17adf[0]};lsb6cc<={rgeebf9>>1,ux17adf[1]};uv5b663<={gb75fcb>>1,ux17adf[2]};qgdb31c<={bnafe5d>>1,ux17adf[3]};mrd98e0<={ip7f2ef>>1,ux17adf[4]};gbcc704<={vvf977d>>1,ux17adf[5]};by63824<={oscbbee>>1,ux17adf[6]};fp1c123<={ne5df70>>1,ux17adf[7]};eae091f<={meefb82>>1,ux17adf[8]};xy48f8<={qg7dc11>>1,ux17adf[9]};gq247c3<={faee089>>1,ux17adf[10]};sj23e19<={kd7044a>>1,ux17adf[11]};ie1f0cd<={aa82254>>1,ux17adf[12]};ec218d0<=ux17adf[13];enc3344<=ux17adf[14];hb7ebd9<={reg_addr>>1,ux17adf[15]};gof5ece<={reg_wdata>>1,ux17adf[16]};hd94aa4<={reg_wdata_be>>1,ux17adf[17]};bnaf671<=ux17adf[18];fn7b38e<=ux17adf[19];wjd9c77<=ux17adf[20];db81c22<=ux17adf[21];goce3bc<=ux17adf[22];an8545f<={wwef7fd>>1,ux17adf[23]};ba2a2fc<={ie21a09>>1,ux17adf[24]};zk730e4<=ux17adf[25];vx8bf15<={kq68244>>1,ux17adf[26]};th5f8ae<={cz41221>>1,ux17adf[27]};pffc577<={tj910c>>1,ux17adf[28]};uve2bbe<={by48866>>1,ux17adf[29]};ym15df5<={sh44333>>1,ux17adf[30]};uxaefa8<={ou2199c>>1,ux17adf[31]};cm77d45<={bncce0>>1,ux17adf[32]};qvbea28<={rg66707>>1,ux17adf[33]};ayf5144<={yz3383a>>1,ux17adf[34]};zma8a20<={je9c1d4>>1,ux17adf[35]};pf45102<={kqe0ea3>>1,ux17adf[36]};tj28816<={ux7518>>1,ux17adf[37]};sh440b6<={je3a8c5>>1,ux17adf[38]};pu205b4<={wwd462a>>1,ux17adf[39]};mt2da3<={gqa3151>>1,ux17adf[40]};vx16d1c<={oh18a88>>1,ux17adf[41]};ymb68e7<={vic5444>>1,ux17adf[42]};kfb4738<={ng2a222>>1,ux17adf[43]};aaa39c4<={wj51112>>1,ux17adf[44]};xl1ce21<={gq88895>>1,ux17adf[45]};qte710e<={gb444a9>>1,ux17adf[46]};rv38874<={zz2254c>>1,ux17adf[47]};mec43a7<={kf12a66>>1,ux17adf[48]};sw21d38<={qv95335>>1,ux17adf[49]};fce9c0<={ksa99ad>>1,ux17adf[50]};vv74e02<={ww4cd68>>1,ux17adf[51]};pua7017<={dm66b41>>1,ux17adf[52]};jr380ba<={tw35a0b>>1,ux17adf[53]};xwc05d6<={zmad05b>>1,ux17adf[54]};ep2eb2<={qg682db>>1,ux17adf[55]};end
always@* begin db22f5b[2047]<=rgeebf9[0];db22f5b[2046]<=gb75fcb[0];db22f5b[2044]<=bnafe5d[0];db22f5b[2040]<=ip7f2ef[0];db22f5b[2032]<=vvf977d[0];db22f5b[2016]<=oscbbee[0];db22f5b[1985]<=ne5df70[0];db22f5b[1950]<=reg_wdata_be[0];db22f5b[1930]<=wwef7fd[0];db22f5b[1923]<=meefb82[0];db22f5b[1852]<=reg_wr;db22f5b[1813]<=ie21a09[0];db22f5b[1799]<=qg7dc11[0];db22f5b[1656]<=reg_rd;db22f5b[1578]<=vx1cdf3;db22f5b[1551]<=faee089[0];db22f5b[1493]<=zmad05b[0];db22f5b[1353]<=gqa3151[0];db22f5b[1345]<=sh44333[0];db22f5b[1316]<=vic5444[0];db22f5b[1285]<=bncce0[0];db22f5b[1265]<=pcie_x1_ecrc_ok;db22f5b[1169]<=wj51112[0];db22f5b[1163]<=zz2254c[0];db22f5b[1117]<=ksa99ad[0];db22f5b[1108]<=kq68244[0];db22f5b[1054]<=kd7044a[0];db22f5b[1045]<=yz3383a[0];db22f5b[1023]<=yk7dd7f[0];db22f5b[975]<=reg_wdata[0];db22f5b[965]<=ps580c2;db22f5b[939]<=qg682db[0];db22f5b[746]<=tw35a0b[0];db22f5b[676]<=wwd462a[0];db22f5b[672]<=by48866[0];db22f5b[658]<=oh18a88[0];db22f5b[642]<=ou2199c[0];db22f5b[584]<=ng2a222[0];db22f5b[581]<=gb444a9[0];db22f5b[558]<=qv95335[0];db22f5b[522]<=rg66707[0];db22f5b[487]<=reg_addr[0];db22f5b[482]<=phy_link_up;db22f5b[373]<=dm66b41[0];db22f5b[338]<=je3a8c5[0];db22f5b[336]<=tj910c[0];db22f5b[290]<=gq88895[0];db22f5b[279]<=kf12a66[0];db22f5b[243]<=reg_sel_t0;db22f5b[186]<=ww4cd68[0];db22f5b[169]<=ux7518[0];db22f5b[168]<=cz41221[0];db22f5b[121]<=load_id;db22f5b[84]<=kqe0ea3[0];db22f5b[60]<=aa82254[0];db22f5b[42]<=je9c1d4[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_qgd4b1c (
   
   input wire [31:0]          jra58e0 , 

   input wire                 sys_clk ,        
   input wire                 rst_n ,          

   input wire                 reg_sel_ec ,     
   input wire [4:0]           reg_addr ,       
   input wire [31:0]          reg_wdata ,      
   input wire [3:0]           reg_wdata_be ,   
   input wire                 reg_wr ,         
   input wire                 reg_rd ,         
   input wire                 pcie_x1_ecrc_ok ,        

   input wire [`NUM_VC -1:0]  yxc6575 ,

   output wire [2:0]          rv32bad ,     
   output wire [2:0]          gd95d6e ,   
   output wire                gdaeb74 ,    
   output wire [2:0]          cfgec_vcasel ,   

   `ifdef EN_VC0
      output wire [7:0]       xyadd2d ,    
      output wire [2:0]       zx6e96a ,    
      output wire             th74b57 ,   
   `endif
   `ifdef EN_VC1
      output wire [7:0]       bna5abf ,    
      output wire [2:0]       bn2d5fe ,    
      output wire             ip6aff7 ,   
   `endif
   `ifdef EN_VC2
      output wire [7:0]       lq57fbd ,    
      output wire [2:0]       zzbfdeb ,    
      output wire             vifef5e ,   
   `endif
   `ifdef EN_VC3
      output wire [7:0]       qtf7af2 ,    
      output wire [2:0]       xybd794 ,    
      output wire             faebca2 ,   
   `endif
   `ifdef EN_VC4
      output wire [7:0]       of5e513 ,    
      output wire [2:0]       wjf289c ,    
      output wire             vx944e4 ,   
   `endif
   `ifdef EN_VC5
      output wire [7:0]       zma2727 ,    
      output wire [2:0]       lf1393a ,    
      output wire             xy9c9d7 ,   
   `endif
   `ifdef EN_VC6
      output wire [7:0]       pse4eba ,    
      output wire [2:0]       jr275d2 ,    
      output wire             ls3ae96 ,   
   `endif
   `ifdef EN_VC7
      output wire [7:0]       pfd74b2 ,    
      output wire [2:0]       bnba596 ,    
      output wire             rtd2cb7 ,   
   `endif

   output reg [31:0]          hoc0613   ) ;
reg [27:0]          fcb2dfa ;
reg [27:0]          ng96fd2 ;
reg [3:0]           ngb7e93 ;
reg                 bnbf49a ;
wire                osfa4d7 ;
wire [2:0]          rtd26b9 ;
wire [31:0]         pu935ce ;
wire [31:0]         an9ae72 ;
wire [31:0]         thd7395 ;
wire [31:0]         ecb9cae ;
wire [31:0]         mece571 ;
wire [31:0]         ay72b89 ;
wire [2:0]          an95c48 ;
wire [2:0]          kfae244 ;
wire                zx71224 = 1'b0 ;
wire [31:0] ri89126 = jra58e0 ;

`ifdef AER

`else 

`endif 

`ifdef EN_VC0
wire [31:0] uv44993 ;
wire [31:0] ie24c9d ;
wire [31:0] ep264e8 ;
wire [31:0] zz32744 ;
reg  [31:0] vk93a27 ;
reg         ym9d13b ;

`endif

`ifdef EN_VC1
wire [31:0] cze89d9 ;
wire [31:0] mr44ecc ;
wire [31:0] zz27665 ;
wire [31:0] ie3b32e ;
reg  [31:0] uvd9971 ;
reg         shccb8c ;

`endif

`ifdef EN_VC2
wire [31:0] yx65c65 ;
wire [31:0] aa2e32c ;
wire [31:0] xj71960 ;
wire [31:0] fc8cb07 ;
reg  [31:0] yx6583b ;
reg         cb2c1dc ;

`endif

`ifdef EN_VC3
wire [31:0] qt60ee5 ;
wire [31:0] qv772c ;
wire [31:0] co3b965 ;
wire [31:0] uvdcb28 ;
reg  [31:0] qge5944 ;
reg         qv2ca20 ;

`endif

`ifdef EN_VC4
wire [31:0] uv65104 ;
wire [31:0] bn28825 ;
wire [31:0] en4412e ;
wire [31:0] hq20974 ;
reg  [31:0] vk4ba2 ;
reg         ri25d13 ;

`endif

`ifdef EN_VC5
wire [31:0] wy2e89a ;
wire [31:0] vv744d1 ;
wire [31:0] lsa268e ;
wire [31:0] db13472 ;
reg  [31:0] ir9a396 ;
reg         ykd1cb4 ;

`endif

`ifdef EN_VC6
wire [31:0] vx8e5a0 ;
wire [31:0] ui72d07 ;
wire [31:0] do96838 ;
wire [31:0] mtb41c3 ;
reg  [31:0] tja0e1c ;
reg         oh70e6 ;

`endif

`ifdef EN_VC7
wire [31:0] ph38735 ;
wire [31:0] uvc39ae ;
wire [31:0] hd1cd74 ;
wire [31:0] the6ba6 ;
reg  [31:0] ri35d37 ;
reg         kfae9bb ;

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif
reg [31 : 0] dz74ddd;
reg eaefd7b;
reg [4 : 0] hb7ebd9;
reg [31 : 0] gof5ece;
reg [3 : 0] hd94aa4;
reg bnaf671;
reg fn7b38e;
reg wjd9c77;
reg [`NUM_VC - 1 : 0] xw7cc1a;
reg [27 : 0] lde60d3;
reg [3 : 0] ba3069e;
reg hq834f2;
reg ie1a793;
reg [2 : 0] ald3c98;
reg [31 : 0] ph9e4c5;
reg [31 : 0] enf262e;
reg [31 : 0] je93175;
reg [31 : 0] co98baa;
reg [31 : 0] dmc5d50;
reg [31 : 0] co2ea83;
reg [2 : 0] qt75419;
reg [2 : 0] zzaa0cc;
reg pf50666;
reg [31 : 0] do83337;
reg [2047:0] db22f5b;
wire [23:0] ux17adf;

`ifdef AER

`else 

`endif 

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

localparam ribd6fd = 24,jceb7ea = 32'hfdfff02b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef AER


`else 


`endif 


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif





always @(hb7ebd9, eaefd7b) begin   case ({eaefd7b, hb7ebd9[4:0]})       6'b1_00011 : fcb2dfa = 28'h000_0001 ;        6'b1_00100 : fcb2dfa = 28'h000_0002 ;        6'b1_00101 : fcb2dfa = 28'h000_0004 ;        6'b1_00110 : fcb2dfa = 28'h000_0008 ;        6'b1_00111 : fcb2dfa = 28'h000_0010 ;        6'b1_01000 : fcb2dfa = 28'h000_0020 ;        6'b1_01001 : fcb2dfa = 28'h000_0040 ;        6'b1_01010 : fcb2dfa = 28'h000_0080 ;        6'b1_01011 : fcb2dfa = 28'h000_0100 ;        6'b1_01100 : fcb2dfa = 28'h000_0200 ;        6'b1_01101 : fcb2dfa = 28'h000_0400 ;        6'b1_01110 : fcb2dfa = 28'h000_0800 ;        6'b1_01111 : fcb2dfa = 28'h000_1000 ;        6'b1_10000 : fcb2dfa = 28'h000_2000 ;        6'b1_10001 : fcb2dfa = 28'h000_4000 ;        6'b1_10010 : fcb2dfa = 28'h000_8000 ;        6'b1_10011 : fcb2dfa = 28'h001_0000 ;        6'b1_10100 : fcb2dfa = 28'h002_0000 ;        6'b1_10101 : fcb2dfa = 28'h004_0000 ;        6'b1_10110 : fcb2dfa = 28'h008_0000 ;        6'b1_10111 : fcb2dfa = 28'h010_0000 ;        6'b1_11000 : fcb2dfa = 28'h020_0000 ;        6'b1_11001 : fcb2dfa = 28'h040_0000 ;        6'b1_11010 : fcb2dfa = 28'h080_0000 ;        6'b1_11011 : fcb2dfa = 28'h100_0000 ;        6'b1_11100 : fcb2dfa = 28'h200_0000 ;        6'b1_11101 : fcb2dfa = 28'h400_0000 ;        6'b1_11110 : fcb2dfa = 28'h800_0000 ;        default    : fcb2dfa = 28'h000_0000 ;   endcase
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ng96fd2 <= 28'h000_0000;   else      ng96fd2 <= fcb2dfa ;
end


`ifdef AER
   assign pu935ce = {12'h1A0, 4'h1, 16'h0002} ;


`else 
   assign pu935ce = {do83337[31:20],4'h1, 16'h0002} ;


`endif 



assign an95c48 = (`NUM_VC - 1) ;
assign kfae244 = `LPEVCC ;

assign  an9ae72 = {16'd0, 4'd0, 2'b00, 2'b00, 1'b0, zzaa0cc, 1'b0, qt75419}  ;
assign  thd7395 =  enf262e ;

assign  rv32bad = enf262e[2:0] ;
assign  gd95d6e = enf262e[6:4] ;


assign  ecb9cae = {8'h00, 16'h0000, 8'h01} ;
assign  mece571 = co98baa ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ngb7e93 <= 4'd0 ;   else if (bnaf671 && wjd9c77 && fcb2dfa[3] && hd94aa4[0])      ngb7e93 <= gof5ece[3:0] ;   else      ngb7e93 <= ba3069e ;
end
assign gdaeb74 = ba3069e[0] ;
assign cfgec_vcasel = ba3069e[3:1] ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      bnbf49a <= 1'b0 ;   else if (pf50666 && bnaf671 && wjd9c77)      bnbf49a <= 1'b1 ;   else if (ba3069e[0])      bnbf49a <= 1'b0 ;   else      bnbf49a <= hq834f2 ;
end
assign  ay72b89 = {15'h0000, 1'b0, 12'h000, ba3069e[3:1], 1'b0}  ;





`ifdef EN_VC0
      assign  zz32744  = 32'd0  ;   assign  uv44993 = 32'd0 ;
      assign  ie24c9d =  {1'b1, 4'b0000, 3'b000, 4'b0000,                                        4'h0, 8'h00, 8'hFF} ;   assign  xyadd2d =  8'h01 ;   assign  zx6e96a  =  3'b000 ;   assign  th74b57 =  1'b1 ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         ym9d13b <= 1'b0 ;      else begin         ym9d13b <= xw7cc1a[0] ;      end   end   assign  ep264e8 =  {14'h0000, ym9d13b, 1'b0, 16'h0000} ;


`endif





`ifdef EN_VC1
      assign  ie3b32e  = 32'd0  ;   assign  cze89d9 = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         uvd9971 <= 32'd0 ;      else if (bnaf671 && wjd9c77 && fcb2dfa[8]) begin         if (hd94aa4[0]) uvd9971[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[3]) uvd9971[31:24] <= gof5ece[31:24] ;      end   end   assign  mr44ecc =  {uvd9971[31], 4'h0, uvd9971[26:24], 4'h0,                         4'h0, 8'h00, uvd9971[7:0]};   assign  bna5abf =  uvd9971[7:0] ;   assign  bn2d5fe  =  uvd9971[26:24] ;   assign  ip6aff7 =  uvd9971[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         shccb8c <= 2'd0 ;      else         shccb8c <= xw7cc1a[1] ;   end   assign  zz27665 =  {14'h0000, shccb8c, 1'b0, 16'h0000} ;


`endif






`ifdef EN_VC2
      assign  fc8cb07  = 32'd0  ;   assign  yx65c65 = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         yx6583b <= 32'd0 ;      else if (bnaf671 && wjd9c77 && fcb2dfa[11]) begin         if (hd94aa4[0]) yx6583b[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[3]) yx6583b[31:24] <= gof5ece[31:24] ;      end   end   assign  aa2e32c =  {yx6583b[31], 4'h0, yx6583b[26:24], 4'h0,                         4'h0, 8'h00, yx6583b[7:0]};   assign  lq57fbd =  yx6583b[7:0] ;   assign  zzbfdeb  =  yx6583b[26:24] ;   assign  vifef5e =  yx6583b[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         cb2c1dc <= 2'd0 ;      else         cb2c1dc <= xw7cc1a[2] ;   end   assign  xj71960 =  {14'h0000, cb2c1dc, 1'b0, 16'h0000} ;


`endif






`ifdef EN_VC3
      assign  uvdcb28  = 32'd0  ;   assign  qt60ee5 = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         qge5944 <= 32'd0 ;      else if (bnaf671 && wjd9c77 && fcb2dfa[14]) begin         if (hd94aa4[0]) qge5944[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[3]) qge5944[31:24] <= gof5ece[31:24] ;      end   end   assign  qv772c =  {qge5944[31], 4'h0, qge5944[26:24], 4'h0,                         4'h0, 8'h00, qge5944[7:0]};   assign  qtf7af2 =  qge5944[7:0] ;   assign  xybd794  =  qge5944[26:24] ;   assign  faebca2 =  qge5944[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         qv2ca20 <= 1'b0 ;      else         qv2ca20 <= xw7cc1a[3] ;   end   assign  co3b965 =  {14'h0000, qv2ca20, 1'b0, 16'h0000} ;


`endif






`ifdef EN_VC4
      assign  hq20974  = 32'd0  ;   assign  uv65104 = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         vk4ba2 <= 32'd0 ;      else if (bnaf671 && wjd9c77 && fcb2dfa[17]) begin         if (hd94aa4[0]) vk4ba2[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[3]) vk4ba2[31:24] <= gof5ece[31:24] ;      end   end   assign  bn28825 =  {vk4ba2[31], 4'h0, vk4ba2[26:24], 4'h0,                         4'h0, 8'h00, vk4ba2[7:0]};   assign  of5e513 =  vk4ba2[7:0] ;   assign  wjf289c  =  vk4ba2[26:24] ;   assign  vx944e4 =  vk4ba2[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         ri25d13 <= 1'b0 ;      else         ri25d13 <= xw7cc1a[4] ;   end   assign  en4412e =  {14'h0000, ri25d13, 1'b0, 16'h0000} ;


`endif






`ifdef EN_VC5
      assign  db13472  = 32'd0  ;   assign  wy2e89a = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ir9a396 <= 32'd0 ;      else if (bnaf671 && wjd9c77 && fcb2dfa[20]) begin         if (hd94aa4[0]) ir9a396[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[3]) ir9a396[31:24] <= gof5ece[31:24] ;      end   end   assign  vv744d1 =  {ir9a396[31], 4'h0, ir9a396[26:24], 4'h0,                         4'h0, 8'h00, ir9a396[7:0]};   assign  zma2727 =  ir9a396[7:0] ;   assign  lf1393a  =  ir9a396[26:24] ;   assign  xy9c9d7 =  ir9a396[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         ykd1cb4 <= 1'b0 ;      else         ykd1cb4 <= xw7cc1a[5] ;   end   assign  lsa268e =  {14'h0000, ykd1cb4, 1'b0, 16'h0000} ;




`endif





`ifdef EN_VC6
      assign  mtb41c3  = 32'd0  ;   assign  vx8e5a0 = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         tja0e1c <= 32'd0 ;      else if (bnaf671 && wjd9c77 && fcb2dfa[23]) begin         if (hd94aa4[0]) tja0e1c[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[3]) tja0e1c[31:24] <= gof5ece[31:24] ;      end   end   assign  ui72d07 =  {tja0e1c[31], 4'h0, tja0e1c[26:24], 4'h0,                         4'h0, 8'h00, tja0e1c[7:0]};   assign  pse4eba =  tja0e1c[7:0] ;   assign  jr275d2  =  tja0e1c[26:24] ;   assign  ls3ae96 =  tja0e1c[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         oh70e6 <= 1'b0 ;      else         oh70e6 <= xw7cc1a[6] ;   end   assign  do96838 =  {14'h0000, oh70e6, 1'b0, 16'h0000} ;



`endif





`ifdef EN_VC7
      assign  the6ba6  = 32'd0  ;   assign  ph38735 = 32'd0 ;
      always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         ri35d37 <= 32'd0 ;      else if (bnaf671 && wjd9c77 && fcb2dfa[26]) begin         if (hd94aa4[0]) ri35d37[7:0]   <= gof5ece[7:0] ;         if (hd94aa4[3]) ri35d37[31:24] <= gof5ece[31:24] ;      end   end   assign  uvc39ae =  {ri35d37[31], 4'h0, ri35d37[26:24], 4'h0,                         4'h0, 8'h00, ri35d37[7:0]};   assign  pfd74b2 =  ri35d37[7:0] ;   assign  bnba596  =  ri35d37[26:24] ;   assign  rtd2cb7 =  ri35d37[31] ;
      always @(posedge sys_clk, negedge rst_n) begin      if ( !rst_n )         kfae9bb <= 1'b0 ;      else         kfae9bb <= xw7cc1a[7] ;   end   assign  hd1cd74 =  {14'h0000, kfae9bb, 1'b0, 16'h0000} ;




`endif


always @(lde60d3,         ph9e4c5, je93175, dmc5d50, co2ea83


`ifdef EN_VC0
           , uv44993, ie24c9d, ep264e8


`endif



`ifdef EN_VC1
           , cze89d9, mr44ecc, zz27665


`endif



`ifdef EN_VC2
           , yx65c65, aa2e32c, xj71960


`endif



`ifdef EN_VC3
           , qt60ee5, qv772c, co3b965


`endif



`ifdef EN_VC4
           , uv65104, bn28825, en4412e


`endif



`ifdef EN_VC5
           , wy2e89a, vv744d1, lsa268e


`endif



`ifdef EN_VC6
           , vx8e5a0, ui72d07, do96838


`endif



`ifdef EN_VC7
           , ph38735, uvc39ae, hd1cd74


`endif
        ) begin   case (1'b1)          lde60d3[0]  : hoc0613 = ph9e4c5 ;         lde60d3[1]  : hoc0613 = je93175 ;         lde60d3[2]  : hoc0613 = dmc5d50 ;         lde60d3[3]  : hoc0613 = co2ea83 ;


`ifdef EN_VC0
         lde60d3[4]  : hoc0613 = uv44993 ;         lde60d3[5]  : hoc0613 = ie24c9d ;         lde60d3[6]  : hoc0613 = ep264e8 ;


`endif



`ifdef EN_VC1
         lde60d3[7]  : hoc0613 = cze89d9 ;         lde60d3[8]  : hoc0613 = mr44ecc ;         lde60d3[9]  : hoc0613 = zz27665 ;


`endif



`ifdef EN_VC2
         lde60d3[10] : hoc0613 = yx65c65 ;         lde60d3[11] : hoc0613 = aa2e32c ;         lde60d3[12] : hoc0613 = xj71960 ;


`endif



`ifdef EN_VC3
         lde60d3[13] : hoc0613 = qt60ee5 ;         lde60d3[14] : hoc0613 = qv772c ;         lde60d3[15] : hoc0613 = co3b965 ;


`endif



`ifdef EN_VC4
         lde60d3[16] : hoc0613 = uv65104 ;         lde60d3[17] : hoc0613 = bn28825 ;         lde60d3[18] : hoc0613 = en4412e ;


`endif



`ifdef EN_VC5
         lde60d3[19] : hoc0613 = wy2e89a ;         lde60d3[20] : hoc0613 = vv744d1 ;         lde60d3[21] : hoc0613 = lsa268e ;


`endif



`ifdef EN_VC6
         lde60d3[22] : hoc0613 = vx8e5a0 ;         lde60d3[23] : hoc0613 = ui72d07 ;         lde60d3[24] : hoc0613 = do96838 ;


`endif



`ifdef EN_VC7
         lde60d3[25] : hoc0613 = ph38735 ;         lde60d3[26] : hoc0613 = uvc39ae ;         lde60d3[27] : hoc0613 = hd1cd74 ;


`endif
      default              : hoc0613 = 32'd0 ;   endcase
end
always@* begin dz74ddd<={jra58e0>>1,ux17adf[0]};eaefd7b<=ux17adf[1];hb7ebd9<={reg_addr>>1,ux17adf[2]};gof5ece<={reg_wdata>>1,ux17adf[3]};hd94aa4<={reg_wdata_be>>1,ux17adf[4]};bnaf671<=ux17adf[5];fn7b38e<=ux17adf[6];wjd9c77<=ux17adf[7];xw7cc1a<={yxc6575>>1,ux17adf[8]};lde60d3<={ng96fd2>>1,ux17adf[9]};ba3069e<={ngb7e93>>1,ux17adf[10]};hq834f2<=ux17adf[11];ie1a793<=ux17adf[12];ald3c98<={rtd26b9>>1,ux17adf[13]};ph9e4c5<={pu935ce>>1,ux17adf[14]};enf262e<={an9ae72>>1,ux17adf[15]};je93175<={thd7395>>1,ux17adf[16]};co98baa<={ecb9cae>>1,ux17adf[17]};dmc5d50<={mece571>>1,ux17adf[18]};co2ea83<={ay72b89>>1,ux17adf[19]};qt75419<={an95c48>>1,ux17adf[20]};zzaa0cc<={kfae244>>1,ux17adf[21]};pf50666<=ux17adf[22];do83337<={ri89126>>1,ux17adf[23]};end
always@* begin db22f5b[2047]<=reg_sel_ec;db22f5b[2046]<=reg_addr[0];db22f5b[2044]<=reg_wdata[0];db22f5b[2041]<=reg_wdata_be[0];db22f5b[2035]<=reg_wr;db22f5b[2022]<=reg_rd;db22f5b[1996]<=pcie_x1_ecrc_ok;db22f5b[1945]<=yxc6575[0];db22f5b[1843]<=ng96fd2[0];db22f5b[1746]<=mece571[0];db22f5b[1685]<=kfae244[0];db22f5b[1645]<=pu935ce[0];db22f5b[1638]<=ngb7e93[0];db22f5b[1445]<=ay72b89[0];db22f5b[1322]<=zx71224;db22f5b[1242]<=an9ae72[0];db22f5b[1229]<=bnbf49a;db22f5b[1023]<=jra58e0[0];db22f5b[873]<=ecb9cae[0];db22f5b[842]<=an95c48[0];db22f5b[822]<=rtd26b9[0];db22f5b[597]<=ri89126[0];db22f5b[436]<=thd7395[0];db22f5b[411]<=osfa4d7;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_hbd7170 #(
   parameter D_WIDTH  = 64 )
   (
   input wire          sys_clk ,        
   input wire          rst_n ,          

   input wire          reg_sel_aer ,    
   input wire [3:0]    reg_addr ,       
   input wire [31:0]   reg_wdata ,      
   input wire [3:0]    reg_wdata_be ,   
   input wire          reg_wr ,         
   input wire          reg_rd ,         
   input wire          pcie_x1_ecrc_ok ,        

   
   input wire          phy_link_up ,    
   input wire          dfrm_perr ,

   
   input wire          rxtp_bad_tlp ,   
   input wire          do3aee2 ,  
   input wire          uvfd0f9 ,     
   input wire          ipedf31 , 
   input wire          zkda02d , 
   input wire          nr4f43e , 
   input wire          kd7a1f7 ,  
   input wire          jcd0fbd ,     

   
   input wire [D_WIDTH-1:0] tlpdec_data ,
   input wire          tlpdec_st ,
   input wire          tlpdec_end ,
   input wire          tlpdec_pcie_x1_ecrc_err , 
   input wire          tlpdec_pois_tlp , 
   input wire          tlpdec_us_req ,   
   input wire          tlpdec_malf_tlp , 

   
   input wire          mt80c46 ,        
   input wire [14:0]   me460cd ,    

   
   input wire [127:0]  err_tlp_header ,  
   input wire          cmpln_tout ,      
   input wire          cmpltr_abort_np , 
   input wire          cmpltr_abort_p ,  
   input wire          unexp_cmpln ,     
   input wire          ur_np_ext ,       
   input wire          ur_p_ext ,        

   output reg [31:0]   vxc185 ,
   output wire         pcie_x1_ecrc_gen_enb ,
   output wire         pcie_x1_ecrc_chk_enb ,
   output reg          ftl_err_out ,
   output reg          nftl_err_out ,
   output reg          cor_err_out ,

   output reg [31:0]   hoc0613   ) ;
reg [11:0]          yxf89d5 ;
reg [11:0]          qgc4ead ;
reg                 fp27569 ;
reg                 fc3ab4e ;
reg                 rgd5a72 ;
reg                 puad392 ;
reg                 ps69c93 ;
reg                 mr4e49a ;
reg                 ay724d5 ;
reg                 co926a9 ;
reg                 zm93548 ;
reg                 cb9aa42 ;
reg                 hod5215 ;
reg                 qia90ab ;
reg [31:0]          xw48559 ;
reg [31:0]          ho42aca ;
reg [31:0]          ec15652 ;
reg [31:0]          uxab291 ;
reg [4:0]           yk5948c ;
reg [31:0]          byca461 ;
reg                 rg5230b ;
reg                 rv9185a ;
reg [31:0]          pu8c2d6;
reg [31:0]          xj616b2;
reg [31:0]          xyb597;
reg [31:0]          nr5acbb;
reg [31:0]          shd65df ;
reg [31:0]          xyb2efc ;
reg [31:0]          aa977e2 ;
reg [31:0]          kfbbf10 ;
reg [8:0]           fadf884 ;
wire [31:0]         hbfc423 ;
wire [31:0]         ipe211e ;
wire [31:0]         co108f4 ;
wire [31:0]         bn847a0 ;
wire [31:0]         kf23d06 ;
wire [31:0]         xy1e835 ;
wire [31:0]         tuf41ab ;
wire [31:0]         xla0d5a ;
wire [31:0]         vx6ad6 ;
wire [31:0]         ng356b6 ;
wire [31:0]         anab5b2 ;
wire [31:0]         xj5ad94 ;
wire [31:0]         uvd6ca7 ;
wire [31:0]         qib653d ;
wire [31:0]         bab29e9 ;
wire                rva0f8e ;
wire                doa7a56 ;
wire                vx3d2b3 ;
wire                rte959e ;
wire                hb4acf7 ;
wire                ic567be ;
wire                ukb3df0 ;
wire                fp9ef80 ;
wire                gbf7c07 ;
wire                wlbe03c ;
wire                ayf01e5 ;
wire                an80f28 ;
wire                gd7945 ;
wire                yz3ca2c ;
wire                qge5165 ;
wire                vx28b29 ;
wire                jp4594e ;
wire                an2ca77 ;
wire                wj653bc ;
wire                qv29de5 ;
wire                uv4ef2c ;
wire                ic77964 ;
wire                ksbcb20 ;
wire                ice5901 ;
wire                ep2c808 ;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ECRC

`else

`endif

`ifdef X1

`else

`endif

`ifdef X1

`else

`endif
reg dz64044;
reg [3 : 0] hb7ebd9;
reg [31 : 0] gof5ece;
reg [3 : 0] hd94aa4;
reg bnaf671;
reg fn7b38e;
reg wjd9c77;
reg db81c22;
reg xwe4be4;
reg ng2f912;
reg zk7c893;
reg zke449b;
reg ph224db;
reg ir126de;
reg vk936f4;
reg xl9b7a2;
reg osdbd16;
reg [D_WIDTH - 1 : 0] wlbeec2;
reg yxf7614;
reg ohbb0a5;
reg gd173d3;
reg ecb9e9c;
reg necf4e1;
reg kd7a70b;
reg kdd385d;
reg [14 : 0] yx6fcb6;
reg [127 : 0] ld7e5b5;
reg ykde8b1;
reg byf4589;
reg hqa2c4a;
reg bn16253;
reg sjb129e;
reg ng894f4;
reg [11 : 0] jpe31fa;
reg mt18fd6;
reg hbc7eb4;
reg fc3f5a6;
reg uifad33;
reg ipd6998;
reg anb4cc5;
reg coa662d;
reg ir33168;
reg ou98b45;
reg vic5a28;
reg tj2d143;
reg ui68a1f;
reg [31 : 0] bl450f8;
reg [31 : 0] lf287c6;
reg [31 : 0] ic43e37;
reg [31 : 0] mg1f1b8;
reg [4 : 0] gbf8dc0;
reg [31 : 0] enc6e05;
reg jr3702c;
reg xyb8167;
reg [31 : 0] fac0b3a;
reg [31 : 0] sw59d3;
reg [31 : 0] ux2ce99;
reg [31 : 0] yk674cc;
reg [31 : 0] ba3a660;
reg [31 : 0] qtd3303;
reg [31 : 0] hq9981c;
reg [31 : 0] shcc0e2;
reg [8 : 0] uv60714;
reg [31 : 0] bn38a5;
reg [31 : 0] lf1c52e;
reg [31 : 0] cze2977;
reg [31 : 0] ls14bbd;
reg [31 : 0] vxa5dea;
reg [31 : 0] co2ef56;
reg [31 : 0] os77ab1;
reg [31 : 0] hqbd588;
reg [31 : 0] goeac42;
reg [31 : 0] ui56211;
reg [31 : 0] ohb1088;
reg [31 : 0] gq88444;
reg [31 : 0] by42220;
reg [31 : 0] ng11103;
reg [31 : 0] mg8881b;
reg mt23d6;
reg ri206cc;
reg db3663;
reg do1b31f;
reg mrd98fa;
reg gbcc7d4;
reg by63ea4;
reg co1f523;
reg cmfa918;
reg sud48c0;
reg yza4600;
reg gd23005;
reg oh1802c;
reg zkc0165;
reg swb2a;
reg sw5951;
reg ux2ca89;
reg al6544c;
reg vk2a265;
reg ip5132a;
reg zm89955;
reg ay4caab;
reg kd65559;
reg xy2aacd;
reg dz5566b;
reg [2047:0] db22f5b;
wire [102:0] ux17adf;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ENDPOINT_COMP

`else

`endif

`ifdef ECRC

`else

`endif

`ifdef X1

`else

`endif

`ifdef X1

`else

`endif

localparam ribd6fd = 103,jceb7ea = 32'hfdffd88b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`else


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef ENDPOINT_COMP


`else


`endif


`ifdef ECRC


`else


`endif


`ifdef X1


`else


`endif


`ifdef X1


`else


`endif


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      fp27569 <= 1'b0;      fc3ab4e <= 1'b0;      rgd5a72 <= 1'b0;      puad392 <= 1'b0;      ps69c93 <= 1'b0;      mr4e49a <= 1'b0;      ay724d5 <= 1'b0;      co926a9 <= 1'b0;      qgc4ead  <= 14'h0000 ;      zm93548   <= 1'b0;      cb9aa42  <= 1'b0;      hod5215 <= 1'b0;      qia90ab  <= 1'b0;   end   else  begin      fp27569 <= yxf7614;      fc3ab4e <= mt18fd6;      rgd5a72 <= hbc7eb4;      puad392 <= fc3f5a6;      ps69c93 <= uifad33;      mr4e49a <= ipd6998;      ay724d5 <= anb4cc5;      co926a9 <= ohbb0a5;      qgc4ead  <= yxf89d5 ;      zm93548   <= ng894f4;      cb9aa42  <= sjb129e;      hod5215 <= byf4589 ;      qia90ab  <= hqa2c4a ;   end
end


`ifdef X1

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      pu8c2d6 <= 32'h0000_0000;      xj616b2 <= 32'h0000_0000;      xyb597 <= 32'h0000_0000;      nr5acbb <= 32'h0000_0000;   end   else begin      case (1'b1)         yxf7614      : pu8c2d6[31:16] <= wlbeec2;         mt18fd6 : pu8c2d6[15:0]  <= wlbeec2;         hbc7eb4 : xj616b2[31:16] <= wlbeec2;         fc3f5a6 : xj616b2[15:0]  <= wlbeec2;         uifad33 : xyb597[31:16] <= wlbeec2;         ipd6998 : xyb597[15:0]  <= wlbeec2;         anb4cc5 : nr5acbb[31:16] <= wlbeec2;         coa662d : nr5acbb[15:0]  <= wlbeec2;      endcase   end
end

`endif



`ifdef X4

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      pu8c2d6 <= 32'h0000_0000;      xj616b2 <= 32'h0000_0000;      xyb597 <= 32'h0000_0000;      nr5acbb <= 32'h0000_0000;   end   else if (yxf7614) begin      pu8c2d6 <= wlbeec2[63:32];      xj616b2 <= wlbeec2[31:0];   end   else if (mt18fd6) begin      xyb597 <= wlbeec2[63:32];      nr5acbb <= wlbeec2[31:0];   end
end

`endif




always @(hb7ebd9, dz64044) begin   case ({dz64044, hb7ebd9[3:0]})       5'h1_8  : yxf89d5 = 12'h001 ;        5'h1_9  : yxf89d5 = 12'h002 ;        5'h1_A  : yxf89d5 = 12'h004 ;        5'h1_B  : yxf89d5 = 12'h008 ;        5'h1_C  : yxf89d5 = 12'h010 ;        5'h1_D  : yxf89d5 = 12'h020 ;        5'h1_E  : yxf89d5 = 12'h040 ;        5'h1_F  : yxf89d5 = 12'h080 ;        5'h1_0  : yxf89d5 = 12'h100 ;        5'h1_1  : yxf89d5 = 12'h200 ;        5'h1_2  : yxf89d5 = 12'h400 ;        5'h1_3  : yxf89d5 = 12'h800 ;        default : yxf89d5 = 12'h000 ;   endcase
end



assign  hbfc423 = {`USR_EXT_CAP_ADDR, `AER_CAP_VER, 16'h0001} ; 
assign  ipe211e = bn38a5 ;


assign qv29de5 = (byf4589 && ((~mg1f1b8[13] && ~al6544c) || al6544c)) ;
assign uv4ef2c  = (hqa2c4a && ( ~al6544c || al6544c)) ;
assign ic77964     = (bn16253 && ((~mg1f1b8[13] && ~ux2ca89) || ux2ca89)) ;
assign ksbcb20        = (ng894f4 && (~zkc0165 || zkc0165)) ;
assign ice5901       = (sjb129e && ((~mg1f1b8[13] && ~zkc0165) || zkc0165)) ;
assign ep2c808          = (necf4e1 && ((~mg1f1b8[13] && ~zkc0165) || zkc0165)) ;
always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      xw48559 <= 32'd0 ;   else if (bnaf671 && wjd9c77 && yxf89d5[1]) begin      if (gof5ece[4]  && hd94aa4[0]) xw48559[4]  <= 1'b0 ;      if (gof5ece[5]  && hd94aa4[0]) xw48559[5]  <= 1'b0 ;      if (gof5ece[12] && hd94aa4[1]) xw48559[12] <= 1'b0 ;      if (gof5ece[13] && hd94aa4[1]) xw48559[13] <= 1'b0 ;      if (gof5ece[14] && hd94aa4[1]) xw48559[14] <= 1'b0 ;      if (gof5ece[15] && hd94aa4[1]) xw48559[15] <= 1'b0 ;      if (gof5ece[16] && hd94aa4[2]) xw48559[16] <= 1'b0 ;      if (gof5ece[17] && hd94aa4[2]) xw48559[17] <= 1'b0 ;      if (gof5ece[18] && hd94aa4[2]) xw48559[18] <= 1'b0 ;      if (gof5ece[19] && hd94aa4[2]) xw48559[19] <= 1'b0 ;      if (gof5ece[20] && hd94aa4[2]) xw48559[20] <= 1'b0 ;   end   else begin      if (zke449b)      xw48559[4]  <= 1'b1 ;      if (xl9b7a2)   xw48559[5]  <= 1'b1 ;      if (ecb9e9c && ((~mg1f1b8[13] && ~swb2a) || swb2a))                           xw48559[12] <= 1'b1 ;      if (vk936f4)  xw48559[13] <= 1'b1 ;      if (ykde8b1 && ((~mg1f1b8[13] && ~sw5951) || sw5951))                           xw48559[14] <= 1'b1 ;      if (ip5132a ||          zm89955 )                   xw48559[15] <= 1'b1 ;      if (ay4caab) xw48559[16] <= 1'b1 ;      if (osdbd16)      xw48559[17] <= 1'b1 ;


`ifdef X1
      if (kd7a70b && ohbb0a5) xw48559[18] <= 1'b1 ;


`else
      if (kd7a70b) xw48559[18] <= 1'b1 ;


`endif
      if (gd173d3) xw48559[19] <= 1'b1 ;      if (dz5566b  ||  kd65559 ||  xy2aacd )                           xw48559[20] <= 1'b1 ;   end
end
assign co108f4 = {11'h000, bl450f8[20:12], 6'd0, bl450f8[5:4], 4'd0} ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      ho42aca <= 32'd0 ;   else if (bnaf671 && wjd9c77 && yxf89d5[2]) begin


`ifdef ENDPOINT_COMP
         if (hd94aa4[0]) ho42aca[4]   <= gof5ece[4] ;


`else
         if (hd94aa4[0]) ho42aca[5:4]   <= gof5ece[5:4] ;


`endif
      if (hd94aa4[1]) ho42aca[15:12] <= gof5ece[15:12] ;      if (hd94aa4[2]) ho42aca[20:16] <= gof5ece[20:16] ;   end
end
assign bn847a0 = {11'h000, lf287c6[20:12], 6'd0, lf287c6[5:4], 4'd0};

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin


`ifdef ENDPOINT_COMP
         vxc185 <= 32'h0006_2010 ;


`else
         vxc185 <= 32'h0006_2030 ;


`endif
   end   else if (bnaf671 && wjd9c77 && yxf89d5[3]) begin


`ifdef ENDPOINT_COMP
         if (hd94aa4[0]) vxc185[4]   <= gof5ece[4] ;


`else
         if (hd94aa4[0]) vxc185[5:4]   <= gof5ece[5:4] ;


`endif
      if (hd94aa4[1]) vxc185[15:12] <= gof5ece[15:12] ;      if (hd94aa4[2]) vxc185[20:16] <= gof5ece[20:16] ;   end
end
assign kf23d06 = {11'h000, vxc185[20:12], 6'd0, vxc185[5:4], 4'd0};

always @(posedge sys_clk, negedge rst_n) begin   if ( !rst_n )      ec15652 <= 32'd0 ;   else if (!db81c22)      ec15652 <= 32'd0 ;   else if (bnaf671 && wjd9c77 && yxf89d5[4]) begin      if (gof5ece[0]  && hd94aa4[0]) ec15652[0]  <= 1'b0 ;      if (gof5ece[6]  && hd94aa4[0]) ec15652[6]  <= 1'b0 ;      if (gof5ece[7]  && hd94aa4[0]) ec15652[7]  <= 1'b0 ;      if (gof5ece[8]  && hd94aa4[1]) ec15652[8]  <= 1'b0 ;      if (gof5ece[12] && hd94aa4[1]) ec15652[12] <= 1'b0 ;      if (gof5ece[13] && hd94aa4[1]) ec15652[13] <= 1'b0 ;   end   else begin      if (xwe4be4)      ec15652[0]  <= 1'b1 ;      if (ng2f912)   ec15652[6]  <= 1'b1 ;      if (zk7c893)  ec15652[7]  <= 1'b1 ;      if (ph224db) ec15652[8]  <= 1'b1 ;      if (ir126de) ec15652[12] <= 1'b1 ;      if (mt23d6)    ec15652[13] <= 1'b1 ;   end
end
assign xy1e835 = {18'd0, ic43e37[13:12], 3'd0, ic43e37[8:6], 5'd0, ic43e37[0]} ;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      uxab291 <= 32'h0000_2000 ;   else if (!db81c22)      uxab291 <= 32'h0000_2000 ;   else if (bnaf671 && wjd9c77 && yxf89d5[5]) begin      if (hd94aa4[0]) uxab291[0]     <= gof5ece[0] ;      if (hd94aa4[0]) uxab291[7:6]   <= gof5ece[7:6] ;      if (hd94aa4[1]) uxab291[8]     <= gof5ece[8] ;      if (hd94aa4[1]) uxab291[13:12] <= gof5ece[13:12] ;   end
end
assign tuf41ab = {18'd0, mg1f1b8[13:12], 3'd0, mg1f1b8[8:6], 5'd0, mg1f1b8[0]} ;


always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      rv9185a <= 1'b0 ;   else      rv9185a <= jr3702c ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      yk5948c         <= 5'd1 ;      byca461     <= 32'd0 ;      rg5230b <= 1'b0 ;   end   else if (|enc6e05[20:4] == 1'b0 ) begin      case (1'b1)         (bl450f8[20] & ~lf287c6[20])   : begin            yk5948c <= 5'd20 ;            byca461[20] <= 1'b1 ;            rg5230b <= 1'b1 ;         end         (bl450f8[19] & ~lf287c6[19])   : begin            yk5948c <= 5'd19 ;            byca461[19] <= 1'b1 ;            rg5230b <= 1'b1 ;         end         (bl450f8[18] & ~lf287c6[18])   : begin            yk5948c <= 5'd18 ;            byca461[18] <= 1'b1 ;            rg5230b <= 1'b1 ;         end         (bl450f8[17] & ~lf287c6[17])   : begin            yk5948c <= 5'd17 ;            byca461[17] <= 1'b1 ;         end         (bl450f8[16] & ~lf287c6[16])   : begin            yk5948c <= 5'd16 ;            byca461[16] <= 1'b1 ;            rg5230b <= 1'b1 ;         end         (bl450f8[15] & ~lf287c6[15])   : begin            yk5948c <= 5'd15 ;            byca461[15] <= 1'b1 ;            rg5230b <= 1'b1 ;         end         (bl450f8[14] & ~lf287c6[14])   : begin            yk5948c <= 5'd14 ;            byca461[14] <= 1'b1 ;         end         (bl450f8[13] & ~lf287c6[13])   : begin            yk5948c <= 5'd13 ;            byca461[13] <= 1'b1 ;         end         (bl450f8[12] & ~lf287c6[12])   : begin            yk5948c <= 5'd12 ;            byca461[12] <= 1'b1 ;            rg5230b <= 1'b1 ;         end         (bl450f8[5] & ~lf287c6[5])   : begin            yk5948c <= 5'd5 ;            byca461[5] <= 1'b1 ;         end         (bl450f8[4] & ~lf287c6[4])   : begin            yk5948c <= 5'd4 ;            byca461[4] <= 1'b1 ;         end         default            : begin            yk5948c <= 5'd1 ;            byca461[1] <= 1'b1 ;         end      endcase   end   else if (|enc6e05[20:4] == 1'b1 ) begin      case (1'b1)         (!bl450f8[20] & enc6e05[20])   : begin            yk5948c <= 5'd1 ;            byca461[20] <= 1'b0 ;            rg5230b <= 1'b0 ;         end         (!bl450f8[19] & enc6e05[19]) : begin            yk5948c <= 5'd1 ;            byca461[19] <= 1'b0 ;            rg5230b <= 1'b0 ;         end         (!bl450f8[18] & enc6e05[18]) : begin            yk5948c <= 5'd1 ;            byca461[18] <= 1'b0 ;            rg5230b <= 1'b0 ;         end         (!bl450f8[17] & enc6e05[17])      : begin            yk5948c <= 5'd1 ;            byca461[17] <= 1'b0 ;         end         (!bl450f8[16] & enc6e05[16])     : begin            yk5948c <= 5'd1 ;            byca461[16] <= 1'b0 ;            rg5230b <= 1'b0 ;         end         (!bl450f8[15] & enc6e05[15])    : begin            yk5948c <= 5'd1 ;            byca461[15] <= 1'b0 ;            rg5230b <= 1'b0 ;         end         (!bl450f8[14] & enc6e05[14])      : begin            yk5948c <= 5'd1 ;            byca461[14] <= 1'b0 ;         end         (!bl450f8[13] & enc6e05[13])  : begin            yk5948c <= 5'd1 ;            byca461[13] <= 1'b0 ;         end         (!bl450f8[12] & enc6e05[12]) : begin            yk5948c <= 5'd1 ;            byca461[12] <= 1'b0 ;            rg5230b <= 1'b0 ;         end         (!bl450f8[5] & enc6e05[5])   : begin            yk5948c <= 5'd1 ;            byca461[5] <= 1'b0 ;         end         (!bl450f8[4] & enc6e05[4])      : begin            yk5948c <= 5'd1 ;            byca461[4] <= 1'b0 ;         end         default            : begin            yk5948c         <= gbf8dc0 ;            byca461     <= enc6e05 ;            rg5230b <= jr3702c ;         end      endcase   end
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      fadf884 <= 9'd0 ;   else if (bnaf671 && wjd9c77 && yxf89d5[6]) begin      fadf884[6] <= gof5ece[6] ;      fadf884[8] <= gof5ece[8] ;   end   else      fadf884 <= uv60714 ;
end

`ifdef ECRC
   assign xla0d5a = {23'd0, uv60714[8], 1'b1, uv60714[6], 1'b1, gbf8dc0} ;

`else
   assign xla0d5a = {23'd0, uv60714[8], 1'b0, uv60714[6], 1'b0, gbf8dc0} ;

`endif

assign pcie_x1_ecrc_gen_enb = uv60714[6] ;
assign pcie_x1_ecrc_chk_enb = uv60714[8] ;



`ifdef X1
   assign yx7fd0e = ((ohbb0a5 && !jr3702c) || (ir33168 && !xyb8167));

`else
   assign yx7fd0e = (ohbb0a5 && !jr3702c);

`endif

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      shd65df <= 32'd0 ;      xyb2efc <= 32'd0 ;      aa977e2 <= 32'd0 ;      kfbbf10 <= 32'd0 ;   end   else if (!jr3702c &&            ((ip5132a & ~lf287c6[15]) ||             (zm89955 & ~lf287c6[15]) ||             (ay4caab & ~lf287c6[16]) ||             (kd65559 & ~lf287c6[20]) ||     (xy2aacd & ~lf287c6[20]))) begin      shd65df <= ld7e5b5[127:96] ;      xyb2efc <= ld7e5b5[95:64] ;      aa977e2 <= ld7e5b5[63:32] ;      kfbbf10 <= ld7e5b5[31:0] ;   end   else if (yx7fd0e &&    (gd23005 || mrd98fa  ||            (oh1802c && !kd65559 && !xy2aacd)  || yza4600 )) begin      shd65df <= fac0b3a ;      xyb2efc <= sw59d3 ;      if (mt18fd6) begin


`ifdef X1
         aa977e2 <= ux2ce99 ;         kfbbf10 <= yk674cc ;


`else
         aa977e2 <= wlbeec2[63:32] ;         kfbbf10 <= wlbeec2[31:0] ;


`endif
      end      else begin         aa977e2 <= ux2ce99 ;         kfbbf10 <= yk674cc ;      end   end
end
assign vx6ad6 = ba3a660 ;
assign ng356b6 = qtd3303 ;
assign anab5b2 = hq9981c ;
assign xj5ad94 = shcc0e2 ;

always @(*) begin   case (1'b1)      jpe31fa[0]  : hoc0613 = lf1c52e ;      jpe31fa[1]  : hoc0613 = cze2977 ;      jpe31fa[2]  : hoc0613 = ls14bbd ;      jpe31fa[3]  : hoc0613 = vxa5dea ;      jpe31fa[4]  : hoc0613 = co2ef56 ;      jpe31fa[5]  : hoc0613 = os77ab1 ;      jpe31fa[6]  : hoc0613 = hqbd588 ;      jpe31fa[7]  : hoc0613 = goeac42 ;      jpe31fa[8]  : hoc0613 = ui56211 ;      jpe31fa[9]  : hoc0613 = ohb1088 ;      jpe31fa[10] : hoc0613 = gq88444 ;      jpe31fa[11] : hoc0613 = by42220 ;      default           : hoc0613 = 32'd0 ;   endcase
end


assign vx3d2b3      = zke449b                                    & ~lf287c6[4] ;
assign rte959e   = xl9b7a2                                 & ~lf287c6[5] ;
assign hb4acf7 = (ecb9e9c &                     ((~mg1f1b8[13] & ~swb2a) |      swb2a))                       & ~lf287c6[12] ;
assign ic567be  = vk936f4                                & ~lf287c6[13] ;
assign ukb3df0      = (ykde8b1 &&                     ((~mg1f1b8[13] & ~sw5951) |      sw5951))                            & ~lf287c6[14] ;
assign fp9ef80    = (ip5132a | zm89955 )   & ~lf287c6[15] ;
assign gbf7c07     = ay4caab                               & ~lf287c6[16] ;
assign wlbe03c      = osdbd16                                    & ~lf287c6[17] ;
assign ayf01e5 = (kd7a70b & ohbb0a5)                & ~lf287c6[18] ;
assign an80f28 = gd173d3                               & ~lf287c6[19] ;
assign gd7945   = (dz5566b  | kd65559 | xy2aacd ) & ~lf287c6[20] ;

assign wl17251      = vxc185[4] ;
assign uvc9460   = vxc185[5] ;
assign qge5165 = vxc185[12] ;
assign gb609e2  = vxc185[13] ;
assign vx28b29      = vxc185[14] ;
assign an2ca77    = vxc185[15] ;
assign jp4594e     = vxc185[16] ;
assign dzfcac9      = vxc185[17] ;
assign aa2b279 = vxc185[18] ;
assign wjc9e41 = vxc185[19] ;
assign yz3ca2c   = vxc185[20] ;


assign kd41bd6      = xwe4be4      & ~mg1f1b8[0] ;
assign qt7ad6c   = ng2f912   & ~mg1f1b8[6] ;
assign riad92f  = zk7c893  & ~mg1f1b8[7] ;
assign fc25e96 = ph224db & ~mg1f1b8[8] ;
assign ldd2c95 = ir126de & ~mg1f1b8[12] ;
assign mg92bd3    = mt23d6    & ~mg1f1b8[13] ;


assign rva0f8e = (necf4e1   & ~zkc0165)   |                     (sjb129e       & ~zkc0165)   |                     (byf4589 & ~al6544c) |                     (ecb9e9c & ~swb2a) |                     (ykde8b1      & ~sw5951)      |                     (bn16253     & ~ux2ca89)     ;
assign doa7a56 = (~lf287c6[20]   & (xy2aacd || dz5566b) & ~zkc0165 & yx6fcb6[3])   |                      (~lf287c6[15]     & ip5132a & ~al6544c)    |                      (mrd98fa & ~swb2a) |                      (by63ea4      & ~sw5951)      |                      (cmfa918     & ~ux2ca89)     ;


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ftl_err_out  <= 1'd0 ;      nftl_err_out <= 1'd0 ;      cor_err_out  <= 1'd0 ;   end   else begin      ftl_err_out <=                 (((db3663      & wl17251)      |                   (do1b31f   & uvc9460)   |                   (mrd98fa & swb2a) |                   (gbcc7d4  & gb609e2)  |                   (by63ea4      & sw5951)      |                   (co1f523    & al6544c)    |                   (cmfa918     & ux2ca89)     |                   (sud48c0      & dzfcac9)      |                   (yza4600 & aa2b279) |                   (gd23005 & wjc9e41) |                   (oh1802c   & zkc0165 & yx6fcb6[3])                  ) & (yx6fcb6[2] | kdd385d)                 ) ;      nftl_err_out <=                  (((db3663      & ~wl17251)      |                    (do1b31f   & ~uvc9460)   |                    (gbcc7d4  & ~gb609e2)  |                    (sud48c0      & ~dzfcac9)      |                    (yza4600 & ~aa2b279) |                    (gd23005 & ~wjc9e41) |                    (co1f523    & ui68a1f & ~wjc9e41) |                    (oh1802c   & ng894f4 & ~zkc0165 & yx6fcb6[3])                   ) & (yx6fcb6[1] | kdd385d)                  ) ;      cor_err_out <=                 ((kd41bd6      |                   qt7ad6c   |                   riad92f  |                   fc25e96 |                   ldd2c95 |                   (ri206cc & ~mg1f1b8[13])                  ) & yx6fcb6[0]                 ) ;   end
end


always@* begin dz64044<=ux17adf[0];hb7ebd9<={reg_addr>>1,ux17adf[1]};gof5ece<={reg_wdata>>1,ux17adf[2]};hd94aa4<={reg_wdata_be>>1,ux17adf[3]};bnaf671<=ux17adf[4];fn7b38e<=ux17adf[5];wjd9c77<=ux17adf[6];db81c22<=ux17adf[7];xwe4be4<=ux17adf[8];ng2f912<=ux17adf[9];zk7c893<=ux17adf[10];zke449b<=ux17adf[11];ph224db<=ux17adf[12];ir126de<=ux17adf[13];vk936f4<=ux17adf[14];xl9b7a2<=ux17adf[15];osdbd16<=ux17adf[16];wlbeec2<={tlpdec_data>>1,ux17adf[17]};yxf7614<=ux17adf[18];ohbb0a5<=ux17adf[19];gd173d3<=ux17adf[20];ecb9e9c<=ux17adf[21];necf4e1<=ux17adf[22];kd7a70b<=ux17adf[23];kdd385d<=ux17adf[24];yx6fcb6<={me460cd>>1,ux17adf[25]};ld7e5b5<={err_tlp_header>>1,ux17adf[26]};ykde8b1<=ux17adf[27];byf4589<=ux17adf[28];hqa2c4a<=ux17adf[29];bn16253<=ux17adf[30];sjb129e<=ux17adf[31];ng894f4<=ux17adf[32];jpe31fa<={qgc4ead>>1,ux17adf[33]};mt18fd6<=ux17adf[34];hbc7eb4<=ux17adf[35];fc3f5a6<=ux17adf[36];uifad33<=ux17adf[37];ipd6998<=ux17adf[38];anb4cc5<=ux17adf[39];coa662d<=ux17adf[40];ir33168<=ux17adf[41];ou98b45<=ux17adf[42];vic5a28<=ux17adf[43];tj2d143<=ux17adf[44];ui68a1f<=ux17adf[45];bl450f8<={xw48559>>1,ux17adf[46]};lf287c6<={ho42aca>>1,ux17adf[47]};ic43e37<={ec15652>>1,ux17adf[48]};mg1f1b8<={uxab291>>1,ux17adf[49]};gbf8dc0<={yk5948c>>1,ux17adf[50]};enc6e05<={byca461>>1,ux17adf[51]};jr3702c<=ux17adf[52];xyb8167<=ux17adf[53];fac0b3a<={pu8c2d6>>1,ux17adf[54]};sw59d3<={xj616b2>>1,ux17adf[55]};ux2ce99<={xyb597>>1,ux17adf[56]};yk674cc<={nr5acbb>>1,ux17adf[57]};ba3a660<={shd65df>>1,ux17adf[58]};qtd3303<={xyb2efc>>1,ux17adf[59]};hq9981c<={aa977e2>>1,ux17adf[60]};shcc0e2<={kfbbf10>>1,ux17adf[61]};uv60714<={fadf884>>1,ux17adf[62]};bn38a5<={hbfc423>>1,ux17adf[63]};lf1c52e<={ipe211e>>1,ux17adf[64]};cze2977<={co108f4>>1,ux17adf[65]};ls14bbd<={bn847a0>>1,ux17adf[66]};vxa5dea<={kf23d06>>1,ux17adf[67]};co2ef56<={xy1e835>>1,ux17adf[68]};os77ab1<={tuf41ab>>1,ux17adf[69]};hqbd588<={xla0d5a>>1,ux17adf[70]};goeac42<={vx6ad6>>1,ux17adf[71]};ui56211<={ng356b6>>1,ux17adf[72]};ohb1088<={anab5b2>>1,ux17adf[73]};gq88444<={xj5ad94>>1,ux17adf[74]};by42220<={uvd6ca7>>1,ux17adf[75]};ng11103<={qib653d>>1,ux17adf[76]};mg8881b<={bab29e9>>1,ux17adf[77]};mt23d6<=ux17adf[78];ri206cc<=ux17adf[79];db3663<=ux17adf[80];do1b31f<=ux17adf[81];mrd98fa<=ux17adf[82];gbcc7d4<=ux17adf[83];by63ea4<=ux17adf[84];co1f523<=ux17adf[85];cmfa918<=ux17adf[86];sud48c0<=ux17adf[87];yza4600<=ux17adf[88];gd23005<=ux17adf[89];oh1802c<=ux17adf[90];zkc0165<=ux17adf[91];swb2a<=ux17adf[92];sw5951<=ux17adf[93];ux2ca89<=ux17adf[94];al6544c<=ux17adf[95];vk2a265<=ux17adf[96];ip5132a<=ux17adf[97];zm89955<=ux17adf[98];ay4caab<=ux17adf[99];kd65559<=ux17adf[100];xy2aacd<=ux17adf[101];dz5566b<=ux17adf[102];end
always@* begin db22f5b[2047]<=reg_addr[0];db22f5b[2046]<=reg_wdata[0];db22f5b[2045]<=uvd6ca7[0];db22f5b[2044]<=reg_wdata_be[0];db22f5b[2042]<=qib653d[0];db22f5b[2040]<=reg_wr;db22f5b[2036]<=bab29e9[0];db22f5b[2032]<=reg_rd;db22f5b[2025]<=rva0f8e;db22f5b[2017]<=pcie_x1_ecrc_ok;db22f5b[2002]<=doa7a56;db22f5b[1992]<=jcd0fbd;db22f5b[1987]<=phy_link_up;db22f5b[1957]<=vx3d2b3;db22f5b[1947]<=jp4594e;db22f5b[1936]<=tlpdec_data[0];db22f5b[1927]<=dfrm_perr;db22f5b[1919]<=vx6ad6[0];db22f5b[1913]<=gd7945;db22f5b[1873]<=rgd5a72;db22f5b[1867]<=rte959e;db22f5b[1851]<=bn847a0[0];db22f5b[1849]<=kfbbf10[0];db22f5b[1847]<=rv9185a;db22f5b[1846]<=an2ca77;db22f5b[1825]<=tlpdec_st;db22f5b[1807]<=rxtp_bad_tlp;db22f5b[1791]<=ng356b6[0];db22f5b[1779]<=yz3ca2c;db22f5b[1767]<=shd65df[0];db22f5b[1733]<=ksbcb20;db22f5b[1698]<=puad392;db22f5b[1687]<=hb4acf7;db22f5b[1655]<=kf23d06[0];db22f5b[1651]<=fadf884[0];db22f5b[1646]<=pu8c2d6[0];db22f5b[1644]<=wj653bc;db22f5b[1602]<=tlpdec_end;db22f5b[1567]<=do3aee2;db22f5b[1535]<=anab5b2[0];db22f5b[1510]<=qge5165;db22f5b[1502]<=ayf01e5;db22f5b[1486]<=xyb2efc[0];db22f5b[1418]<=ice5901;db22f5b[1348]<=ps69c93;db22f5b[1326]<=ic567be;db22f5b[1296]<=ay724d5;db22f5b[1287]<=cmpltr_abort_np;db22f5b[1263]<=xy1e835[0];db22f5b[1255]<=hbfc423[0];db22f5b[1244]<=xj616b2[0];db22f5b[1240]<=qv29de5;db22f5b[1211]<=fp9ef80;db22f5b[1157]<=tlpdec_pcie_x1_ecrc_err;db22f5b[1088]<=zm93548;db22f5b[1086]<=uvfd0f9;db22f5b[1064]<=tlpdec_malf_tlp;db22f5b[1053]<=unexp_cmpln;db22f5b[1038]<=xw48559[0];db22f5b[1023]<=reg_sel_aer;db22f5b[1022]<=xj5ad94[0];db22f5b[996]<=kd7a1f7;db22f5b[973]<=vx28b29;db22f5b[959]<=xla0d5a[0];db22f5b[956]<=an80f28;db22f5b[936]<=fc3ab4e;db22f5b[925]<=co108f4[0];db22f5b[924]<=aa977e2[0];db22f5b[923]<=rg5230b;db22f5b[883]<=nr5acbb[0];db22f5b[866]<=ic77964;db22f5b[788]<=ep2c808;db22f5b[751]<=wlbe03c;db22f5b[648]<=mr4e49a;db22f5b[643]<=cmpln_tout;db22f5b[605]<=ukb3df0;db22f5b[544]<=co926a9;db22f5b[532]<=tlpdec_us_req;db22f5b[526]<=cmpltr_abort_p;db22f5b[519]<=qia90ab;db22f5b[498]<=nr4f43e;db22f5b[479]<=tuf41ab[0];db22f5b[468]<=fp27569;db22f5b[462]<=ipe211e[0];db22f5b[461]<=byca461[0];db22f5b[441]<=xyb597[0];db22f5b[433]<=uv4ef2c;db22f5b[375]<=gbf7c07;db22f5b[321]<=err_tlp_header[0];db22f5b[266]<=tlpdec_pois_tlp;db22f5b[259]<=hod5215;db22f5b[249]<=zkda02d;db22f5b[234]<=qgc4ead[0];db22f5b[230]<=yk5948c[0];db22f5b[160]<=me460cd[0];db22f5b[129]<=cb9aa42;db22f5b[124]<=ipedf31;db22f5b[117]<=ur_p_ext;db22f5b[115]<=uxab291[0];db22f5b[80]<=mt80c46;db22f5b[58]<=ur_np_ext;db22f5b[57]<=ec15652[0];db22f5b[28]<=ho42aca[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_pf7e44a #(
   parameter D_WIDTH  = 64 )
   (
   
   
   input wire [31:0]      yk7dd7f , 
   input wire [31:0]      rgeebf9 , 
   input wire [31:0]      gb75fcb ,
   input wire [31:0]      bnafe5d , 
   input wire [31:0]      ip7f2ef , 
   input wire [31:0]      vvf977d , 
   input wire [31:0]      oscbbee , 
   input wire [31:0]      ne5df70 , 
   input wire [31:0]      meefb82 , 
   input wire [31:0]      qg7dc11 , 
   input wire [31:0]      faee089 , 
   input wire [31:0]      kd7044a , 
   input wire [31:0]      aa82254 , 
   input wire             load_id ,            
   
   input wire [31:0]      ph2d142 , 
   input wire [31:0]      os68a17 , 
   input wire [9:0]       fn450b8 , 
   input wire [9:0]       rv285c6 , 
   input wire [9:0]       fa42e37 , 
   input wire [9:0]       qv171ba , 
   input wire [9:0]       hqb8dd4 , 
   input wire [9:0]       mrc6ea3 , 
   input wire [9:0]       vx3751c , 
   input wire [9:0]       rvba8e7 , 
   
   input wire [31:0]      icd473e , 
   
   input wire [31:0]      alc3d44 , 
   input wire [31:0]      ba1ea24 , 
   input wire [31:0]      ykf5123 , 
   input wire [31:0]      jea8918 ,
   `ifdef GEN2
      input wire [31:0]   qt448c2 , 
   `endif
   
   input wire [31:0]      kfbb8eb , 
   input wire [31:0]      gbdc75c , 

   
   `ifdef CFG_VCC
      input wire [31:0]      jra58e0 , 
   `endif

   input wire                 sys_clk ,         
   input wire                 rst_n ,           

   input wire [D_WIDTH-1:0]   tlp_data ,        
   input wire                 tlp_st ,          
   input wire                 tlp_end ,         
   input wire                 tlp_erly_st ,     
   input wire [7:0]           tx_ca_cplh ,      
   input wire                 tx_ca_cplh_infi , 

   
   input wire                 phy_link_up ,     
   input wire                 sh60c2e ,   
   input wire                 hd6174 ,
   input wire [2:0]           je30ba7 ,       
   input wire                 dfrm_perr ,       
   input wire                 dl_active ,       


   
   input wire                 rxtp_bad_tlp,    
   input wire                 do3aee2,   
   input wire                 uvfd0f9,      
   input wire                 ipedf31,  
   input wire                 zkda02d , 
   input wire                 nr4f43e , 
   input wire                 jcd0fbd ,     
   input wire                 kd7a1f7 ,  
   `ifdef CFG_VCC
      input wire [`NUM_VC -1:0]  yxc6575 ,
   `endif

   `ifdef ECRC
      input wire              tlp_pcie_x1_ecrc_ok ,    
      `ifdef AER
         output wire          pcie_x1_ecrc_gen_enb ,   
         output wire          pcie_x1_ecrc_chk_enb ,   
      `else
         input wire           pcie_x1_ecrc_gen_enb ,   
         input wire           pcie_x1_ecrc_chk_enb ,   
      `endif
   `endif

   
   `ifdef AER
      input wire [127:0]      err_tlp_header , 
                                               
   `endif
   input wire [15:0]          wwef7fd ,     
   input wire                 cmpln_tout ,     
   input wire                 cmpltr_abort_np ,
   input wire                 cmpltr_abort_p , 
   input wire                 unexp_cmpln ,    
   input wire                 ur_np_ext ,      
   input wire                 ur_p_ext ,       
   input wire                 np_req_pend ,    
   input wire                 pme_status ,     
   input wire                 tj221ea,  
   input wire                 mg10f56,    
   input wire                 aa87ab0,    
   `ifdef GEN2
      input wire              sh41830 ,            
      input wire              drop_resp ,      
   `endif
   
   input wire                 term_all_cfg ,   

   
   input wire                 cfg_rmux_rd ,    

   
   input wire [D_WIDTH-1:0]   tlpdec_data ,
   input wire                 tlpdec_st ,
   input wire                 tlpdec_end ,
   input wire                 tlpdec_pcie_x1_ecrc_err , 
   input wire                 tlpdec_pois_tlp , 
   input wire                 tlpdec_us_req ,   
   input wire                 tlpdec_malf_tlp , 
   input wire                 s2e_cnt_err ,     

   
   input wire [11:0]          ADR_I ,          
   input wire [31:0]          DAT_I ,          
   input wire                 WE_I ,           
   input wire                 STB_I ,          

   output wire [31:0]         RDAT_O ,         
   output wire                ACK_O ,          

   
   output wire [31:0]         rt7bfe8 ,         
   output wire [31:0]         jcdff46 ,         
   output wire [31:0]         kqffa33 ,         
   output wire [31:0]         gbfd198 ,         
   output wire [31:0]         ale8cc4 ,         
   output wire [31:0]         ui46624 ,         
   output wire [31:0]         kf33121 ,         

   output wire [31:0]         ykfae93 ,     
   output wire [31:0]         pfd7498 ,     
   output wire [31:0]         bnba4c6 ,     
   output wire [31:0]         rtd2637 ,     
   output wire [31:0]         pu931be ,     
   output wire [31:0]         ym98df2 ,     
   output wire [31:0]         yxc6f90 ,     
   output wire                cfg_hit ,         
   output wire                nph_processed ,   
   output wire                npd_processed ,   

   output wire [7:0]          bus_num ,         
   output wire [4:0]          dev_num ,         
   output wire [2:0]          func_num ,        
   output wire [1:0]          pm_power_state ,  
   output wire                pme_en ,          
   output wire [2:0]          mm_enable ,       
   output wire                msi_enable ,      
   output wire [31:0]         mes_laddr ,       
   output wire [31:0]         mes_uaddr ,       
   output wire [15:0]         mes_data ,        
   output wire [5:0]          cmd_reg_out ,     
   output wire [14:0]         dev_cntl_out ,    
   output wire [7:0]          lnk_cntl_out ,    
   output wire                ftl_err_out ,     
   output wire                nftl_err_out ,    
   output wire                cor_err_out ,     
   `ifdef GEN2
      output wire [4:0]       dev_cntl_2_out ,  
      output wire             initiate_flr ,    
   `endif

   output wire [2:0]          sj8780 ,    
   output wire                su43c04 ,      
   output wire                pu1e020 ,    
   output wire                cmf0102 ,     
   output wire [2:0]          cfgcs_losel ,     

   `ifdef CFG_VCC 
      output wire [2:0]          rv32bad ,   
      output wire [2:0]          gd95d6e , 
      output wire                gdaeb74 ,  
      output wire [2:0]          cfgec_vcasel , 
      `ifdef EN_VC0
         output wire [7:0]       xyadd2d ,    
         output wire [2:0]       zx6e96a ,    
         output wire             th74b57 ,   
      `endif
      `ifdef EN_VC1
         output wire [7:0]       bna5abf ,    
         output wire [2:0]       bn2d5fe ,    
         output wire             ip6aff7 ,   
      `endif
      `ifdef EN_VC2
         output wire [7:0]       lq57fbd ,    
         output wire [2:0]       zzbfdeb ,    
         output wire             vifef5e ,   
      `endif
      `ifdef EN_VC3
         output wire [7:0]       qtf7af2 ,    
         output wire [2:0]       xybd794 ,    
         output wire             faebca2 ,   
      `endif
      `ifdef EN_VC4
         output wire [7:0]       of5e513 ,    
         output wire [2:0]       wjf289c ,    
         output wire             vx944e4 ,   
      `endif
      `ifdef EN_VC5
         output wire [7:0]       zma2727 ,    
         output wire [2:0]       lf1393a ,    
         output wire             xy9c9d7 ,   
      `endif
      `ifdef EN_VC6
         output wire [7:0]       pse4eba ,    
         output wire [2:0]       jr275d2 ,    
         output wire             ls3ae96 ,   
      `endif
      `ifdef EN_VC7
         output wire [7:0]       pfd74b2 ,    
         output wire [2:0]       bnba596 ,    
         output wire             rtd2cb7 ,   
      `endif
   `endif

   output wire                cfg_rmux_req ,    
   output wire [D_WIDTH-1:0]  cfg_rmux_data ,   
   `ifdef X4
      output wire             sud11c1 ,   
   `endif
   output wire                cfg_rmux_ae          ) ;
reg           jc47049 ;
reg           bn3824b ;
reg           kqc125e ;
reg           ps580c2 ;
wire [5:0]    reg_addr ;
wire [31:0]   reg_wdata ;
wire [3:0]    reg_wdata_be ;
wire [15:0]   req_id ;
wire          reg_id_hit;
wire [7:0]    tag ;
wire [2:0]    tc ;
wire [31:0]   reg_rdata0 ;
wire [31:0]   reg_rdata1 ;
wire [31:0]   reg_rdata2 ;
wire [31:0]   reg_rdata3 ;
wire [31:0]   reg_rdata4 ;
wire [31:0]   reg_rdata5 ;
wire          kdc9756 ;
wire          us_req_int ;
wire [31:0]   vxc185 ;
wire          wwead23 ;
wire          su56919 ;
wire          cbb48c9 ;
wire          uxa464d ;
wire          an2326d ;
wire          tj1936c ;

`ifdef AER

`else

`endif

`ifdef X4

`define CFG_DEC cfg_dec1

`define CFG_RESP cfg_resp

`endif

`ifdef X1

`define CFG_DEC pcie_x1_cfg_dec1_x1

`define CFG_RESP pcie_x1_cfg_resp_x1

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef AER

`else

`endif

`ifdef CFG_VCC

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif 

`ifdef AER 

`endif 

`ifdef GEN2

`endif

`ifdef CFG_VCC 

`else 

`endif 

`ifdef AER 

`else 

`endif 

`ifdef ECRC

`endif

`ifdef X4 

`endif
reg [31 : 0] yx416d9;
reg [31 : 0] lsb6cc;
reg [31 : 0] uv5b663;
reg [31 : 0] qgdb31c;
reg [31 : 0] mrd98e0;
reg [31 : 0] gbcc704;
reg [31 : 0] by63824;
reg [31 : 0] fp1c123;
reg [31 : 0] eae091f;
reg [31 : 0] xy48f8;
reg [31 : 0] gq247c3;
reg [31 : 0] sj23e19;
reg [31 : 0] ie1f0cd;
reg ec218d0;
reg [31 : 0] rv8484d;
reg [31 : 0] ks2426f;
reg [9 : 0] wy21379;
reg [9 : 0] rv9bc9;
reg [9 : 0] ps4de4f;
reg [9 : 0] al6f27b;
reg [9 : 0] vi793dc;
reg [9 : 0] qtc9ee2;
reg [9 : 0] jp4f715;
reg [9 : 0] fn7b8af;
reg [31 : 0] shdc57e;
reg [31 : 0] zz8ed0b;
reg [31 : 0] xw7685e;
reg [31 : 0] cbb42f2;
reg [31 : 0] qva1794;
reg [31 : 0] pfd7bf5;
reg [31 : 0] dobdfaf;
reg [D_WIDTH - 1 : 0] ose0489;
reg ep2449;
reg mt1224d;
reg db9126c;
reg [7 : 0] rvc86c;
reg rt64367;
reg db81c22;
reg zz37725;
reg wlbb92f;
reg [2 : 0] yxdc97c;
reg xwe4be4;
reg tw25f22;
reg ng2f912;
reg zk7c893;
reg zke449b;
reg ph224db;
reg ir126de;
reg vk936f4;
reg osdbd16;
reg xl9b7a2;
reg [15 : 0] an8545f;
reg ykde8b1;
reg byf4589;
reg hqa2c4a;
reg bn16253;
reg sjb129e;
reg ng894f4;
reg hb4a7a2;
reg nef1611;
reg hd9e8b9;
reg vif45cf;
reg lsa2e7a;
reg os49b3a;
reg qva190d;
reg [D_WIDTH - 1 : 0] wlbeec2;
reg yxf7614;
reg ohbb0a5;
reg gd173d3;
reg ecb9e9c;
reg necf4e1;
reg kd7a70b;
reg yz36907;
reg [11 : 0] rg4d9d1;
reg [31 : 0] ps6ce8b;
reg kq6745a;
reg tw3a2d0;
reg mt3cb54;
reg yke5aa5;
reg goce3bc;
reg [5 : 0] hb7ebd9;
reg [31 : 0] gof5ece;
reg [3 : 0] hd94aa4;
reg [15 : 0] qt41621;
reg kd7faa1;
reg [7 : 0] zmb10c;
reg [2 : 0] by58863;
reg [31 : 0] zzc680;
reg [31 : 0] xw63406;
reg [31 : 0] sw1a032;
reg [31 : 0] byd0190;
reg [31 : 0] wl80c83;
reg [31 : 0] bn641d;
reg vk8986a;
reg ui4c353;
reg [31 : 0] ld61a98;
reg cbd4c6;
reg wj6a634;
reg os531a4;
reg qi98d20;
reg mrc6900;
reg sw34804;
reg [2047:0] db22f5b;
wire [101:0] ux17adf;

`ifdef AER

`else

`endif

`ifdef X4

`define CFG_DEC cfg_dec1

`define CFG_RESP cfg_resp

`endif

`ifdef X1

`define CFG_DEC pcie_x1_cfg_dec1_x1

`define CFG_RESP pcie_x1_cfg_resp_x1

`endif


`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef AER

`endif


`ifdef GEN2

`endif


`ifdef GEN2

`endif


`ifdef GEN2

`endif

`ifdef GEN2

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef AER

`else

`endif


`ifdef CFG_VCC


`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif 

`ifdef AER 


`endif 


`ifdef GEN2

`endif

`ifdef CFG_VCC 

`else 

`endif 

`ifdef AER 

`else 

`endif 

`ifdef ECRC

`endif

`ifdef X4 

`endif

localparam ribd6fd = 102,jceb7ea = 32'hfdfff40b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef AER


`else


`endif


`ifdef X4


`define CFG_DEC cfg_dec1


`define CFG_RESP cfg_resp


`endif


`ifdef X1


`define CFG_DEC pcie_x1_cfg_dec1_x1


`define CFG_RESP pcie_x1_cfg_resp_x1


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef AER


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef GEN2


`endif


`ifdef AER


`endif


`ifdef GEN2


`endif


`ifdef AER


`else


`endif


`ifdef CFG_VCC


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif 


`ifdef AER 


`endif 


`ifdef GEN2


`endif


`ifdef CFG_VCC 


`else 


`endif 


`ifdef AER 


`else 


`endif 


`ifdef ECRC


`endif


`ifdef X4 


`endif



`ifdef AER
   assign ftl_err_out  =  qi98d20 ;   assign nftl_err_out =  mrc6900 ;   assign cor_err_out  =  sw34804 ;

`else
   assign ftl_err_out  =  cbd4c6 ;   assign nftl_err_out =  wj6a634 ;   assign cor_err_out  =  os531a4 ;

`endif




`ifdef X4



`define CFG_DEC cfg_dec1



`define CFG_RESP cfg_resp



`endif



`ifdef X1



`define CFG_DEC pcie_x1_cfg_dec1_x1



`define CFG_RESP pcie_x1_cfg_resp_x1



`endif




`CFG_DEC pub2c08 (   .sys_clk      ( sys_clk ) ,   .rst_n        ( rst_n ) ,
   .tlp_data     ( tlp_data ) ,   .tlp_st       ( tlp_st ) ,   .tlp_end      ( tlp_end ) ,   .tlp_erly_st  ( tlp_erly_st ) ,   .phy_link_up  ( phy_link_up ) ,   .term_all_cfg ( term_all_cfg ) ,



`ifdef ECRC
      .tlp_pcie_x1_ecrc_ok  ( tlp_pcie_x1_ecrc_ok ) ,      .pcie_x1_ecrc_chk_enb ( pcie_x1_ecrc_chk_enb ) ,


`endif

      .ADR_I        ( ADR_I[11:2] ) ,   .DAT_I        ( DAT_I ),   .WE_I         ( WE_I ),   .STB_I        ( STB_I ),



`ifdef X4
      .s2e_cnt_err  ( s2e_cnt_err ),


`endif

   .bus_num      ( bus_num ) ,   .dev_num      ( dev_num ) ,   .func_num     ( func_num ) ,   .req_id       ( req_id ) ,   .tag          ( tag ) ,   .tc           ( tc ) ,   .reg_sel_t0    ( reg_sel_t0 ) ,   .reg_sel_pmsi  ( reg_sel_pmsi ) ,   .reg_sel_cs    ( reg_sel_cs ) ,   .reg_sel_ec    ( reg_sel_ec ) ,


`ifdef AER
      .reg_sel_aer  ( reg_sel_aer ) ,


`endif
   .reg_sel_usp   ( reg_sel_usp ) ,   .reg_id_hit    ( reg_id_hit ) ,   .type1_cfg     ( type1_cfg ) ,   .pois_cfg      ( pois_cfg ) ,   .cfg_hit       ( cfg_hit ) ,   .nph_processed ( nph_processed ) ,   .npd_processed ( npd_processed ) ,
   .reg_addr      ( reg_addr ) ,   .reg_wdata     ( reg_wdata ) ,   .reg_wdata_be  ( reg_wdata_be ) ,   .reg_wr_t1     ( reg_wr_t1 ) ,   .reg_wr_pois   ( reg_wr_pois ) ,   .reg_wr        ( reg_wr ) ,   .reg_rd        ( reg_rd ) ,   .reg_wr_cpm    ( reg_wr_cpm ) ,   .reg_rd_cpm    ( reg_rd_cpm ) ,   .pcie_x1_ecrc_ok       ( pcie_x1_ecrc_ok )   ) ;



assign ykfae93 = qgdb31c ;
assign pfd7498 = mrd98e0 ;
assign bnba4c6 = gbcc704 ;
assign rtd2637 = by63824 ;
assign pu931be = fp1c123 ;
assign ym98df2 = eae091f ;
assign yxc6f90 = sj23e19 ;
pcie_x1_ntafbaf zk6ccb3 (      .yk7dd7f ( yx416d9 )  ,   .rgeebf9 ( lsb6cc )  ,   .gb75fcb ( uv5b663 )  ,   .bnafe5d ( qgdb31c )  ,   .ip7f2ef ( mrd98e0 )  ,   .vvf977d ( gbcc704 )  ,   .oscbbee ( by63824 )  ,   .ne5df70 ( fp1c123 )  ,   .meefb82 ( eae091f )  ,   .qg7dc11 ( xy48f8 )  ,   .faee089 ( gq247c3 )  ,   .kd7044a ( sj23e19 )  ,   .aa82254 ( ie1f0cd )  ,   .load_id      ( ec218d0 ) ,   .phy_link_up  ( db81c22 ) ,   .sys_clk      ( sys_clk ) ,   .rst_n        ( rst_n ) ,
   .reg_sel_t0   ( reg_sel_t0 ) ,   .reg_addr     ( hb7ebd9[3:0] ) ,   .reg_wdata    ( gof5ece ) ,   .reg_wdata_be ( hd94aa4 ) ,   .reg_wr       ( (reg_wr & ~yz36907) ) ,   .reg_rd       ( reg_rd ) ,   .pcie_x1_ecrc_ok      ( pcie_x1_ecrc_ok ) ,
   .ps580c2     ( goce3bc ) ,


`ifdef GEN2
      .sh41830       ( sh41830 ) ,


`endif
   .wwef7fd   ( an8545f ) ,      .rt7bfe8       ( rt7bfe8 ) ,   .jcdff46       ( jcdff46 ) ,   .kqffa33       ( kqffa33 ) ,   .gbfd198       ( gbfd198 ) ,   .ale8cc4       ( ale8cc4 ) ,   .ui46624       ( ui46624 ) ,   .kf33121       ( kf33121 ) ,   .cmd_reg_out  ( cmd_reg_out ),   .hoc0613  ( reg_rdata0 )   ) ;



pcie_x1_tw25a28 ntbae2e (   .ph2d142      ( rv8484d )  ,   .os68a17      ( ks2426f )  ,   .fn450b8 ( wy21379 )  ,   .rv285c6 ( rv9bc9 )  ,   .fa42e37 ( ps4de4f )  ,   .qv171ba ( al6f27b )  ,   .hqb8dd4 ( vi793dc )  ,   .mrc6ea3 ( qtc9ee2 )  ,   .vx3751c ( jp4f715 )  ,   .rvba8e7 ( fn7b8af )  ,   .icd473e      ( shdc57e )  ,   .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n ),   .phy_link_up    ( db81c22 ) ,   .reg_sel_cs     ( reg_sel_pmsi ) ,   .reg_addr       ( hb7ebd9[3:0] ) ,   .reg_wdata      ( gof5ece ) ,   .reg_wdata_be   ( hd94aa4 ) ,   .reg_wr         ( (reg_wr & ~yz36907) ) ,   .reg_rd         ( reg_rd ) ,   .pcie_x1_ecrc_ok        ( pcie_x1_ecrc_ok ) ,
   .ps580c2       ( goce3bc ) ,


`ifdef GEN2
      .sh41830       ( sh41830 ) ,


`endif
   .pme_status     ( nef1611 ) ,
   .pm_power_state ( pm_power_state ) ,   .pme_en         ( pme_en ) ,
   .mm_enable      ( mm_enable ) ,   .msi_enable     ( msi_enable ) ,   .mes_laddr      ( mes_laddr ) ,   .mes_uaddr      ( mes_uaddr ) ,   .mes_data       ( mes_data ) ,
   .hoc0613    ( reg_rdata1 )   ) ;




pcie_x1_gbf87a8 rgfb996 (   .alc3d44 ( zz8ed0b )  ,   .ba1ea24 ( xw7685e )  ,   .ykf5123 ( cbb42f2 )  ,   .jea8918 ( qva1794 )  ,


`ifdef GEN2
      .qt448c2 ( qt448c2 )  ,


`endif

   .sys_clk      ( sys_clk ) ,   .rst_n        ( rst_n ),   .reg_sel_cs   ( reg_sel_cs ) ,   .reg_addr     ( hb7ebd9[3:0] ) ,   .reg_wdata    ( gof5ece ) ,   .reg_wdata_be ( hd94aa4 ) ,   .reg_wr       ( (reg_wr & ~yz36907) ) ,   .reg_rd       ( reg_rd ) ,   .pcie_x1_ecrc_ok      ( pcie_x1_ecrc_ok ) ,
   .phy_link_up  ( db81c22 ) ,   .ps580c2     ( goce3bc ) ,


`ifdef GEN2
      .sh41830       ( sh41830 ) ,


`endif




`ifdef AER
      .vxc185 ( ld61a98 ) ,


`endif

      .sh60c2e    ( zz37725 ) ,   .hd6174 ( wlbb92f ) ,   .je30ba7        ( yxdc97c ) ,   .dfrm_perr        ( xwe4be4 ) ,   .dl_active        ( tw25f22 ) ,
      .rxtp_bad_tlp     ( ng2f912 ) ,   .do3aee2    ( zk7c893 ) ,   .uvfd0f9       ( zke449b ) ,   .ipedf31   ( ph224db ) ,   .zkda02d   ( ir126de ) ,   .nr4f43e   ( vk936f4 ) ,   .kd7a1f7    ( xl9b7a2 ) ,   .jcd0fbd       ( osdbd16 ) ,
      .cmpln_tout       ( ykde8b1 ) ,   .cmpltr_abort_np  ( byf4589 ) ,   .cmpltr_abort_p   ( hqa2c4a ) ,   .unexp_cmpln      ( bn16253 ) ,   .ur_np_ext        ( sjb129e ) ,   .ur_p_ext         ( ng894f4 ) ,   .np_req_pend      ( hb4a7a2 ) ,   .pu443d         ( 8'h00 ) ,   .tj221ea   ( hd9e8b9 ) ,   .mg10f56     ( vif45cf ) ,   .aa87ab0     ( lsa2e7a ) ,

      .tlpdec_pcie_x1_ecrc_err  ( gd173d3 ),   .tlpdec_pois_tlp  ( ecb9e9c ),   .tlpdec_us_req    ( vk8986a ),   .tlpdec_malf_tlp  ( kd7a70b ),   .mt80c46         ( cmd_reg_out[4] ),
         .zz6235    ( ) ,   .dev_cntl_out     ( dev_cntl_out ),   .lnk_cntl_out     ( lnk_cntl_out ),   .ftl_err_out      ( wwead23 ),   .nftl_err_out     ( su56919 ),   .cor_err_out      ( cbb48c9 ),


`ifdef GEN2
      .dev_cntl_2_out( dev_cntl_2_out ),      .initiate_flr  ( initiate_flr ),


`endif

   .sj8780     ( sj8780 ) ,   .su43c04       ( su43c04 ) ,   .pu1e020     ( pu1e020 ) ,   .cmf0102      ( cmf0102 ) ,   .cfgcs_losel      ( cfgcs_losel ) ,
   .hoc0613      ( reg_rdata2 )   ) ;   


`ifdef AER
       assign kdc9756 = (necf4e1 | ui4c353) ;


`else
       assign kdc9756 = necf4e1 ;


`endif





pcie_x1_rib771d os43b4d (   .kfbb8eb ( pfd7bf5 )  ,   .gbdc75c ( dobdfaf )  ,   .sys_clk      ( sys_clk ) ,   .rst_n        ( rst_n ),   .reg_sel_ec   ( reg_sel_ec ) ,   .reg_addr     ( hb7ebd9[4:0] ) ,   .reg_wdata    ( gof5ece ) ,   .reg_wr       ( (reg_wr & ~yz36907) ) ,   .reg_rd       ( reg_rd ) ,   .pcie_x1_ecrc_ok      ( pcie_x1_ecrc_ok ) ,
   .ps580c2     ( goce3bc ) ,   .hoc0613  ( reg_rdata3 )   ) ;





`ifdef CFG_VCC

pcie_x1_qgd4b1c ux7226 (      .jra58e0 ( jra58e0 )  ,   .sys_clk          ( sys_clk ) ,   .rst_n            ( rst_n ) ,
   .reg_sel_ec       ( reg_sel_ec ) ,   .reg_addr         ( hb7ebd9[4:0] ) ,   .reg_wdata        ( gof5ece ) ,   .reg_wdata_be     ( hd94aa4 ) ,   .reg_wr           ( (reg_wr & ~yz36907) ) ,   .reg_rd           ( reg_rd ) ,   .pcie_x1_ecrc_ok          ( pcie_x1_ecrc_ok ) ,
   .yxc6575   ( yxc6575 ) ,      .rv32bad       ( rv32bad ) ,   .gd95d6e     ( gd95d6e ) ,   .gdaeb74      ( gdaeb74 ) ,   .cfgec_vcasel     ( cfgec_vcasel ) ,



`ifdef EN_VC0
      .xyadd2d ( xyadd2d ) ,      .zx6e96a  ( zx6e96a ) ,      .th74b57 ( th74b57 ) ,


`endif



`ifdef EN_VC1
      .bna5abf ( bna5abf ) ,      .bn2d5fe  ( bn2d5fe ) ,      .ip6aff7 ( ip6aff7 ) ,


`endif



`ifdef EN_VC2
      .lq57fbd ( lq57fbd ) ,      .zzbfdeb  ( zzbfdeb ) ,      .vifef5e ( vifef5e ) ,


`endif



`ifdef EN_VC3
      .qtf7af2 ( qtf7af2 ) ,      .xybd794  ( xybd794 ) ,      .faebca2 ( faebca2 ) ,


`endif



`ifdef EN_VC4
      .of5e513 ( of5e513 ) ,      .wjf289c  ( wjf289c ) ,      .vx944e4 ( vx944e4 ) ,


`endif



`ifdef EN_VC5
      .zma2727 ( zma2727 ) ,      .lf1393a  ( lf1393a ) ,      .xy9c9d7 ( xy9c9d7 ) ,


`endif



`ifdef EN_VC6
      .pse4eba ( pse4eba ) ,      .jr275d2  ( jr275d2 ) ,      .ls3ae96 ( ls3ae96 ) ,


`endif



`ifdef EN_VC7
      .pfd74b2 ( pfd74b2 ) ,      .bnba596  ( bnba596 ) ,      .rtd2cb7 ( rtd2cb7 ) ,


`endif
   .hoc0613      ( reg_rdata4 )   ) ;

`endif 




`ifdef AER 
   pcie_x1_hbd7170 #(      .D_WIDTH          ( D_WIDTH ) )      yxc6006 (      .sys_clk          ( sys_clk ) ,      .rst_n            ( rst_n ) ,
      .reg_sel_aer      ( reg_sel_aer ) ,      .reg_addr         ( hb7ebd9[3:0] ) ,      .reg_wdata        ( gof5ece ) ,      .reg_wdata_be     ( hd94aa4 ) ,      .reg_wr           ( (reg_wr & ~yz36907) ) ,      .reg_rd           ( reg_rd ) ,      .pcie_x1_ecrc_ok          ( pcie_x1_ecrc_ok ) ,
            .phy_link_up      ( db81c22 ) ,      .dfrm_perr        ( xwe4be4 ) ,
            .rxtp_bad_tlp     ( ng2f912 ) ,      .do3aee2    ( zk7c893 ) ,      .uvfd0f9       ( zke449b ) ,      .ipedf31   ( ph224db ) ,      .zkda02d   ( ir126de ) ,      .nr4f43e   ( vk936f4 ) ,      .kd7a1f7    ( xl9b7a2 ) ,      .jcd0fbd       ( osdbd16 ) ,            .tlpdec_data      ( wlbeec2 ) ,      .tlpdec_st        ( yxf7614 ) ,      .tlpdec_end       ( ohbb0a5 ) ,      .tlpdec_pcie_x1_ecrc_err  ( gd173d3 ),      .tlpdec_pois_tlp  ( ecb9e9c ),      .tlpdec_us_req    ( vk8986a ),      .tlpdec_malf_tlp  ( kd7a70b ),
      .mt80c46         ( cmd_reg_out[4] ),      .me460cd     ( dev_cntl_out ),
            .err_tlp_header   ( err_tlp_header ) ,      .cmpln_tout       ( ykde8b1 ) ,      .cmpltr_abort_np  ( byf4589 ) ,      .cmpltr_abort_p   ( hqa2c4a ) ,      .unexp_cmpln      ( bn16253 ) ,      .ur_np_ext        ( sjb129e ) ,      .ur_p_ext         ( ng894f4 ) ,
      .pcie_x1_ecrc_gen_enb     ( pcie_x1_ecrc_gen_enb ) ,      .pcie_x1_ecrc_chk_enb     ( pcie_x1_ecrc_chk_enb ) ,      .vxc185        ( vxc185 ) ,      .ftl_err_out      ( uxa464d ) ,      .nftl_err_out     ( an2326d ) ,      .cor_err_out      ( tj1936c ) ,
      .hoc0613      ( reg_rdata5 )      ) ;


`endif 




`CFG_RESP lq6c489 (   .sys_clk         ( sys_clk ) ,   .rst_n           ( rst_n ) ,
   .bus_num         ( bus_num ) ,   .dev_num         ( dev_num ) ,   .func_num        ( func_num ) ,   .req_id          ( req_id ) ,   .tag             ( tag ) ,   .tc              ( tc ) ,   .term_all_cfg    ( term_all_cfg ) ,   .load_id         ( load_id ) ,


`ifdef GEN2
      .drop_resp    ( drop_resp ),


`endif

   .reg_rdata0      ( reg_rdata0 ) ,   .reg_rdata1      ( reg_rdata1 ) ,   .reg_rdata2      ( reg_rdata2 ) ,   .reg_rdata3      ( reg_rdata3 ) ,


`ifdef CFG_VCC 
      .reg_rdata4   ( reg_rdata4 ) ,


`else 
      .reg_rdata4   ( 32'd0 ) ,


`endif 



`ifdef AER 
      .reg_rdata5   ( reg_rdata5 ) ,


`else 
      .reg_rdata5   ( 32'd0 ) ,


`endif 
   .reg_wr          ( ((reg_wr | reg_wr_t1 | reg_wr_pois) & ~s2e_cnt_err) ) ,   .reg_rd          ( (reg_rd & ~s2e_cnt_err) ) ,   .reg_wr_cpm      ( reg_wr_cpm ) ,   .reg_rd_cpm      ( reg_rd_cpm ) ,   .reg_sel_usp     ( reg_sel_usp ) ,   .reg_id_hit      ( reg_id_hit ) ,   .type1_cfg       ( type1_cfg ) ,   .pois_cfg        ( pois_cfg ) ,   .pcie_x1_ecrc_ok         ( pcie_x1_ecrc_ok ) ,



`ifdef ECRC
      .pcie_x1_ecrc_gen_enb ( pcie_x1_ecrc_gen_enb ) ,      .pcie_x1_ecrc_chk_enb ( pcie_x1_ecrc_chk_enb ) ,


`endif

   .cfg_rmux_rd     ( cfg_rmux_rd ) ,   .tx_ca_cplh      ( tx_ca_cplh ) ,   .tx_ca_cplh_infi ( tx_ca_cplh_infi ),         .RDAT_O          ( RDAT_O ),   .ACK_O           ( ACK_O ),
   .us_req_int      ( us_req_int ) ,   .cfg_rmux_req    ( cfg_rmux_req ) ,   .cfg_rmux_data   ( cfg_rmux_data ) ,


`ifdef X4 
      .cfg_rmux_dwen   ( sud11c1 ) ,


`endif
   .cfg_rmux_ae     ( cfg_rmux_ae )   ) ;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      jc47049 <= 1'b0;      bn3824b <= 1'b0;      kqc125e <= 1'b0;      ps580c2  <= 1'b0;   end   else begin      jc47049 <= 1'b1;      bn3824b <= jc47049;      kqc125e <= mt3cb54;      ps580c2  <= jc47049 & ~yke5aa5;   end
end

always@* begin yx416d9<={yk7dd7f>>1,ux17adf[0]};lsb6cc<={rgeebf9>>1,ux17adf[1]};uv5b663<={gb75fcb>>1,ux17adf[2]};qgdb31c<={bnafe5d>>1,ux17adf[3]};mrd98e0<={ip7f2ef>>1,ux17adf[4]};gbcc704<={vvf977d>>1,ux17adf[5]};by63824<={oscbbee>>1,ux17adf[6]};fp1c123<={ne5df70>>1,ux17adf[7]};eae091f<={meefb82>>1,ux17adf[8]};xy48f8<={qg7dc11>>1,ux17adf[9]};gq247c3<={faee089>>1,ux17adf[10]};sj23e19<={kd7044a>>1,ux17adf[11]};ie1f0cd<={aa82254>>1,ux17adf[12]};ec218d0<=ux17adf[13];rv8484d<={ph2d142>>1,ux17adf[14]};ks2426f<={os68a17>>1,ux17adf[15]};wy21379<={fn450b8>>1,ux17adf[16]};rv9bc9<={rv285c6>>1,ux17adf[17]};ps4de4f<={fa42e37>>1,ux17adf[18]};al6f27b<={qv171ba>>1,ux17adf[19]};vi793dc<={hqb8dd4>>1,ux17adf[20]};qtc9ee2<={mrc6ea3>>1,ux17adf[21]};jp4f715<={vx3751c>>1,ux17adf[22]};fn7b8af<={rvba8e7>>1,ux17adf[23]};shdc57e<={icd473e>>1,ux17adf[24]};zz8ed0b<={alc3d44>>1,ux17adf[25]};xw7685e<={ba1ea24>>1,ux17adf[26]};cbb42f2<={ykf5123>>1,ux17adf[27]};qva1794<={jea8918>>1,ux17adf[28]};pfd7bf5<={kfbb8eb>>1,ux17adf[29]};dobdfaf<={gbdc75c>>1,ux17adf[30]};ose0489<={tlp_data>>1,ux17adf[31]};ep2449<=ux17adf[32];mt1224d<=ux17adf[33];db9126c<=ux17adf[34];rvc86c<={tx_ca_cplh>>1,ux17adf[35]};rt64367<=ux17adf[36];db81c22<=ux17adf[37];zz37725<=ux17adf[38];wlbb92f<=ux17adf[39];yxdc97c<={je30ba7>>1,ux17adf[40]};xwe4be4<=ux17adf[41];tw25f22<=ux17adf[42];ng2f912<=ux17adf[43];zk7c893<=ux17adf[44];zke449b<=ux17adf[45];ph224db<=ux17adf[46];ir126de<=ux17adf[47];vk936f4<=ux17adf[48];osdbd16<=ux17adf[49];xl9b7a2<=ux17adf[50];an8545f<={wwef7fd>>1,ux17adf[51]};ykde8b1<=ux17adf[52];byf4589<=ux17adf[53];hqa2c4a<=ux17adf[54];bn16253<=ux17adf[55];sjb129e<=ux17adf[56];ng894f4<=ux17adf[57];hb4a7a2<=ux17adf[58];nef1611<=ux17adf[59];hd9e8b9<=ux17adf[60];vif45cf<=ux17adf[61];lsa2e7a<=ux17adf[62];os49b3a<=ux17adf[63];qva190d<=ux17adf[64];wlbeec2<={tlpdec_data>>1,ux17adf[65]};yxf7614<=ux17adf[66];ohbb0a5<=ux17adf[67];gd173d3<=ux17adf[68];ecb9e9c<=ux17adf[69];necf4e1<=ux17adf[70];kd7a70b<=ux17adf[71];yz36907<=ux17adf[72];rg4d9d1<={ADR_I>>1,ux17adf[73]};ps6ce8b<={DAT_I>>1,ux17adf[74]};kq6745a<=ux17adf[75];tw3a2d0<=ux17adf[76];mt3cb54<=ux17adf[77];yke5aa5<=ux17adf[78];goce3bc<=ux17adf[79];hb7ebd9<={reg_addr>>1,ux17adf[80]};gof5ece<={reg_wdata>>1,ux17adf[81]};hd94aa4<={reg_wdata_be>>1,ux17adf[82]};qt41621<={req_id>>1,ux17adf[83]};kd7faa1<=ux17adf[84];zmb10c<={tag>>1,ux17adf[85]};by58863<={tc>>1,ux17adf[86]};zzc680<={reg_rdata0>>1,ux17adf[87]};xw63406<={reg_rdata1>>1,ux17adf[88]};sw1a032<={reg_rdata2>>1,ux17adf[89]};byd0190<={reg_rdata3>>1,ux17adf[90]};wl80c83<={reg_rdata4>>1,ux17adf[91]};bn641d<={reg_rdata5>>1,ux17adf[92]};vk8986a<=ux17adf[93];ui4c353<=ux17adf[94];ld61a98<={vxc185>>1,ux17adf[95]};cbd4c6<=ux17adf[96];wj6a634<=ux17adf[97];os531a4<=ux17adf[98];qi98d20<=ux17adf[99];mrc6900<=ux17adf[100];sw34804<=ux17adf[101];end
always@* begin db22f5b[2047]<=rgeebf9[0];db22f5b[2046]<=gb75fcb[0];db22f5b[2044]<=bnafe5d[0];db22f5b[2040]<=ip7f2ef[0];db22f5b[2032]<=vvf977d[0];db22f5b[2016]<=oscbbee[0];db22f5b[2011]<=tx_ca_cplh_infi;db22f5b[1984]<=ne5df70[0];db22f5b[1974]<=phy_link_up;db22f5b[1959]<=s2e_cnt_err;db22f5b[1941]<=ba1ea24[0];db22f5b[1921]<=reg_addr[0];db22f5b[1920]<=meefb82[0];db22f5b[1914]<=tlpdec_pcie_x1_ecrc_err;db22f5b[1901]<=sh60c2e;db22f5b[1871]<=ADR_I[0];db22f5b[1868]<=reg_rdata3[0];db22f5b[1835]<=ykf5123[0];db22f5b[1834]<=ur_p_ext;db22f5b[1795]<=reg_wdata[0];db22f5b[1793]<=qg7dc11[0];db22f5b[1780]<=tlpdec_pois_tlp;db22f5b[1754]<=hd6174;db22f5b[1749]<=dl_active;db22f5b[1721]<=cmpln_tout;db22f5b[1709]<=uvfd0f9;db22f5b[1694]<=DAT_I[0];db22f5b[1688]<=reg_rdata4[0];db22f5b[1679]<=qv171ba[0];db22f5b[1623]<=jea8918[0];db22f5b[1621]<=np_req_pend;db22f5b[1543]<=reg_wdata_be[0];db22f5b[1539]<=faee089[0];db22f5b[1538]<=su56919;db22f5b[1526]<=tlp_erly_st;db22f5b[1513]<=tlpdec_us_req;db22f5b[1502]<=tlpdec_st;db22f5b[1482]<=unexp_cmpln;db22f5b[1461]<=je30ba7[0];db22f5b[1454]<=kd7a1f7;db22f5b[1451]<=rxtp_bad_tlp;db22f5b[1405]<=tlp_st;db22f5b[1399]<=cfg_rmux_rd;db22f5b[1394]<=cmpltr_abort_np;db22f5b[1387]<=nr4f43e;db22f5b[1373]<=aa87ab0;db22f5b[1370]<=ipedf31;db22f5b[1340]<=WE_I;db22f5b[1328]<=reg_rdata5[0];db22f5b[1310]<=hqb8dd4[0];db22f5b[1264]<=bn3824b;db22f5b[1216]<=us_req_int;db22f5b[1199]<=kfbb8eb[0];db22f5b[1195]<=pme_status;db22f5b[1145]<=vx3751c[0];db22f5b[1038]<=req_id[0];db22f5b[1030]<=kd7044a[0];db22f5b[1028]<=cbb48c9;db22f5b[1023]<=yk7dd7f[0];db22f5b[1005]<=tx_ca_cplh[0];db22f5b[979]<=tlpdec_malf_tlp;db22f5b[970]<=alc3d44[0];db22f5b[960]<=ps580c2;db22f5b[957]<=tlpdec_end;db22f5b[934]<=reg_rdata2[0];db22f5b[917]<=ur_np_ext;db22f5b[874]<=dfrm_perr;db22f5b[860]<=wwef7fd[0];db22f5b[854]<=do3aee2;db22f5b[839]<=fa42e37[0];db22f5b[769]<=wwead23;db22f5b[763]<=tlp_end;db22f5b[751]<=tlpdec_data[0];db22f5b[741]<=cmpltr_abort_p;db22f5b[727]<=jcd0fbd;db22f5b[702]<=tlp_data[0];db22f5b[699]<=term_all_cfg;db22f5b[693]<=zkda02d;db22f5b[686]<=mg10f56;db22f5b[632]<=STB_I;db22f5b[608]<=kdc9756;db22f5b[572]<=mrc6ea3[0];db22f5b[485]<=icd473e[0];db22f5b[480]<=kqc125e;db22f5b[467]<=reg_rdata1[0];db22f5b[419]<=rv285c6[0];db22f5b[384]<=vxc185[0];db22f5b[351]<=gbdc75c[0];db22f5b[343]<=tj221ea;db22f5b[242]<=rvba8e7[0];db22f5b[233]<=reg_rdata0[0];db22f5b[209]<=fn450b8[0];db22f5b[116]<=tc[0];db22f5b[104]<=os68a17[0];db22f5b[58]<=tag[0];db22f5b[52]<=ph2d142[0];db22f5b[36]<=tj1936c;db22f5b[29]<=reg_id_hit;db22f5b[26]<=load_id;db22f5b[18]<=an2326d;db22f5b[13]<=aa82254[0];db22f5b[9]<=uxa464d;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule

































`timescale 1 ns / 100 ps
module  pcie_x1_ww68af6(
   
   input wire sys_clk,              
   input wire rst_n,                

   
   input wire wjc364e,           
   input wire zm1b275,           

   
   input wire [`NUM_VC-1:0] fpb0c6f,            
   input wire [`NUM_VC-1:0] ri8637f,           
   input wire [`NUM_VC-1:0] ks31bfb,          

   input wire [`NUM_VC-1:0] ec8dfd9,           
   input wire [`NUM_VC-1:0] qt6fec9,          
   input wire [`NUM_VC-1:0] yx7f64d,         

   input wire [`NUM_VC-1:0] rgfb26d,             
   input wire [`NUM_VC-1:0] ofd936b,            
   input wire [`NUM_VC-1:0] alc9b5d,           

   
   
   output wire [`NUM_VC-1:0] jc4daed,           
   output wire [`NUM_VC-1:0] cm6d76b,          
   output wire [`NUM_VC-1:0] rt6bb59,         

   
   output reg                kqdb459,           
   output reg [2:0]          psda2c8,             
   output reg [1:0]          cmd1642,             

   output reg                fp8b211,           
   output reg [2:0]          ww5908f,             
   output reg [1:0]          nrc8479                 );
parameter fad5c1c = 3*`NUM_VC;
reg   [`NUM_VC-1:0]       yzae0e2;
reg   [`NUM_VC-1:0]       gb70714;
reg   [`NUM_VC-1:0]       vk838a4;
reg   [4:0]               ph1c522;
reg   [4:0]               ipe2917;
reg   [1:0]               hq148bd;

`ifdef VC1
reg                       oha45ea;

`else

`ifdef VC2
reg                          oha45ea;

`else 

`ifdef VC3 
reg  [1:0]                         oha45ea;

`else

`ifdef VC4
reg  [1:0]                         oha45ea;

`else   // 5 - 8
reg  [2:0]                         oha45ea;

`endif

`endif

`endif

`endif
reg   [fad5c1c-1:0]       bnafa8e;
wire  [fad5c1c-1:0]       ykea3b8;
wire  [fad5c1c-1:0]       hd8ee04;
reg ic77026;
reg pub8131;
reg [`NUM_VC - 1 : 0] tuc098a;
reg [`NUM_VC - 1 : 0] ba4c53;
reg [`NUM_VC - 1 : 0] oh2629b;
reg [`NUM_VC - 1 : 0] ym314dc;
reg [`NUM_VC - 1 : 0] kf8a6e0;
reg [`NUM_VC - 1 : 0] kq53705;
reg [`NUM_VC - 1 : 0] nt9b828;
reg [`NUM_VC - 1 : 0] shdc147;
reg [`NUM_VC - 1 : 0] eae0a3d;
reg [`NUM_VC - 1 : 0] wy51e8;
reg [`NUM_VC - 1 : 0] xl28f40;
reg [`NUM_VC - 1 : 0] xw47a06;
reg [4 : 0] fp3d032;
reg [4 : 0] she8196;
reg [1 : 0] pf40cb5;
reg [fad5c1c - 1 : 0] jr32d7f;
reg [fad5c1c - 1 : 0] lfb5ff3;
reg [fad5c1c - 1 : 0] qt7fcff;
reg [2047:0] db22f5b;
wire [19:0] ux17adf;

`ifdef VC1

`else

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else   // 5 - 8

`endif

`endif

`endif

`endif

localparam ribd6fd = 20,jceb7ea = 32'hfdffd30b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef VC1


`else


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else   // 5 - 8


`endif


`endif


`endif


`endif






`ifdef VC1
   

`else



`ifdef VC2



`else 



`ifdef VC3 



`else



`ifdef VC4



`else   // 5 - 8



`endif



`endif



`endif



`endif






always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      yzae0e2   <= 0;      gb70714  <= 0;      vk838a4 <= 0;   end   else begin      yzae0e2   <= tuc098a | ym314dc;      gb70714  <= ba4c53 | kf8a6e0;      vk838a4 <= oh2629b | kq53705;   end
end






assign ykea3b8 = {xw47a06, xl28f40, wy51e8};
assign {rt6bb59, cm6d76b, jc4daed} = jr32d7f;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      bnafa8e       <= 0;      kqdb459  <= 1'b0;      psda2c8    <= 3'b000;      cmd1642    <= 2'b00;   end   else begin            psda2c8    <= 3'b000;      kqdb459  <= 1'b0;      bnafa8e       <= 0;      if(!ic77026) begin         kqdb459  <= lfb5ff3[fp3d032];         psda2c8    <= oha45ea;         cmd1642    <= pf40cb5;         bnafa8e[she8196] <= kqdb459;         end   end
end




assign hd8ee04 = {eae0a3d, shdc147, nt9b828};
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      fp8b211  <= 1'b0;      ww5908f    <= 3'b000;      nrc8479    <= 2'b00;   end   else begin            ww5908f    <= 3'b000;      fp8b211  <= 1'b0;      if(!pub8131) begin         fp8b211  <= qt7fcff[fp3d032];         ww5908f    <= oha45ea;         nrc8479    <= pf40cb5;      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ph1c522     <= 0;      ipe2917 <= 0;      oha45ea     <= 0;      hq148bd     <= 2'b00;   end   else begin      if(!ic77026) begin                  ph1c522 <= (fp3d032 == (fad5c1c - 1)) ? 0 : (fp3d032 + 1);         ipe2917 <= fp3d032;                  oha45ea <= (oha45ea == (`NUM_VC-1)) ? 0 : (oha45ea + 1);                  if(oha45ea == (`NUM_VC-1))            hq148bd <= (pf40cb5 == 2'b10) ? 2'b00 : (pf40cb5 + 2'b01);      end   end
end
always@* begin ic77026<=ux17adf[0];pub8131<=ux17adf[1];tuc098a<={fpb0c6f>>1,ux17adf[2]};ba4c53<={ri8637f>>1,ux17adf[3]};oh2629b<={ks31bfb>>1,ux17adf[4]};ym314dc<={ec8dfd9>>1,ux17adf[5]};kf8a6e0<={qt6fec9>>1,ux17adf[6]};kq53705<={yx7f64d>>1,ux17adf[7]};nt9b828<={rgfb26d>>1,ux17adf[8]};shdc147<={ofd936b>>1,ux17adf[9]};eae0a3d<={alc9b5d>>1,ux17adf[10]};wy51e8<={yzae0e2>>1,ux17adf[11]};xl28f40<={gb70714>>1,ux17adf[12]};xw47a06<={vk838a4>>1,ux17adf[13]};fp3d032<={ph1c522>>1,ux17adf[14]};she8196<={ipe2917>>1,ux17adf[15]};pf40cb5<={hq148bd>>1,ux17adf[16]};jr32d7f<={bnafa8e>>1,ux17adf[17]};lfb5ff3<={ykea3b8>>1,ux17adf[18]};qt7fcff<={hd8ee04>>1,ux17adf[19]};end
always@* begin db22f5b[2047]<=zm1b275;db22f5b[2046]<=fpb0c6f[0];db22f5b[2044]<=ri8637f[0];db22f5b[2040]<=ks31bfb[0];db22f5b[2032]<=ec8dfd9[0];db22f5b[2016]<=qt6fec9[0];db22f5b[1985]<=yx7f64d[0];db22f5b[1922]<=rgfb26d[0];db22f5b[1796]<=ofd936b[0];db22f5b[1544]<=alc9b5d[0];db22f5b[1105]<=bnafa8e[0];db22f5b[1041]<=yzae0e2[0];db22f5b[1023]<=wjc364e;db22f5b[552]<=hq148bd[0];db22f5b[325]<=hd8ee04[0];db22f5b[276]<=ipe2917[0];db22f5b[162]<=ykea3b8[0];db22f5b[138]<=ph1c522[0];db22f5b[69]<=vk838a4[0];db22f5b[34]<=gb70714[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





















































`timescale 1 ns / 100 ps
module  pcie_x1_je96c50(
   
   input wire sys_clk,              
   input wire rst_n,                


   
   input wire [7:0] an8a0cc,           
   input wire [7:0] ld50665,          
   input wire [7:0] xy8332f,         
   input wire [11:0] jr1997b,           
   input wire [11:0] ipccbde,          
   input wire [11:0] wj65ef5,         

   input wire [6:0] ls2f7ac,       
   input wire [10:0] hb7bd62,       
   input wire [6:0] godeb16,      
   input wire [10:0] mef58b1,      
   input wire [6:0] ukac589,     
   input wire [10:0] cm62c49,     

   
   input wire nt16249,              
   input wire kfb124e,          

   
   input wire phy_l0_l0s,           

   
   input wire ba8983e,          
   input wire qg4c1f3,         
   input wire en60f98,        

   
   input wire jc4daed,           
   input wire cm6d76b,          
   input wire rt6bb59,         

   
   input wire bn81991,        
   input wire phcc8f,        
   input wire zk6647f,       
   input wire lf323fa,       
   input wire ph91fd7,      
   input wire an8febe,      
   input wire gb7f5f4,         
   input wire cmfafa5,         
   input wire nph_processed,        
   input wire npd_processed,        
   input wire dmf4a3c,       
   input wire dba51e3,       

   input wire [7:0] vx28f1f,               
   input wire  [7:0]ho478fe,              
   input wire  [7:0]gd3c7f2,             

   input wire ble3f94,    
   input wire co1fca7,    
   input wire hofe539,     

`ifdef AER
   
   input wire vc_rcvd,              
   input wire ph_rcvd,              
   input wire pd_rcvd,              
   input wire nph_rcvd,             
   input wire npd_rcvd ,            
   input wire [8:0] credits_rcvd,         

   input wire malf_pkt_ph,          
   input wire malf_pkt_pd,          
   input wire malf_pkt_nph,         
   input wire malf_pkt_npd,         
`endif

   
   
   output reg fpb0c6f,            
   output reg ri8637f,           
   output reg ks31bfb,          

   output reg ec8dfd9,           
   output reg qt6fec9,          
   output reg yx7f64d,         

   output reg rgfb26d,             
   output reg ofd936b,            
   output reg alc9b5d,           

   output reg fa423ce,        
   output reg tw11e73,       
   output reg gd8f39a,      

   `ifdef AER
      output reg yxc677d,          
   `endif
   output wire [23:0] qv33bed,         
   output wire [23:0] wy9df6c,        
   output wire [23:0] goefb60           );
parameter ui7db01 = 3'b111;
parameter cb2c591   = 2'b00;
parameter os62c8d  = 2'b01;
parameter fp16469 = 2'b10;

`ifdef CUMULATIVE_CREDIT_CHECK
reg  [7:0]                vk131d, ph98ea, yk4c757;
reg  [11:0]               ps63ab8,   mt1d5c3,   iceae1d,   lq570e9,   twb874a;
reg  [11:0]               alc3a52,  cb1d294,  jpe94a5,  vv4a52f,  vi5297f;
reg  [11:0]               bn94bfb, tja5fde, ng2fef6, al7f7b3, hofbd9d;

`endif
reg  [11:0]               godecea;
reg  [7:0]                pff6751;
reg  [11:0]               swb3a8f;
reg  [7:0]                mg9d478;
reg  [11:0]               icea3c1;
reg  [7:0]                ip51e08;
reg                       wl8f044;
reg                       cm78225;
reg                       suc1128;
reg  [2:0]                qv8940;
reg  [2:0]                ip44a05;
reg  [13:0]               ri2502d;
reg  [13:0]               db2816b;
reg  [13:0]               zx40b5f;
reg  [6:0]                wy5aff;
reg  [11:0]               bn2d7f9;
reg  [6:0]                jp6bfcf;
reg  [11:0]               vv5fe7f;
reg  [6:0]                cmff3ff;
reg  [11:0]               zxf9ff9;
reg  [7:0]                zkcffcf;
reg  [11:0]               yx7fe7a;
reg  [7:0]                meff3d4;
reg  [11:0]               blf9ea1;
reg  [7:0]                pscf50f;
reg  [11:0]               al7a87b;
reg  [7:0]                cmd43dc;
reg  [11:0]               epa1ee1;
wire [7:0]                wyf70c;
wire [11:0]               fn7b861;
wire [7:0]                shdc30e;
wire [11:0]               fae1875;
reg                       hdc3aa;
reg                       ld61d56;
reg                       baeab6;
reg                       of755b2;
wire                      jraad94;
wire                      su56ca7;
wire                      aab6539;
wire                      dob29c9;
wire                      zz94e4a;
wire                      baa7256;
wire                      an392b2;
wire                      enc9594;
wire                      nr4aca4;
wire                      ea56526;
wire                      pub2930;
wire                      rv94982;
wire                      qva4c16;
wire                      qv260b4;
wire                      pu305a4;
wire                      ou82d22;
wire                      lf16910;
wire                      yzb4887;
wire [5:0]                oha443d;

`ifdef CUMULATIVE_CREDIT_CHECK

`else

`endif

`ifdef AER

`endif
reg [7 : 0] fp221ed;
reg [7 : 0] ec10f6e;
reg [7 : 0] ou87b70;
reg [11 : 0] lf3db80;
reg [11 : 0] shedc07;
reg [11 : 0] ld6e03c;
reg [6 : 0] gb701e6;
reg [10 : 0] wl80f34;
reg [6 : 0] an79a5;
reg [10 : 0] cb3cd2c;
reg [6 : 0] zxe6965;
reg [10 : 0] mg34b2f;
reg xla5979;
reg ux2cbce;
reg al65e74;
reg ri2f3a4;
reg by79d22;
reg osce913;
reg pf74898;
reg uxa44c7;
reg bn2263d;
reg bn131ee;
reg qi98f76;
reg nrc7bb0;
reg db3dd86;
reg faeec37;
reg ne761bb;
reg fpb0ddb;
reg ri86edf;
reg jr376fa;
reg yzbb7d7;
reg qgdbebd;
reg psdf5e9;
reg [7 : 0] cmfaf4a;
reg [7 : 0] vvd7a50;
reg [7 : 0] zmbd287;
reg xje943a;
reg dz4a1d7;
reg jp50ebf;
reg [11 : 0] co875fe;
reg [7 : 0] vk3aff1;
reg [11 : 0] rtd7f8a;
reg [7 : 0] vxbfc57;
reg [11 : 0] psfe2be;
reg [7 : 0] xwf15f3;
reg cb8af9a;
reg vi57cd4;
reg anbe6a3;
reg [2 : 0] jpf351d;
reg [2 : 0] yz9a8ef;
reg [13 : 0] ayd477d;
reg [13 : 0] mga3be9;
reg [13 : 0] oh1df49;
reg [6 : 0] uiefa4c;
reg [11 : 0] cm7d261;
reg [6 : 0] vve9308;
reg [11 : 0] kq49847;
reg [6 : 0] kq4c239;
reg [11 : 0] jp611c8;
reg [7 : 0] qv8e47;
reg [11 : 0] ho4723d;
reg [7 : 0] kf391eb;
reg [11 : 0] hbc8f5c;
reg [7 : 0] ne47ae7;
reg [11 : 0] db3d73a;
reg [7 : 0] byeb9d6;
reg [11 : 0] go5ceb3;
reg [7 : 0] kde7598;
reg [11 : 0] tw3acc4;
reg [7 : 0] ald6622;
reg [11 : 0] ieb3114;
reg ou988a1;
reg uic4508;
reg hd22840;
reg zm14207;
reg gda103b;
reg sj81dd;
reg vv40eec;
reg sj7767;
reg sw3bb3d;
reg thdd9e8;
reg ldecf46;
reg ea67a36;
reg db3d1b1;
reg cze8d8e;
reg kq46c74;
reg ep363a0;
reg kfb1d05;
reg hd8e82d;
reg ld7416e;
reg lfa0b76;
reg aa5bb6;
reg hd2ddb1;
reg [5 : 0] bl6ed8e;
reg [2047:0] db22f5b;
wire [93:0] ux17adf;

`ifdef CUMULATIVE_CREDIT_CHECK

`endif

`ifdef CUMULATIVE_CREDIT_CHECK

`else

`endif

`ifdef AER

`endif

localparam ribd6fd = 94,jceb7ea = 32'hfdfff02b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef CUMULATIVE_CREDIT_CHECK


`endif


`ifdef CUMULATIVE_CREDIT_CHECK


`else


`endif


`ifdef AER


`endif






`ifdef CUMULATIVE_CREDIT_CHECK



`endif











assign qv33bed   = {2'b00, vk3aff1, 2'b00, co875fe};
assign wy9df6c  = {2'b00, vxbfc57, 2'b00, rtd7f8a};
assign goefb60 = {2'b00, xwf15f3, 2'b00, psfe2be};
assign an392b2   = (fp221ed == 0);
assign enc9594   = (lf3db80 == 0);
assign nr4aca4  = (ec10f6e == 0);
assign ea56526  = (shedc07 == 0);
assign pub2930 = (ou87b70 == 0);
assign rv94982 = (ld6e03c == 0);
assign dob29c9 = jr376fa | xje943a;
assign zz94e4a = yzbb7d7 | dz4a1d7;
assign baa7256 = fpb0ddb | jp50ebf;








assign oha443d = (dz4a1d7) ? (vvd7a50 + 1'b1) : vvd7a50;


`ifdef CUMULATIVE_CREDIT_CHECK

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ps63ab8            <= 12'd0;      mt1d5c3            <= 12'd0;      iceae1d            <= 12'd0;      lq570e9         <= 12'd0;      twb874a   <= 12'd0;      alc3a52           <= 12'd0;      cb1d294           <= 12'd0;      jpe94a5           <= 12'd0;      vv4a52f        <= 12'd0;      vi5297f  <= 12'd0;      bn94bfb          <= 12'd0;      tja5fde          <= 12'd0;      ng2fef6          <= 12'd0;      al7f7b3       <= 12'd0;      hofbd9d <= 12'd0;      vk131d            <= 8'd0;      ph98ea           <= 8'd0;      yk4c757          <= 8'd0;   end   else begin                  if(xla5979) begin            mt1d5c3  <= 12'd0;         iceae1d  <= 12'd0;      end      else begin                  mt1d5c3 <= (ri86edf) ? (mt1d5c3 + cmfaf4a) : mt1d5c3;
                  iceae1d  <= (ri2f3a4) ? ps63ab8 : iceae1d;       end                  lq570e9       <= mt1d5c3 - iceae1d;                  twb874a <= ps63ab8 - iceae1d;                  if(lq570e9 <= 12'd2047)                      ps63ab8 <= mt1d5c3;      else if(twb874a <= 12'd2047)           ps63ab8 <= iceae1d + 12'd2047;            if(xla5979) begin            cb1d294  <= 12'd0;         jpe94a5  <= 12'd0;      end      else begin         case({yzbb7d7, dz4a1d7})            2'b01   : cb1d294  <= cb1d294 + 1'b1;            2'b10,            2'b11   : cb1d294  <= cb1d294 + bl6ed8e;            default : cb1d294  <= cb1d294;         endcase         jpe94a5  <= (by79d22) ? alc3a52 : jpe94a5;      end      vv4a52f       <= cb1d294 - jpe94a5;      vi5297f <= alc3a52 - jpe94a5;      if(vv4a52f <= 12'd2047)         alc3a52 <= cb1d294;      else if(vi5297f <= 12'd2047)         alc3a52 <= jpe94a5 + 12'd2047;            if(xla5979) begin            tja5fde  <= 12'd0;         ng2fef6  <= 12'd0;      end      else begin         tja5fde  <= (psdf5e9) ? (tja5fde + zmbd287) : tja5fde;         ng2fef6  <= (osce913) ? bn94bfb : ng2fef6;      end      al7f7b3       <= tja5fde - ng2fef6;      hofbd9d <= bn94bfb - ng2fef6;      if(al7f7b3 <= 12'd2047)         bn94bfb <= tja5fde;      else if(hofbd9d <= 12'd2047)         bn94bfb <= ng2fef6 + 12'd2047;                  if(xla5979) begin            vk131d   <= 8'd0;         ph98ea  <= 8'd0;         yk4c757 <= 8'd0;      end      else begin         vk131d   <= (fpb0ddb) ? (vk131d + 1'b1) : vk131d;         ph98ea  <= (jr376fa) ? (ph98ea + 1'b1) : ph98ea;         yk4c757 <= (qgdbebd) ? (yk4c757 + 1'b1) : yk4c757;      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      pff6751    <= 8'd0;      mg9d478   <= 8'd0;      ip51e08  <= 8'd0;      godecea   <= 12'd0;      swb3a8f  <= 12'd0;      icea3c1 <= 12'd0;   end   else begin            pff6751     <= (!ldecf46) ? (fp221ed + vk131d) : fp221ed;      godecea    <= (!ea67a36) ? (lf3db80 + ps63ab8) : lf3db80;            mg9d478    <= (!db3d1b1) ? (ec10f6e + ph98ea) : ec10f6e;      swb3a8f   <= (!cze8d8e) ? (shedc07 + alc3a52) : shedc07;            ip51e08   <= (!kq46c74) ? (ou87b70 + yk4c757) : ou87b70;      icea3c1  <= (!ep363a0) ? (ld6e03c + bn94bfb) : ld6e03c;   end
end


`else




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin         pff6751    <= 8'd0;         mg9d478   <= 8'd0;         ip51e08  <= 8'd0;         godecea   <= 12'd0;         swb3a8f  <= 12'd0;         icea3c1 <= 12'd0;   end   else begin      if(xla5979) begin            pff6751    <= fp221ed;         mg9d478   <= ec10f6e;         ip51e08  <= ou87b70;         godecea   <= lf3db80;         swb3a8f  <= shedc07;         icea3c1 <= ld6e03c;      end      else begin                  if (!ldecf46 && fpb0ddb && jp50ebf)            pff6751 <= (vk3aff1 + 2) ;         else if (!ldecf46 && thdd9e8)            pff6751 <= (vk3aff1 + 1) ;         godecea   <= (!ea67a36 && ri86edf) ? (co875fe + cmfaf4a) : co875fe;                  if (!db3d1b1 && jr376fa && xje943a)            mg9d478 <= (vxbfc57 + 2) ;         else if (!db3d1b1 && sj7767)            mg9d478 <= (vxbfc57 + 1) ;         if (!cze8d8e) begin            case({yzbb7d7, dz4a1d7})               2'b01   : swb3a8f  <= rtd7f8a + 1'b1;               2'b10,               2'b11   : swb3a8f  <= rtd7f8a + bl6ed8e;               default : swb3a8f  <= rtd7f8a;            endcase         end                  ip51e08  <= (!kq46c74 && qgdbebd) ? (xwf15f3 + 1) : xwf15f3;         icea3c1 <= (!ep363a0 && psdf5e9) ? (psfe2be + zmbd287) : psfe2be;      end   end
end

`endif










`ifdef AER
      
assign wyf70c   = vk3aff1   - qv8e47;
assign fn7b861   = co875fe  - ho4723d;
assign shdc30e  = vxbfc57  - kf391eb;
assign fae1875  = rtd7f8a - hbc8f5c;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      zkcffcf        <= 8'd0;      yx7fe7a       <= 12'd0;      meff3d4       <= 8'd0;      blf9ea1      <= 12'd0;      pscf50f   <= 8'd0;      al7a87b  <= 12'd0;      cmd43dc  <= 8'd0;      epa1ee1 <= 12'd0;            hdc3aa     <= 1'b0;      ld61d56     <= 1'b0;      baeab6    <= 1'b0;      of755b2    <= 1'b0;      yxc677d        <= 1'b0;   end   else begin            if(vc_rcvd) begin            pscf50f   <= (!ldecf46  && ph_rcvd)  ? qv8e47   : ne47ae7;         al7a87b  <= (!ea67a36  && pd_rcvd)  ? ho4723d  : db3d73a;         cmd43dc  <= (!db3d1b1 && nph_rcvd) ? kf391eb  : byeb9d6;         epa1ee1 <= (!cze8d8e && npd_rcvd) ? hbc8f5c : go5ceb3;      end                  hdc3aa  <= (kde7598  >= 'd128)  ? 1'b1 : 1'b0;      ld61d56  <= (tw3acc4  >= 'd2048) ? 1'b1 : 1'b0;      baeab6 <= (ald6622 >= 'd128)  ? 1'b1 : 1'b0;      of755b2 <= (ieb3114 >= 'd2048) ? 1'b1 : 1'b0;      yxc677d     <= ou988a1 | uic4508 | hd22840 | zm14207;            if(xla5979)          zkcffcf      <= 8'd0;      else if(!ldecf46 && vc_rcvd) begin            if(ph_rcvd)            zkcffcf      <= qv8e47 + 1;         else if(ou988a1 || uic4508 || malf_pkt_ph)            zkcffcf      <= ne47ae7;      end      if(xla5979)          yx7fe7a     <= 12'd0;      else if(!ea67a36 && vc_rcvd) begin            if(pd_rcvd)            yx7fe7a     <= ho4723d + credits_rcvd;         else if(ou988a1 || uic4508 || malf_pkt_pd)            yx7fe7a     <= db3d73a;      end      if(xla5979)          meff3d4     <= 8'd0;      else if(!db3d1b1 && vc_rcvd) begin            if(nph_rcvd)            meff3d4     <= kf391eb + 1;         else if(hd22840 || zm14207 || malf_pkt_nph)            meff3d4     <= byeb9d6;      end      if(xla5979)          blf9ea1     <= 12'd0;      else if(!cze8d8e && vc_rcvd) begin            if(npd_rcvd)            blf9ea1    <= hbc8f5c + credits_rcvd;         else if(hd22840 || zm14207 || malf_pkt_npd)            blf9ea1    <= go5ceb3;      end   end
end

`endif


















always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      wl8f044      <= 1'b0;      cm78225     <= 1'b0;      suc1128    <= 1'b0;      fa423ce   <= 1'b0;      tw11e73  <= 1'b0;      gd8f39a <= 1'b0;   end   else begin                        wl8f044    <= ri2f3a4 | fa423ce | xla5979 | !al65e74;      cm78225   <= by79d22 | tw11e73 | xla5979 | !al65e74;      suc1128  <= osce913 | gd8f39a | xla5979 | !al65e74;            fa423ce   <= ((fp221ed == 0)   && (lf3db80 == 0))   ? 1'b1 : 1'b0;      tw11e73  <= ((ec10f6e == 0)  && (shedc07 == 0))  ? 1'b1 : 1'b0;      gd8f39a <= ((ou87b70 == 0) && (ld6e03c == 0)) ? 1'b1 : 1'b0;   end
end



















assign jraad94   = pf74898 | cb8af9a;
assign su56ca7  = uxa44c7 | vi57cd4;
assign aab6539 = bn2263d | anbe6a3;

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      qv8940    <= 0;      ip44a05  <= 0;      fpb0c6f       <= 1'b0;      ri8637f      <= 1'b0;      ks31bfb     <= 1'b0;   end   else begin                              if(fpb0c6f) begin         if(gda103b)            fpb0c6f  <= 1'b0;      end      else         fpb0c6f   <= (bn131ee & thdd9e8) | (qi98f76 & ri86edf);      if(ri8637f) begin         if(sj81dd)            ri8637f  <= 1'b0;      end      else         ri8637f  <= (nrc7bb0 & sj7767) | (db3dd86 & sw3bb3d) ;      if(ks31bfb) begin         if(vv40eec)            ks31bfb  <= 1'b0;      end      else         ks31bfb <= (faeec37 & qgdbebd) | (ne761bb & psdf5e9);   end
end






assign qva4c16   = (uiefa4c == (gb701e6 - 1)) ? 1'b1 : 1'b0;
assign pu305a4  = (vve9308 == (an79a5 - 1)) ? 1'b1 : 1'b0;
assign lf16910 = (kq4c239 == (zxe6965 - 1)) ? 1'b1 : 1'b0;

assign qv260b4   = (cm7d261 >= wl80f34) ? 1'b1 : 1'b0;
assign ou82d22  = (kq49847 >= cb3cd2c) ? 1'b1 : 1'b0;
assign yzb4887 = (jp611c8 >= mg34b2f) ? 1'b1 : 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      wy5aff    <= 0;      bn2d7f9    <= 0;      jp6bfcf   <= 0;      vv5fe7f   <= 0;      cmff3ff  <= 0;      zxf9ff9  <= 0;      ri2502d           <= 0;      db2816b          <= 0;      zx40b5f         <= 0;      ec8dfd9      <= 1'b0;      qt6fec9     <= 1'b0;      yx7f64d    <= 1'b0;   end   else begin                              if(bn131ee || cb8af9a || (kfb1d05 && thdd9e8))         wy5aff  <= 0;      else         wy5aff  <= (thdd9e8) ? (uiefa4c + 1) : uiefa4c;
      if(qi98f76 || cb8af9a || hd8e82d)         bn2d7f9  <= 0;      else if (ri86edf)         bn2d7f9  <= cm7d261 + cmfaf4a;            if(nrc7bb0 || vi57cd4 || (ld7416e && sj7767))         jp6bfcf  <= 0;      else         jp6bfcf  <= (sj7767) ? (vve9308 + 1) : vve9308;
      if(db3dd86 || vi57cd4 || lfa0b76)         vv5fe7f  <= 0;      else if (yzbb7d7)         vv5fe7f  <= kq49847 + vvd7a50;
            if(faeec37 || anbe6a3 || (aa5bb6 && qgdbebd))         cmff3ff  <= 0;      else        cmff3ff  <= (qgdbebd) ? (kq4c239 + 1) : kq4c239;
      if(ne761bb || anbe6a3 || hd2ddb1)         zxf9ff9  <= 0;      else if (psdf5e9)         zxf9ff9  <= jp611c8 + zmbd287;            if(ec8dfd9) begin         if(gda103b)            ec8dfd9  <= 1'b0;      end      else         ec8dfd9   <= (thdd9e8 && kfb1d05) | (hd8e82d) |                         (!cb8af9a && ux2cbce);      if(qt6fec9) begin         if(sj81dd)            qt6fec9  <= 1'b0;      end      else         qt6fec9  <= (sj7767 && ld7416e) | (lfa0b76) |                         (!vi57cd4 && ux2cbce);      if(yx7f64d) begin         if(vv40eec)            yx7f64d  <= 1'b0;      end      else         yx7f64d <= (qgdbebd && aa5bb6) | (hd2ddb1) |                         (!anbe6a3 && ux2cbce);   end
end






always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      rgfb26d       <= 1'b0;      ofd936b      <= 1'b0;      alc9b5d     <= 1'b0;   end   else begin      if(rgfb26d) begin         if(gda103b)            rgfb26d  <= 1'b0;      end      else         rgfb26d   <=  !cb8af9a && (thdd9e8 | ri86edf);      if(ofd936b) begin         if(sj81dd)            ofd936b  <= 1'b0;      end      else         ofd936b   <=  !vi57cd4 && ((sj7767) | (sw3bb3d));      if(alc9b5d) begin         if(vv40eec)            alc9b5d  <= 1'b0;      end      else         alc9b5d <=  !anbe6a3 && (qgdbebd | psdf5e9);   end
end

always@* begin fp221ed<={an8a0cc>>1,ux17adf[0]};ec10f6e<={ld50665>>1,ux17adf[1]};ou87b70<={xy8332f>>1,ux17adf[2]};lf3db80<={jr1997b>>1,ux17adf[3]};shedc07<={ipccbde>>1,ux17adf[4]};ld6e03c<={wj65ef5>>1,ux17adf[5]};gb701e6<={ls2f7ac>>1,ux17adf[6]};wl80f34<={hb7bd62>>1,ux17adf[7]};an79a5<={godeb16>>1,ux17adf[8]};cb3cd2c<={mef58b1>>1,ux17adf[9]};zxe6965<={ukac589>>1,ux17adf[10]};mg34b2f<={cm62c49>>1,ux17adf[11]};xla5979<=ux17adf[12];ux2cbce<=ux17adf[13];al65e74<=ux17adf[14];ri2f3a4<=ux17adf[15];by79d22<=ux17adf[16];osce913<=ux17adf[17];pf74898<=ux17adf[18];uxa44c7<=ux17adf[19];bn2263d<=ux17adf[20];bn131ee<=ux17adf[21];qi98f76<=ux17adf[22];nrc7bb0<=ux17adf[23];db3dd86<=ux17adf[24];faeec37<=ux17adf[25];ne761bb<=ux17adf[26];fpb0ddb<=ux17adf[27];ri86edf<=ux17adf[28];jr376fa<=ux17adf[29];yzbb7d7<=ux17adf[30];qgdbebd<=ux17adf[31];psdf5e9<=ux17adf[32];cmfaf4a<={vx28f1f>>1,ux17adf[33]};vvd7a50<={ho478fe>>1,ux17adf[34]};zmbd287<={gd3c7f2>>1,ux17adf[35]};xje943a<=ux17adf[36];dz4a1d7<=ux17adf[37];jp50ebf<=ux17adf[38];co875fe<={godecea>>1,ux17adf[39]};vk3aff1<={pff6751>>1,ux17adf[40]};rtd7f8a<={swb3a8f>>1,ux17adf[41]};vxbfc57<={mg9d478>>1,ux17adf[42]};psfe2be<={icea3c1>>1,ux17adf[43]};xwf15f3<={ip51e08>>1,ux17adf[44]};cb8af9a<=ux17adf[45];vi57cd4<=ux17adf[46];anbe6a3<=ux17adf[47];jpf351d<={qv8940>>1,ux17adf[48]};yz9a8ef<={ip44a05>>1,ux17adf[49]};ayd477d<={ri2502d>>1,ux17adf[50]};mga3be9<={db2816b>>1,ux17adf[51]};oh1df49<={zx40b5f>>1,ux17adf[52]};uiefa4c<={wy5aff>>1,ux17adf[53]};cm7d261<={bn2d7f9>>1,ux17adf[54]};vve9308<={jp6bfcf>>1,ux17adf[55]};kq49847<={vv5fe7f>>1,ux17adf[56]};kq4c239<={cmff3ff>>1,ux17adf[57]};jp611c8<={zxf9ff9>>1,ux17adf[58]};qv8e47<={zkcffcf>>1,ux17adf[59]};ho4723d<={yx7fe7a>>1,ux17adf[60]};kf391eb<={meff3d4>>1,ux17adf[61]};hbc8f5c<={blf9ea1>>1,ux17adf[62]};ne47ae7<={pscf50f>>1,ux17adf[63]};db3d73a<={al7a87b>>1,ux17adf[64]};byeb9d6<={cmd43dc>>1,ux17adf[65]};go5ceb3<={epa1ee1>>1,ux17adf[66]};kde7598<={wyf70c>>1,ux17adf[67]};tw3acc4<={fn7b861>>1,ux17adf[68]};ald6622<={shdc30e>>1,ux17adf[69]};ieb3114<={fae1875>>1,ux17adf[70]};ou988a1<=ux17adf[71];uic4508<=ux17adf[72];hd22840<=ux17adf[73];zm14207<=ux17adf[74];gda103b<=ux17adf[75];sj81dd<=ux17adf[76];vv40eec<=ux17adf[77];sj7767<=ux17adf[78];sw3bb3d<=ux17adf[79];thdd9e8<=ux17adf[80];ldecf46<=ux17adf[81];ea67a36<=ux17adf[82];db3d1b1<=ux17adf[83];cze8d8e<=ux17adf[84];kq46c74<=ux17adf[85];ep363a0<=ux17adf[86];kfb1d05<=ux17adf[87];hd8e82d<=ux17adf[88];ld7416e<=ux17adf[89];lfa0b76<=ux17adf[90];aa5bb6<=ux17adf[91];hd2ddb1<=ux17adf[92];bl6ed8e<={oha443d>>1,ux17adf[93]};end
always@* begin db22f5b[2047]<=ld50665[0];db22f5b[2046]<=xy8332f[0];db22f5b[2044]<=jr1997b[0];db22f5b[2041]<=ipccbde[0];db22f5b[2037]<=zz94e4a;db22f5b[2035]<=wj65ef5[0];db22f5b[2027]<=baa7256;db22f5b[2022]<=ls2f7ac[0];db22f5b[2006]<=an392b2;db22f5b[1996]<=hb7bd62[0];db22f5b[1965]<=oha443d[0];db22f5b[1964]<=enc9594;db22f5b[1945]<=godeb16[0];db22f5b[1919]<=jraad94;db22f5b[1881]<=nr4aca4;db22f5b[1843]<=mef58b1[0];db22f5b[1790]<=su56ca7;db22f5b[1775]<=ld61d56;db22f5b[1752]<=cm78225;db22f5b[1746]<=jc4daed;db22f5b[1728]<=ip44a05[0];db22f5b[1715]<=ea56526;db22f5b[1685]<=bn81991;db22f5b[1658]<=pu305a4;db22f5b[1645]<=phy_l0_l0s;db22f5b[1638]<=ukac589[0];db22f5b[1605]<=vx28f1f[0];db22f5b[1536]<=zx40b5f[0];db22f5b[1533]<=aab6539;db22f5b[1503]<=baeab6;db22f5b[1467]<=fae1875[0];db22f5b[1456]<=suc1128;db22f5b[1445]<=cm6d76b;db22f5b[1438]<=qva4c16;db22f5b[1425]<=dmf4a3c;db22f5b[1408]<=ri2502d[0];db22f5b[1390]<=fn7b861[0];db22f5b[1383]<=pub2930;db22f5b[1380]<=nph_processed;db22f5b[1371]<=epa1ee1[0];db22f5b[1369]<=gb7f5f4;db22f5b[1366]<=al7a87b[0];db22f5b[1334]<=swb3a8f[0];db22f5b[1322]<=phcc8f;db22f5b[1269]<=ou82d22;db22f5b[1243]<=icea3c1[0];db22f5b[1242]<=ba8983e;db22f5b[1229]<=cm62c49[0];db22f5b[1195]<=lf323fa;db22f5b[1162]<=ho478fe[0];db22f5b[1107]<=co1fca7;db22f5b[1024]<=wy5aff[0];db22f5b[1023]<=an8a0cc[0];db22f5b[1018]<=dob29c9;db22f5b[982]<=yzb4887;db22f5b[959]<=of755b2;db22f5b[887]<=hdc3aa;db22f5b[876]<=wl8f044;db22f5b[873]<=en60f98;db22f5b[864]<=qv8940[0];db22f5b[842]<=rt6bb59;db22f5b[829]<=qv260b4;db22f5b[822]<=kfb124e;db22f5b[802]<=dba51e3;db22f5b[768]<=db2816b[0];db22f5b[733]<=shdc30e[0];db22f5b[719]<=rv94982;db22f5b[712]<=npd_processed;db22f5b[695]<=wyf70c[0];db22f5b[690]<=cmfafa5;db22f5b[685]<=cmd43dc[0];db22f5b[684]<=an8febe;db22f5b[683]<=pscf50f[0];db22f5b[667]<=pff6751[0];db22f5b[621]<=mg9d478[0];db22f5b[597]<=zk6647f;db22f5b[553]<=ble3f94;db22f5b[491]<=lf16910;db22f5b[438]<=ip51e08[0];db22f5b[436]<=qg4c1f3;db22f5b[411]<=nt16249;db22f5b[342]<=ph91fd7;db22f5b[341]<=blf9ea1[0];db22f5b[333]<=godecea[0];db22f5b[276]<=gd3c7f2[0];db22f5b[170]<=meff3d4[0];db22f5b[166]<=hofe539;db22f5b[85]<=yx7fe7a[0];db22f5b[42]<=zkcffcf[0];db22f5b[21]<=zxf9ff9[0];db22f5b[10]<=cmff3ff[0];db22f5b[5]<=vv5fe7f[0];db22f5b[2]<=jp6bfcf[0];db22f5b[1]<=bn2d7f9[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





















































































`timescale 1 ns / 100 ps
module  pcie_x1_kqc4b17(
   input wire               sys_clk,              
   input wire               rst_n,                

   
   input wire [(8*`NUM_VC)-1:0]  an8a0cc,      
   input wire [(8*`NUM_VC)-1:0]  ld50665,     
   input wire [(8*`NUM_VC)-1:0]  xy8332f,    
   input wire [(12*`NUM_VC)-1:0] jr1997b,      
   input wire [(12*`NUM_VC)-1:0] ipccbde,     
   input wire [(12*`NUM_VC)-1:0] wj65ef5,    

   input wire [6:0]         ls2f7ac,       
   input wire [10:0]        hb7bd62,       
   input wire [6:0]         godeb16,      
   input wire [10:0]        mef58b1,      
   input wire [6:0]         ukac589,     
   input wire [10:0]        cm62c49,     
   input wire [11:0]        ec5913,
   
   input wire [`NUM_VC-1:0] vcneg_pend,           
   input wire               pf644cc,         

   
   input wire               phy_l0_l0s,           

   
   input wire               wjc364e,           
   input wire               zm1b275,           
   input wire [`NUM_VC-1:0] ba8983e,          
   input wire [`NUM_VC-1:0] qg4c1f3,         
   input wire [`NUM_VC-1:0] en60f98,        

   
   input wire [`NUM_VC-1:0] bn81991,        
   input wire [`NUM_VC-1:0] phcc8f,        
   input wire [`NUM_VC-1:0] zk6647f,       
   input wire [`NUM_VC-1:0] lf323fa,       
   input wire [`NUM_VC-1:0] ph91fd7,      
   input wire [`NUM_VC-1:0] an8febe,      
   input wire [`NUM_VC-1:0] gb7f5f4,         
   input wire [`NUM_VC-1:0] cmfafa5,         
   input wire [`NUM_VC-1:0] nph_processed,        
   input wire [`NUM_VC-1:0] npd_processed,        
   input wire [`NUM_VC-1:0] dmf4a3c,       
   input wire [`NUM_VC-1:0] dba51e3,       
   input wire               ble3f94,    
   input wire               co1fca7,    
   input wire               hofe539,     

   input wire [7:0]         vx28f1f,               
   input wire [7:0]         ho478fe,              
   input wire [7:0]         gd3c7f2,             

`ifdef AER
   
   input wire               vc_rcvd,              
   input wire               ph_rcvd,              
   input wire               pd_rcvd,              
   input wire               nph_rcvd,             
   input wire               npd_rcvd ,            
   input wire [8:0]         credits_rcvd,         

   input wire               malf_pkt_ph,          
   input wire               malf_pkt_pd,          
   input wire               malf_pkt_nph,         
   input wire               malf_pkt_npd,         
`endif

   
   output wire       kqdb459,              
   output wire [2:0] psda2c8,                
   output wire [1:0] cmd1642,                

   output wire       fp8b211,              
   output wire [2:0] ww5908f,                
   output wire [1:0] nrc8479,                

   output wire [`NUM_VC-1:0] fa423ce,   
   output wire [`NUM_VC-1:0] tw11e73,  
   output wire [`NUM_VC-1:0] gd8f39a, 

   `ifdef AER
      output wire    fc_overflow,             
   `endif
   output wire [(24*`NUM_VC)-1:0] qv33bed,       
   output wire [(24*`NUM_VC)-1:0] wy9df6c,      
   output wire [(24*`NUM_VC)-1:0] goefb60      
   );
parameter cb2c591   = 2'b00;
parameter os62c8d  = 2'b01;
parameter fp16469 = 2'b10;
integer                     db9be6b;
wire  [`NUM_VC-1:0]         fpb0c6f;
wire  [`NUM_VC-1:0]         ri8637f;
wire  [`NUM_VC-1:0]         ks31bfb;
wire  [`NUM_VC-1:0]         ec8dfd9;
wire  [`NUM_VC-1:0]         qt6fec9;
wire  [`NUM_VC-1:0]         yx7f64d;
wire  [`NUM_VC-1:0]         rgfb26d;
wire  [`NUM_VC-1:0]         ofd936b;
wire  [`NUM_VC-1:0]         alc9b5d;
wire  [`NUM_VC-1:0]         jc4daed;
wire  [`NUM_VC-1:0]         cm6d76b;
wire  [`NUM_VC-1:0]         rt6bb59;
wire                        kfb124e;
wire  [13:0]                ribde4d;
reg   [13:0]                meef26b;
wire  [`NUM_VC -1:0]        ne79358;
wire  [`NUM_VC -1:0]        enc9ac2;
wire  [`NUM_VC -1:0]        ps4d615;
wire  [`NUM_VC -1:0]        xj6b0aa;

`ifdef VC1

`else

`endif

`ifdef AER

`endif

`ifdef AER

`endif
reg [(8 * `NUM_VC) - 1 : 0] fp221ed;
reg [(8 * `NUM_VC) - 1 : 0] ec10f6e;
reg [(8 * `NUM_VC) - 1 : 0] ou87b70;
reg [(12 * `NUM_VC) - 1 : 0] lf3db80;
reg [(12 * `NUM_VC) - 1 : 0] shedc07;
reg [(12 * `NUM_VC) - 1 : 0] ld6e03c;
reg [6 : 0] gb701e6;
reg [10 : 0] wl80f34;
reg [6 : 0] an79a5;
reg [10 : 0] cb3cd2c;
reg [6 : 0] zxe6965;
reg [10 : 0] mg34b2f;
reg [11 : 0] oh33a1f;
reg [`NUM_VC - 1 : 0] ie3e603;
reg ofe87e1;
reg al65e74;
reg ic77026;
reg pub8131;
reg [`NUM_VC - 1 : 0] ri2f3a4;
reg [`NUM_VC - 1 : 0] by79d22;
reg [`NUM_VC - 1 : 0] osce913;
reg [`NUM_VC - 1 : 0] bn131ee;
reg [`NUM_VC - 1 : 0] qi98f76;
reg [`NUM_VC - 1 : 0] nrc7bb0;
reg [`NUM_VC - 1 : 0] db3dd86;
reg [`NUM_VC - 1 : 0] faeec37;
reg [`NUM_VC - 1 : 0] ne761bb;
reg [`NUM_VC - 1 : 0] fpb0ddb;
reg [`NUM_VC - 1 : 0] ri86edf;
reg [`NUM_VC - 1 : 0] jr376fa;
reg [`NUM_VC - 1 : 0] yzbb7d7;
reg [`NUM_VC - 1 : 0] qgdbebd;
reg [`NUM_VC - 1 : 0] psdf5e9;
reg xje943a;
reg dz4a1d7;
reg jp50ebf;
reg [7 : 0] cmfaf4a;
reg [7 : 0] vvd7a50;
reg [7 : 0] zmbd287;
reg [`NUM_VC - 1 : 0] tuc098a;
reg [`NUM_VC - 1 : 0] ba4c53;
reg [`NUM_VC - 1 : 0] oh2629b;
reg [`NUM_VC - 1 : 0] ym314dc;
reg [`NUM_VC - 1 : 0] kf8a6e0;
reg [`NUM_VC - 1 : 0] kq53705;
reg [`NUM_VC - 1 : 0] nt9b828;
reg [`NUM_VC - 1 : 0] shdc147;
reg [`NUM_VC - 1 : 0] eae0a3d;
reg [`NUM_VC - 1 : 0] pf74898;
reg [`NUM_VC - 1 : 0] uxa44c7;
reg [`NUM_VC - 1 : 0] bn2263d;
reg ux2cbce;
reg [13 : 0] jce118e;
reg [13 : 0] qv8c73;
reg [`NUM_VC - 1 : 0] go4639d;
reg [`NUM_VC - 1 : 0] aa31ce9;
reg [`NUM_VC - 1 : 0] fp8e749;
reg [`NUM_VC - 1 : 0] xw73a4f;
reg [2047:0] db22f5b;
wire [57:0] ux17adf;

`ifdef VC1

`else

`endif



`ifdef AER

`endif

`ifdef AER

`endif

localparam ribd6fd = 58,jceb7ea = 32'hfdffda0b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef VC1


`else


`endif


`ifdef AER


`endif


`ifdef AER


`endif







`ifdef VC1
   assign ne79358 = xje943a;   assign enc9ac2 = dz4a1d7;   assign ps4d615  = jp50ebf;


`else
   assign ne79358 = {{`NUM_VC -1{1'b0}},xje943a};   assign enc9ac2 = {{`NUM_VC -1{1'b0}},dz4a1d7};   assign ps4d615  = {{`NUM_VC -1{1'b0}},jp50ebf};


`endif


assign fc_overflow = |xw73a4f;



assign ribde4d = (ofe87e1) ? {oh33a1f, 2'b00} : {2'b00, oh33a1f};
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0)      meef26b <= 14'h0;   else if (ux2cbce)      meef26b <= 14'h0;   else      meef26b <= qv8c73 + 14'h1;
end
assign kfb124e = (qv8c73 == jce118e) ? 1'b1  : 1'b0;


   pcie_x1_ww68af6 wla14f8(            .sys_clk                  (sys_clk),      .rst_n                    (rst_n),      .wjc364e               (ic77026),      .zm1b275               (pub8131),      .fpb0c6f                (tuc098a),      .ri8637f               (ba4c53),      .ks31bfb              (oh2629b),      .ec8dfd9               (ym314dc),      .qt6fec9              (kf8a6e0),      .yx7f64d             (kq53705),      .rgfb26d                 (nt9b828),      .ofd936b                (shdc147),      .alc9b5d               (eae0a3d),            .kqdb459               (kqdb459),      .psda2c8                 (psda2c8),      .cmd1642                 (cmd1642),      .fp8b211               (fp8b211),      .ww5908f                 (ww5908f),      .nrc8479                 (nrc8479),      .jc4daed               (jc4daed),      .cm6d76b              (cm6d76b),      .rt6bb59             (rt6bb59)      );



pcie_x1_je96c50 bn9e161 [`NUM_VC-1:0] (            .sys_clk                  (sys_clk),      .rst_n                    (rst_n),            .an8a0cc               (fp221ed),      .ld50665              (ec10f6e),      .xy8332f             (ou87b70),      .jr1997b               (lf3db80),      .ipccbde              (shedc07),      .wj65ef5             (ld6e03c),      .ls2f7ac           (gb701e6),      .hb7bd62           (wl80f34),      .godeb16          (an79a5),      .mef58b1          (cb3cd2c),      .ukac589         (zxe6965),      .cm62c49         (mg34b2f),      .nt16249                  (ie3e603),      .kfb124e              (ux2cbce),      .phy_l0_l0s               (al65e74),      .ba8983e              (ri2f3a4),      .qg4c1f3             (by79d22),      .en60f98            (osce913),      .jc4daed               (pf74898),      .cm6d76b              (uxa44c7),      .rt6bb59             (bn2263d),      .bn81991            (bn131ee),      .phcc8f            (qi98f76),      .zk6647f           (nrc7bb0),      .lf323fa           (db3dd86),      .ph91fd7          (faeec37),      .an8febe          (ne761bb),      .gb7f5f4             (fpb0ddb),      .cmfafa5             (ri86edf),      .nph_processed            (jr376fa),      .npd_processed            (yzbb7d7),      .dmf4a3c           (qgdbebd),      .dba51e3           (psdf5e9),      .ble3f94        (go4639d),      .co1fca7        (aa31ce9),      .hofe539         (fp8e749),      .vx28f1f                   (cmfaf4a),      .ho478fe                  (vvd7a50),      .gd3c7f2                 (zmbd287),


`ifdef AER
            .vc_rcvd                  (vc_rcvd),      .ph_rcvd                  (ph_rcvd),      .pd_rcvd                  (pd_rcvd),      .nph_rcvd                 (nph_rcvd),      .npd_rcvd                 (npd_rcvd),      .credits_rcvd             (credits_rcvd),      .malf_pkt_ph              (malf_pkt_ph),      .malf_pkt_pd              (malf_pkt_pd),      .malf_pkt_nph             (malf_pkt_nph),      .malf_pkt_npd             (malf_pkt_npd),


`endif

            .fpb0c6f                (fpb0c6f),      .ri8637f               (ri8637f),      .ks31bfb              (ks31bfb),      .ec8dfd9               (ec8dfd9),      .qt6fec9              (qt6fec9),      .yx7f64d             (yx7f64d),      .rgfb26d                 (rgfb26d),      .ofd936b                (ofd936b),      .alc9b5d               (alc9b5d),
      .fa423ce            (fa423ce),      .tw11e73           (tw11e73),      .gd8f39a          (gd8f39a),


`ifdef AER
      .yxc677d                 (xj6b0aa),


`endif
      .qv33bed                     (qv33bed),      .wy9df6c                    (wy9df6c),      .goefb60                   (goefb60)
      );
always@* begin fp221ed<={an8a0cc>>1,ux17adf[0]};ec10f6e<={ld50665>>1,ux17adf[1]};ou87b70<={xy8332f>>1,ux17adf[2]};lf3db80<={jr1997b>>1,ux17adf[3]};shedc07<={ipccbde>>1,ux17adf[4]};ld6e03c<={wj65ef5>>1,ux17adf[5]};gb701e6<={ls2f7ac>>1,ux17adf[6]};wl80f34<={hb7bd62>>1,ux17adf[7]};an79a5<={godeb16>>1,ux17adf[8]};cb3cd2c<={mef58b1>>1,ux17adf[9]};zxe6965<={ukac589>>1,ux17adf[10]};mg34b2f<={cm62c49>>1,ux17adf[11]};oh33a1f<={ec5913>>1,ux17adf[12]};ie3e603<={vcneg_pend>>1,ux17adf[13]};ofe87e1<=ux17adf[14];al65e74<=ux17adf[15];ic77026<=ux17adf[16];pub8131<=ux17adf[17];ri2f3a4<={ba8983e>>1,ux17adf[18]};by79d22<={qg4c1f3>>1,ux17adf[19]};osce913<={en60f98>>1,ux17adf[20]};bn131ee<={bn81991>>1,ux17adf[21]};qi98f76<={phcc8f>>1,ux17adf[22]};nrc7bb0<={zk6647f>>1,ux17adf[23]};db3dd86<={lf323fa>>1,ux17adf[24]};faeec37<={ph91fd7>>1,ux17adf[25]};ne761bb<={an8febe>>1,ux17adf[26]};fpb0ddb<={gb7f5f4>>1,ux17adf[27]};ri86edf<={cmfafa5>>1,ux17adf[28]};jr376fa<={nph_processed>>1,ux17adf[29]};yzbb7d7<={npd_processed>>1,ux17adf[30]};qgdbebd<={dmf4a3c>>1,ux17adf[31]};psdf5e9<={dba51e3>>1,ux17adf[32]};xje943a<=ux17adf[33];dz4a1d7<=ux17adf[34];jp50ebf<=ux17adf[35];cmfaf4a<={vx28f1f>>1,ux17adf[36]};vvd7a50<={ho478fe>>1,ux17adf[37]};zmbd287<={gd3c7f2>>1,ux17adf[38]};tuc098a<={fpb0c6f>>1,ux17adf[39]};ba4c53<={ri8637f>>1,ux17adf[40]};oh2629b<={ks31bfb>>1,ux17adf[41]};ym314dc<={ec8dfd9>>1,ux17adf[42]};kf8a6e0<={qt6fec9>>1,ux17adf[43]};kq53705<={yx7f64d>>1,ux17adf[44]};nt9b828<={rgfb26d>>1,ux17adf[45]};shdc147<={ofd936b>>1,ux17adf[46]};eae0a3d<={alc9b5d>>1,ux17adf[47]};pf74898<={jc4daed>>1,ux17adf[48]};uxa44c7<={cm6d76b>>1,ux17adf[49]};bn2263d<={rt6bb59>>1,ux17adf[50]};ux2cbce<=ux17adf[51];jce118e<={ribde4d>>1,ux17adf[52]};qv8c73<={meef26b>>1,ux17adf[53]};go4639d<={ne79358>>1,ux17adf[54]};aa31ce9<={enc9ac2>>1,ux17adf[55]};fp8e749<={ps4d615>>1,ux17adf[56]};xw73a4f<={xj6b0aa>>1,ux17adf[57]};end
always@* begin db22f5b[2047]<=ld50665[0];db22f5b[2046]<=xy8332f[0];db22f5b[2044]<=jr1997b[0];db22f5b[2040]<=ipccbde[0];db22f5b[2032]<=wj65ef5[0];db22f5b[2016]<=ls2f7ac[0];db22f5b[1984]<=hb7bd62[0];db22f5b[1934]<=qt6fec9[0];db22f5b[1924]<=lf323fa[0];db22f5b[1921]<=godeb16[0];db22f5b[1857]<=rt6bb59[0];db22f5b[1821]<=yx7f64d[0];db22f5b[1801]<=ph91fd7[0];db22f5b[1795]<=mef58b1[0];db22f5b[1776]<=bn81991[0];db22f5b[1758]<=ba8983e[0];db22f5b[1666]<=kfb124e;db22f5b[1594]<=rgfb26d[0];db22f5b[1554]<=an8febe[0];db22f5b[1542]<=ukac589[0];db22f5b[1505]<=phcc8f[0];db22f5b[1468]<=qg4c1f3[0];db22f5b[1319]<=hofe539;db22f5b[1284]<=ribde4d[0];db22f5b[1265]<=ri8637f[0];db22f5b[1188]<=dba51e3[0];db22f5b[1182]<=ho478fe[0];db22f5b[1140]<=ofd936b[0];db22f5b[1061]<=gb7f5f4[0];db22f5b[1040]<=ne79358[0];db22f5b[1037]<=cm62c49[0];db22f5b[1023]<=an8a0cc[0];db22f5b[967]<=ec8dfd9[0];db22f5b[962]<=zk6647f[0];db22f5b[928]<=cm6d76b[0];db22f5b[888]<=en60f98[0];db22f5b[879]<=zm1b275;db22f5b[659]<=co1fca7;db22f5b[632]<=fpb0c6f[0];db22f5b[594]<=dmf4a3c[0];db22f5b[591]<=vx28f1f[0];db22f5b[520]<=meef26b[0];db22f5b[483]<=ks31bfb[0];db22f5b[464]<=jc4daed[0];db22f5b[439]<=wjc364e;db22f5b[329]<=ble3f94;db22f5b[316]<=gd3c7f2[0];db22f5b[297]<=npd_processed[0];db22f5b[232]<=alc9b5d[0];db22f5b[219]<=phy_l0_l0s;db22f5b[148]<=nph_processed[0];db22f5b[134]<=xj6b0aa[0];db22f5b[109]<=pf644cc;db22f5b[74]<=cmfafa5[0];db22f5b[67]<=ps4d615[0];db22f5b[54]<=vcneg_pend[0];db22f5b[33]<=enc9ac2[0];db22f5b[27]<=ec5913[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






































































`timescale 1 ns / 100 ps
module  pcie_x1_ri25a55(
   input wire                    sys_clk,      
   input wire                    rst_n,        
   
   input wire                    dl_inactive,   
   input wire [`NUM_VC-1:0]      me56173,         
   input wire [`NUM_VC*3-1:0]    zzaaef7,          
   input wire                    ym97759, 
   input wire                    uxbbac8, 
   input wire                    jpdd644,  
   input wire [1:0]              ie92eeb, 
   input wire [2:0]              phbf50c, 
   input wire [19:0]             wwfa867, 


   input wire [`NUM_VC -1:0]     tx_st,         
   input wire [`NUM_VC -1:0]     tx_end,        
   input wire [`NUM_VC -1:0]     tx_nlfy,       
   `ifdef X4
      input wire [(`NUM_VC*64)-1:0] tx_data,    
      input wire                 nt38338,    
   `endif
   `ifdef X1
      input wire [(`NUM_VC*16)-1:0] tx_data,    
   `endif

   input wire                    cfg_ph_cc,     
   input wire                    cfg_pd_cc,     
   input wire                    cfg_cplh_cc,   
   input wire                    cfg_cpld_cc,   

   output wire                   ie31e3d, 
   
   output reg [(`NUM_VC*9)-1:0]  tx_ca_ph,        
   output reg [(`NUM_VC*13)-1:0] tx_ca_pd,        
   output reg [(`NUM_VC*9)-1:0]  fnc7a69,       
   output reg [(`NUM_VC*13)-1:0] rv3d34e,       
   output reg [(`NUM_VC*9)-1:0]  tx_ca_cplh,      
   output reg [(`NUM_VC*13)-1:0] fa4d3b6       
   );
parameter tu69db2    = 3'b000;
parameter sh4ed92   = 3'b001;
parameter tu76c94  = 3'b010;
parameter ukb64a2    = 3'b011;
parameter hqb2511   = 3'b100;
parameter gq9288b  = 3'b101;
parameter cb2c591   = 2'b00;
parameter os62c8d  = 2'b01;
parameter fp16469 = 2'b10;
reg  [11:0]               lf8b3d3;
reg  [7:0]                su59e9f;
reg                       enc9594;
reg                       an392b2;
reg  [11:0]               wjd3e1d;
reg  [7:0]                ir9f0ed;
reg                       ea56526;
reg                       nr4aca4;
reg  [11:0]               ir1db24;
reg  [7:0]                aled924;
reg                       rv94982;
reg                       pub2930;
reg                       ks24916;
reg                       sw248b0;
reg                       ec24580;
reg  [11:0]               db22c01;
reg  [7:0]                vx1600f;
reg  [11:0]               xlb007e;
reg  [7:0]                cb803f6;
reg  [11:0]               ri1fb4;
reg  [7:0]                ksfda3;
reg                       jp7ed18;
reg                       zxf68c6;
reg                       sjb4636;
reg                       mga31b4;
reg  [8:0]                kf18da0;
reg                       qtc6d04;
reg                       an36824;
reg                       anb4124;
reg                       bna0924;
reg                       zm4926;
reg                       wy24933;
reg                       ks24998;
reg                       sw24cc0;
reg                       gd26600;
reg                       oh33004;
reg                       ks98025;
reg                       tuc0129;
reg                       wy94a;
reg                       zm4a51;
reg  [11:0]               xy2528b;
reg  [7:0]                yz2945b;
reg  [11:0]               ld4a2dd;
reg  [7:0]                uv516ef;
reg                       tj8b77d;
reg                       gb5bbef;
reg                       pfddf7d;
reg                       cmefbee;
reg                       os7df71;
reg                       osefb89;

`ifdef X1
reg [1:0]              go7dc49;
reg [4:0]              dmee249;

`endif

`ifdef X4
wire [1:0]             go7dc49;
wire [4:0]             dmee249;

`endif
wire                      os492b2;
wire                      me49590;
wire [11:0]               zx4ac80;
wire [7:0]                ww56406;
wire                      dob2030;
wire                      cb90183;
wire                      ep80c1d;
wire                      nt60ed;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
reg fc3076f;
reg [`NUM_VC - 1 : 0] rgf151b;
reg [`NUM_VC * 3 - 1 : 0] cb1dbd2;
reg ip708bb;
reg rv845dd;
reg jr22eee;
reg [1 : 0] qv17777;
reg [2 : 0] xl9492f;
reg [19 : 0] mta497e;
reg [`NUM_VC - 1 : 0] ie24bf4;
reg [`NUM_VC - 1 : 0] do25fa0;
reg [`NUM_VC - 1 : 0] pu2fd02;
reg rt7e813;
reg jcf409e;
reg vxa04f2;
reg ir2797;
reg [11 : 0] tj13cbd;
reg [7 : 0] lf9e5ef;
reg ea67a36;
reg ldecf46;
reg [11 : 0] zmbdfa1;
reg [7 : 0] ykefd0b;
reg cze8d8e;
reg db3d1b1;
reg [11 : 0] ana1672;
reg [7 : 0] vkb395;
reg ep363a0;
reg kq46c74;
reg go72ac1;
reg wl95608;
reg irab045;
reg [11 : 0] ho5822c;
reg [7 : 0] uic1163;
reg [11 : 0] gd8b18;
reg [7 : 0] hb458c5;
reg [11 : 0] kf2c62f;
reg [7 : 0] by6317d;
reg an18bea;
reg nec5f54;
reg fc2faa3;
reg me7d51b;
reg [8 : 0] uiea8d8;
reg en546c1;
reg swa360d;
reg fc1b068;
reg dzd8342;
reg osc1a17;
reg ohd0b9;
reg me685cc;
reg rg42e61;
reg ir1730a;
reg ukb9854;
reg mrcc2a1;
reg zx6150c;
reg mga867;
reg yx54338;
reg [11 : 0] yza19c5;
reg [7 : 0] dbce2c;
reg [11 : 0] go67167;
reg [7 : 0] ph38b38;
reg xwc59c7;
reg ir2ce3b;
reg go671dc;
reg ph38ee0;
reg zxc7707;
reg wy3b83f;
reg yxdc1f8;
reg aye0fc5;
reg [11 : 0] sj7e28;
reg [7 : 0] pu3f144;
reg yxf8a23;
reg rgc511d;
reg jr288ea;
reg qt44756;
reg [2047:0] db22f5b;
wire [73:0] ux17adf;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 74,jceb7ea = 32'hfdffe0cb;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif









`ifdef X1



`endif



`ifdef X4



`endif





assign ie31e3d = mga867 | yx54338;
assign zx4ac80 = mta497e[11:0];
assign ww56406  = mta497e[19:12];






always @ (*) begin   xy2528b = 0;   yz2945b  = 0;   case(qv17777)      cb2c591   : begin         xy2528b = tj13cbd;         yz2945b  = lf9e5ef;      end      os62c8d  :  begin         xy2528b = zmbdfa1;         yz2945b  = ykefd0b;      end      fp16469 :  begin         xy2528b = ana1672;         yz2945b  = vkb395;      end   endcase
end
assign dob2030  = (pu3f144 != 0) ? 1'b1 : 1'b0;
assign cb90183 = (sj7e28 != 0) ? 1'b1 : 1'b0;
assign nt60ed = xwc59c7 | go671dc | zxc7707;
assign ep80c1d  = ir2ce3b | ph38ee0 | wy3b83f;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      wy94a  <= 1'b0;      zm4a51  <= 1'b0;      ld4a2dd         <= 0;      uv516ef          <= 0;      tj8b77d            <= 1'b0;      gb5bbef            <= 1'b0;      pfddf7d           <= 1'b0;      cmefbee           <= 1'b0;      os7df71          <= 1'b0;      osefb89          <= 1'b0;   end   else begin      wy94a  <= 1'b0;      zm4a51  <= 1'b0;      tj8b77d            <= 1'b0;      gb5bbef            <= 1'b0;      pfddf7d           <= 1'b0;      cmefbee           <= 1'b0;      os7df71          <= 1'b0;      osefb89          <= 1'b0;            if(xl9492f == cb1dbd2) begin         case(qv17777)            cb2c591 : begin               if(jr22eee && go72ac1) begin                  tj8b77d <= !ea67a36;                  gb5bbef <= !ldecf46;                  if((ea67a36 && rgc511d) || (ldecf46 && yxf8a23))                     wy94a  <= 1'b1;               end            end            os62c8d : begin               if(jr22eee && wl95608) begin                  pfddf7d <= !cze8d8e;                  cmefbee <= !db3d1b1;                  if((cze8d8e && rgc511d) || (db3d1b1 && yxf8a23))                     wy94a  <= 1'b1;               end            end            fp16469 : begin               if(jr22eee && irab045) begin                  os7df71 <= !ep363a0;                  osefb89 <= !kq46c74;                  if((ep363a0 && rgc511d) || (kq46c74 && yxf8a23))                     wy94a  <= 1'b1;               end            end         endcase      end            ld4a2dd <= sj7e28 - yza19c5;      uv516ef  <= pu3f144  - dbce2c;      if(((go67167 > 2047) && qt44756) || ((ph38b38 > 127) && jr288ea))         zm4a51  <= 1'b1;      else         zm4a51  <= 1'b0;   end
end









assign os492b2  = ip708bb | rv845dd | jr22eee;
assign me49590     = ip708bb | rv845dd;
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      lf8b3d3      <= 12'h000;      su59e9f       <= 8'h00;      wjd3e1d     <= 12'h000;      ir9f0ed      <= 8'h00;      ir1db24    <= 12'h000;      aled924     <= 8'h00;      enc9594        <= 1'b0;      an392b2        <= 1'b0;      ea56526       <= 1'b0;      nr4aca4       <= 1'b0;      rv94982      <= 1'b0;      pub2930      <= 1'b0;      ks24916          <= 1'b0;      sw248b0         <= 1'b0;      ec24580        <= 1'b0;   end   else begin                                    if(xl9492f == cb1dbd2) begin         case(qv17777)            cb2c591 : begin               if(yxdc1f8) begin                  lf8b3d3    <= sj7e28;                  su59e9f     <= pu3f144;               end               if(aye0fc5) begin                  if(go72ac1 == 1'b0) begin                     enc9594      <= (rgc511d) ? 1'b0 : 1'b1;                     an392b2      <= (yxf8a23) ? 1'b0 : 1'b1;                  end               end            end            os62c8d : begin               if(yxdc1f8) begin                  wjd3e1d   <= sj7e28;                  ir9f0ed    <= pu3f144;               end               if(aye0fc5) begin                  if(wl95608 == 1'b0) begin                     ea56526     <= (rgc511d) ? 1'b0 : 1'b1;                     nr4aca4     <= (yxf8a23) ? 1'b0 : 1'b1;                  end               end            end            fp16469 : begin               if(yxdc1f8) begin                  ir1db24  <= sj7e28;                  aled924   <= pu3f144;               end               if(aye0fc5) begin                  if(irab045 == 1'b0) begin                     rv94982    <= (rgc511d) ? 1'b0 : 1'b1;                     pub2930    <= (yxf8a23) ? 1'b0 : 1'b1;                  end               end            end         endcase      end                        if(fc3076f || !rgf151b) begin         ks24916   <= 1'b0;         sw248b0  <= 1'b0;         ec24580 <= 1'b0;      end      else if((xl9492f == cb1dbd2) && aye0fc5) begin         case(qv17777)            cb2c591   : ks24916   <= 1'b1;            os62c8d  : sw248b0  <= 1'b1;            fp16469 : ec24580 <= 1'b1;         endcase      end   end
end






always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      jp7ed18     <= 1'b0;      mga31b4      <= 1'b0;      zxf68c6  <= 1'b0;      sjb4636  <= 1'b0;   end   else begin


`ifdef X1
      jp7ed18     <= ie24bf4;      mga31b4      <= pu2fd02;      zxf68c6  <= an18bea | vxa04f2 | rt7e813;      sjb4636  <= vxa04f2 | rt7e813;


`endif



`ifdef X4
      jp7ed18     <= (ie24bf4 | vxa04f2 | rt7e813)  & nt38338;      mga31b4      <= pu2fd02 & nt38338;      zxf68c6  <= an18bea;      if(nt38338)         sjb4636 <= vxa04f2 | rt7e813;


`endif
   end
end













`ifdef X1

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      go7dc49   <= 2'b00;      dmee249 <= 5'b00000;   end   else if (ie24bf4) begin      go7dc49   <= tx_data[14:13];      dmee249 <= tx_data[12:8];   end
end

`endif



`ifdef X4
   assign go7dc49      = tx_data[62:61];   assign dmee249 = tx_data[60:56];

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qtc6d04     <= 1'b0 ;      an36824     <= 1'b0 ;      anb4124    <= 1'b0 ;      bna0924    <= 1'b0 ;      zm4926   <= 1'b0;      wy24933   <= 1'b0;      kf18da0 <= 9'h000;      ks24998   <= 1'b0 ;      sw24cc0   <= 1'b0 ;      gd26600  <= 1'b0 ;      oh33004  <= 1'b0 ;      ks98025 <= 1'b0;      tuc0129 <= 1'b0;   end   else begin            


`ifdef X1
      if(ir2797 || jcf409e)         kf18da0 <= 9'h001;      else if(an18bea) begin         if(tx_data[1:0] == 2'b00)               kf18da0 <= {(~(|tx_data[9:2])), tx_data[9:2]};         else              kf18da0 <= tx_data[9:2] + 1;      end


`endif



`ifdef X4
      if((ir2797 || jcf409e) & nt38338)         kf18da0 <= 9'h001;      else if(ie24bf4 & nt38338) begin         if(tx_data[33:32] == 2'b00)               kf18da0 <= {(~(|tx_data[41:34])), tx_data[41:34]};         else              kf18da0 <= tx_data[41:34] + 1;      end


`endif




`ifdef X1
      if(vxa04f2 || rt7e813) begin         if(vxa04f2) begin              if(!kq46c74) zm4926 <= 1'b1;            if(!ep363a0) wy24933 <= ir2797;         end         else begin              if(!ldecf46) qtc6d04 <= 1'b1;            if(!ea67a36) an36824 <= jcf409e;         end      end      else if(an18bea) begin         if(!ea67a36)   an36824   <= (((dmee249[4:3] == 2'b10) || (dmee249[2:0] == 3'b000)) && go7dc49[1]) ? 1'b1 : 1'b0;         if(!ldecf46)   qtc6d04   <= ((dmee249[4:3] == 2'b10) || ((dmee249[2:0] == 3'b000) && go7dc49[1])) ? 1'b1 : 1'b0;         if(!cze8d8e)  bna0924  <= ((dmee249[4:3] == 2'b00) && go7dc49[1] && (dmee249[2:0] != 3'b000)) ? 1'b1 : 1'b0;         if(!db3d1b1)  anb4124  <= ((dmee249[4:3] == 2'b00) && !((dmee249[2:0] == 3'b000) && go7dc49[1])) ? 1'b1 : 1'b0;         if(!kq46c74) zm4926 <= (dmee249 == 5'b0_1010) ? 1'b1 : 1'b0;         if(!ep363a0) wy24933 <= ((dmee249 == 5'b0_1010) && go7dc49[1]) ? 1'b1 : 1'b0;      end      else if (do25fa0 || pu2fd02 || fc2faa3) begin         qtc6d04   <= 1'b0; an36824   <= 1'b0;         anb4124  <= 1'b0; bna0924  <= 1'b0;         zm4926 <= 1'b0; wy24933 <= 1'b0;      end


`endif



`ifdef X4
      if((vxa04f2 || rt7e813) & nt38338) begin         if(vxa04f2) begin              if(!kq46c74) zm4926 <= 1'b1;            if(!ep363a0) wy24933 <= ir2797;         end         else begin              if(!ldecf46) qtc6d04 <= 1'b1;            if(!ea67a36) an36824 <= jcf409e;         end      end      else if(ie24bf4 & nt38338) begin         if(!ea67a36)   an36824   <= (((dmee249[4:3] == 2'b10) || (dmee249[2:0] == 3'b000)) && go7dc49[1]) ? 1'b1 : 1'b0;         if(!ldecf46)   qtc6d04   <= ((dmee249[4:3] == 2'b10) || ((dmee249[2:0] == 3'b000) && go7dc49[1])) ? 1'b1 : 1'b0;         if(!cze8d8e)  bna0924  <= ((dmee249[4:3] == 2'b00) && go7dc49[1] && (dmee249[2:0] != 3'b000)) ? 1'b1 : 1'b0;         if(!db3d1b1)  anb4124  <= ((dmee249[4:3] == 2'b00) && !((dmee249[2:0] == 3'b000) && go7dc49[1])) ? 1'b1 : 1'b0;         if(!kq46c74) zm4926 <= (dmee249 == 5'b0_1010) ? 1'b1 : 1'b0;         if(!ep363a0) wy24933 <= ((dmee249 == 5'b0_1010) && go7dc49[1]) ? 1'b1 : 1'b0;      end      else if ((do25fa0 || pu2fd02 || fc2faa3) & nt38338) begin         qtc6d04   <= 1'b0; an36824   <= 1'b0;         anb4124  <= 1'b0; bna0924  <= 1'b0;         zm4926 <= 1'b0; wy24933 <= 1'b0;      end


`endif

      ks24998   <= en546c1;      sw24cc0   <= swa360d;      gd26600  <= fc1b068;      oh33004  <= dzd8342;      ks98025 <= osc1a17;      tuc0129 <= ohd0b9;   end
end







`ifdef X1
   assign vifbc55 = nec5f54 ;

`endif



`ifdef X4
   assign vifbc55 = an18bea ;

`endif

always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      vx1600f    <= 8'h00;      cb803f6   <= 8'h00;      ksfda3  <= 8'h00;      db22c01   <= 12'h000;      ri1fb4 <= 12'h000;      xlb007e  <= 12'h000;   end   else begin      if(fc3076f || !rgf151b) begin         vx1600f    <= 8'h00;         cb803f6   <= 8'h00;         ksfda3  <= 8'h00;         db22c01   <= 12'h000;         ri1fb4 <= 12'h000;         xlb007e  <= 12'h000;      end      else if(vifbc55) begin         vx1600f   <= (en546c1) ? (uic1163 + 1'b1) : uic1163;         cb803f6  <= (fc1b068) ? (hb458c5 + 1'b1) : hb458c5;         ksfda3 <= (osc1a17) ? (by6317d + 1'b1) : by6317d;         db22c01   <= (swa360d) ? (ho5822c + uiea8d8) : ho5822c;         xlb007e  <= (dzd8342) ? (gd8b18 + 1'b1) : gd8b18;         ri1fb4 <= (ohd0b9) ? (kf2c62f + uiea8d8) : kf2c62f;      end      else if(me7d51b) begin         vx1600f   <= (me685cc) ? (uic1163 - 1'b1) : uic1163;         cb803f6  <= (ir1730a) ? (hb458c5 - 1'b1) : hb458c5;         ksfda3 <= (mrcc2a1) ? (by6317d - 1'b1) : by6317d;         db22c01   <= (rg42e61) ? (ho5822c - uiea8d8) : ho5822c;         xlb007e  <= (ukb9854) ? (gd8b18 - 1'b1) : gd8b18;         ri1fb4 <= (zx6150c) ? (kf2c62f - uiea8d8) : kf2c62f;      end   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      tx_ca_ph    <= 9'h00;      fnc7a69   <= 9'h00;      tx_ca_cplh  <= 9'h00;      tx_ca_pd    <= 13'h000;      rv3d34e   <= 13'h000;      fa4d3b6  <= 13'h000;   end   else begin      tx_ca_ph[7:0]    <= lf9e5ef - uic1163;      fnc7a69[7:0]   <= ykefd0b - hb458c5;      tx_ca_cplh[7:0]  <= vkb395 - by6317d;
      tx_ca_pd[11:0]   <= tj13cbd - ho5822c;      rv3d34e[11:0]  <= zmbdfa1 - gd8b18;      fa4d3b6[11:0] <= ana1672 - kf2c62f;            tx_ca_ph[8]      <= ldecf46;      fnc7a69[8]     <= db3d1b1;      tx_ca_cplh[8]    <= kq46c74;      tx_ca_pd[12]     <= ea67a36;      rv3d34e[12]    <= cze8d8e;      fa4d3b6[12]   <= ep363a0;   end
end
always@* begin fc3076f<=ux17adf[0];rgf151b<={me56173>>1,ux17adf[1]};cb1dbd2<={zzaaef7>>1,ux17adf[2]};ip708bb<=ux17adf[3];rv845dd<=ux17adf[4];jr22eee<=ux17adf[5];qv17777<={ie92eeb>>1,ux17adf[6]};xl9492f<={phbf50c>>1,ux17adf[7]};mta497e<={wwfa867>>1,ux17adf[8]};ie24bf4<={tx_st>>1,ux17adf[9]};do25fa0<={tx_end>>1,ux17adf[10]};pu2fd02<={tx_nlfy>>1,ux17adf[11]};rt7e813<=ux17adf[12];jcf409e<=ux17adf[13];vxa04f2<=ux17adf[14];ir2797<=ux17adf[15];tj13cbd<={lf8b3d3>>1,ux17adf[16]};lf9e5ef<={su59e9f>>1,ux17adf[17]};ea67a36<=ux17adf[18];ldecf46<=ux17adf[19];zmbdfa1<={wjd3e1d>>1,ux17adf[20]};ykefd0b<={ir9f0ed>>1,ux17adf[21]};cze8d8e<=ux17adf[22];db3d1b1<=ux17adf[23];ana1672<={ir1db24>>1,ux17adf[24]};vkb395<={aled924>>1,ux17adf[25]};ep363a0<=ux17adf[26];kq46c74<=ux17adf[27];go72ac1<=ux17adf[28];wl95608<=ux17adf[29];irab045<=ux17adf[30];ho5822c<={db22c01>>1,ux17adf[31]};uic1163<={vx1600f>>1,ux17adf[32]};gd8b18<={xlb007e>>1,ux17adf[33]};hb458c5<={cb803f6>>1,ux17adf[34]};kf2c62f<={ri1fb4>>1,ux17adf[35]};by6317d<={ksfda3>>1,ux17adf[36]};an18bea<=ux17adf[37];nec5f54<=ux17adf[38];fc2faa3<=ux17adf[39];me7d51b<=ux17adf[40];uiea8d8<={kf18da0>>1,ux17adf[41]};en546c1<=ux17adf[42];swa360d<=ux17adf[43];fc1b068<=ux17adf[44];dzd8342<=ux17adf[45];osc1a17<=ux17adf[46];ohd0b9<=ux17adf[47];me685cc<=ux17adf[48];rg42e61<=ux17adf[49];ir1730a<=ux17adf[50];ukb9854<=ux17adf[51];mrcc2a1<=ux17adf[52];zx6150c<=ux17adf[53];mga867<=ux17adf[54];yx54338<=ux17adf[55];yza19c5<={xy2528b>>1,ux17adf[56]};dbce2c<={yz2945b>>1,ux17adf[57]};go67167<={ld4a2dd>>1,ux17adf[58]};ph38b38<={uv516ef>>1,ux17adf[59]};xwc59c7<=ux17adf[60];ir2ce3b<=ux17adf[61];go671dc<=ux17adf[62];ph38ee0<=ux17adf[63];zxc7707<=ux17adf[64];wy3b83f<=ux17adf[65];yxdc1f8<=ux17adf[66];aye0fc5<=ux17adf[67];sj7e28<={zx4ac80>>1,ux17adf[68]};pu3f144<={ww56406>>1,ux17adf[69]};yxf8a23<=ux17adf[70];rgc511d<=ux17adf[71];jr288ea<=ux17adf[72];qt44756<=ux17adf[73];end
always@* begin db22f5b[2047]<=me56173[0];db22f5b[2046]<=zzaaef7[0];db22f5b[2044]<=ym97759;db22f5b[2041]<=tuc0129;db22f5b[2040]<=uxbbac8;db22f5b[2035]<=wy94a;db22f5b[2033]<=jpdd644;db22f5b[2024]<=ir9f0ed[0];db22f5b[2022]<=zm4a51;db22f5b[2018]<=ie92eeb[0];db22f5b[2001]<=ea56526;db22f5b[1997]<=xy2528b[0];db22f5b[1988]<=phbf50c[0];db22f5b[1954]<=nr4aca4;db22f5b[1946]<=yz2945b[0];db22f5b[1929]<=wwfa867[0];db22f5b[1917]<=nt60ed;db22f5b[1874]<=ri1fb4[0];db22f5b[1860]<=ir1db24[0];db22f5b[1851]<=zx4ac80[0];db22f5b[1845]<=ld4a2dd[0];db22f5b[1811]<=tx_st[0];db22f5b[1789]<=enc9594;db22f5b[1721]<=cmefbee;db22f5b[1700]<=ksfda3[0];db22f5b[1673]<=aled924[0];db22f5b[1655]<=ww56406[0];db22f5b[1643]<=uv516ef[0];db22f5b[1574]<=tx_end[0];db22f5b[1530]<=an392b2;db22f5b[1486]<=os492b2;db22f5b[1395]<=os7df71;db22f5b[1353]<=jp7ed18;db22f5b[1317]<=sjb4636;db22f5b[1311]<=wy24933;db22f5b[1299]<=rv94982;db22f5b[1263]<=dob2030;db22f5b[1258]<=vx1600f[0];db22f5b[1247]<=cfg_cpld_cc;db22f5b[1239]<=tj8b77d;db22f5b[1187]<=anb4124;db22f5b[1172]<=kf18da0[0];db22f5b[1151]<=sw24cc0;db22f5b[1102]<=ks24916;db22f5b[1101]<=tx_nlfy[0];db22f5b[1023]<=dl_inactive;db22f5b[1020]<=ks98025;db22f5b[1012]<=wjd3e1d[0];db22f5b[958]<=ep80c1d;db22f5b[937]<=cb803f6[0];db22f5b[925]<=me49590;db22f5b[894]<=su59e9f[0];db22f5b[860]<=pfddf7d;db22f5b[743]<=osefb89;db22f5b[658]<=zxf68c6;db22f5b[655]<=zm4926;db22f5b[629]<=db22c01[0];db22f5b[623]<=cfg_cplh_cc;db22f5b[593]<=an36824;db22f5b[586]<=mga31b4;db22f5b[575]<=ks24998;db22f5b[551]<=pub2930;db22f5b[510]<=oh33004;db22f5b[479]<=cb90183;db22f5b[468]<=xlb007e[0];db22f5b[447]<=lf8b3d3[0];db22f5b[430]<=gb5bbef;db22f5b[327]<=bna0924;db22f5b[314]<=ec24580;db22f5b[311]<=cfg_pd_cc;db22f5b[296]<=qtc6d04;db22f5b[255]<=gd26600;db22f5b[157]<=sw248b0;db22f5b[155]<=cfg_ph_cc;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule































































`timescale 1 ns / 100 ps
module  pcie_x1_co2411b(
   input wire                    sys_clk,      
   input wire                    rst_n,        
   
   input wire                    dl_inactive,   
   input wire [`NUM_VC-1:0]      me56173,         
   input wire [`NUM_VC*3-1:0]    zzaaef7,          
   input wire                    ym97759, 
   input wire                    uxbbac8, 
   input wire                    jpdd644,  
   input wire [1:0]              ie92eeb, 
   input wire [2:0]              phbf50c, 
   input wire [19:0]             wwfa867, 
   input wire                    cfg_ph_cc,     
   input wire                    cfg_pd_cc,     
   input wire                    cfg_cplh_cc,   
   input wire                    cfg_cpld_cc,   

   input wire [`NUM_VC -1:0]     tx_st,         
   input wire [`NUM_VC -1:0]     tx_end,        
   input wire [`NUM_VC -1:0]     tx_nlfy,       
   `ifdef X4
      input wire [(`NUM_VC*64)-1:0] tx_data,    
      input wire                 nt38338,    
   `endif
   `ifdef X1
      input wire [(`NUM_VC*16)-1:0] tx_data,    
   `endif

   output reg                     ie31e3d, 
   
   output wire [(`NUM_VC*9)-1:0]  tx_ca_ph,        
   output wire [(`NUM_VC*13)-1:0] tx_ca_pd,        
   output wire [(`NUM_VC*9)-1:0]  fnc7a69,       
   output wire [(`NUM_VC*13)-1:0] rv3d34e,       
   output wire [(`NUM_VC*9)-1:0]  tx_ca_cplh,      
   output wire [(`NUM_VC*13)-1:0] fa4d3b6       

   );
reg  [`NUM_VC -1:0]           kqe5b85;
reg  [`NUM_VC -1:0]           vx2dc28;
reg  [`NUM_VC -1:0]           jp6e146;
reg  [`NUM_VC -1:0]           qt70a36;
wire   [`NUM_VC -1:0]         cb851b5;

`ifdef X4

`endif
reg fc3076f;
reg [`NUM_VC - 1 : 0] rgf151b;
reg [`NUM_VC * 3 - 1 : 0] cb1dbd2;
reg ip708bb;
reg rv845dd;
reg jr22eee;
reg [1 : 0] qv17777;
reg [2 : 0] xl9492f;
reg [19 : 0] mta497e;
reg rt7e813;
reg jcf409e;
reg vxa04f2;
reg ir2797;
reg [`NUM_VC - 1 : 0] ie24bf4;
reg [`NUM_VC - 1 : 0] do25fa0;
reg [`NUM_VC - 1 : 0] pu2fd02;
reg [`NUM_VC - 1 : 0] bnbfab2;
reg [`NUM_VC - 1 : 0] mrfd596;
reg [`NUM_VC - 1 : 0] uieacb4;
reg [`NUM_VC - 1 : 0] cm565a1;
reg [2047:0] db22f5b;
wire [19:0] ux17adf;


`ifdef X4

`endif

localparam ribd6fd = 20,jceb7ea = 32'hfdfff10b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif





always@(*) begin   kqe5b85   = 0;   vx2dc28   = 0;   jp6e146 = 0;   qt70a36 = 0;   kqe5b85[0]   = rt7e813;      vx2dc28[0]   = jcf409e;   jp6e146[0] = vxa04f2;   qt70a36[0] = ir2797;
end
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ie31e3d <= 1'b0;   end   else begin      ie31e3d <= |cm565a1;   end
end



pcie_x1_ri25a55 thf31b2 [`NUM_VC -1:0] (         .sys_clk         (sys_clk),    .rst_n           (rst_n),    .dl_inactive     (fc3076f),    .me56173           (rgf151b),    .zzaaef7            (cb1dbd2),    .ym97759   (ip708bb),    .uxbbac8   (rv845dd),    .jpdd644    (jr22eee),    .ie92eeb   (qv17777),    .phbf50c   (xl9492f),    .wwfa867   (mta497e),    .cfg_ph_cc       (kqe5b85),    .cfg_pd_cc       (bnbfab2),    .cfg_cplh_cc     (mrfd596),    .cfg_cpld_cc     (uieacb4),    .tx_st           (ie24bf4),    .tx_end          (do25fa0),    .tx_nlfy         (pu2fd02),    .tx_data         (tx_data),


`ifdef X4
       .nt38338   (nt38338),


`endif

        .ie31e3d (cb851b5),    .tx_ca_ph        (tx_ca_ph),    .tx_ca_pd        (tx_ca_pd),    .fnc7a69       (fnc7a69),    .rv3d34e       (rv3d34e),    .tx_ca_cplh      (tx_ca_cplh),    .fa4d3b6      (fa4d3b6)
    );


always@* begin fc3076f<=ux17adf[0];rgf151b<={me56173>>1,ux17adf[1]};cb1dbd2<={zzaaef7>>1,ux17adf[2]};ip708bb<=ux17adf[3];rv845dd<=ux17adf[4];jr22eee<=ux17adf[5];qv17777<={ie92eeb>>1,ux17adf[6]};xl9492f<={phbf50c>>1,ux17adf[7]};mta497e<={wwfa867>>1,ux17adf[8]};rt7e813<=ux17adf[9];jcf409e<=ux17adf[10];vxa04f2<=ux17adf[11];ir2797<=ux17adf[12];ie24bf4<={tx_st>>1,ux17adf[13]};do25fa0<={tx_end>>1,ux17adf[14]};pu2fd02<={tx_nlfy>>1,ux17adf[15]};bnbfab2<={vx2dc28>>1,ux17adf[16]};mrfd596<={jp6e146>>1,ux17adf[17]};uieacb4<={qt70a36>>1,ux17adf[18]};cm565a1<={cb851b5>>1,ux17adf[19]};end
always@* begin db22f5b[2047]<=me56173[0];db22f5b[2046]<=zzaaef7[0];db22f5b[2044]<=ym97759;db22f5b[2040]<=uxbbac8;db22f5b[2032]<=jpdd644;db22f5b[2016]<=ie92eeb[0];db22f5b[1985]<=phbf50c[0];db22f5b[1950]<=jp6e146[0];db22f5b[1923]<=wwfa867[0];db22f5b[1852]<=qt70a36[0];db22f5b[1799]<=cfg_ph_cc;db22f5b[1656]<=cb851b5[0];db22f5b[1551]<=cfg_pd_cc;db22f5b[1054]<=cfg_cplh_cc;db22f5b[1023]<=dl_inactive;db22f5b[975]<=vx2dc28[0];db22f5b[487]<=tx_nlfy[0];db22f5b[243]<=tx_end[0];db22f5b[121]<=tx_st[0];db22f5b[60]<=cfg_cpld_cc;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule












































`timescale 1 ns / 100 ps
module pcie_x1_th74f0c (
   
   input wire                sys_clk ,           
   input wire                rst_n ,             

   `ifdef EN_BAR0
   input wire [31:0]               lqe19dc , 
   input wire [31:0]               dbcee2 , 
   `endif
   `ifdef EN_BAR1
   input wire [31:0]               go67717 , 
   input wire [31:0]               mg3b8b8 , 
   `endif
   `ifdef EN_BAR2
   input wire [31:0]               wjdc5c0 , 
   input wire [31:0]               mre2e05 , 
   `endif
   `ifdef EN_BAR3
   input wire [31:0]               oh1702d , 
   input wire [31:0]               rib816c , 
   `endif
   `ifdef EN_BAR4
   input wire [31:0]               jcc0b62 , 
   input wire [31:0]               ym5b13 , 
   `endif
   `ifdef EN_BAR5
   input wire [31:0]               rv2d899 , 
   input wire [31:0]               by6c4ce , 
   `endif
   `ifdef EN_ER_BAR
   input wire [31:0]               go62673 , 
   input wire [31:0]               ph13398 ,  
   `endif

   `ifdef X4
      output wire [6:0]            bar_hit , 
      output wire                  eace632 , 
   `endif
   `ifdef X1
      output reg [6:0]             bar_hit , 
      output wire                  bar_fail ,
   `endif

   
   input wire                   tlpdec_memrw ,
   input wire                   tlpdec_iorw ,
   input wire [31:0]            tlpdec_addr_l32 ,
   input wire [31:0]            tlpdec_addr_h32 ,
   input wire                   tlpdec_addr64   );
reg                   byc5ffa ;
reg                   ng2ffd3 ;
reg [6:0]             al7fe9b ;
reg                   cmff4dc ;
wire[6:0]             wwfa6e1 ;
wire                  czd3709 ;
wire [31:0]           bn9b84c ;
wire [31:0]           aldc267 ;
wire                  rge133d ;
wire                  db99eb ;
wire                  go4cf5f ;

`ifdef EN_BAR0
reg [3:0]   ea67af9 ;
reg         db3d7c9 ;
wire        byebe4e ;
wire        jp5f273 ;
wire        jpf939e ;
wire        yxc9cf6 ;
wire        uv4e7b5 ;
wire [31:0] ne73dad ;

`else
wire        db3d7c9 ;

`endif

`ifdef EN_BAR1
reg [3:0]   blf6b57 ;
reg         jrb5abe ;
wire        xyad5f7 ;
wire        cz6afbb ;
wire        ps57ddd ;
wire        epbeeeb ;
wire        kdf775c ;
wire [31:0] gdbbae5 ;

`else
wire        jrb5abe ;
wire [31:0] gdbbae5 ;
wire [31:0] go67717 ;

`endif

`ifdef EN_BAR2
reg [3:0]   kqe59d8 ;
reg         ux2cec0 ;
wire        yk67604 ;
wire        aa3b020 ;
wire        jpd8101 ;
wire        lqc080f ;
wire        pu407b ;
wire [31:0] ri203da ;

`else
wire        ux2cec0 ;

`endif

`ifdef EN_BAR3
reg [3:0]   mgf69b ;
reg         dz7b4d9 ;
wire        fada6cf ;
wire        czd367a ;
wire        bn9b3d4 ;
wire        wjd9ea6 ;
wire        hocf534 ;
wire [31:0] of7a9a3 ;

`else
wire        dz7b4d9 ;
wire [31:0] of7a9a3 ;
wire [31:0] oh1702d ;

`endif

`ifdef EN_BAR4
reg [3:0]   swa3808 ;
reg         lf1c041 ;
wire        aye020f ;
wire        vk1079 ;
wire        oh83ca ;
wire        of41e54 ;
wire        mgf2a5 ;
wire [31:0] by79529 ;

`else
wire        lf1c041 ;

`endif

`ifdef EN_BAR5
reg [3:0]   qt54a52 ;
reg         jra5294 ;
wire        qv294a7 ;
wire        zx4a53d ;
wire        by529ef ;
wire        xl94f7b ;
wire        lsa7bde ;
wire [31:0] hd3def3 ;

`else
wire        jra5294 ;
wire [31:0] hd3def3 ;
wire [31:0] rv2d899 ;

`endif

`ifdef EN_ER_BAR
reg         thf3e30 ;
wire [31:0] wl9f186 ;
wire        ipf8c34 ;

`else
wire        thf3e30 ;

`endif
wire        je30d2d ;
wire        xy8696b ;
wire        co34b5a ;

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_BAR0

`ifdef EN_BAR1

`else

`endif

`else

`endif

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR2

`ifdef EN_BAR3

`else

`endif

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR4

`ifdef EN_BAR5

`else

`endif

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_ER_BAR

`else

`endif

`ifdef X1
reg  eace632 ;

`endif

`ifdef X4

`endif
reg fp2d68e;
reg pf6b477;
reg [31 : 0] nr5a3be;
reg [31 : 0] med1df6;
reg db8efb0;
reg cm77d86;
reg qvbec30;
reg [6 : 0] dzf6184;
reg dbb0c27;
reg [6 : 0] ba8613f;
reg ng309fb;
reg [31 : 0] fp84fdb;
reg [31 : 0] vx27edf;
reg hq3f6ff;
reg lqfb7fb;
reg qgdbfdb;
reg psdfed9;
reg goff6cb;
reg dmfb659;
reg [2047:0] db22f5b;
wire [18:0] ux17adf;

`ifdef EN_BAR0

`else

`endif

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR2

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR4

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_ER_BAR

`else

`endif

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_BAR0

`ifdef EN_BAR1

`else

`endif

`else

`endif

`ifdef EN_BAR1

`else

`endif

`ifdef EN_BAR2

`ifdef EN_BAR3

`else

`endif

`else

`endif

`ifdef EN_BAR3

`else

`endif

`ifdef EN_BAR4

`ifdef EN_BAR5

`else

`endif

`else

`endif

`ifdef EN_BAR5

`else

`endif

`ifdef EN_ER_BAR

`else

`endif

`ifdef X1

`endif

`ifdef X4

`endif

localparam ribd6fd = 19,jceb7ea = 32'hfdffe0cb;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef EN_BAR0


`else


`endif


`ifdef EN_BAR1


`else


`endif


`ifdef EN_BAR2


`else


`endif


`ifdef EN_BAR3


`else


`endif


`ifdef EN_BAR4


`else


`endif


`ifdef EN_BAR5


`else


`endif


`ifdef EN_ER_BAR


`else


`endif


`ifdef EN_BAR1


`else


`endif


`ifdef EN_BAR3


`else


`endif


`ifdef EN_BAR5


`else


`endif


`ifdef EN_BAR0


`ifdef EN_BAR1


`else


`endif


`else


`endif


`ifdef EN_BAR1


`else


`endif


`ifdef EN_BAR2


`ifdef EN_BAR3


`else


`endif


`else


`endif


`ifdef EN_BAR3


`else


`endif


`ifdef EN_BAR4


`ifdef EN_BAR5


`else


`endif


`else


`endif


`ifdef EN_BAR5


`else


`endif


`ifdef EN_ER_BAR


`else


`endif


`ifdef X1


`endif


`ifdef X4


`endif



`ifdef EN_BAR0



`else



`endif




`ifdef EN_BAR1



`else



`endif




`ifdef EN_BAR2



`else



`endif




`ifdef EN_BAR3



`else



`endif




`ifdef EN_BAR4



`else



`endif




`ifdef EN_BAR5



`else



`endif




`ifdef EN_ER_BAR



`else



`endif



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ng2ffd3  <= 1'b0 ;      byc5ffa <= 1'b0 ;   end   else begin      byc5ffa <= fp2d68e ;      ng2ffd3  <= pf6b477 ;   end
end


assign bn9b84c  = nr5a3be ;
assign aldc267 = med1df6 ;


`ifdef EN_BAR1
   assign rge133d  = 1'b0 ;

`else
   assign rge133d  = 1'b1 ;

`endif



`ifdef EN_BAR3
   assign db99eb  = 1'b0 ;

`else
   assign db99eb  = 1'b1 ;

`endif



`ifdef EN_BAR5
   assign go4cf5f  = 1'b0 ;

`else
   assign go4cf5f  = 1'b1 ;

`endif





`ifdef EN_BAR0



`ifdef EN_BAR1
      assign je30d2d  = ~dbcee2[0] & dbcee2[2];


`else
      assign je30d2d  = 1'b0 ;


`endif
         always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         ea67af9 <= 4'b0000;      else if ( dbcee2[0] )         ea67af9 <= {dbcee2[3:2], 2'b00} ;      else         ea67af9 <= 4'b0000 ;   end   assign ne73dad = { dbcee2[31:4], ea67af9 };   assign byebe4e = (dbcee2[2:1] == 2'b00) & ~dbcee2[0] ;   assign jp5f273 = (dbcee2[2:1] == 2'b10) & ~dbcee2[0] ;   assign jpf939e    = dbcee2[0] ;   assign yxc9cf6 = (dbcee2 == 32'd0) ;   assign uv4e7b5 = ((fp2d68e & byebe4e && ~db8efb0) |                      (fp2d68e & jp5f273 )  |                      (pf6b477 & jpf939e)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         db3d7c9 <= 1'b0;      else if ( uv4e7b5 && !yxc9cf6 && !(psdfed9 && hq3f6ff) )         if ( psdfed9 )            db3d7c9 <= ((((fp84fdb  ^ lqe19dc) & ne73dad) == 32'd0) &                         (((vx27edf ^ go67717) & gdbbae5) == 32'd0)) ;         else            db3d7c9 <= (((fp84fdb  ^ lqe19dc) & ne73dad) == 32'd0) ;      else         db3d7c9 <= 1'b0 ;   end



`else
   assign db3d7c9 = 1'b0 ;

`endif



`ifdef EN_BAR1

            always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         blf6b57 <= 4'b0000;      else if ( psdfed9 )         blf6b57 <= mg3b8b8[3:0];      else if ( mg3b8b8[0] )         blf6b57 <= {mg3b8b8[3:2], 2'b00} ;      else         blf6b57 <=  4'b0000;   end   assign gdbbae5 = { mg3b8b8[31:4], blf6b57 };   assign xyad5f7 = (mg3b8b8[2:1] == 2'b00) & ~mg3b8b8[0] ;   assign cz6afbb = (mg3b8b8[2:1] == 2'b10) & ~mg3b8b8[0] ;   assign ps57ddd    = mg3b8b8[0] ;   assign epbeeeb = (mg3b8b8 == 32'd0) ;   assign kdf775c = ((fp2d68e & xyad5f7 && ~db8efb0) |                      (fp2d68e & cz6afbb )  |                      (pf6b477 & ps57ddd)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         jrb5abe <= 1'b0;      else if ( kdf775c && !epbeeeb )         jrb5abe <= (((fp84fdb  ^ go67717) & gdbbae5) == 32'd0) ;      else         jrb5abe <= 1'b0 ;   end



`else
   assign jrb5abe = 1'b0 ;   assign gdbbae5 = 32'd0 ;   assign go67717 = 32'd0 ;

`endif



`ifdef EN_BAR2



`ifdef EN_BAR3
      assign xy8696b  = ~mre2e05[0] & mre2e05[2];


`else
      assign xy8696b  = 1'b0 ;


`endif

         always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         kqe59d8 <= 4'b0000;      else if ( mre2e05[0] )         kqe59d8 <= {mre2e05[3:2], 2'b00} ;      else         kqe59d8 <=  4'b0000;   end   assign ri203da = { mre2e05[31:4], kqe59d8 };   assign yk67604 = (mre2e05[2:1] == 2'b00) & ~mre2e05[0] ;   assign aa3b020 = (mre2e05[2:1] == 2'b10) & ~mre2e05[0] ;   assign jpd8101    = mre2e05[0] ;   assign lqc080f = (mre2e05 == 32'd0) ;   assign pu407b = ((fp2d68e & yk67604 && ~db8efb0) |                      (fp2d68e & aa3b020 )  |                      (pf6b477 & jpd8101)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         ux2cec0 <= 1'b0;      else if ( pu407b && !lqc080f && !(goff6cb && lqfb7fb))         if ( goff6cb )            ux2cec0 <= ((((fp84fdb  ^ wjdc5c0) & ri203da) == 32'd0) &                         (((vx27edf ^ oh1702d) & of7a9a3) == 32'd0)) ;         else            ux2cec0 <= (((fp84fdb  ^ wjdc5c0) & ri203da) == 32'd0) ;      else         ux2cec0 <= 1'b0 ;   end



`else
   assign ux2cec0 = 1'b0 ;


`endif



`ifdef EN_BAR3

            always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         mgf69b <= 4'b0000;      else if ( goff6cb )         mgf69b <= rib816c[3:0];      else if ( rib816c[0] )         mgf69b <= {rib816c[3:2], 2'b00} ;      else         mgf69b <=  4'b0000;   end   assign of7a9a3 = { rib816c[31:4], mgf69b };   assign fada6cf = (rib816c[2:1] == 2'b00) & ~rib816c[0] ;   assign czd367a = goff6cb ;   assign bn9b3d4    = rib816c[0] ;   assign wjd9ea6 = (rib816c == 32'd0) ;   assign hocf534 = ((fp2d68e & fada6cf && ~db8efb0) |                      (fp2d68e & czd367a )  |                      (pf6b477 & bn9b3d4)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         dz7b4d9 <= 1'b0;      else if ( hocf534 && !wjd9ea6 )         dz7b4d9 <= (((fp84fdb  ^ oh1702d) & of7a9a3) == 32'd0) ;      else         dz7b4d9 <= 1'b0 ;   end



`else
   assign dz7b4d9  = 1'b0 ;   assign of7a9a3 = 32'd0 ;   assign oh1702d = 32'd0 ;

`endif



`ifdef EN_BAR4



`ifdef EN_BAR5
      assign co34b5a  = ~ym5b13[0] & ym5b13[2];


`else
      assign co34b5a  = 1'b0 ;


`endif

         always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         swa3808 <= 4'b0000;      else if ( ym5b13[0] )         swa3808 <= {ym5b13[3:2], 2'b00} ;      else         swa3808 <=  4'b0000;   end   assign by79529 = { ym5b13[31:4], swa3808 };   assign aye020f = (ym5b13[2:1] == 2'b00) & ~ym5b13[0] ;   assign vk1079 = (ym5b13[2:1] == 2'b10) & ~ym5b13[0] ;   assign oh83ca    = ym5b13[0] ;   assign of41e54 = (ym5b13 == 32'd0) ;   assign mgf2a5 = ((fp2d68e & aye020f && ~db8efb0) |                      (fp2d68e & vk1079 )  |                      (pf6b477 & oh83ca)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         lf1c041 <= 1'b0;      else if ( mgf2a5 && !of41e54 && !(dmfb659 && qgdbfdb))         if ( dmfb659 )            lf1c041 <= ((((fp84fdb  ^ jcc0b62) & by79529) == 32'd0) &                         (((vx27edf ^ rv2d899) & hd3def3) == 32'd0)) ;         else            lf1c041 <= (((fp84fdb  ^ jcc0b62) & by79529) == 32'd0) ;      else         lf1c041 <= 1'b0 ;   end



`else
   assign lf1c041 = 1'b0 ;

`endif



`ifdef EN_BAR5
            always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         qt54a52 <= 4'b0000;      else if ( dmfb659 )         qt54a52 <= by6c4ce[3:0];      else if ( by6c4ce[0] )         qt54a52 <= {by6c4ce[3:2], 2'b00} ;      else         qt54a52 <=  4'b0000;   end   assign hd3def3 = { by6c4ce[31:4], qt54a52 };   assign qv294a7 = (by6c4ce[2:1] == 2'b00) & ~by6c4ce[0] ;   assign zx4a53d = dmfb659 ;   assign by529ef    = by6c4ce[0] ;   assign xl94f7b = (by6c4ce == 32'd0) ;   assign lsa7bde = ((fp2d68e & qv294a7 && ~db8efb0) |                      (fp2d68e & zx4a53d )  |                      (pf6b477 & by529ef)                     ) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         jra5294 <= 1'b0;      else if ( lsa7bde && !xl94f7b )         jra5294 <= (((fp84fdb  ^ rv2d899) & hd3def3) == 32'd0) ;      else         jra5294 <= 1'b0 ;   end



`else
   assign jra5294  = 1'b0 ;   assign hd3def3 = 32'd0 ;   assign rv2d899 = 32'd0 ;

`endif



`ifdef EN_ER_BAR

   assign wl9f186 = {ph13398[31:11],11'h000} ;   assign ipf8c34 = (fp2d68e & ph13398[0]) ;
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         thf3e30 <= 1'b0;      else if (ipf8c34)         thf3e30 <= (((fp84fdb ^ go62673) & wl9f186) == 32'd0) ;      else         thf3e30 <= 1'b0;   end


`else
   assign thf3e30 = 1'b0 ;

`endif


assign  wwfa6e1     = {thf3e30, jra5294, lf1c041, dz7b4d9,                                      ux2cec0, jrb5abe, db3d7c9} ;
assign  czd3709 = (cm77d86 | qvbec30) ;



`ifdef X1
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         al7fe9b     <= 7'h00 ;         cmff4dc <= 1'b0 ;         bar_hit         <= 7'h00 ;         eace632     <= 1'b0 ;      end      else begin         al7fe9b     <= ba8613f;         cmff4dc <=  ng309fb;         bar_hit          <= dzf6184 ;         eace632      <= dbb0c27 ;
      end   end   assign bar_fail = (eace632 & ~(|bar_hit));

`endif




`ifdef X4
   assign  bar_hit     = ba8613f ;   assign  eace632 = ng309fb ;


`endif


always@* begin fp2d68e<=ux17adf[0];pf6b477<=ux17adf[1];nr5a3be<={tlpdec_addr_l32>>1,ux17adf[2]};med1df6<={tlpdec_addr_h32>>1,ux17adf[3]};db8efb0<=ux17adf[4];cm77d86<=ux17adf[5];qvbec30<=ux17adf[6];dzf6184<={al7fe9b>>1,ux17adf[7]};dbb0c27<=ux17adf[8];ba8613f<={wwfa6e1>>1,ux17adf[9]};ng309fb<=ux17adf[10];fp84fdb<={bn9b84c>>1,ux17adf[11]};vx27edf<={aldc267>>1,ux17adf[12]};hq3f6ff<=ux17adf[13];lqfb7fb<=ux17adf[14];qgdbfdb<=ux17adf[15];psdfed9<=ux17adf[16];goff6cb<=ux17adf[17];dmfb659<=ux17adf[18];end
always@* begin db22f5b[2047]<=tlpdec_iorw;db22f5b[2046]<=tlpdec_addr_l32[0];db22f5b[2044]<=tlpdec_addr_h32[0];db22f5b[2040]<=tlpdec_addr64;db22f5b[2033]<=byc5ffa;db22f5b[2018]<=ng2ffd3;db22f5b[1988]<=al7fe9b[0];db22f5b[1929]<=cmff4dc;db22f5b[1811]<=wwfa6e1[0];db22f5b[1789]<=co34b5a;db22f5b[1574]<=czd3709;db22f5b[1247]<=go4cf5f;db22f5b[1101]<=bn9b84c[0];db22f5b[1023]<=tlpdec_memrw;db22f5b[894]<=xy8696b;db22f5b[623]<=db99eb;db22f5b[447]<=je30d2d;db22f5b[311]<=rge133d;db22f5b[155]<=aldc267[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_ecrc#(
   parameter D_WIDTH  = 64 )
   (
   
   input wire                 sys_clk ,
   input wire                 rst_n ,

   
   input wire [D_WIDTH -1:0]  data_in ,
   input wire                 enable_crc , 
   input wire                 half_data , 
   input wire                 rst_crc , 

   output wire [31:0]         crc_out64 ,
   output wire [31:0]         crc_out32   ) ;
reg  [31:0]            crc_reg64 ;
reg  [31:0]            uie5c1d ;
reg  [31:0]            fc1b075 ;
reg  [31:0]            al70740 ;

`ifdef X4
wire [31:0]         zm83a04 ;

`endif

`ifdef X1
reg [31:0]          zm83a04 ;

`endif
reg  [63:0]            osc1d57 ;
reg  [63:0]            gb755ca ;
reg  [31:0]            ngeab9 ;
reg  [31:0]            jr22b7a ;
reg  [31:0]            ou15bd7 ;
reg  [31:0]            riadeb8 ;
reg                    ph63a5 ;
wire [7:0]             mr7ae14 ;
wire [7:0]             xjd70a4 ;
wire [7:0]             lsb8526 ;
wire [7:0]             pfc2932 ;
wire [7:0]             ri14996 ;
wire [7:0]             qva4cb2 ;
wire [7:0]             qv26594 ;
wire [7:0]             rv32ca4 ;

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif 

`ifdef X4

`endif 
reg [D_WIDTH - 1 : 0] qtf7c10;
reg hd2d459;
reg ira4c96;
reg ep264b4;
reg [31 : 0] zz325a4;
reg [31 : 0] uk92d27;
reg [31 : 0] ri96939;
reg [63 : 0] uxb49cb;
reg [63 : 0] ira4e5d;
reg [31 : 0] fp272ec;
reg [31 : 0] gd39766;
reg [31 : 0] ykcbb34;
reg [31 : 0] ps5d9a0;
reg fnecd02;
reg [7 : 0] jc66816;
reg [7 : 0] ou340b3;
reg [7 : 0] jra0598;
reg [7 : 0] qv2cc7;
reg [7 : 0] bn1663c;
reg [7 : 0] qib31e6;
reg [7 : 0] aa98f31;
reg [7 : 0] pfc7988;
reg [2047:0] db22f5b;
wire [21:0] ux17adf;

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif 

`ifdef X4

`endif 

localparam ribd6fd = 22,jceb7ea = 32'hfdffe81b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif 


`ifdef X4


`endif 


`ifdef X1


`endif 


`ifdef X4


`endif 



`ifdef X4



`endif



`ifdef X1



`endif






always @(qtf7c10 or crc_reg64) begin   osc1d57 = qtf7c10;   gb755ca = {          uxb49cb[56], uxb49cb[57], uxb49cb[58], uxb49cb[59], uxb49cb[60], uxb49cb[61], uxb49cb[62], uxb49cb[63],          uxb49cb[48], uxb49cb[49], uxb49cb[50], uxb49cb[51], uxb49cb[52], uxb49cb[53], uxb49cb[54], uxb49cb[55],          uxb49cb[40], uxb49cb[41], uxb49cb[42], uxb49cb[43], uxb49cb[44], uxb49cb[45], uxb49cb[46], uxb49cb[47],          uxb49cb[32], uxb49cb[33], uxb49cb[34], uxb49cb[35], uxb49cb[36], uxb49cb[37], uxb49cb[38], uxb49cb[39],          uxb49cb[24], uxb49cb[25], uxb49cb[26], uxb49cb[27], uxb49cb[28], uxb49cb[29], uxb49cb[30], uxb49cb[31],          uxb49cb[16], uxb49cb[17], uxb49cb[18], uxb49cb[19], uxb49cb[20], uxb49cb[21], uxb49cb[22], uxb49cb[23],          uxb49cb[8], uxb49cb[9], uxb49cb[10], uxb49cb[11], uxb49cb[12], uxb49cb[13], uxb49cb[14], uxb49cb[15],          uxb49cb[0], uxb49cb[1], uxb49cb[2], uxb49cb[3], uxb49cb[4], uxb49cb[5], uxb49cb[6], uxb49cb[7]         } ;   ngeab9 = crc_reg64;   fc1b075[0] = ira4e5d[63] ^ ira4e5d[61] ^ ira4e5d[60] ^ ira4e5d[58] ^ ira4e5d[55] ^ ira4e5d[54] ^ ira4e5d[53] ^                  ira4e5d[50] ^ ira4e5d[48] ^ ira4e5d[47] ^ ira4e5d[45] ^ ira4e5d[44] ^ ira4e5d[37] ^ ira4e5d[34] ^                  ira4e5d[32] ^ ira4e5d[31] ^ ira4e5d[30] ^ ira4e5d[29] ^ ira4e5d[28] ^ ira4e5d[26] ^ ira4e5d[25] ^                  ira4e5d[24] ^ ira4e5d[16] ^ ira4e5d[12] ^ ira4e5d[10] ^ ira4e5d[9] ^ ira4e5d[6] ^ ira4e5d[0] ^                  fp272ec[0] ^ fp272ec[2] ^ fp272ec[5] ^ fp272ec[12] ^ fp272ec[13] ^ fp272ec[15] ^ fp272ec[16] ^                  fp272ec[18] ^ fp272ec[21] ^ fp272ec[22] ^ fp272ec[23] ^ fp272ec[26] ^ fp272ec[28] ^ fp272ec[29] ^                  fp272ec[31];   fc1b075[1] = ira4e5d[63] ^ ira4e5d[62] ^ ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[56] ^ ira4e5d[53] ^                  ira4e5d[51] ^ ira4e5d[50] ^ ira4e5d[49] ^ ira4e5d[47] ^ ira4e5d[46] ^ ira4e5d[44] ^ ira4e5d[38] ^                  ira4e5d[37] ^ ira4e5d[35] ^ ira4e5d[34] ^ ira4e5d[33] ^ ira4e5d[28] ^ ira4e5d[27] ^ ira4e5d[24] ^                  ira4e5d[17] ^ ira4e5d[16] ^ ira4e5d[13] ^ ira4e5d[12] ^ ira4e5d[11] ^ ira4e5d[9] ^ ira4e5d[7] ^                  ira4e5d[6] ^ ira4e5d[1] ^ ira4e5d[0] ^ fp272ec[1] ^ fp272ec[2] ^ fp272ec[3] ^ fp272ec[5] ^ fp272ec[6] ^                  fp272ec[12] ^ fp272ec[14] ^ fp272ec[15] ^ fp272ec[17] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[21] ^                  fp272ec[24] ^ fp272ec[26] ^ fp272ec[27] ^ fp272ec[28] ^ fp272ec[30] ^ fp272ec[31];   fc1b075[2] = ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[55] ^ ira4e5d[53] ^ ira4e5d[52] ^ ira4e5d[51] ^                  ira4e5d[44] ^ ira4e5d[39] ^ ira4e5d[38] ^ ira4e5d[37] ^ ira4e5d[36] ^ ira4e5d[35] ^ ira4e5d[32] ^                  ira4e5d[31] ^ ira4e5d[30] ^ ira4e5d[26] ^ ira4e5d[24] ^ ira4e5d[18] ^ ira4e5d[17] ^ ira4e5d[16] ^                  ira4e5d[14] ^ ira4e5d[13] ^ ira4e5d[9] ^ ira4e5d[8] ^ ira4e5d[7] ^ ira4e5d[6] ^ ira4e5d[2] ^                  ira4e5d[1] ^ ira4e5d[0] ^ fp272ec[0] ^ fp272ec[3] ^ fp272ec[4] ^ fp272ec[5] ^ fp272ec[6] ^ fp272ec[7] ^                  fp272ec[12] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[23] ^ fp272ec[25] ^ fp272ec[26] ^                  fp272ec[27];   fc1b075[3] = ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[56] ^ ira4e5d[54] ^ ira4e5d[53] ^ ira4e5d[52] ^                  ira4e5d[45] ^ ira4e5d[40] ^ ira4e5d[39] ^ ira4e5d[38] ^ ira4e5d[37] ^ ira4e5d[36] ^ ira4e5d[33] ^                  ira4e5d[32] ^ ira4e5d[31] ^ ira4e5d[27] ^ ira4e5d[25] ^ ira4e5d[19] ^ ira4e5d[18] ^ ira4e5d[17] ^                  ira4e5d[15] ^ ira4e5d[14] ^ ira4e5d[10] ^ ira4e5d[9] ^ ira4e5d[8] ^ ira4e5d[7] ^ ira4e5d[3] ^                  ira4e5d[2] ^ ira4e5d[1] ^ fp272ec[0] ^ fp272ec[1] ^ fp272ec[4] ^ fp272ec[5] ^ fp272ec[6] ^ fp272ec[7] ^                  fp272ec[8] ^ fp272ec[13] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[22] ^ fp272ec[24] ^ fp272ec[26] ^                  fp272ec[27] ^ fp272ec[28];   fc1b075[4] = ira4e5d[63] ^ ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[50] ^ ira4e5d[48] ^ ira4e5d[47] ^                  ira4e5d[46] ^ ira4e5d[45] ^ ira4e5d[44] ^ ira4e5d[41] ^ ira4e5d[40] ^ ira4e5d[39] ^ ira4e5d[38] ^                  ira4e5d[33] ^ ira4e5d[31] ^ ira4e5d[30] ^ ira4e5d[29] ^ ira4e5d[25] ^ ira4e5d[24] ^ ira4e5d[20] ^                  ira4e5d[19] ^ ira4e5d[18] ^ ira4e5d[15] ^ ira4e5d[12] ^ ira4e5d[11] ^ ira4e5d[8] ^ ira4e5d[6] ^                  ira4e5d[4] ^ ira4e5d[3] ^ ira4e5d[2] ^ ira4e5d[0] ^ fp272ec[1] ^ fp272ec[6] ^ fp272ec[7] ^ fp272ec[8] ^                  fp272ec[9] ^ fp272ec[12] ^ fp272ec[13] ^ fp272ec[14] ^ fp272ec[15] ^ fp272ec[16] ^ fp272ec[18] ^                  fp272ec[25] ^ fp272ec[26] ^ fp272ec[27] ^ fp272ec[31];   fc1b075[5] = ira4e5d[63] ^ ira4e5d[61] ^ ira4e5d[59] ^ ira4e5d[55] ^ ira4e5d[54] ^ ira4e5d[53] ^ ira4e5d[51] ^                  ira4e5d[50] ^ ira4e5d[49] ^ ira4e5d[46] ^ ira4e5d[44] ^ ira4e5d[42] ^ ira4e5d[41] ^ ira4e5d[40] ^                  ira4e5d[39] ^ ira4e5d[37] ^ ira4e5d[29] ^ ira4e5d[28] ^ ira4e5d[24] ^ ira4e5d[21] ^ ira4e5d[20] ^                  ira4e5d[19] ^ ira4e5d[13] ^ ira4e5d[10] ^ ira4e5d[7] ^ ira4e5d[6] ^ ira4e5d[5] ^ ira4e5d[4] ^                  ira4e5d[3] ^ ira4e5d[1] ^ ira4e5d[0] ^ fp272ec[5] ^ fp272ec[7] ^ fp272ec[8] ^ fp272ec[9] ^ fp272ec[10] ^                  fp272ec[12] ^ fp272ec[14] ^ fp272ec[17] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[21] ^ fp272ec[22] ^                  fp272ec[23] ^ fp272ec[27] ^ fp272ec[29] ^ fp272ec[31];   fc1b075[6] = ira4e5d[62] ^ ira4e5d[60] ^ ira4e5d[56] ^ ira4e5d[55] ^ ira4e5d[54] ^ ira4e5d[52] ^ ira4e5d[51] ^                  ira4e5d[50] ^ ira4e5d[47] ^ ira4e5d[45] ^ ira4e5d[43] ^ ira4e5d[42] ^ ira4e5d[41] ^ ira4e5d[40] ^                  ira4e5d[38] ^ ira4e5d[30] ^ ira4e5d[29] ^ ira4e5d[25] ^ ira4e5d[22] ^ ira4e5d[21] ^ ira4e5d[20] ^                  ira4e5d[14] ^ ira4e5d[11] ^ ira4e5d[8] ^ ira4e5d[7] ^ ira4e5d[6] ^ ira4e5d[5] ^ ira4e5d[4] ^                  ira4e5d[2] ^ ira4e5d[1] ^ fp272ec[6] ^ fp272ec[8] ^ fp272ec[9] ^ fp272ec[10] ^ fp272ec[11] ^                  fp272ec[13] ^ fp272ec[15] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[22] ^ fp272ec[23] ^                  fp272ec[24] ^ fp272ec[28] ^ fp272ec[30];   fc1b075[7] = ira4e5d[60] ^ ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[56] ^ ira4e5d[54] ^ ira4e5d[52] ^ ira4e5d[51] ^                  ira4e5d[50] ^ ira4e5d[47] ^ ira4e5d[46] ^ ira4e5d[45] ^ ira4e5d[43] ^ ira4e5d[42] ^ ira4e5d[41] ^                  ira4e5d[39] ^ ira4e5d[37] ^ ira4e5d[34] ^ ira4e5d[32] ^ ira4e5d[29] ^ ira4e5d[28] ^ ira4e5d[25] ^                  ira4e5d[24] ^ ira4e5d[23] ^ ira4e5d[22] ^ ira4e5d[21] ^ ira4e5d[16] ^ ira4e5d[15] ^ ira4e5d[10] ^                  ira4e5d[8] ^ ira4e5d[7] ^ ira4e5d[5] ^ ira4e5d[3] ^ ira4e5d[2] ^ ira4e5d[0] ^ fp272ec[0] ^ fp272ec[2] ^                  fp272ec[5] ^ fp272ec[7] ^ fp272ec[9] ^ fp272ec[10] ^ fp272ec[11] ^ fp272ec[13] ^ fp272ec[14] ^                  fp272ec[15] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[22] ^ fp272ec[24] ^ fp272ec[25] ^                  fp272ec[26] ^ fp272ec[28];   fc1b075[8] = ira4e5d[63] ^ ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[57] ^ ira4e5d[54] ^ ira4e5d[52] ^ ira4e5d[51] ^                  ira4e5d[50] ^ ira4e5d[46] ^ ira4e5d[45] ^ ira4e5d[43] ^ ira4e5d[42] ^ ira4e5d[40] ^ ira4e5d[38] ^                  ira4e5d[37] ^ ira4e5d[35] ^ ira4e5d[34] ^ ira4e5d[33] ^ ira4e5d[32] ^ ira4e5d[31] ^ ira4e5d[28] ^                  ira4e5d[23] ^ ira4e5d[22] ^ ira4e5d[17] ^ ira4e5d[12] ^ ira4e5d[11] ^ ira4e5d[10] ^ ira4e5d[8] ^                  ira4e5d[4] ^ ira4e5d[3] ^ ira4e5d[1] ^ ira4e5d[0] ^ fp272ec[0] ^ fp272ec[1] ^ fp272ec[2] ^ fp272ec[3] ^                  fp272ec[5] ^ fp272ec[6] ^ fp272ec[8] ^ fp272ec[10] ^ fp272ec[11] ^ fp272ec[13] ^ fp272ec[14] ^                  fp272ec[18] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[22] ^ fp272ec[25] ^ fp272ec[27] ^ fp272ec[28] ^                  fp272ec[31];   fc1b075[9] = ira4e5d[61] ^ ira4e5d[60] ^ ira4e5d[58] ^ ira4e5d[55] ^ ira4e5d[53] ^ ira4e5d[52] ^ ira4e5d[51] ^                  ira4e5d[47] ^ ira4e5d[46] ^ ira4e5d[44] ^ ira4e5d[43] ^ ira4e5d[41] ^ ira4e5d[39] ^ ira4e5d[38] ^                  ira4e5d[36] ^ ira4e5d[35] ^ ira4e5d[34] ^ 
ira4e5d[33] ^ ira4e5d[32] ^ ira4e5d[29] ^ ira4e5d[24] ^                  ira4e5d[23] ^ ira4e5d[18] ^ ira4e5d[13] ^ ira4e5d[12] ^ ira4e5d[11] ^ ira4e5d[9] ^ ira4e5d[5] ^                  ira4e5d[4] ^ ira4e5d[2] ^ ira4e5d[1] ^ fp272ec[0] ^ fp272ec[1] ^ fp272ec[2] ^ fp272ec[3] ^ fp272ec[4] ^                  fp272ec[6] ^ fp272ec[7] ^ fp272ec[9] ^ fp272ec[11] ^ fp272ec[12] ^ fp272ec[14] ^ fp272ec[15] ^                  fp272ec[19] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[23] ^ fp272ec[26] ^ fp272ec[28] ^ fp272ec[29];   fc1b075[10] = ira4e5d[63] ^ ira4e5d[62] ^ ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[56] ^ ira4e5d[55] ^                   ira4e5d[52] ^ ira4e5d[50] ^ ira4e5d[42] ^ ira4e5d[40] ^ ira4e5d[39] ^ ira4e5d[36] ^ ira4e5d[35] ^                   ira4e5d[33] ^ ira4e5d[32] ^ ira4e5d[31] ^ ira4e5d[29] ^ ira4e5d[28] ^ ira4e5d[26] ^ ira4e5d[19] ^                   ira4e5d[16] ^ ira4e5d[14] ^ ira4e5d[13] ^ ira4e5d[9] ^ ira4e5d[5] ^ ira4e5d[3] ^ ira4e5d[2] ^                   ira4e5d[0] ^ fp272ec[0] ^ fp272ec[1] ^ fp272ec[3] ^ fp272ec[4] ^ fp272ec[7] ^ fp272ec[8] ^ fp272ec[10] ^                   fp272ec[18] ^ fp272ec[20] ^ fp272ec[23] ^ fp272ec[24] ^ fp272ec[26] ^ fp272ec[27] ^ fp272ec[28] ^                   fp272ec[30] ^ fp272ec[31];   fc1b075[11] = ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[56] ^ ira4e5d[55] ^ ira4e5d[54] ^ ira4e5d[51] ^                   ira4e5d[50] ^ ira4e5d[48] ^ ira4e5d[47] ^ ira4e5d[45] ^ ira4e5d[44] ^ ira4e5d[43] ^ ira4e5d[41] ^                   ira4e5d[40] ^ ira4e5d[36] ^ ira4e5d[33] ^ ira4e5d[31] ^ ira4e5d[28] ^ ira4e5d[27] ^ ira4e5d[26] ^                   ira4e5d[25] ^ ira4e5d[24] ^ ira4e5d[20] ^ ira4e5d[17] ^ ira4e5d[16] ^ ira4e5d[15] ^ ira4e5d[14] ^                   ira4e5d[12] ^ ira4e5d[9] ^ ira4e5d[4] ^ ira4e5d[3] ^ ira4e5d[1] ^ ira4e5d[0] ^ fp272ec[1] ^ fp272ec[4] ^                   fp272ec[8] ^ fp272ec[9] ^ fp272ec[11] ^ fp272ec[12] ^ fp272ec[13] ^ fp272ec[15] ^ fp272ec[16] ^                   fp272ec[18] ^ fp272ec[19] ^ fp272ec[22] ^ fp272ec[23] ^ fp272ec[24] ^ fp272ec[25] ^ fp272ec[26] ^                   fp272ec[27];   fc1b075[12] = ira4e5d[63] ^ ira4e5d[61] ^ ira4e5d[59] ^ ira4e5d[57] ^ ira4e5d[56] ^ ira4e5d[54] ^ ira4e5d[53] ^                   ira4e5d[52] ^ ira4e5d[51] ^ ira4e5d[50] ^ ira4e5d[49] ^ ira4e5d[47] ^ ira4e5d[46] ^ ira4e5d[42] ^                   ira4e5d[41] ^ ira4e5d[31] ^ ira4e5d[30] ^ ira4e5d[27] ^ ira4e5d[24] ^ ira4e5d[21] ^ ira4e5d[18] ^                   ira4e5d[17] ^ ira4e5d[15] ^ ira4e5d[13] ^ ira4e5d[12] ^ ira4e5d[9] ^ ira4e5d[6] ^ ira4e5d[5] ^                   ira4e5d[4] ^ ira4e5d[2] ^ ira4e5d[1] ^ ira4e5d[0] ^ fp272ec[9] ^ fp272ec[10] ^ fp272ec[14] ^                   fp272ec[15] ^ fp272ec[17] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[22] ^                   fp272ec[24] ^ fp272ec[25] ^ fp272ec[27] ^ fp272ec[29] ^ fp272ec[31];   fc1b075[13] = ira4e5d[62] ^ ira4e5d[60] ^ ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[55] ^ ira4e5d[54] ^ ira4e5d[53] ^                   ira4e5d[52] ^ ira4e5d[51] ^ ira4e5d[50] ^ ira4e5d[48] ^ ira4e5d[47] ^ ira4e5d[43] ^ ira4e5d[42] ^                   ira4e5d[32] ^ ira4e5d[31] ^ ira4e5d[28] ^ ira4e5d[25] ^ ira4e5d[22] ^ ira4e5d[19] ^ ira4e5d[18] ^                   ira4e5d[16] ^ ira4e5d[14] ^ ira4e5d[13] ^ ira4e5d[10] ^ ira4e5d[7] ^ ira4e5d[6] ^ ira4e5d[5] ^                   ira4e5d[3] ^ ira4e5d[2] ^ ira4e5d[1] ^ fp272ec[0] ^ fp272ec[10] ^ fp272ec[11] ^ fp272ec[15] ^                   fp272ec[16] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[22] ^ fp272ec[23] ^                   fp272ec[25] ^ fp272ec[26] ^ fp272ec[28] ^ fp272ec[30];   fc1b075[14] = ira4e5d[63] ^ ira4e5d[61] ^ ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[56] ^ ira4e5d[55] ^ ira4e5d[54] ^                   ira4e5d[53] ^ ira4e5d[52] ^ ira4e5d[51] ^ ira4e5d[49] ^ ira4e5d[48] ^ ira4e5d[44] ^ ira4e5d[43] ^                   ira4e5d[33] ^ ira4e5d[32] ^ ira4e5d[29] ^ ira4e5d[26] ^ ira4e5d[23] ^ ira4e5d[20] ^ ira4e5d[19] ^                   ira4e5d[17] ^ ira4e5d[15] ^ ira4e5d[14] ^ ira4e5d[11] ^ ira4e5d[8] ^ ira4e5d[7] ^ ira4e5d[6] ^                   ira4e5d[4] ^ ira4e5d[3] ^ ira4e5d[2] ^ fp272ec[0] ^ fp272ec[1] ^ fp272ec[11] ^ fp272ec[12] ^                   fp272ec[16] ^ fp272ec[17] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[22] ^ fp272ec[23] ^                   fp272ec[24] ^ fp272ec[26] ^ fp272ec[27] ^ fp272ec[29] ^ fp272ec[31];   fc1b075[15] = ira4e5d[62] ^ ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[57] ^ ira4e5d[56] ^ ira4e5d[55] ^ ira4e5d[54] ^                   ira4e5d[53] ^ ira4e5d[52] ^ ira4e5d[50] ^ ira4e5d[49] ^ ira4e5d[45] ^ ira4e5d[44] ^ ira4e5d[34] ^                   ira4e5d[33] ^ ira4e5d[30] ^ ira4e5d[27] ^ ira4e5d[24] ^ ira4e5d[21] ^ ira4e5d[20] ^ ira4e5d[18] ^                   ira4e5d[16] ^ ira4e5d[15] ^ ira4e5d[12] ^ ira4e5d[9] ^ ira4e5d[8] ^ ira4e5d[7] ^ ira4e5d[5] ^                   ira4e5d[4] ^ ira4e5d[3] ^ fp272ec[1] ^ fp272ec[2] ^ fp272ec[12] ^ fp272ec[13] ^ fp272ec[17] ^                   fp272ec[18] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[22] ^ fp272ec[23] ^ fp272ec[24] ^ fp272ec[25] ^                   fp272ec[27] ^ fp272ec[28] ^ fp272ec[30];   fc1b075[16] = ira4e5d[57] ^ ira4e5d[56] ^ ira4e5d[51] ^ ira4e5d[48] ^ ira4e5d[47] ^ ira4e5d[46] ^ ira4e5d[44] ^                   ira4e5d[37] ^ ira4e5d[35] ^ ira4e5d[32] ^ ira4e5d[30] ^ ira4e5d[29] ^ ira4e5d[26] ^ ira4e5d[24] ^                   ira4e5d[22] ^ ira4e5d[21] ^ ira4e5d[19] ^ ira4e5d[17] ^ ira4e5d[13] ^ ira4e5d[12] ^ ira4e5d[8] ^                   ira4e5d[5] ^ ira4e5d[4] ^ ira4e5d[0] ^ fp272ec[0] ^ fp272ec[3] ^ fp272ec[5] ^ fp272ec[12] ^ fp272ec[14] ^                   fp272ec[15] ^ fp272ec[16] ^ fp272ec[19] ^ fp272ec[24] ^ fp272ec[25];   fc1b075[17] = ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[52] ^ ira4e5d[49] ^ ira4e5d[48] ^ ira4e5d[47] ^ ira4e5d[45] ^                   ira4e5d[38] ^ ira4e5d[36] ^ ira4e5d[33] ^ ira4e5d[31] ^ ira4e5d[30] ^ ira4e5d[27] ^ ira4e5d[25] ^                   ira4e5d[23] ^ ira4e5d[22] ^ ira4e5d[20] ^ ira4e5d[18] ^ ira4e5d[14] ^ ira4e5d[13] ^ ira4e5d[9] ^                   ira4e5d[6] ^ ira4e5d[5] ^ ira4e5d[1] ^ fp272ec[1] ^ fp272ec[4] ^ fp272ec[6] ^ fp272ec[13] ^ fp272ec[15] ^                   fp272ec[16] ^ fp272ec[17] ^ fp272ec[20] ^ fp272ec[25] ^ fp272ec[26];   fc1b075[18] = ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[53] ^ ira4e5d[50] ^ ira4e5d[49] ^ ira4e5d[48] ^ ira4e5d[46] ^                   ira4e5d[39] ^ ira4e5d[37] ^ ira4e5d[34] ^ ira4e5d[32] ^ ira4e5d[31] ^ ira4e5d[28] ^ ira4e5d[26] ^                   ira4e5d[24] ^ ira4e5d[23] ^ ira4e5d[21] ^ ira4e5d[19] ^ ira4e5d[15] ^ ira4e5d[14] ^ ira4e5d[10] ^                   ira4e5d[7] ^ ira4e5d[6] ^ ira4e5d[2] ^ fp272ec[0] ^ fp272ec[2] ^ fp272ec[5] ^ fp272ec[7] ^ fp272ec[14] ^                   fp272ec[16] ^ fp272ec[17] ^ fp272ec[18] ^ fp272ec[21] ^ fp272ec[26] ^ fp272ec[27];   fc1b075[19] = ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[54] ^ ira4e5d[51] ^ ira4e5d[50] ^ ira4e5d[49] ^ ira4e5d[47] ^                   ira4e5d[40] ^ ira4e5d[38] ^ ira4e5d[35] ^ ira4e5d[33] ^ ira4e5d[32] ^ ira4e5d[29] ^ ira4e5d[27] ^                   ira4e5d[25] ^ ira4e5d[24] ^ ira4e5d[22] ^ ira4e5d[20] ^ ira4e5d[16] ^ ira4e5d[15] ^ ira4e5d[11] ^                   ira4e5d[8] ^ ira4e5d[7] ^ ira4e5d[3] ^ fp272ec[0] ^ fp272ec[1] ^ fp272ec[3] ^ fp272ec[6] ^ fp272ec[8] ^                   fp272ec[15] ^ fp272ec[17] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[22] ^ fp272ec[27] ^ fp272ec[28];   fc1b075[20] = ira4e5d[61] ^ ira4e5d[60] ^ ira4e5d[55] ^ ira4e5d[52] ^ ira4e5d[51] ^ ira4e5d[50] ^ ira4e5d[48] ^                   ira4e5d[41] ^ ira4e5d[39] ^ ira4e5d[36] ^ ira4e5d[34] ^ ira4e5d[33] ^ ira4e5d[30] ^ ira4e5d[28] ^                   ira4e5d[26] ^ ira4e5d[25] ^ ira4e5d[23] ^ ira4e5d[21] ^ ira4e5d[17] ^ ira4e5d[16] ^ ira4e5d[12] ^                   ira4e5d[9] ^ ira4e5d[8] ^ ira4e5d[4] ^ fp272ec[1] ^ fp272ec[2] ^ fp272ec[4] ^ fp272ec[7] ^ fp272ec[9] ^                   fp272ec[16] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[23] ^ fp272ec[28] ^ fp272ec[29];   fc1b075[21] = ira4e5d[62] ^ ira4e5d[61] ^ ira4e5d[56] ^ ira4e5d[53] ^ ira4e5d[52] ^ ira4e5d[51] ^ ira4e5d[49] ^                   ira4e5d[42] ^ ira4e5d[40] ^ ira4e5d[37] ^ ira4e5d[35] ^ 
ira4e5d[34] ^ ira4e5d[31] ^ ira4e5d[29] ^                   ira4e5d[27] ^ ira4e5d[26] ^ ira4e5d[24] ^ ira4e5d[22] ^ ira4e5d[18] ^ ira4e5d[17] ^ ira4e5d[13] ^                   ira4e5d[10] ^ ira4e5d[9] ^ ira4e5d[5] ^ fp272ec[2] ^ fp272ec[3] ^ fp272ec[5] ^ fp272ec[8] ^ fp272ec[10] ^                   fp272ec[17] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[24] ^ fp272ec[29] ^ fp272ec[30];   fc1b075[22] = ira4e5d[62] ^ ira4e5d[61] ^ ira4e5d[60] ^ ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[55] ^ ira4e5d[52] ^                   ira4e5d[48] ^ ira4e5d[47] ^ ira4e5d[45] ^ ira4e5d[44] ^ ira4e5d[43] ^ ira4e5d[41] ^ ira4e5d[38] ^                   ira4e5d[37] ^ ira4e5d[36] ^ ira4e5d[35] ^ ira4e5d[34] ^ ira4e5d[31] ^ ira4e5d[29] ^ ira4e5d[27] ^                   ira4e5d[26] ^ ira4e5d[24] ^ ira4e5d[23] ^ ira4e5d[19] ^ ira4e5d[18] ^ ira4e5d[16] ^ ira4e5d[14] ^                   ira4e5d[12] ^ ira4e5d[11] ^ ira4e5d[9] ^ ira4e5d[0] ^ fp272ec[2] ^ fp272ec[3] ^ fp272ec[4] ^                   fp272ec[5] ^ fp272ec[6] ^ fp272ec[9] ^ fp272ec[11] ^ fp272ec[12] ^ fp272ec[13] ^ fp272ec[15] ^                   fp272ec[16] ^ fp272ec[20] ^ fp272ec[23] ^ fp272ec[25] ^ fp272ec[26] ^ fp272ec[28] ^ fp272ec[29] ^                   fp272ec[30];   fc1b075[23] = ira4e5d[62] ^ ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[56] ^ ira4e5d[55] ^ ira4e5d[54] ^ ira4e5d[50] ^                   ira4e5d[49] ^ ira4e5d[47] ^ ira4e5d[46] ^ ira4e5d[42] ^ ira4e5d[39] ^ ira4e5d[38] ^ ira4e5d[36] ^                   ira4e5d[35] ^ ira4e5d[34] ^ ira4e5d[31] ^ ira4e5d[29] ^ ira4e5d[27] ^ ira4e5d[26] ^ ira4e5d[20] ^                   ira4e5d[19] ^ ira4e5d[17] ^ ira4e5d[16] ^ ira4e5d[15] ^ ira4e5d[13] ^ ira4e5d[9] ^ ira4e5d[6] ^                   ira4e5d[1] ^ ira4e5d[0] ^ fp272ec[2] ^ fp272ec[3] ^ fp272ec[4] ^ fp272ec[6] ^ fp272ec[7] ^ fp272ec[10] ^                   fp272ec[14] ^ fp272ec[15] ^ fp272ec[17] ^ fp272ec[18] ^ fp272ec[22] ^ fp272ec[23] ^ fp272ec[24] ^                   fp272ec[27] ^ fp272ec[28] ^ fp272ec[30];   fc1b075[24] = ira4e5d[63] ^ ira4e5d[61] ^ ira4e5d[60] ^ ira4e5d[57] ^ ira4e5d[56] ^ ira4e5d[55] ^ ira4e5d[51] ^                   ira4e5d[50] ^ ira4e5d[48] ^ ira4e5d[47] ^ ira4e5d[43] ^ ira4e5d[40] ^ ira4e5d[39] ^ ira4e5d[37] ^                   ira4e5d[36] ^ ira4e5d[35] ^ ira4e5d[32] ^ ira4e5d[30] ^ ira4e5d[28] ^ ira4e5d[27] ^ ira4e5d[21] ^                   ira4e5d[20] ^ ira4e5d[18] ^ ira4e5d[17] ^ ira4e5d[16] ^ ira4e5d[14] ^ ira4e5d[10] ^ ira4e5d[7] ^                   ira4e5d[2] ^ ira4e5d[1] ^ fp272ec[0] ^ fp272ec[3] ^ fp272ec[4] ^ fp272ec[5] ^ fp272ec[7] ^ fp272ec[8] ^                   fp272ec[11] ^ fp272ec[15] ^ fp272ec[16] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[23] ^ fp272ec[24] ^                   fp272ec[25] ^ fp272ec[28] ^ fp272ec[29] ^ fp272ec[31];   fc1b075[25] = ira4e5d[62] ^ ira4e5d[61] ^ ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[56] ^ ira4e5d[52] ^ ira4e5d[51] ^                   ira4e5d[49] ^ ira4e5d[48] ^ ira4e5d[44] ^ ira4e5d[41] ^ ira4e5d[40] ^ ira4e5d[38] ^ ira4e5d[37] ^                   ira4e5d[36] ^ ira4e5d[33] ^ ira4e5d[31] ^ ira4e5d[29] ^ ira4e5d[28] ^ ira4e5d[22] ^ ira4e5d[21] ^                   ira4e5d[19] ^ ira4e5d[18] ^ ira4e5d[17] ^ ira4e5d[15] ^ ira4e5d[11] ^ ira4e5d[8] ^ ira4e5d[3] ^                   ira4e5d[2] ^ fp272ec[1] ^ fp272ec[4] ^ fp272ec[5] ^ fp272ec[6] ^ fp272ec[8] ^ fp272ec[9] ^ fp272ec[12] ^                   fp272ec[16] ^ fp272ec[17] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[24] ^ fp272ec[25] ^ fp272ec[26] ^                   fp272ec[29] ^ fp272ec[30];   fc1b075[26] = ira4e5d[62] ^ ira4e5d[61] ^ ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[57] ^ ira4e5d[55] ^ ira4e5d[54] ^                   ira4e5d[52] ^ ira4e5d[49] ^ ira4e5d[48] ^ ira4e5d[47] ^ ira4e5d[44] ^ ira4e5d[42] ^ ira4e5d[41] ^                   ira4e5d[39] ^ ira4e5d[38] ^ ira4e5d[31] ^ ira4e5d[28] ^ ira4e5d[26] ^ ira4e5d[25] ^ ira4e5d[24] ^                   ira4e5d[23] ^ ira4e5d[22] ^ ira4e5d[20] ^ ira4e5d[19] ^ ira4e5d[18] ^ ira4e5d[10] ^ ira4e5d[6] ^                   ira4e5d[4] ^ ira4e5d[3] ^ ira4e5d[0] ^ fp272ec[6] ^ fp272ec[7] ^ fp272ec[9] ^ fp272ec[10] ^ fp272ec[12] ^                   fp272ec[15] ^ fp272ec[16] ^ fp272ec[17] ^ fp272ec[20] ^ fp272ec[22] ^ fp272ec[23] ^ fp272ec[25] ^                   fp272ec[27] ^ fp272ec[28] ^ fp272ec[29] ^ fp272ec[30];   fc1b075[27] = ira4e5d[63] ^ ira4e5d[62] ^ ira4e5d[61] ^ ira4e5d[60] ^ ira4e5d[58] ^ ira4e5d[56] ^ ira4e5d[55] ^                   ira4e5d[53] ^ ira4e5d[50] ^ ira4e5d[49] ^ ira4e5d[48] ^ ira4e5d[45] ^ ira4e5d[43] ^ ira4e5d[42] ^                   ira4e5d[40] ^ ira4e5d[39] ^ ira4e5d[32] ^ ira4e5d[29] ^ ira4e5d[27] ^ ira4e5d[26] ^ ira4e5d[25] ^                   ira4e5d[24] ^ ira4e5d[23] ^ ira4e5d[21] ^ ira4e5d[20] ^ ira4e5d[19] ^ ira4e5d[11] ^ ira4e5d[7] ^                   ira4e5d[5] ^ ira4e5d[4] ^ ira4e5d[1] ^ fp272ec[0] ^ fp272ec[7] ^ fp272ec[8] ^ fp272ec[10] ^ fp272ec[11] ^                   fp272ec[13] ^ fp272ec[16] ^ fp272ec[17] ^ fp272ec[18] ^ fp272ec[21] ^ fp272ec[23] ^ fp272ec[24] ^                   fp272ec[26] ^ fp272ec[28] ^ fp272ec[29] ^ fp272ec[30] ^ fp272ec[31];   fc1b075[28] = ira4e5d[63] ^ ira4e5d[62] ^ ira4e5d[61] ^ ira4e5d[59] ^ ira4e5d[57] ^ ira4e5d[56] ^ ira4e5d[54] ^                   ira4e5d[51] ^ ira4e5d[50] ^ ira4e5d[49] ^ ira4e5d[46] ^ ira4e5d[44] ^ ira4e5d[43] ^ ira4e5d[41] ^                   ira4e5d[40] ^ ira4e5d[33] ^ ira4e5d[30] ^ ira4e5d[28] ^ ira4e5d[27] ^ ira4e5d[26] ^ ira4e5d[25] ^                   ira4e5d[24] ^ ira4e5d[22] ^ ira4e5d[21] ^ ira4e5d[20] ^ ira4e5d[12] ^ ira4e5d[8] ^ ira4e5d[6] ^                   ira4e5d[5] ^ ira4e5d[2] ^ fp272ec[1] ^ fp272ec[8] ^ fp272ec[9] ^ fp272ec[11] ^ fp272ec[12] ^                   fp272ec[14] ^ fp272ec[17] ^ fp272ec[18] ^ fp272ec[19] ^ fp272ec[22] ^ fp272ec[24] ^ fp272ec[25] ^                   fp272ec[27] ^ fp272ec[29] ^ fp272ec[30] ^ fp272ec[31];   fc1b075[29] = ira4e5d[63] ^ ira4e5d[62] ^ ira4e5d[60] ^ ira4e5d[58] ^ ira4e5d[57] ^ ira4e5d[55] ^ ira4e5d[52] ^                   ira4e5d[51] ^ ira4e5d[50] ^ ira4e5d[47] ^ ira4e5d[45] ^ ira4e5d[44] ^ ira4e5d[42] ^ ira4e5d[41] ^                   ira4e5d[34] ^ ira4e5d[31] ^ ira4e5d[29] ^ ira4e5d[28] ^ ira4e5d[27] ^ ira4e5d[26] ^ ira4e5d[25] ^                   ira4e5d[23] ^ ira4e5d[22] ^ ira4e5d[21] ^ ira4e5d[13] ^ ira4e5d[9] ^ ira4e5d[7] ^ ira4e5d[6] ^                   ira4e5d[3] ^ fp272ec[2] ^ fp272ec[9] ^ fp272ec[10] ^ fp272ec[12] ^ fp272ec[13] ^ fp272ec[15] ^                   fp272ec[18] ^ fp272ec[19] ^ fp272ec[20] ^ fp272ec[23] ^ fp272ec[25] ^ fp272ec[26] ^ fp272ec[28] ^                   fp272ec[30] ^ fp272ec[31];   fc1b075[30] = ira4e5d[63] ^ ira4e5d[61] ^ ira4e5d[59] ^ ira4e5d[58] ^ ira4e5d[56] ^ ira4e5d[53] ^ ira4e5d[52] ^                   ira4e5d[51] ^ ira4e5d[48] ^ ira4e5d[46] ^ ira4e5d[45] ^ ira4e5d[43] ^ ira4e5d[42] ^ ira4e5d[35] ^                   ira4e5d[32] ^ ira4e5d[30] ^ ira4e5d[29] ^ ira4e5d[28] ^ ira4e5d[27] ^ ira4e5d[26] ^ ira4e5d[24] ^                   ira4e5d[23] ^ ira4e5d[22] ^ ira4e5d[14] ^ ira4e5d[10] ^ ira4e5d[8] ^ ira4e5d[7] ^ ira4e5d[4] ^                   fp272ec[0] ^ fp272ec[3] ^ fp272ec[10] ^ fp272ec[11] ^ fp272ec[13] ^ fp272ec[14] ^ fp272ec[16] ^                   fp272ec[19] ^ fp272ec[20] ^ fp272ec[21] ^ fp272ec[24] ^ fp272ec[26] ^ fp272ec[27] ^ fp272ec[29] ^                   fp272ec[31];   fc1b075[31] = ira4e5d[62] ^ ira4e5d[60] ^ ira4e5d[59] ^ ira4e5d[57] ^ ira4e5d[54] ^ ira4e5d[53] ^ ira4e5d[52] ^                   ira4e5d[49] ^ ira4e5d[47] ^ ira4e5d[46] ^ ira4e5d[44] ^ ira4e5d[43] ^ ira4e5d[36] ^ ira4e5d[33] ^                   ira4e5d[31] ^ ira4e5d[30] ^ ira4e5d[29] ^ ira4e5d[28] ^ ira4e5d[27] ^ ira4e5d[25] ^ ira4e5d[24] ^                   ira4e5d[23] ^ ira4e5d[15] ^ ira4e5d[11] ^ ira4e5d[9] ^ ira4e5d[8] ^ ira4e5d[5] ^ fp272ec[1] ^                   fp272ec[4] ^ fp272ec[11] ^ fp272ec[12] ^ fp272ec[14] ^ fp272ec[15] ^ fp272ec[17] ^ fp272ec[20] ^                   fp272ec[21] ^ fp272ec[22] ^ fp272ec[25] ^ fp272ec[27] ^ fp272ec[28] ^ fp272ec[30];
end

always @(*) begin   jr22b7a = zm83a04;   ou15bd7 = {          gd39766[24], gd39766[25], gd39766[26], gd39766[27], gd39766[28], gd39766[29], gd39766[30], gd39766[31],          gd39766[16], gd39766[17], gd39766[18], gd39766[19], gd39766[20], gd39766[21], gd39766[22], gd39766[23],          gd39766[8], gd39766[9], gd39766[10], gd39766[11], gd39766[12], gd39766[13], gd39766[14], gd39766[15],          gd39766[0], gd39766[1], gd39766[2], gd39766[3], gd39766[4], gd39766[5], gd39766[6], gd39766[7]         } ;


`ifdef X1
      riadeb8 = zz325a4;


`endif



`ifdef X4
      riadeb8 = crc_reg64;


`endif

   al70740[0] = ykcbb34[31] ^ ykcbb34[30] ^ ykcbb34[29] ^ ykcbb34[28] ^ ykcbb34[26] ^ ykcbb34[25] ^ ykcbb34[24] ^                  ykcbb34[16] ^ ykcbb34[12] ^ ykcbb34[10] ^ ykcbb34[9] ^ ykcbb34[6] ^ ykcbb34[0] ^ ps5d9a0[0] ^                  ps5d9a0[6] ^ ps5d9a0[9] ^ ps5d9a0[10] ^ ps5d9a0[12] ^ ps5d9a0[16] ^ ps5d9a0[24] ^ ps5d9a0[25] ^                  ps5d9a0[26] ^ ps5d9a0[28] ^ ps5d9a0[29] ^ ps5d9a0[30] ^ ps5d9a0[31];   al70740[1] = ykcbb34[28] ^ ykcbb34[27] ^ ykcbb34[24] ^ ykcbb34[17] ^ ykcbb34[16] ^ ykcbb34[13] ^ ykcbb34[12] ^                  ykcbb34[11] ^ ykcbb34[9] ^ ykcbb34[7] ^ ykcbb34[6] ^ ykcbb34[1] ^ ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[1] ^                  ps5d9a0[6] ^ ps5d9a0[7] ^ ps5d9a0[9] ^ ps5d9a0[11] ^ ps5d9a0[12] ^ ps5d9a0[13] ^ ps5d9a0[16] ^                  ps5d9a0[17] ^ ps5d9a0[24] ^ ps5d9a0[27] ^ ps5d9a0[28];   al70740[2] = ykcbb34[31] ^ ykcbb34[30] ^ ykcbb34[26] ^ ykcbb34[24] ^ ykcbb34[18] ^ ykcbb34[17] ^ ykcbb34[16] ^                  ykcbb34[14] ^ ykcbb34[13] ^ ykcbb34[9] ^ ykcbb34[8] ^ ykcbb34[7] ^ ykcbb34[6] ^ ykcbb34[2] ^                  ykcbb34[1] ^ ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[1] ^ ps5d9a0[2] ^ ps5d9a0[6] ^ ps5d9a0[7] ^ ps5d9a0[8] ^                  ps5d9a0[9] ^ ps5d9a0[13] ^ ps5d9a0[14] ^ ps5d9a0[16] ^ ps5d9a0[17] ^ ps5d9a0[18] ^ ps5d9a0[24] ^                  ps5d9a0[26] ^ ps5d9a0[30] ^ ps5d9a0[31];   al70740[3] = ykcbb34[31] ^ ykcbb34[27] ^ ykcbb34[25] ^ ykcbb34[19] ^ ykcbb34[18] ^ ykcbb34[17] ^ ykcbb34[15] ^                  ykcbb34[14] ^ ykcbb34[10] ^ ykcbb34[9] ^ ykcbb34[8] ^ ykcbb34[7] ^ ykcbb34[3] ^ ykcbb34[2] ^                  ykcbb34[1] ^ ps5d9a0[1] ^ ps5d9a0[2] ^ ps5d9a0[3] ^ ps5d9a0[7] ^ ps5d9a0[8] ^ ps5d9a0[9] ^ ps5d9a0[10] ^                  ps5d9a0[14] ^ ps5d9a0[15] ^ ps5d9a0[17] ^ ps5d9a0[18] ^ ps5d9a0[19] ^ ps5d9a0[25] ^ ps5d9a0[27] ^                  ps5d9a0[31];   al70740[4] = ykcbb34[31] ^ ykcbb34[30] ^ ykcbb34[29] ^ ykcbb34[25] ^ ykcbb34[24] ^ ykcbb34[20] ^ ykcbb34[19] ^                  ykcbb34[18] ^ ykcbb34[15] ^ ykcbb34[12] ^ ykcbb34[11] ^ ykcbb34[8] ^ ykcbb34[6] ^ ykcbb34[4] ^                  ykcbb34[3] ^ ykcbb34[2] ^ ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[2] ^ ps5d9a0[3] ^ ps5d9a0[4] ^ ps5d9a0[6] ^                  ps5d9a0[8] ^ ps5d9a0[11] ^ ps5d9a0[12] ^ ps5d9a0[15] ^ ps5d9a0[18] ^ ps5d9a0[19] ^ ps5d9a0[20] ^                  ps5d9a0[24] ^ ps5d9a0[25] ^ ps5d9a0[29] ^ ps5d9a0[30] ^ ps5d9a0[31];   al70740[5] = ykcbb34[29] ^ ykcbb34[28] ^ ykcbb34[24] ^ ykcbb34[21] ^ ykcbb34[20] ^ ykcbb34[19] ^ ykcbb34[13] ^                  ykcbb34[10] ^ ykcbb34[7] ^ ykcbb34[6] ^ ykcbb34[5] ^ ykcbb34[4] ^ ykcbb34[3] ^ ykcbb34[1] ^ ykcbb34[0] ^                  ps5d9a0[0] ^ ps5d9a0[1] ^ ps5d9a0[3] ^ ps5d9a0[4] ^ ps5d9a0[5] ^ ps5d9a0[6] ^ ps5d9a0[7] ^ ps5d9a0[10] ^                  ps5d9a0[13] ^ ps5d9a0[19] ^ ps5d9a0[20] ^ ps5d9a0[21] ^ ps5d9a0[24] ^ ps5d9a0[28] ^ ps5d9a0[29];   al70740[6] = ykcbb34[30] ^ ykcbb34[29] ^ ykcbb34[25] ^ ykcbb34[22] ^ ykcbb34[21] ^ ykcbb34[20] ^ ykcbb34[14] ^                  ykcbb34[11] ^ ykcbb34[8] ^ ykcbb34[7] ^ ykcbb34[6] ^ ykcbb34[5] ^ ykcbb34[4] ^ ykcbb34[2] ^ ykcbb34[1] ^                  ps5d9a0[1] ^ ps5d9a0[2] ^ ps5d9a0[4] ^ ps5d9a0[5] ^ ps5d9a0[6] ^ ps5d9a0[7] ^ ps5d9a0[8] ^ ps5d9a0[11] ^                  ps5d9a0[14] ^ ps5d9a0[20] ^ ps5d9a0[21] ^ ps5d9a0[22] ^ ps5d9a0[25] ^ ps5d9a0[29] ^ ps5d9a0[30];   al70740[7] = ykcbb34[29] ^ ykcbb34[28] ^ ykcbb34[25] ^ ykcbb34[24] ^ ykcbb34[23] ^ ykcbb34[22] ^ ykcbb34[21] ^                  ykcbb34[16] ^ ykcbb34[15] ^ ykcbb34[10] ^ ykcbb34[8] ^ ykcbb34[7] ^ ykcbb34[5] ^ ykcbb34[3] ^                  ykcbb34[2] ^ ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[2] ^ ps5d9a0[3] ^ ps5d9a0[5] ^ ps5d9a0[7] ^ ps5d9a0[8] ^                  ps5d9a0[10] ^ ps5d9a0[15] ^ ps5d9a0[16] ^ ps5d9a0[21] ^ ps5d9a0[22] ^ ps5d9a0[23] ^ ps5d9a0[24] ^                  ps5d9a0[25] ^ ps5d9a0[28] ^ ps5d9a0[29];   al70740[8] = ykcbb34[31] ^ ykcbb34[28] ^ ykcbb34[23] ^ ykcbb34[22] ^ ykcbb34[17] ^ ykcbb34[12] ^ ykcbb34[11] ^                  ykcbb34[10] ^ ykcbb34[8] ^ ykcbb34[4] ^ ykcbb34[3] ^ ykcbb34[1] ^ ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[1] ^                  ps5d9a0[3] ^ ps5d9a0[4] ^ ps5d9a0[8] ^ ps5d9a0[10] ^ ps5d9a0[11] ^ ps5d9a0[12] ^ ps5d9a0[17] ^                  ps5d9a0[22] ^ ps5d9a0[23] ^ ps5d9a0[28] ^ ps5d9a0[31];   al70740[9] = ykcbb34[29] ^ ykcbb34[24] ^ ykcbb34[23] ^ ykcbb34[18] ^ ykcbb34[13] ^ ykcbb34[12] ^ ykcbb34[11] ^                  ykcbb34[9] ^ ykcbb34[5] ^ ykcbb34[4] ^ ykcbb34[2] ^ ykcbb34[1] ^ ps5d9a0[1] ^ ps5d9a0[2] ^ ps5d9a0[4] ^                  ps5d9a0[5] ^ ps5d9a0[9] ^ ps5d9a0[11] ^ ps5d9a0[12] ^ ps5d9a0[13] ^ ps5d9a0[18] ^ ps5d9a0[23] ^                  ps5d9a0[24] ^ ps5d9a0[29];   al70740[10] = ykcbb34[31] ^ ykcbb34[29] ^ ykcbb34[28] ^ ykcbb34[26] ^ ykcbb34[19] ^ ykcbb34[16] ^ ykcbb34[14] ^                   ykcbb34[13] ^ ykcbb34[9] ^ ykcbb34[5] ^ ykcbb34[3] ^ ykcbb34[2] ^ ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[2] ^                   ps5d9a0[3] ^ ps5d9a0[5] ^ ps5d9a0[9] ^ ps5d9a0[13] ^ ps5d9a0[14] ^ ps5d9a0[16] ^ ps5d9a0[19] ^                   ps5d9a0[26] ^ ps5d9a0[28] ^ ps5d9a0[29] ^ ps5d9a0[31];   al70740[11] = ykcbb34[31] ^ ykcbb34[28] ^ ykcbb34[27] ^ ykcbb34[26] ^ ykcbb34[25] ^ ykcbb34[24] ^ ykcbb34[20] ^                   ykcbb34[17] ^ ykcbb34[16] ^ ykcbb34[15] ^ ykcbb34[14] ^ ykcbb34[12] ^ ykcbb34[9] ^ ykcbb34[4] ^                   ykcbb34[3] ^ ykcbb34[1] ^ ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[1] ^ ps5d9a0[3] ^ ps5d9a0[4] ^ ps5d9a0[9] ^                   ps5d9a0[12] ^ ps5d9a0[14] ^ ps5d9a0[15] ^ ps5d9a0[16] ^ ps5d9a0[17] ^ ps5d9a0[20] ^ ps5d9a0[24] ^                   ps5d9a0[25] ^ ps5d9a0[26] ^ ps5d9a0[27] ^ ps5d9a0[28] ^ ps5d9a0[31];   al70740[12] = ykcbb34[31] ^ ykcbb34[30] ^ ykcbb34[27] ^ ykcbb34[24] ^ ykcbb34[21] ^ ykcbb34[18] ^ ykcbb34[17] ^                   ykcbb34[15] ^ ykcbb34[13] ^ ykcbb34[12] ^ ykcbb34[9] ^ ykcbb34[6] ^ ykcbb34[5] ^ ykcbb34[4] ^                   ykcbb34[2] ^ ykcbb34[1] ^ ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[1] ^ ps5d9a0[2] ^ ps5d9a0[4] ^ ps5d9a0[5] ^                   ps5d9a0[6] ^ ps5d9a0[9] ^ ps5d9a0[12] ^ ps5d9a0[13] ^ ps5d9a0[15] ^ ps5d9a0[17] ^ ps5d9a0[18] ^                   ps5d9a0[21] ^ ps5d9a0[24] ^ ps5d9a0[27] ^ ps5d9a0[30] ^ ps5d9a0[31];   al70740[13] = ykcbb34[31] ^ ykcbb34[28] ^ ykcbb34[25] ^ ykcbb34[22] ^ ykcbb34[19] ^ ykcbb34[18] ^ ykcbb34[16] ^                   ykcbb34[14] ^ ykcbb34[13] ^ ykcbb34[10] ^ ykcbb34[7] ^ ykcbb34[6] ^ ykcbb34[5] ^ ykcbb34[3] ^                   ykcbb34[2] ^ ykcbb34[1] ^ ps5d9a0[1] ^ ps5d9a0[2] ^ ps5d9a0[3] ^ ps5d9a0[5] ^ ps5d9a0[6] ^ ps5d9a0[7] ^                   ps5d9a0[10] ^ ps5d9a0[13] ^ ps5d9a0[14] ^ ps5d9a0[16] ^ ps5d9a0[18] ^ ps5d9a0[19] ^ ps5d9a0[22] ^                   ps5d9a0[25] ^ ps5d9a0[28] ^ ps5d9a0[31];   al70740[14] = ykcbb34[29] ^ ykcbb34[26] ^ ykcbb34[23] ^ ykcbb34[20] ^ ykcbb34[19] ^ ykcbb34[17] ^ ykcbb34[15] ^                   ykcbb34[14] ^ ykcbb34[11] ^ ykcbb34[8] ^ ykcbb34[7] ^ ykcbb34[6] ^ ykcbb34[4] ^ ykcbb34[3] ^                   ykcbb34[2] ^ ps5d9a0[2] ^ ps5d9a0[3] ^ ps5d9a0[4] ^ ps5d9a0[6] ^ ps5d9a0[7] ^ ps5d9a0[8] ^ ps5d9a0[11] ^                   ps5d9a0[14] ^ ps5d9a0[15] ^ ps5d9a0[17] ^ ps5d9a0[19] ^ ps5d9a0[20] ^ ps5d9a0[23] ^ ps5d9a0[26] ^                   ps5d9a0[29];   al70740[15] = ykcbb34[30] ^ ykcbb34[27] ^ ykcbb34[24] ^ ykcbb34[21] ^ ykcbb34[20] ^ ykcbb34[18] ^ ykcbb34[16] ^                   ykcbb34[15] ^ ykcbb34[12] ^ ykcbb34[9] ^ ykcbb34[8] ^ ykcbb34[7] ^ ykcbb34[5] ^ ykcbb34[4] ^                   ykcbb34[3] ^ ps5d9a0[3] ^ ps5d9a0[4] ^ ps5d9a0[5] ^ ps5d9a0[7] ^ ps5d9a0[8] ^ ps5d9a0[9] ^ ps5d9a0[12] ^                   ps5d9a0[15] ^ ps5d9a0[16] ^ ps5d9a0[18] ^ ps5d9a0[20] ^ ps5d9a0[21] ^ ps5d9a0[24] ^ ps5d9a0[27] ^                   ps5d9a0[30];   al70740[16] = ykcbb34[30] ^ ykcbb34[29] ^ ykcbb34[26] ^ ykcbb34[24] ^ ykcbb34[22] ^ ykcbb34[21] ^ ykcbb34[19] ^                   ykcbb34[17] ^ ykcbb34[13] ^ ykcbb34[12] ^ ykcbb34[8] ^ ykcbb34[5] ^ ykcbb34[4] ^ ykcbb34[0] ^                   ps5d9a0[0] ^ ps5d9a0[4] ^ ps5d9a0[5] ^ ps5d9a0[8] ^ ps5d9a0[12] ^ ps5d9a0[13] ^ ps5d9a0[17] ^                   ps5d9a0[19] ^ ps5d9a0[21] ^ ps5d9a0[22] ^ ps5d9a0[24] ^ ps5d9a0[26] ^ ps5d9a0[29] ^ ps5d9a0[30];   al70740[17] = ykcbb34[31] ^ 
ykcbb34[30] ^ ykcbb34[27] ^ ykcbb34[25] ^ ykcbb34[23] ^ ykcbb34[22] ^ ykcbb34[20] ^                   ykcbb34[18] ^ ykcbb34[14] ^ ykcbb34[13] ^ ykcbb34[9] ^ ykcbb34[6] ^ ykcbb34[5] ^ ykcbb34[1] ^                   ps5d9a0[1] ^ ps5d9a0[5] ^ ps5d9a0[6] ^ ps5d9a0[9] ^ ps5d9a0[13] ^ ps5d9a0[14] ^ ps5d9a0[18] ^                   ps5d9a0[20] ^ ps5d9a0[22] ^ ps5d9a0[23] ^ ps5d9a0[25] ^ ps5d9a0[27] ^ ps5d9a0[30] ^ ps5d9a0[31];   al70740[18] = ykcbb34[31] ^ ykcbb34[28] ^ ykcbb34[26] ^ ykcbb34[24] ^ ykcbb34[23] ^ ykcbb34[21] ^ ykcbb34[19] ^                   ykcbb34[15] ^ ykcbb34[14] ^ ykcbb34[10] ^ ykcbb34[7] ^ ykcbb34[6] ^ ykcbb34[2] ^ ps5d9a0[2] ^                   ps5d9a0[6] ^ ps5d9a0[7] ^ ps5d9a0[10] ^ ps5d9a0[14] ^ ps5d9a0[15] ^ ps5d9a0[19] ^ ps5d9a0[21] ^                   ps5d9a0[23] ^ ps5d9a0[24] ^ ps5d9a0[26] ^ ps5d9a0[28] ^ ps5d9a0[31];   al70740[19] = ykcbb34[29] ^ ykcbb34[27] ^ ykcbb34[25] ^ ykcbb34[24] ^ ykcbb34[22] ^ ykcbb34[20] ^ ykcbb34[16] ^                   ykcbb34[15] ^ ykcbb34[11] ^ ykcbb34[8] ^ ykcbb34[7] ^ ykcbb34[3] ^ ps5d9a0[3] ^ ps5d9a0[7] ^                   ps5d9a0[8] ^ ps5d9a0[11] ^ ps5d9a0[15] ^ ps5d9a0[16] ^ ps5d9a0[20] ^ ps5d9a0[22] ^ ps5d9a0[24] ^                   ps5d9a0[25] ^ ps5d9a0[27] ^ ps5d9a0[29];   al70740[20] = ykcbb34[30] ^ ykcbb34[28] ^ ykcbb34[26] ^ ykcbb34[25] ^ ykcbb34[23] ^ ykcbb34[21] ^ ykcbb34[17] ^                   ykcbb34[16] ^ ykcbb34[12] ^ ykcbb34[9] ^ ykcbb34[8] ^ ykcbb34[4] ^ ps5d9a0[4] ^ ps5d9a0[8] ^                   ps5d9a0[9] ^ ps5d9a0[12] ^ ps5d9a0[16] ^ ps5d9a0[17] ^ ps5d9a0[21] ^ ps5d9a0[23] ^ ps5d9a0[25] ^                   ps5d9a0[26] ^ ps5d9a0[28] ^ ps5d9a0[30];   al70740[21] = ykcbb34[31] ^ ykcbb34[29] ^ ykcbb34[27] ^ ykcbb34[26] ^ ykcbb34[24] ^ ykcbb34[22] ^ ykcbb34[18] ^                   ykcbb34[17] ^ ykcbb34[13] ^ ykcbb34[10] ^ ykcbb34[9] ^ ykcbb34[5] ^ ps5d9a0[5] ^ ps5d9a0[9] ^                   ps5d9a0[10] ^ ps5d9a0[13] ^ ps5d9a0[17] ^ ps5d9a0[18] ^ ps5d9a0[22] ^ ps5d9a0[24] ^ ps5d9a0[26] ^                   ps5d9a0[27] ^ ps5d9a0[29] ^ ps5d9a0[31];   al70740[22] = ykcbb34[31] ^ ykcbb34[29] ^ ykcbb34[27] ^ ykcbb34[26] ^ ykcbb34[24] ^ ykcbb34[23] ^ ykcbb34[19] ^                   ykcbb34[18] ^ ykcbb34[16] ^ ykcbb34[14] ^ ykcbb34[12] ^ ykcbb34[11] ^ ykcbb34[9] ^ ykcbb34[0] ^                   ps5d9a0[0] ^ ps5d9a0[9] ^ ps5d9a0[11] ^ ps5d9a0[12] ^ ps5d9a0[14] ^ ps5d9a0[16] ^ ps5d9a0[18] ^                   ps5d9a0[19] ^ ps5d9a0[23] ^ ps5d9a0[24] ^ ps5d9a0[26] ^ ps5d9a0[27] ^ ps5d9a0[29] ^ ps5d9a0[31];   al70740[23] = ykcbb34[31] ^ ykcbb34[29] ^ ykcbb34[27] ^ ykcbb34[26] ^ ykcbb34[20] ^ ykcbb34[19] ^ ykcbb34[17] ^                   ykcbb34[16] ^ ykcbb34[15] ^ ykcbb34[13] ^ ykcbb34[9] ^ ykcbb34[6] ^ ykcbb34[1] ^ ykcbb34[0] ^                   ps5d9a0[0] ^ ps5d9a0[1] ^ ps5d9a0[6] ^ ps5d9a0[9] ^ ps5d9a0[13] ^ ps5d9a0[15] ^ ps5d9a0[16] ^                   ps5d9a0[17] ^ ps5d9a0[19] ^ ps5d9a0[20] ^ ps5d9a0[26] ^ ps5d9a0[27] ^ ps5d9a0[29] ^ ps5d9a0[31];   al70740[24] = ykcbb34[30] ^ ykcbb34[28] ^ ykcbb34[27] ^ ykcbb34[21] ^ ykcbb34[20] ^ ykcbb34[18] ^ ykcbb34[17] ^                   ykcbb34[16] ^ ykcbb34[14] ^ ykcbb34[10] ^ ykcbb34[7] ^ ykcbb34[2] ^ ykcbb34[1] ^ ps5d9a0[1] ^                   ps5d9a0[2] ^ ps5d9a0[7] ^ ps5d9a0[10] ^ ps5d9a0[14] ^ ps5d9a0[16] ^ ps5d9a0[17] ^ ps5d9a0[18] ^                   ps5d9a0[20] ^ ps5d9a0[21] ^ ps5d9a0[27] ^ ps5d9a0[28] ^ ps5d9a0[30];   al70740[25] = ykcbb34[31] ^ ykcbb34[29] ^ ykcbb34[28] ^ ykcbb34[22] ^ ykcbb34[21] ^ ykcbb34[19] ^ ykcbb34[18] ^                   ykcbb34[17] ^ ykcbb34[15] ^ ykcbb34[11] ^ ykcbb34[8] ^ ykcbb34[3] ^ ykcbb34[2] ^ ps5d9a0[2] ^                   ps5d9a0[3] ^ ps5d9a0[8] ^ ps5d9a0[11] ^ ps5d9a0[15] ^ ps5d9a0[17] ^ ps5d9a0[18] ^ ps5d9a0[19] ^                   ps5d9a0[21] ^ ps5d9a0[22] ^ ps5d9a0[28] ^ ps5d9a0[29] ^ ps5d9a0[31];   al70740[26] = ykcbb34[31] ^ ykcbb34[28] ^ ykcbb34[26] ^ ykcbb34[25] ^ ykcbb34[24] ^ ykcbb34[23] ^ ykcbb34[22] ^                   ykcbb34[20] ^ ykcbb34[19] ^ ykcbb34[18] ^ ykcbb34[10] ^ ykcbb34[6] ^ ykcbb34[4] ^ ykcbb34[3] ^                   ykcbb34[0] ^ ps5d9a0[0] ^ ps5d9a0[3] ^ ps5d9a0[4] ^ ps5d9a0[6] ^ ps5d9a0[10] ^ ps5d9a0[18] ^                   ps5d9a0[19] ^ ps5d9a0[20] ^ ps5d9a0[22] ^ ps5d9a0[23] ^ ps5d9a0[24] ^ ps5d9a0[25] ^ ps5d9a0[26] ^                   ps5d9a0[28] ^ ps5d9a0[31];   al70740[27] = ykcbb34[29] ^ ykcbb34[27] ^ ykcbb34[26] ^ ykcbb34[25] ^ ykcbb34[24] ^ ykcbb34[23] ^ ykcbb34[21] ^                   ykcbb34[20] ^ ykcbb34[19] ^ ykcbb34[11] ^ ykcbb34[7] ^ ykcbb34[5] ^ ykcbb34[4] ^ ykcbb34[1] ^                   ps5d9a0[1] ^ ps5d9a0[4] ^ ps5d9a0[5] ^ ps5d9a0[7] ^ ps5d9a0[11] ^ ps5d9a0[19] ^ ps5d9a0[20] ^                   ps5d9a0[21] ^ ps5d9a0[23] ^ ps5d9a0[24] ^ ps5d9a0[25] ^ ps5d9a0[26] ^ ps5d9a0[27] ^ ps5d9a0[29];   al70740[28] = ykcbb34[30] ^ ykcbb34[28] ^ ykcbb34[27] ^ ykcbb34[26] ^ ykcbb34[25] ^ ykcbb34[24] ^ ykcbb34[22] ^                   ykcbb34[21] ^ ykcbb34[20] ^ ykcbb34[12] ^ ykcbb34[8] ^ ykcbb34[6] ^ ykcbb34[5] ^ ykcbb34[2] ^                   ps5d9a0[2] ^ ps5d9a0[5] ^ ps5d9a0[6] ^ ps5d9a0[8] ^ ps5d9a0[12] ^ ps5d9a0[20] ^ ps5d9a0[21] ^                   ps5d9a0[22] ^ ps5d9a0[24] ^ ps5d9a0[25] ^ ps5d9a0[26] ^ ps5d9a0[27] ^ ps5d9a0[28] ^ ps5d9a0[30];   al70740[29] = ykcbb34[31] ^ ykcbb34[29] ^ ykcbb34[28] ^ ykcbb34[27] ^ ykcbb34[26] ^ ykcbb34[25] ^ ykcbb34[23] ^                   ykcbb34[22] ^ ykcbb34[21] ^ ykcbb34[13] ^ ykcbb34[9] ^ ykcbb34[7] ^ ykcbb34[6] ^ ykcbb34[3] ^                   ps5d9a0[3] ^ ps5d9a0[6] ^ ps5d9a0[7] ^ ps5d9a0[9] ^ ps5d9a0[13] ^ ps5d9a0[21] ^ ps5d9a0[22] ^                   ps5d9a0[23] ^ ps5d9a0[25] ^ ps5d9a0[26] ^ ps5d9a0[27] ^ ps5d9a0[28] ^ ps5d9a0[29] ^ ps5d9a0[31];   al70740[30] = ykcbb34[30] ^ ykcbb34[29] ^ ykcbb34[28] ^ ykcbb34[27] ^ ykcbb34[26] ^ ykcbb34[24] ^ ykcbb34[23] ^                   ykcbb34[22] ^ ykcbb34[14] ^ ykcbb34[10] ^ ykcbb34[8] ^ ykcbb34[7] ^ ykcbb34[4] ^ ps5d9a0[4] ^                   ps5d9a0[7] ^ ps5d9a0[8] ^ ps5d9a0[10] ^ ps5d9a0[14] ^ ps5d9a0[22] ^ ps5d9a0[23] ^ ps5d9a0[24] ^                   ps5d9a0[26] ^ ps5d9a0[27] ^ ps5d9a0[28] ^ ps5d9a0[29] ^ ps5d9a0[30];   al70740[31] = ykcbb34[31] ^ ykcbb34[30] ^ ykcbb34[29] ^ ykcbb34[28] ^ ykcbb34[27] ^ ykcbb34[25] ^ ykcbb34[24] ^                   ykcbb34[23] ^ ykcbb34[15] ^ ykcbb34[11] ^ ykcbb34[9] ^ ykcbb34[8] ^ ykcbb34[5] ^ ps5d9a0[5] ^                   ps5d9a0[8] ^ ps5d9a0[9] ^ ps5d9a0[11] ^ ps5d9a0[15] ^ ps5d9a0[23] ^ ps5d9a0[24] ^ ps5d9a0[25] ^                   ps5d9a0[27] ^ ps5d9a0[28] ^ ps5d9a0[29] ^ ps5d9a0[30] ^ ps5d9a0[31];
end


`ifdef X1



always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n)      crc_reg64 <= 32'hFFFF_FFFF ;   else if (ep264b4)      crc_reg64 <= 32'hFFFF_FFFF ;   else if (hd2d459)      crc_reg64 <= uk92d27 ;   else      crc_reg64 <= crc_reg64 ;
end


always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n)      uie5c1d <= 32'h0000_0000 ;   else if (ira4c96)      uie5c1d <= crc_reg64 ;   else if (fnecd02)      uie5c1d <= ri96939 ;   else            uie5c1d <= zz325a4 ;
end

`endif 




`ifdef X4

always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n) begin      crc_reg64 <= 32'hFFFF_FFFF ;      uie5c1d <= 32'hFFFF_FFFF ;   end   else if (ep264b4) begin      crc_reg64 <= 32'hFFFF_FFFF ;      uie5c1d <= 32'hFFFF_FFFF ;   end   else if (hd2d459)  begin      crc_reg64 <= uk92d27 ;      uie5c1d <= ri96939 ;   end   else  begin      crc_reg64 <= crc_reg64 ;      uie5c1d <= zz325a4 ;   end
end

`endif 




`ifdef X1


always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n)      zm83a04 <= 32'h0000_0000 ;   else if (ira4c96)      zm83a04 <= qtf7c10[63:32] ;   else      zm83a04 <= 32'h0000_0000 ;
end

`endif 



`ifdef X4
   assign zm83a04 = qtf7c10[63:32] ;

`endif 



always @( posedge sys_clk or negedge rst_n ) begin   if (!rst_n)      ph63a5  <= 1'b0 ;   else      ph63a5  <= ira4c96 ;
end


assign mr7ae14 = { ~crc_reg64[24], ~crc_reg64[25], ~crc_reg64[26], ~crc_reg64[27],                        ~crc_reg64[28], ~crc_reg64[29], ~crc_reg64[30], ~crc_reg64[31] } ;
assign xjd70a4 = { ~crc_reg64[16], ~crc_reg64[17], ~crc_reg64[18], ~crc_reg64[19],                        ~crc_reg64[20], ~crc_reg64[21], ~crc_reg64[22], ~crc_reg64[23] } ;
assign lsb8526 = { ~crc_reg64[8], ~crc_reg64[9], ~crc_reg64[10], ~crc_reg64[11],                        ~crc_reg64[12], ~crc_reg64[13], ~crc_reg64[14], ~crc_reg64[15] } ;
assign pfc2932 = { ~crc_reg64[0], ~crc_reg64[1], ~crc_reg64[2], ~crc_reg64[3],                        ~crc_reg64[4], ~crc_reg64[5], ~crc_reg64[6], ~crc_reg64[7] } ;

assign ri14996 = { ~zz325a4[24], ~zz325a4[25], ~zz325a4[26], ~zz325a4[27],                        ~zz325a4[28], ~zz325a4[29], ~zz325a4[30], ~zz325a4[31] } ;
assign qva4cb2 = { ~zz325a4[16], ~zz325a4[17], ~zz325a4[18], ~zz325a4[19],                        ~zz325a4[20], ~zz325a4[21], ~zz325a4[22], ~zz325a4[23] } ;
assign qv26594 = { ~zz325a4[8], ~zz325a4[9], ~zz325a4[10], ~zz325a4[11],                        ~zz325a4[12], ~zz325a4[13], ~zz325a4[14], ~zz325a4[15] } ;
assign rv32ca4 = { ~zz325a4[0], ~zz325a4[1], ~zz325a4[2], ~zz325a4[3],                        ~zz325a4[4], ~zz325a4[5], ~zz325a4[6], ~zz325a4[7] } ;


assign crc_out64 = {jc66816, ou340b3, jra0598, qv2cc7} ;
assign crc_out32 = {bn1663c, qib31e6, aa98f31, pfc7988} ;
always@* begin qtf7c10<={data_in>>1,ux17adf[0]};hd2d459<=ux17adf[1];ira4c96<=ux17adf[2];ep264b4<=ux17adf[3];zz325a4<={uie5c1d>>1,ux17adf[4]};uk92d27<={fc1b075>>1,ux17adf[5]};ri96939<={al70740>>1,ux17adf[6]};uxb49cb<={osc1d57>>1,ux17adf[7]};ira4e5d<={gb755ca>>1,ux17adf[8]};fp272ec<={ngeab9>>1,ux17adf[9]};gd39766<={jr22b7a>>1,ux17adf[10]};ykcbb34<={ou15bd7>>1,ux17adf[11]};ps5d9a0<={riadeb8>>1,ux17adf[12]};fnecd02<=ux17adf[13];jc66816<={mr7ae14>>1,ux17adf[14]};ou340b3<={xjd70a4>>1,ux17adf[15]};jra0598<={lsb8526>>1,ux17adf[16]};qv2cc7<={pfc2932>>1,ux17adf[17]};bn1663c<={ri14996>>1,ux17adf[18]};qib31e6<={qva4cb2>>1,ux17adf[19]};aa98f31<={qv26594>>1,ux17adf[20]};pfc7988<={rv32ca4>>1,ux17adf[21]};end
always@* begin db22f5b[2047]<=enable_crc;db22f5b[2046]<=half_data;db22f5b[2045]<=rst_crc;db22f5b[2042]<=uie5c1d[0];db22f5b[2037]<=fc1b075[0];db22f5b[2026]<=al70740[0];db22f5b[2005]<=osc1d57[0];db22f5b[1962]<=gb755ca[0];db22f5b[1877]<=ngeab9[0];db22f5b[1742]<=qva4cb2[0];db22f5b[1707]<=jr22b7a[0];db22f5b[1459]<=pfc2932[0];db22f5b[1437]<=qv26594[0];db22f5b[1388]<=xjd70a4[0];db22f5b[1371]<=ph63a5;db22f5b[1366]<=ou15bd7[0];db22f5b[1023]<=data_in[0];db22f5b[871]<=ri14996[0];db22f5b[827]<=rv32ca4[0];db22f5b[729]<=lsb8526[0];db22f5b[694]<=mr7ae14[0];db22f5b[685]<=riadeb8[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_rxintf_x1 (
   input wire                    sys_clk ,         
   input wire                    rst_n ,           

   input wire [(`NUM_VC*8)-1:0]  cfgec_tvmap ,    

   input wire [15:0]             tlpdec_data ,     
   input wire                    tlpdec_st ,       
   input wire                    tlpdec_end ,      
   input wire                    tlpdec_cfgrd ,    

   `ifdef ECRC
      input wire                 tlpdec_pcie_x1_ecrc_err , 
   `endif
   input wire                    tlpdec_us_req ,   
   input wire                    tlpdec_malf_tlp , 

   input wire [`NUM_VC-1:0]      dl_up ,    
   input wire                    cfg_hit ,
   input wire [6:0]              bar_hit ,
   input wire                    bar_fail ,
   input wire                    fc_overflow ,

   output reg [6:0]              rx_bar_hit ,
   output reg [`NUM_VC-1:0]      trnc_st ,  
   output wire                   vc_dl_up_fail ,  
   output reg [(`NUM_VC*16)-1:0] rx_data , 
   output reg [`NUM_VC-1:0]      rx_st ,  
   output reg [`NUM_VC-1:0]      rx_end ,
   `ifdef ECRC
      output reg [`NUM_VC-1:0]   rx_pcie_x1_ecrc_err , 
   `endif
   output reg [`NUM_VC-1:0]      rx_us_req ,   
   output reg [`NUM_VC-1:0]      rx_malf_tlp , 

   
   output wire [`NUM_VC-1:0]     vc_rcvd,              
   output reg                    ph_rcvd,              
   output reg                    pd_rcvd,              
   output reg                    nph_rcvd,             
   output reg                    npd_rcvd ,            
   output reg [8:0]              credits_rcvd,         

   output reg                    malf_pkt_ph,          
   output reg                    malf_pkt_pd,          
   output reg                    malf_pkt_nph,         
   output reg                    malf_pkt_npd          
);
parameter PKT_WAIT    = 2'b00;
parameter OFLOW_CHECK = 2'b01;
parameter MALF_CHECK  = 2'b10;
reg   [15:0]                   dz616ad ;
reg   [15:0]                   twb56f ;
reg   [15:0]                   hb5ab7b ;
reg   [15:0]                   vid5bdf ;
reg                            vkadefa ;
reg                            fp27569 ;
reg                            fc3ab4e ;
reg                            rgd5a72 ;
reg                            puad392 ;
reg                            rtd2991 ;
reg                            vx94c8f ;
reg                            uka647e ;
reg                            xl323f0 ;

`ifdef ECRC
reg                         hd91f87 ;
reg                         oh8fc3e ;
reg                         pf7e1f4 ;
reg                         wwf0fa7 ;

`endif
reg                            wy87d39 ;
reg                            uk3e9c8 ;
reg                            hof4e40 ;
reg                            hqa7203 ;
reg                            wl3901a ;
reg                            zxc80d4 ;
reg                            zx406a6 ;
reg                            vx3536 ;
reg    [2:0]                   tc ;
reg    [7:0]                   osd4db9 ;
reg                            qia6dc8 ;
reg                            ux36e41 ;
reg    [1:0]                   go7dc49;
reg    [4:0]                   dmee249;
reg    [8:0]                   fnc8318;
reg    [1:0]                   uv418c6;
reg    [3:0]                   lfc635;
wire                           ps631ae           ;
wire [15:0]                    ir18d72 ;
wire                           alc6b94 ;
wire                           ba35ca4 ;

`ifdef ECRC
wire                        mtae523 ;

`endif
wire                           me7291c ;
wire                           tj948e0 ;
wire   [7:0]                   gda4706 ;
wire   [7:0]                   sj23835 ;
wire   [7:0]                   lf1c1ad ;
wire   [7:0]                   aye0d6f ;
wire   [7:0]                   tj6b78 ;
wire   [7:0]                   xy35bc6 ;
wire   [7:0]                   fcade33 ;
wire   [7:0]                   kd6f19a ;
wire                           jp7ed18;
wire                           czc66a1;
wire                           wl3350d;
wire                           yz9a86d;
wire                           ayd436d;
wire                           oha1b69;
wire                           andb4c;
wire  [31:0]                   ic6da65;
wire                           go6d328;
wire                           vi69941;
wire                           go4ca0a;
wire                           gb65051;
wire                           tj2828d;
wire                           wj4146f;
wire                           uka37c;
wire                           of51be1;
wire                           qi8df0c;
wire                           ip6f861;
wire                           lq7c30d;

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef EN_VC0

`ifdef VC1

`else

`endif  

`else

`endif

`ifdef EN_VC1

`else

`endif

`ifdef EN_VC2

`else

`endif

`ifdef EN_VC3

`else

`endif

`ifdef EN_VC4

`else

`endif

`ifdef EN_VC5

`else

`endif

`ifdef EN_VC6

`else

`endif

`ifdef EN_VC7

`else

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef EN_VC0

`ifdef ECRC

`endif

`endif

`ifdef EN_VC1

`ifdef ECRC

`endif

`endif

`ifdef EN_VC2

`ifdef ECRC

`endif

`endif

`ifdef EN_VC3

`ifdef ECRC

`endif

`endif

`ifdef EN_VC4

`ifdef ECRC

`endif

`endif

`ifdef EN_VC5

`ifdef ECRC

`endif

`endif

`ifdef EN_VC6

`ifdef ECRC

`endif

`endif

`ifdef EN_VC7

`ifdef ECRC

`endif

`endif
reg [(`NUM_VC * 8) - 1 : 0] nee186a;
reg [15 : 0] wlbeec2;
reg yxf7614;
reg ohbb0a5;
reg en6a5b4;
reg necf4e1;
reg kd7a70b;
reg [`NUM_VC - 1 : 0] uk1ab4b;
reg kfb48d8;
reg [6 : 0] gda46c5;
reg sj2362d;
reg fc1b16c;
reg [15 : 0] dzd8b62;
reg [15 : 0] lqc5b16;
reg [15 : 0] rv2d8b3;
reg [15 : 0] by6c59e;
reg go62cf3;
reg mt18fd6;
reg hbc7eb4;
reg fc3f5a6;
reg uifad33;
reg zm99c37;
reg eace1ba;
reg qt70dd1;
reg ba86e8d;
reg lf3746a;
reg phba357;
reg wwd1abf;
reg co8d5f8;
reg wj6afc0;
reg tu57e05;
reg lfbf02b;
reg shf815f;
reg [2 : 0] by58863;
reg [7 : 0] ks57e3;
reg co2bf18;
reg rt5f8c1;
reg [1 : 0] zxfc60f;
reg [4 : 0] xje307e;
reg [8 : 0] ux183f6;
reg [1 : 0] uic1fb5;
reg [3 : 0] iefda9;
reg th7ed48;
reg [15 : 0] blf6a46;
reg jrb5236;
reg swa91b6;
reg ne48db1;
reg ic46d8b;
reg [7 : 0] oh36c58;
reg [7 : 0] gqb62c4;
reg [7 : 0] anb1621;
reg [7 : 0] bn8b10c;
reg [7 : 0] rg58867;
reg [7 : 0] suc433a;
reg [7 : 0] ou219d0;
reg [7 : 0] bnce80;
reg an18bea;
reg pu3a038;
reg xwd01c3;
reg qv80e1b;
reg ep70dd;
reg nt386ed;
reg enc376e;
reg [31 : 0] ls1bb75;
reg dzddbab;
reg mredd5e;
reg pf6eaf4;
reg qt757a7;
reg yzabd3c;
reg kd5e9e5;
reg tuf4f2d;
reg zma796b;
reg oh3cb5b;
reg ose5add;
reg bn2d6e8;
reg [2047:0] db22f5b;
wire [74:0] ux17adf;

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef EN_VC0

`ifdef VC1

`else

`endif  

`else

`endif

`ifdef EN_VC1

`else

`endif

`ifdef EN_VC2

`else

`endif

`ifdef EN_VC3

`else

`endif

`ifdef EN_VC4

`else

`endif

`ifdef EN_VC5

`else

`endif

`ifdef EN_VC6

`else

`endif

`ifdef EN_VC7

`else

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef EN_VC0

`ifdef ECRC

`endif

`endif

`ifdef EN_VC1

`ifdef ECRC

`endif

`endif

`ifdef EN_VC2

`ifdef ECRC

`endif

`endif

`ifdef EN_VC3

`ifdef ECRC

`endif

`endif

`ifdef EN_VC4

`ifdef ECRC

`endif

`endif

`ifdef EN_VC5

`ifdef ECRC

`endif

`endif

`ifdef EN_VC6

`ifdef ECRC

`endif

`endif

`ifdef EN_VC7

`ifdef ECRC

`endif

`endif

localparam ribd6fd = 75,jceb7ea = 32'hfdffd42b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef EN_VC0


`ifdef VC1


`else


`endif  


`else


`endif


`ifdef EN_VC1


`else


`endif


`ifdef EN_VC2


`else


`endif


`ifdef EN_VC3


`else


`endif


`ifdef EN_VC4


`else


`endif


`ifdef EN_VC5


`else


`endif


`ifdef EN_VC6


`else


`endif


`ifdef EN_VC7


`else


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef EN_VC0


`ifdef ECRC


`endif


`endif


`ifdef EN_VC1


`ifdef ECRC


`endif


`endif


`ifdef EN_VC2


`ifdef ECRC


`endif


`endif


`ifdef EN_VC3


`ifdef ECRC


`endif


`endif


`ifdef EN_VC4


`ifdef ECRC


`endif


`endif


`ifdef EN_VC5


`ifdef ECRC


`endif


`endif


`ifdef EN_VC6


`ifdef ECRC


`endif


`endif


`ifdef EN_VC7


`ifdef ECRC


`endif


`endif




`ifdef ECRC



`endif




`ifdef ECRC



`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      dz616ad  <= 16'd0 ;      vkadefa    <= 1'b0 ;      rtd2991   <= 1'b0 ;      twb56f  <= 16'd0 ;      fp27569    <= 1'b0 ;      vx94c8f   <= 1'b0 ;      hb5ab7b  <= 16'd0 ;      fc3ab4e    <= 1'b0 ;      uka647e   <= 1'b0 ;      xl323f0   <= 1'b0 ;      rgd5a72    <= 1'b0 ;      puad392    <= 1'b0 ;   end   else begin      dz616ad  <= wlbeec2 ;      vkadefa    <= yxf7614 ;      rtd2991   <= ohbb0a5 ;      twb56f  <= dzd8b62 ;      fp27569    <= go62cf3 ;      vx94c8f   <= zm99c37 ;      hb5ab7b  <= lqc5b16 ;      fc3ab4e    <= mt18fd6 ;      uka647e   <= eace1ba ;      xl323f0   <= qt70dd1 ;      rgd5a72    <= hbc7eb4 ;      puad392    <= fc3f5a6 ;   end
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin


`ifdef ECRC
         hd91f87 <= 1'b0 ;         oh8fc3e <= 1'b0 ;         pf7e1f4 <= 1'b0 ;


`endif
      wy87d39   <= 1'b0 ;      uk3e9c8   <= 1'b0 ;      hof4e40   <= 1'b0 ;      wl3901a <= 1'b0 ;      zxc80d4 <= 1'b0 ;      zx406a6 <= 1'b0 ;   end   else begin


`ifdef ECRC
         hd91f87 <= tlpdec_pcie_x1_ecrc_err ;         oh8fc3e <= hd91f87 ;         pf7e1f4 <= oh8fc3e ;


`endif
      wy87d39   <= necf4e1 ;      uk3e9c8   <= lf3746a ;      hof4e40   <= phba357 ;
      wl3901a <= kd7a70b ;      zxc80d4 <= wj6afc0 ;      zx406a6 <= tu57e05 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     qia6dc8 <= 1'b0 ;   else if (kfb48d8)     qia6dc8 <= 1'b1 ;   else if (qt70dd1)     qia6dc8 <= 1'b0 ;   else     qia6dc8 <= co2bf18;
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     rx_bar_hit <= 7'h0 ;   else if (hbc7eb4 && th7ed48 )     rx_bar_hit <= gda46c5 ;   else if (!th7ed48 || ba86e8d )     rx_bar_hit <= 7'h0 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     ux36e41 <= 1'b0 ;   else if (hbc7eb4)     ux36e41 <= 1'b0;   else if (en6a5b4)     ux36e41 <= 1'b1;   else     ux36e41 <= rt5f8c1;
end
assign ps631ae = ~((kfb48d8 & ~rt5f8c1) | co2bf18) ;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     tc <= 3'b000 ;   else if (go62cf3)     tc <= dzd8b62[6:4] ;   else     tc <= by58863 ;
end


`ifdef EN_VC0



`ifdef VC1
      assign gda4706 = 8'hff;


`else
      assign gda4706 = nee186a[7:0] ;


`endif  



`else
   assign gda4706 = 8'b0000_0000 ;


`endif



`ifdef EN_VC1
   assign sj23835 = nee186a[15:8] ;


`else
   assign sj23835 = 8'b0000_0000 ;


`endif



`ifdef EN_VC2
   assign lf1c1ad = nee186a[23:16] ;


`else
   assign lf1c1ad = 8'b0000_0000 ;


`endif



`ifdef EN_VC3
   assign aye0d6f = nee186a[31:24] ;


`else
   assign aye0d6f = 8'b0000_0000 ;


`endif



`ifdef EN_VC4
   assign tj6b78 = nee186a[39:32] ;


`else
   assign tj6b78 = 8'b0000_0000 ;


`endif



`ifdef EN_VC5
   assign xy35bc6 = nee186a[47:40] ;


`else
   assign xy35bc6 = 8'b0000_0000 ;


`endif



`ifdef EN_VC6
   assign fcade33 = nee186a[55:48] ;


`else
   assign fcade33 = 8'b0000_0000 ;


`endif



`ifdef EN_VC7
   assign kd6f19a = nee186a[63:56] ;


`else
   assign kd6f19a = 8'b0000_0000 ;


`endif




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      osd4db9 <= 8'b0000_0000 ;   else      case (by58863)         3'b000 :            case ( 1'b1 )               oh36c58[0] :                  osd4db9 <= 8'b0000_0001 ;               gqb62c4[0] :                  osd4db9 <= 8'b0000_0010 ;               anb1621[0] :                  osd4db9 <= 8'b0000_0100 ;               bn8b10c[0] :                  osd4db9 <= 8'b0000_1000 ;               rg58867[0] :                  osd4db9 <= 8'b0001_0000 ;               suc433a[0] :                  osd4db9 <= 8'b0010_0000 ;               ou219d0[0] :                  osd4db9 <= 8'b0100_0000 ;               bnce80[0] :                  osd4db9 <= 8'b1000_0000 ;            endcase         3'b001 :            case ( 1'b1 )               oh36c58[1] :                  osd4db9 <= 8'b0000_0001 ;               gqb62c4[1] :                  osd4db9 <= 8'b0000_0010 ;               anb1621[1] :                  osd4db9 <= 8'b0000_0100 ;               bn8b10c[1] :                  osd4db9 <= 8'b0000_1000 ;               rg58867[1] :                  osd4db9 <= 8'b0001_0000 ;               suc433a[1] :                  osd4db9 <= 8'b0010_0000 ;               ou219d0[1] :                  osd4db9 <= 8'b0100_0000 ;               bnce80[1] :                  osd4db9 <= 8'b1000_0000 ;            endcase         3'b010 :            case ( 1'b1 )               oh36c58[2] :                  osd4db9 <= 8'b0000_0001 ;               gqb62c4[2] :                  osd4db9 <= 8'b0000_0010 ;               anb1621[2] :                  osd4db9 <= 8'b0000_0100 ;               bn8b10c[2] :                  osd4db9 <= 8'b0000_1000 ;               rg58867[2] :                  osd4db9 <= 8'b0001_0000 ;               suc433a[2] :                  osd4db9 <= 8'b0010_0000 ;               ou219d0[2] :                  osd4db9 <= 8'b0100_0000 ;               bnce80[2] :                  osd4db9 <= 8'b1000_0000 ;            endcase         3'b011 :            case ( 1'b1 )               oh36c58[3] :                  osd4db9 <= 8'b0000_0001 ;               gqb62c4[3] :                  osd4db9 <= 8'b0000_0010 ;               anb1621[3] :                  osd4db9 <= 8'b0000_0100 ;               bn8b10c[3] :                  osd4db9 <= 8'b0000_1000 ;               rg58867[3] :                  osd4db9 <= 8'b0001_0000 ;               suc433a[3] :                  osd4db9 <= 8'b0010_0000 ;               ou219d0[3] :                  osd4db9 <= 8'b0100_0000 ;               bnce80[3] :                  osd4db9 <= 8'b1000_0000 ;            endcase         3'b100 :            case ( 1'b1 )               oh36c58[4] :                  osd4db9 <= 8'b0000_0001 ;               gqb62c4[4] :                  osd4db9 <= 8'b0000_0010 ;               anb1621[4] :                  osd4db9 <= 8'b0000_0100 ;               bn8b10c[4] :                  osd4db9 <= 8'b0000_1000 ;               rg58867[4] :                  osd4db9 <= 8'b0001_0000 ;               suc433a[4] :                  osd4db9 <= 8'b0010_0000 ;               ou219d0[4] :                  osd4db9 <= 8'b0100_0000 ;               bnce80[4] :                  osd4db9 <= 8'b1000_0000 ;            endcase         3'b101 :            case ( 1'b1 )               oh36c58[5] :                  osd4db9 <= 8'b0000_0001 ;               gqb62c4[5] :                  osd4db9 <= 8'b0000_0010 ;               anb1621[5] :                  osd4db9 <= 8'b0000_0100 ;               bn8b10c[5] :                  osd4db9 <= 8'b0000_1000 ;               rg58867[5] :                  osd4db9 <= 8'b0001_0000 ;               suc433a[5] :                  osd4db9 <= 8'b0010_0000 ;               ou219d0[5] :                  osd4db9 <= 8'b0100_0000 ;               bnce80[5] :                  osd4db9 <= 8'b1000_0000 ;            endcase         3'b110 :            case ( 1'b1 )               oh36c58[6] :                  osd4db9 <= 8'b0000_0001 ;               gqb62c4[6] :                  osd4db9 <= 8'b0000_0010 ;               anb1621[6] :                  osd4db9 <= 8'b0000_0100 ;               bn8b10c[6] :                  osd4db9 <= 8'b0000_1000 ;               rg58867[6] :                  osd4db9 <= 8'b0001_0000 ;               suc433a[6] :                  osd4db9 <= 8'b0010_0000 ;               ou219d0[6] :                  osd4db9 <= 8'b0100_0000 ;               bnce80[6] :                  osd4db9 <= 8'b1000_0000 ;            endcase                  default :            case ( 1'b1 )               oh36c58[7] :                  osd4db9 <= 8'b0000_0001 ;               gqb62c4[7] :                  osd4db9 <= 8'b0000_0010 ;               anb1621[7] :                  osd4db9 <= 8'b0000_0100 ;               bn8b10c[7] :                  osd4db9 <= 8'b0000_1000 ;               rg58867[7] :                  osd4db9 <= 8'b0001_0000 ;               suc433a[7] :                  osd4db9 <= 8'b0010_0000 ;               ou219d0[7] :                  osd4db9 <= 8'b0100_0000 ;               bnce80[7] :                  osd4db9 <= 8'b1000_0000 ;            endcase      endcase
end

assign ir18d72 = rv2d8b3 ;
assign alc6b94   = hbc7eb4 & th7ed48 ;
assign ba35ca4  = qt70dd1 & th7ed48 ;


`ifdef ECRC
   assign mtae523 = pf7e1f4 & th7ed48 ;

`endif

assign me7291c   = wwd1abf & th7ed48 ;
assign tj948e0 = lfbf02b & th7ed48 ;
assign vc_dl_up_fail = ~(|(ks57e3 & uk1ab4b));

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rx_data <= {(`NUM_VC*16){1'b0}} ;      rx_st   <= {(`NUM_VC){1'b0}};      rx_end  <= {(`NUM_VC){1'b0}};      trnc_st <= {(`NUM_VC){1'b0}};


`ifdef ECRC
         rx_pcie_x1_ecrc_err <= {(`NUM_VC){1'b0}};


`endif
      rx_us_req   <= {(`NUM_VC){1'b0}};      rx_malf_tlp <= {(`NUM_VC){1'b0}};   end   else begin      case (1'b1)


`ifdef EN_VC0
         ks57e3[0] : begin            rx_data[15:0]     <= blf6a46 ;            rx_st[0]          <= jrb5236 ;            rx_end[0]         <= swa91b6 ;            trnc_st[0]        <= jrb5236 ;



`ifdef ECRC
               rx_pcie_x1_ecrc_err[0] <= mtae523 ;


`endif
            rx_us_req[0]      <= ne48db1 ;            rx_malf_tlp[0]    <= ic46d8b ;         end


`endif



`ifdef EN_VC1
         ks57e3[1] : begin            rx_data[ 31:16]   <= blf6a46 ;            rx_st[1]          <= jrb5236 ;            rx_end[1]         <= swa91b6 ;            trnc_st[1]        <= jrb5236 ;



`ifdef ECRC
               rx_pcie_x1_ecrc_err[1] <= mtae523 ;


`endif
            rx_us_req[1]      <= ne48db1 ;            rx_malf_tlp[1]    <= ic46d8b ;         end


`endif



`ifdef EN_VC2
         ks57e3[2] : begin            rx_data[ 47:32]   <= blf6a46 ;            rx_st[2]          <= jrb5236 ;            rx_end[2]         <= swa91b6 ;            trnc_st[2]        <= jrb5236 ;



`ifdef ECRC
               rx_pcie_x1_ecrc_err[2] <= mtae523 ;


`endif
            rx_us_req[2]      <= ne48db1 ;            rx_malf_tlp[2]    <= ic46d8b ;         end


`endif



`ifdef EN_VC3
         ks57e3[3] : begin            rx_data[ 63:48]   <= blf6a46 ;            rx_st[3]          <= jrb5236 ;            rx_end[3]         <= swa91b6 ;            trnc_st[3]        <= jrb5236 ;



`ifdef ECRC
               rx_pcie_x1_ecrc_err[3] <= mtae523 ;


`endif
            rx_us_req[3]      <= ne48db1 ;            rx_malf_tlp[3]    <= ic46d8b ;         end


`endif



`ifdef EN_VC4
         ks57e3[4] : begin            rx_data[ 79:64]   <= blf6a46 ;            rx_st[4]          <= jrb5236 ;            rx_end[4]         <= swa91b6 ;            trnc_st[4]        <= jrb5236 ;



`ifdef ECRC
               rx_pcie_x1_ecrc_err[4] <= mtae523 ;


`endif
            rx_us_req[4]      <= ne48db1 ;            rx_malf_tlp[4]    <= ic46d8b ;         end


`endif



`ifdef EN_VC5
         ks57e3[5] : begin            rx_data[ 95:80]   <= blf6a46 ;            rx_st[5]          <= jrb5236 ;            rx_end[5]         <= swa91b6 ;            trnc_st[5]        <= jrb5236 ;



`ifdef ECRC
               rx_pcie_x1_ecrc_err[5] <= mtae523 ;


`endif
            rx_us_req[5]      <= ne48db1 ;            rx_malf_tlp[5]    <= ic46d8b ;         end


`endif



`ifdef EN_VC6
         ks57e3[6] : begin            rx_data[111:96]   <= blf6a46 ;            rx_st[6]          <= jrb5236 ;            rx_end[6]         <= swa91b6 ;            trnc_st[6]        <= jrb5236 ;



`ifdef ECRC
               rx_pcie_x1_ecrc_err[6] <= mtae523 ;


`endif
            rx_us_req[6]      <= ne48db1 ;            rx_malf_tlp[6]    <= ic46d8b ;         end


`endif



`ifdef EN_VC7
         ks57e3[7] : begin            rx_data[127:112]  <= blf6a46 ;            rx_st[7]          <= jrb5236 ;            rx_end[7]         <= swa91b6 ;            trnc_st[7]        <= jrb5236 ;



`ifdef ECRC
               rx_pcie_x1_ecrc_err[7] <= mtae523 ;


`endif
            rx_us_req[7]      <= ne48db1 ;            rx_malf_tlp[7]    <= ic46d8b ;         end


`endif
      endcase   end
end



assign jp7ed18      = yxf7614;
assign czc66a1 = go62cf3;
assign wl3350d = mt18fd6;
assign yz9a86d = hbc7eb4;
assign ayd436d = fc3f5a6;
assign oha1b69 = uifad33;
assign ic6da65        = {dzd8b62, wlbeec2};
assign andb4c        = ohbb0a5;
assign lq7c30d  = kd7a70b & ohbb0a5;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      go7dc49        <= 2'b00;      dmee249       <= 5'b00000;      fnc8318 <=  9'd0;   end   else begin      if (pu3a038) begin         go7dc49    <=  ls1bb75[30:29];         dmee249   <=  ls1bb75[28:24];                           if(ls1bb75[1:0] == 2'b00)            fnc8318 <= {(~(|ls1bb75[9:2])), ls1bb75[9:2]};         else            fnc8318 <= ls1bb75[9:2] + 1;      end   end
end
assign go6d328  = (zxfc60f[1] == 1'b0) & (xje307e[4:1] == 4'b0000);  
assign vi69941  = (zxfc60f[1] == 1'b1) & (xje307e == 5'b00000);
assign go4ca0a   = (zxfc60f[0] == 1'b0) & (xje307e == 5'b00010);
assign gb65051 = (zxfc60f[0] == 1'b0) & (xje307e == 5'b00100);
assign tj2828d = (zxfc60f[0] == 1'b0) & (xje307e == 5'b00101);
assign wj4146f  = (zxfc60f == 2'b01) & (xje307e[4:3] == 2'b10);
assign uka37c = (zxfc60f == 2'b11) & (xje307e[4:3] == 2'b10);
assign of51be1 = (zxfc60f == 2'b10) & (pf6eaf4 | qt757a7 | yzabd3c);  
assign qi8df0c   = mredd5e | kd5e9e5 | tuf4f2d;
assign ip6f861  = dzddbab | pf6eaf4 | qt757a7 | yzabd3c;
assign vc_rcvd = ks57e3[`NUM_VC-1:0];
always @(posedge sys_clk or negedge rst_n) begin   if (rst_n == 1'b0) begin      ph_rcvd      <= 1'b0;      pd_rcvd      <= 1'b0;      nph_rcvd     <= 1'b0;      npd_rcvd     <= 1'b0;      credits_rcvd <= 9'd0;      lfc635  <= 4'h0;   end   else begin      ph_rcvd      <= 1'b0;      pd_rcvd      <= 1'b0;      nph_rcvd     <= 1'b0;      npd_rcvd     <= 1'b0;      if(xwd01c3) begin         lfc635  <= {zma796b, ose5add, (mredd5e | tuf4f2d), oh3cb5b};                  ph_rcvd    <= oh3cb5b;         pd_rcvd    <= mredd5e | tuf4f2d;                  nph_rcvd   <= ose5add;         npd_rcvd   <= zma796b;                  if(mredd5e || tuf4f2d)            credits_rcvd <=  ux183f6;         else if(zma796b)            credits_rcvd <=  'd1;         else            credits_rcvd <=  'd0;      end   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      uv418c6  <= PKT_WAIT;      malf_pkt_ph  <= 1'b0;      malf_pkt_pd  <= 1'b0;      malf_pkt_nph <= 1'b0;      malf_pkt_npd <= 1'b0;   end   else begin      malf_pkt_ph  <= 1'b0;      malf_pkt_pd  <= 1'b0;      malf_pkt_nph <= 1'b0;      malf_pkt_npd <= 1'b0;      if((uic1fb5 == MALF_CHECK) && bn2d6e8) begin         malf_pkt_ph  <= iefda9[0];         malf_pkt_pd  <= iefda9[1];         malf_pkt_nph <= iefda9[2];         malf_pkt_npd <= iefda9[3];      end      case(uic1fb5)         PKT_WAIT    : uv418c6  <= (nt386ed) ? OFLOW_CHECK : uic1fb5;         OFLOW_CHECK : uv418c6  <= (fc1b16c) ? PKT_WAIT : MALF_CHECK;         MALF_CHECK  : uv418c6  <= (enc376e) ? PKT_WAIT : uic1fb5;         default     : uv418c6  <= uic1fb5;      endcase   end
end

always@* begin nee186a<={cfgec_tvmap>>1,ux17adf[0]};wlbeec2<={tlpdec_data>>1,ux17adf[1]};yxf7614<=ux17adf[2];ohbb0a5<=ux17adf[3];en6a5b4<=ux17adf[4];necf4e1<=ux17adf[5];kd7a70b<=ux17adf[6];uk1ab4b<={dl_up>>1,ux17adf[7]};kfb48d8<=ux17adf[8];gda46c5<={bar_hit>>1,ux17adf[9]};sj2362d<=ux17adf[10];fc1b16c<=ux17adf[11];dzd8b62<={dz616ad>>1,ux17adf[12]};lqc5b16<={twb56f>>1,ux17adf[13]};rv2d8b3<={hb5ab7b>>1,ux17adf[14]};by6c59e<={vid5bdf>>1,ux17adf[15]};go62cf3<=ux17adf[16];mt18fd6<=ux17adf[17];hbc7eb4<=ux17adf[18];fc3f5a6<=ux17adf[19];uifad33<=ux17adf[20];zm99c37<=ux17adf[21];eace1ba<=ux17adf[22];qt70dd1<=ux17adf[23];ba86e8d<=ux17adf[24];lf3746a<=ux17adf[25];phba357<=ux17adf[26];wwd1abf<=ux17adf[27];co8d5f8<=ux17adf[28];wj6afc0<=ux17adf[29];tu57e05<=ux17adf[30];lfbf02b<=ux17adf[31];shf815f<=ux17adf[32];by58863<={tc>>1,ux17adf[33]};ks57e3<={osd4db9>>1,ux17adf[34]};co2bf18<=ux17adf[35];rt5f8c1<=ux17adf[36];zxfc60f<={go7dc49>>1,ux17adf[37]};xje307e<={dmee249>>1,ux17adf[38]};ux183f6<={fnc8318>>1,ux17adf[39]};uic1fb5<={uv418c6>>1,ux17adf[40]};iefda9<={lfc635>>1,ux17adf[41]};th7ed48<=ux17adf[42];blf6a46<={ir18d72>>1,ux17adf[43]};jrb5236<=ux17adf[44];swa91b6<=ux17adf[45];ne48db1<=ux17adf[46];ic46d8b<=ux17adf[47];oh36c58<={gda4706>>1,ux17adf[48]};gqb62c4<={sj23835>>1,ux17adf[49]};anb1621<={lf1c1ad>>1,ux17adf[50]};bn8b10c<={aye0d6f>>1,ux17adf[51]};rg58867<={tj6b78>>1,ux17adf[52]};suc433a<={xy35bc6>>1,ux17adf[53]};ou219d0<={fcade33>>1,ux17adf[54]};bnce80<={kd6f19a>>1,ux17adf[55]};an18bea<=ux17adf[56];pu3a038<=ux17adf[57];xwd01c3<=ux17adf[58];qv80e1b<=ux17adf[59];ep70dd<=ux17adf[60];nt386ed<=ux17adf[61];enc376e<=ux17adf[62];ls1bb75<={ic6da65>>1,ux17adf[63]};dzddbab<=ux17adf[64];mredd5e<=ux17adf[65];pf6eaf4<=ux17adf[66];qt757a7<=ux17adf[67];yzabd3c<=ux17adf[68];kd5e9e5<=ux17adf[69];tuf4f2d<=ux17adf[70];zma796b<=ux17adf[71];oh3cb5b<=ux17adf[72];ose5add<=ux17adf[73];bn2d6e8<=ux17adf[74];end
always@* begin db22f5b[2047]<=tlpdec_data[0];db22f5b[2046]<=tlpdec_st;db22f5b[2045]<=uka37c;db22f5b[2044]<=tlpdec_end;db22f5b[2043]<=of51be1;db22f5b[2041]<=tlpdec_cfgrd;db22f5b[2038]<=qi8df0c;db22f5b[2035]<=tlpdec_us_req;db22f5b[2029]<=czc66a1;db22f5b[2028]<=ip6f861;db22f5b[2022]<=tlpdec_malf_tlp;db22f5b[2011]<=wl3350d;db22f5b[2009]<=lq7c30d;db22f5b[1996]<=dl_up[0];db22f5b[1974]<=yz9a86d;db22f5b[1945]<=cfg_hit;db22f5b[1943]<=sj23835[0];db22f5b[1922]<=wy87d39;db22f5b[1901]<=ayd436d;db22f5b[1842]<=bar_hit[0];db22f5b[1839]<=lf1c1ad[0];db22f5b[1797]<=uk3e9c8;db22f5b[1791]<=gb65051;db22f5b[1778]<=me7291c;db22f5b[1776]<=vx94c8f;db22f5b[1759]<=go6d328;db22f5b[1755]<=oha1b69;db22f5b[1637]<=bar_fail;db22f5b[1631]<=aye0d6f[0];db22f5b[1622]<=hb5ab7b[0];db22f5b[1546]<=hof4e40;db22f5b[1535]<=tj2828d;db22f5b[1531]<=kd6f19a[0];db22f5b[1509]<=tj948e0;db22f5b[1504]<=uka647e;db22f5b[1471]<=vi69941;db22f5b[1468]<=puad392;db22f5b[1463]<=andb4c;db22f5b[1391]<=fc3ab4e;db22f5b[1312]<=osd4db9[0];db22f5b[1226]<=fc_overflow;db22f5b[1215]<=tj6b78[0];db22f5b[1197]<=vid5bdf[0];db22f5b[1153]<=ux36e41;db22f5b[1044]<=hqa7203;db22f5b[1037]<=fnc8318[0];db22f5b[1023]<=cfgec_tvmap[0];db22f5b[1022]<=wj4146f;db22f5b[1014]<=jp7ed18;db22f5b[971]<=gda4706[0];db22f5b[961]<=xl323f0;db22f5b[895]<=go4ca0a;db22f5b[889]<=ba35ca4;db22f5b[888]<=rtd2991;db22f5b[879]<=ic6da65[0];db22f5b[811]<=twb56f[0];db22f5b[765]<=fcade33[0];db22f5b[734]<=rgd5a72;db22f5b[695]<=fp27569;db22f5b[656]<=tc[0];db22f5b[576]<=qia6dc8;db22f5b[518]<=dmee249[0];db22f5b[444]<=alc6b94;db22f5b[405]<=dz616ad[0];db22f5b[382]<=xy35bc6[0];db22f5b[347]<=vkadefa;db22f5b[328]<=vx3536;db22f5b[259]<=go7dc49[0];db22f5b[222]<=ir18d72[0];db22f5b[164]<=zx406a6;db22f5b[111]<=ps631ae;db22f5b[82]<=zxc80d4;db22f5b[55]<=lfc635[0];db22f5b[41]<=wl3901a;db22f5b[27]<=uv418c6[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_tlpdec_x1 (
   
   input wire           sys_clk ,       
   input wire           rst_n ,         

   
   input wire [15:0]   rxtp_data ,     
   input wire          rxtp_st ,       
   input wire          rxtp_end ,      
   input wire [2:0]    max_pl_size ,   
   `ifdef ECRC
      input wire       pcie_x1_ecrc_enb ,      
   `endif

   input wire          vc_dl_up_fail ,  

   output reg [15:0]   tlpdec_data ,    
   output reg          tlpdec_st ,      
   output reg          tlpdec_end ,     
   output wire [2:0]   tlpdec_tc ,      

   output reg          tlpdec_cfgrd ,   
   output reg          tlpdec_cfgwr ,   
   output reg          tlpdec_memrw ,   
   output reg          tlpdec_iorw ,    
   output reg          tlpdec_rvcd_sts_ur , 
   output reg          tlpdec_rvcd_sts_ca , 
   output reg [31:0]   tlpdec_addr_l32 ,
   output reg [31:0]   tlpdec_addr_h32 ,
   output reg          tlpdec_addr64 ,  
   output reg          s2e_cnt_err ,    

   `ifdef ECRC
      output reg       tlpdec_pcie_x1_ecrc_err , 
      output reg       crc_ok_out ,      
   `endif
   output reg          tlpdec_pois_tlp , 
   output reg          tlpdec_us_req ,   
   output reg          tlpdec_malf_tlp , 

   output reg          tlp_st_reg2 ,     
   output reg          tlp_end_reg2 ,    
   output wire [15:0]  tlp_data_reg2     
) ;

`ifdef ECRC
reg                 pcie_x1_ecrc_int_reg0 ;

`endif
reg [15:0]             vve9a0a ;
reg [15:0]             ho4d056 ;
reg [15:0]             ic682b2 ;
reg [15:0]             mr41591 ;
reg                    swac8c ;
reg                    su56460 ;
reg                    pu2ac6b ;
reg                    hd91803 ;
reg                    ng8c01e ;
reg                    gb600f2 ;
reg                    qi795 ;
reg                    bn3ca8 ;
reg                    sjb1ad8 ;
reg                    fn6b628 ;
reg                    kd5b146 ;
reg                    rtd8a34 ;
reg                    tuc51a6 ;
reg                    zz28d32 ;
reg [15:0]             xl94a8e ;
reg [15:0]             nta5476 ;
reg [15:0]             vk2a3b7 ;
reg [15:0]             ip51dba ;
reg [15:0]             xl8edd4 ;
reg [15:0]             ho76ea6 ;
reg [15:0]             dob7532 ;
reg [10:0]             dbba993 ;
reg                    ayd4c9e ;
reg                    iea64f0 ;
reg                    fp32780 ;
reg [2:0]              ri93c07 ;
reg                    vx9e03b ;
reg                    ykf01de;
reg                    kf80ef0;
reg [10:0]             kf18da0 ;
reg                    qi3bc2d ;
wire [31:0]            ic6da65 ;
wire [31:0]            mef0b40 ;
wire [1:0]             go7dc49 ;
wire [4:0]             dmee249 ;
wire [2:0]             tc ;
wire                   tj81196 ;
wire                   yz8cb6 ;
wire [1:0]             epde73 ;
wire [1:0]             qt6f39d ;
wire [15:0]            req_id ;
wire [7:0]             tag ;
wire [2:0]             zk73b19 ;
wire [3:0]             qi9d8ca ;
wire [3:0]             nrec650 ;
wire [7:0]             zk63287 ;

`ifdef ECRC
wire [15:0]         lf1943a ;
wire                byca1d7 ;
wire                th50ebb ;
wire [31:0]         ec875de ;
wire [31:0]         hdba717 ;
wire [31:0]         dmf1810 ;
wire                half_data ;
wire                mrd38bf ;
wire                dmf15a0 ;

`endif 
wire                   yz8ad02 ;
wire [15:0]            os56814 ;
wire                   wlb40a1 ;
wire                   vxa050c ;
wire                   ir2867 ;
wire                   ng1433c ;
wire                   oha19e3 ;
wire                   bncf1c ;
wire                   qg678e7 ;
wire                   ux3c739 ;
wire                   jpe39cc ;
wire                   rv1ce67 ;
wire                   uve733e ;
wire                   wl399f4 ;
wire                   czccfa5 ;
wire                   yk67d2d ;
wire                   ec3e969 ;
wire                   jcf4b48 ;
wire                   zza5a43  ;
wire                   lf2d21e  ;
wire                   jc690f7 ;
wire                   tu487bb ;
wire                   ay43dda  ;
wire                   ba1eed0 ;
wire                   alf7683  ;
wire                   epbb41d ;
wire                   neda0ed ;
wire                   ned076a ;
wire                   ng83b53 ;
wire                   cb1da9a ;
wire                   ened4d4 ;
wire                   gb6a6a5;
wire                   qg5352c;
wire                   ir9a960 ;
wire                   cmd4b05 ;
wire                   bna5828 ;
wire                   an2c146 ;
wire                   al60a35 ;
wire                   qi51ac ;
wire                   bn28d60 ;
wire                   cm46b06 ;
wire                   ri35830 ;
wire                   ieac183 ;

`ifdef GEN2

`endif
reg        mr60c19;
reg [10:0] lf60cc;
reg [10:0] pu30667;

`ifdef MITSU

`else

`endif

`ifdef GEN2

`else

`endif

`ifdef LEGACY_EP

`else

`endif

`ifdef ECRC

`endif

`ifdef ENDPOINT_COMP

`ifdef ECRC

`else     

`endif

`else     

`endif

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef GEN2

`else 

`endif
reg [15 : 0] pu8333a;
reg xl199d3;
reg qtcce9e;
reg [2 : 0] vkb87c6;
reg ng3a7a8;
reg [15 : 0] ipd3d43;
reg [15 : 0] bn9ea1d;
reg [15 : 0] ykf50ef;
reg [15 : 0] jea8778;
reg su43bc3;
reg qv1de18;
reg goff10e;
reg ww78620;
reg yxc3100;
reg qv18805;
reg kqc402c;
reg do20160;
reg mec438d;
reg fce340;
reg zx71a03;
reg uk8d01f;
reg ic680f8;
reg nr407c1;
reg [15 : 0] gbc9b7f;
reg [15 : 0] fa4dbfd;
reg [15 : 0] ww6dfeb;
reg [15 : 0] qt6ff58;
reg [15 : 0] yx7fac5;
reg [15 : 0] offd62c;
reg [15 : 0] lqeb164;
reg [10 : 0] fa58b22;
reg byc5912;
reg oh2c893;
reg fn6449c;
reg [2 : 0] lf224e7;
reg cb1273e;
reg zm939f4;
reg fc9cfa3;
reg [10 : 0] uiea8d8;
reg ks3e8d5;
reg [31 : 0] ls1bb75;
reg [31 : 0] mga3542;
reg [1 : 0] zxfc60f;
reg [4 : 0] xje307e;
reg [2 : 0] by58863;
reg jrb0853;
reg zz8429f;
reg [1 : 0] zz816d9;
reg [1 : 0] twb6ce;
reg [15 : 0] qt41621;
reg [7 : 0] zmb10c;
reg [2 : 0] ald9ce0;
reg [3 : 0] mece704;
reg [3 : 0] by73821;
reg [7 : 0] hq9c10a;
reg uie0853;
reg [15 : 0] vk4298;
reg mg214c2;
reg mga611;
reg ay53089;
reg ie98448;
reg fnc2241;
reg tw1120f;
reg je8907b;
reg zk483da;
reg yx41ed2;
reg ouf695;
reg th7b4a9;
reg dmda54f;
reg nrd2a7a;
reg oh953d7;
reg uka9ebd;
reg bl4f5e8;
reg sh7af47;
reg thd7a3c;
reg jebd1e7;
reg yxe8f3a;
reg fa479d4;
reg qv3cea2;
reg gbe7515;
reg ng3a8ac;
reg cmd4562;
reg doa2b11;
reg sw1588b;
reg wyac458;
reg su622c1;
reg fc11608;
reg db8b043;
reg ho5821f;
reg uic10fb;
reg gd87d8;
reg ay43ec4;
reg aa1f620;
reg nefb100;
reg jpd8803;
reg goc401e;
reg xy200f0;
reg wy783;
reg xl3c18;
reg [10 : 0] do1e0c6;
reg [10 : 0] kqf0632;
reg [2047:0] db22f5b;
wire [100:0] ux17adf;

`ifdef ECRC

`endif

`ifdef ECRC

`endif 

`ifdef GEN2

`endif

`ifdef MITSU

`else

`endif

`ifdef GEN2

`else

`endif

`ifdef LEGACY_EP

`else

`endif

`ifdef ECRC

`endif

`ifdef ENDPOINT_COMP

`ifdef ECRC

`else     

`endif

`else     

`endif

`ifdef ECRC

`endif

`ifdef ECRC


`endif

`ifdef GEN2

`else 

`endif

localparam ribd6fd = 101,jceb7ea = 32'hfdffc70b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef ECRC


`endif


`ifdef ECRC


`endif 


`ifdef GEN2


`endif


`ifdef MITSU


`else


`endif


`ifdef GEN2


`else


`endif


`ifdef LEGACY_EP


`else


`endif


`ifdef ECRC


`endif


`ifdef ENDPOINT_COMP


`ifdef ECRC


`else     


`endif


`else     


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef GEN2


`else 


`endif




`ifdef ECRC



`endif




`ifdef ECRC



`endif 




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin     pu2ac6b  <= 1'b0 ;     tlp_st_reg2  <= 1'b0 ;     hd91803  <= 1'b0 ;     ng8c01e  <= 1'b0 ;     gb600f2  <= 1'b0 ;     qi795  <= 1'b0 ;     bn3ca8  <= 1'b0 ;
     sjb1ad8 <= 1'b0 ;     tlp_end_reg2 <= 1'b0 ;     fn6b628 <= 1'b0 ;     kd5b146 <= 1'b0 ;     rtd8a34 <= 1'b0 ;     tuc51a6 <= 1'b0 ;     zz28d32 <= 1'b0 ;
     xl94a8e  <= 16'd0 ;     nta5476  <= 16'd0 ;     vk2a3b7  <= 16'd0 ;     ip51dba  <= 16'd0 ;     xl8edd4  <= 16'd0 ;     ho76ea6  <= 16'd0 ;     dob7532  <= 16'd0 ;
     ri93c07 <= 3'b000 ;   end   else begin     pu2ac6b <= xl199d3 ;     tlp_st_reg2 <= goff10e ;     hd91803 <= tlp_st_reg2 ;     ng8c01e <= ww78620 ;     gb600f2 <= yxc3100 ;     qi795 <= qv18805 ;     bn3ca8 <= kqc402c ;     sjb1ad8 <= qtcce9e ;     tlp_end_reg2 <= mec438d ;     fn6b628 <= tlp_end_reg2 ;     kd5b146 <= fce340 ;     rtd8a34 <= zx71a03 ;     tuc51a6 <= uk8d01f ;     zz28d32 <= ic680f8 ;
     xl94a8e  <= pu8333a ;     nta5476  <= gbc9b7f ;     vk2a3b7  <= fa4dbfd ;     ip51dba  <= ww6dfeb ;     xl8edd4  <= qt6ff58 ;     ho76ea6  <= yx7fac5 ;     dob7532  <= offd62c ;
     ri93c07 <= vkb87c6 ;   end
end
assign tlp_data_reg2 = fa4dbfd;

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ykf01de   <= 1'b0 ;   else if (xl199d3)      ykf01de   <= 1'b1 ;   else      ykf01de  <= ~zm939f4 ;
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin     tlpdec_st   <= 1'b0 ;     tlpdec_data <= 16'd0 ;   end   else begin     tlpdec_st   <= do20160 ;     tlpdec_data <= lqeb164 ;   end
end
assign ieac183 = (jrb0853) ? zx71a03 : ic680f8;
assign tlpdec_tc   = (kqc402c) ? offd62c[6:4] : ipd3d43[6:4] ;



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qi3bc2d <= 1'b0 ;      tlpdec_end     <= 1'b0 ;   end   else begin      qi3bc2d <= wy783 ;      tlpdec_end     <= ks3e8d5 ;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin     vve9a0a <= 16'hFF00 ;     ho4d056 <= 16'h0000 ;     ic682b2 <= 16'hFF00 ;     mr41591 <= 16'h0000 ;   end   else if (yxc3100) begin     vve9a0a <= qt6ff58[15: 0] ;     ho4d056 <= ww6dfeb[15: 0] ;     ic682b2 <= fa4dbfd[15: 0] ;     mr41591 <= gbc9b7f[15: 0] ;   end   else if (ic680f8) begin     vve9a0a <= 16'hFF00 ;     ho4d056 <= 16'h0000 ;     ic682b2 <= 16'hFF00 ;     mr41591 <= 16'h0000 ;   end   else begin     vve9a0a <= ipd3d43 ;     ho4d056 <= bn9ea1d ;     ic682b2 <= ykf50ef ;     mr41591 <= jea8778 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     kf80ef0 <= 1'b0 ;   else if (tlp_st_reg2 )     kf80ef0 <= (fa4dbfd[12:8] ==5'b0_0100) ? 1'b1 : 1'b0 ;   else if (qtcce9e )     kf80ef0 <= 1'b0 ;   else     kf80ef0 <= fc9cfa3 ;
end
assign  ic6da65 = {ipd3d43,bn9ea1d};
assign  mef0b40 = {ykf50ef,jea8778};

assign go7dc49    =  ls1bb75[30:29] ;
assign dmee249   =  ls1bb75[28:24] ;
assign tc     =  ls1bb75[22:20] ;
assign tj81196     =  ls1bb75[15] ;
assign yz8cb6     =  ls1bb75[14] ;
assign epde73   =  ls1bb75[13:12] ;
assign qt6f39d     =  ls1bb75[11:10] ;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)     kf18da0 <= 11'h0 ;   else if (qv18805)     kf18da0 <= {~(|qt6ff58[9:0]), qt6ff58[9:0]} ;
end

assign bncf1c  = (xje307e ==  5'b0_0000) ;
assign qg678e7 = (xje307e ==  5'b0_0010) ;
assign ux3c739 = (xje307e ==  5'b0_0100) ;
assign jpe39cc = (xje307e ==  5'b0_0101) ;

`ifdef GEN2
   assign rv1ce67 = (xje307e ==  5'b1_1011) ;

`endif

assign uve733e     = (xje307e[4:3] ==  2'b10) & ~(xje307e[2:1] ==  2'b11) ;
assign wl399f4     = (xje307e ==  5'b0_1010) ;

assign czccfa5 = (zxfc60f ==  2'b00) ;
assign yk67d2d = (zxfc60f ==  2'b01) ;
assign ec3e969 = (zxfc60f ==  2'b10) ;
assign jcf4b48 = (zxfc60f ==  2'b11) ;


assign zza5a43  = (nrd2a7a | oh953d7) & tw1120f ;
assign lf2d21e  = (uka9ebd | bl4f5e8) & tw1120f ;
assign jc690f7 = nrd2a7a & zk483da ;
assign tu487bb = uka9ebd & zk483da ;
assign ay43dda  = oh953d7 & th7b4a9 ;
assign ba1eed0 = bl4f5e8 & th7b4a9 ;
assign alf7683  = nrd2a7a & dmda54f ;
assign epbb41d = uka9ebd & dmda54f ;



assign neda0ed = (nrd2a7a | uka9ebd)  & yx41ed2 ;                                                     
assign ned076a = (nrd2a7a | uka9ebd)  & je8907b ;
assign ng83b53 = (nrd2a7a | oh953d7)  & (xje307e ==  5'b0_0001) ;
assign cmd4b05 = (nrd2a7a)  & (xje307e ==  5'b0_1011) ;
assign bna5828 = (uka9ebd)  & (xje307e ==  5'b0_1011) ;

assign req_id   =  mga3542[31:16] ;
assign tag      =  mga3542[15:8] ;
assign qi9d8ca      =  mga3542[7:4] ;
assign nrec650      =  mga3542[3:0] ;
assign zk63287 =  mga3542[7:0] ;
assign cb1da9a   =  (hq9c10a[7:4] == 4'b0001) & ((hq9c10a[3:0] == 4'b0100) |                                                 (hq9c10a[3:0] == 4'b1000) |                                                 (hq9c10a[3:0] == 4'b1001) |                                                 (hq9c10a[3:0] == 4'b1011)) ;
assign ened4d4  =  (hq9c10a[7:4] == 4'b0011) & ((hq9c10a[3:0] == 4'b0000) |                                                 (hq9c10a[3:0] == 4'b0001) |                                                 (hq9c10a[3:0] == 4'b0011)) ;

assign gb6a6a5    =  (hq9c10a[7:4] == 4'b0111) ? 1'b1 : 1'b0;
assign ir9a960    =  (hq9c10a[7:4] == 4'b0100) ? 1'b1 : 1'b0;
assign qg5352c =  fc11608 & (hq9c10a[3:0] == 4'b1110) ;


assign zk73b19 = mga3542[15:13] ;




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      swac8c <= 1'b0 ;   else if ( goff10e )      swac8c <= 1'b1 ;   else if (mec438d )      swac8c <= 1'b0 ;   else      swac8c <= su43bc3 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      su56460 <= 1'b0 ;   else if ( kqc402c )      su56460 <= 1'b1 ;   else if (ks3e8d5 )      su56460 <= 1'b0 ;   else      su56460 <= qv1de18 ;
end



assign ri35830 = goff10e | tlp_st_reg2 | ww78620 | yxc3100 |                   qv18805 | kqc402c | do20160 ;


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      mr60c19 <= 1'b0 ;   else if (xl199d3)      mr60c19 <= 1'b1 ;   else if (mec438d)      mr60c19 <= 1'b0 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      lf60cc <= 11'h000 ;   else if (xl199d3)      lf60cc <= 11'h000 ;   else if (xl3c18)      lf60cc <= do1e0c6 + 1 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      pu30667 <= 11'h000 ;   else if (qtcce9e) begin      if ((zxfc60f == 2'b00) && !jrb0853) pu30667 <= 'd5 ;      if ((zxfc60f == 2'b00) && jrb0853) pu30667 <= 'd7 ;      if ((zxfc60f == 2'b01) && !jrb0853) pu30667 <= 'd7 ;      if ((zxfc60f == 2'b01) && jrb0853) pu30667 <= 'd9 ;      if ((zxfc60f == 2'b10) && !jrb0853 && (je8907b || zk483da || yx41ed2)) pu30667 <= 'd7 ;      if ((zxfc60f == 2'b10) && jrb0853 && (je8907b || zk483da || yx41ed2)) pu30667 <= 'd9 ;      if ((zxfc60f == 2'b11) && !jrb0853 && th7b4a9) pu30667 <= 'd9 ;      if ((zxfc60f == 2'b11) && jrb0853 && th7b4a9) pu30667 <= 'd11 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      s2e_cnt_err <= 1'b0 ;


`ifdef MITSU



`else
      else if (mec438d && (do1e0c6 != kqf0632) && !thd7a3c && !ng3a8ac & !gd87d8)         s2e_cnt_err <= 1'b1 ;


`endif
   else if (uk8d01f)      s2e_cnt_err <= 1'b0 ;
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      dbba993 <= 11'h000 ;   else if (mec438d)      dbba993 <= 11'h000 ;   else if (su43bc3 && zm939f4 && !cb1273e)      if (do20160 && uka9ebd)         dbba993 <=  fa58b22 + 11'h001 ;      else if (qtcce9e && (!jrb0853 || (jrb0853 && fc9cfa3)))         dbba993 <=  fa58b22 + 11'h001 ;      else if (!xy200f0 && !qtcce9e )         dbba993 <=  fa58b22 + 11'h001 ;   else      dbba993 <= fa58b22 ;
end



always @(lf224e7 or fa58b22) begin   case (lf224e7)      3'b000 :         vx9e03b = fa58b22[5] & fa58b22[0] ;      3'b001 :         vx9e03b = fa58b22[6] & fa58b22[0] ;      3'b010 :         vx9e03b = fa58b22[7] & fa58b22[0] ;      3'b011 :         vx9e03b = fa58b22[8] & fa58b22[0] ;      3'b100 :         vx9e03b = fa58b22[9] & fa58b22[0] ;      3'b101 :         vx9e03b = fa58b22[10] & fa58b22[0] ;      default :         vx9e03b = fa58b22[10] & fa58b22[0] ;   endcase
end




assign oha19e3 = (thd7a3c | ng3a8ac | gd87d8) ;

assign vxa050c = (fa58b22 > uiea8d8) ;

assign ir2867 = (mec438d & ~tlp_end_reg2) & ((fa58b22 ^ uiea8d8) != 11'd0) ;

assign ng1433c = ((mga611 | ay53089) & fnc2241)  ;

assign an2c146 = qv1de18 & (~sh7af47 & ~sw1588b &                 ~thd7a3c &                                 ~doa2b11  &         ~jebd1e7 & ~yxe8f3a & ~cmd4562 & ~fa479d4 & ~qv3cea2 & ~gbe7515 & ~ng3a8ac &                 ~uic10fb & ~gd87d8        ) ;

assign al60a35 = (qv1de18 & (oh953d7 | bl4f5e8) & xje307e[4] & ~fc11608 & ~ho5821f & (by58863 != 3'b00)) ;


assign cm46b06 = qv1de18 & ng3a7a8;



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      ayd4c9e <= 1'b0 ;   else if (ks3e8d5)      ayd4c9e <= 1'b0 ;


`ifdef GEN2
      else if (cb1273e | ie98448 | ay43ec4 | ouf695 | aa1f620 | goc401e | s2e_cnt_err)         ayd4c9e <= 1'b1 ;


`else
      else if (cb1273e | ie98448 | ay43ec4 | aa1f620 | goc401e | s2e_cnt_err)         ayd4c9e <= 1'b1 ;


`endif
   else      ayd4c9e <= byc5912 ;
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      iea64f0 <= 1'b0 ;   else if (ks3e8d5)      iea64f0 <= 1'b0 ;


`ifdef LEGACY_EP
      else if (qv1de18 & cmd4562)         iea64f0 <= 1'b1 ;


`else
      else if (qv1de18 & (cmd4562 | sw1588b))         iea64f0 <= 1'b1 ;


`endif
   else      iea64f0 <= oh2c893 ;
end




`ifdef ECRC
   assign dmf15a0 = pcie_x1_ecrc_enb & jrb0853 & ~mrd38bf & byca1d7 ;   always @(posedge sys_clk or negedge rst_n) begin
      if (!rst_n)         pcie_x1_ecrc_int_reg0 <= 1'b0 ;      else if (ks3e8d5)         pcie_x1_ecrc_int_reg0 <= 1'b0 ;      else if (dmf15a0)         pcie_x1_ecrc_int_reg0 <= 1'b1 ;      else         pcie_x1_ecrc_int_reg0 <= pcie_x1_ecrc_int_reg0 ;   end

`endif





assign qi51ac = zz8429f & qtcce9e  & (zxfc60f[1] & ~ay43ec4) ;



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      fp32780 <= 1'b0 ;   else if (ks3e8d5)      fp32780 <= 1'b0 ;   else if (nefb100)      fp32780 <= 1'b1 ;   else      fp32780 <= fn6449c ;
end





`ifdef ENDPOINT_COMP



`ifdef ECRC
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         tlpdec_us_req   <= 1'b0 ;      else         tlpdec_us_req   <= oh2c893 & ~byc5912 & ~pcie_x1_ecrc_int_reg0 & ks3e8d5 ;   end

`else     
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         tlpdec_us_req   <= 1'b0 ;      else         tlpdec_us_req   <= oh2c893 & ~byc5912 & ks3e8d5 ;   end

`endif




`else     

   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         tlpdec_us_req  <= 1'b0 ;      else         tlpdec_us_req  <= 1'b0 ;   end


`endif




`ifdef ECRC
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         tlpdec_pcie_x1_ecrc_err <= 1'b0 ;      else if (!jrb0853)         tlpdec_pcie_x1_ecrc_err <= 1'b0 ;      else         tlpdec_pcie_x1_ecrc_err <= pcie_x1_ecrc_int_reg0 & ~byc5912 & ks3e8d5 ;   end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)       tlpdec_malf_tlp <= 1'b0 ;   else       tlpdec_malf_tlp <= byc5912 & ks3e8d5 ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)       tlpdec_pois_tlp <= 1'b0 ;   else       tlpdec_pois_tlp <= fn6449c & ks3e8d5 ;
end


`ifdef ECRC
                  assign lf1943a =  goff10e ? {gbc9b7f[15:9], 1'b1, gbc9b7f[7:0]} :                     tlp_st_reg2 ? {gbc9b7f[15],1'b1, gbc9b7f[13:0]} : gbc9b7f ;      assign byca1d7 = qtcce9e ;      assign th50ebb = (goff10e | su43bc3) & ~xl199d3 ;   pcie_x1_je2a373 #(      .D_WIDTH     ( 16 ) )      yxf88f8(            .sys_clk     ( sys_clk ) ,      .rst_n       ( rst_n ),            .data_in    ( lf1943a ),      .enable_crc ( th50ebb ),      .mr4e59e  ( dmf1810 )      ) ;      assign hdba717[15: 0] = (dmf1810[15:0] ^ pu8333a) ;   assign hdba717[31:16] = (dmf1810[31:16] ^ gbc9b7f) ;   assign mrd38bf = (hdba717 == 32'h0000_0000) ;   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         crc_ok_out <= 1'b0;      else         crc_ok_out <= pcie_x1_ecrc_enb & jrb0853 & mrd38bf;   end

`endif





`ifdef GEN2
   assign yz8ad02 = (by58863 == 3'b000) & (zz816d9 == 2'b00) & (twb6ce == 2'b00) &                       (uiea8d8 == 11'h01) & (mece704 == 4'h0) ;

`else 
   assign yz8ad02 = (by58863 == 3'b000) & (zz816d9 == 2'b0) &                       (uiea8d8 == 11'h01) & (mece704 == 4'h0) ;

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tlpdec_cfgrd  <= 1'b0 ;      tlpdec_cfgwr  <= 1'b0 ;   end   else begin                              tlpdec_cfgrd  <= jebd1e7 & do20160  ;      tlpdec_cfgwr  <= yxe8f3a & do20160 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tlpdec_memrw  <= 1'b0 ;   else if (do20160 && tw1120f)      tlpdec_memrw  <= 1'b1 ;   else if (tlpdec_end)      tlpdec_memrw  <= 1'b0 ;   else      tlpdec_memrw  <= tlpdec_memrw ;
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tlpdec_iorw  <= 1'b0 ;   else if (do20160 && je8907b)      tlpdec_iorw  <= 1'b1 ;   else if (tlpdec_end)      tlpdec_iorw  <= 1'b0 ;   else      tlpdec_iorw  <= tlpdec_iorw ;
end
assign bn28d60 = (tw1120f && (oh953d7 | bl4f5e8)) ;


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tlpdec_rvcd_sts_ur  <= 1'b0 ;      tlpdec_rvcd_sts_ca  <= 1'b0 ;   end   else if (do20160 && (gbe7515 || ng3a8ac)) begin      tlpdec_rvcd_sts_ur <= (ald9ce0 == 3'b001) ;      tlpdec_rvcd_sts_ca <= (ald9ce0 == 3'b100) ;   end   else begin      tlpdec_rvcd_sts_ur  <= 1'b0 ;      tlpdec_rvcd_sts_ca  <= 1'b0 ;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tlpdec_addr_l32  <= 32'h0000_0000;      tlpdec_addr_h32 <= 32'h0000_0000;   end   else if (do20160 && !jpd8803 ) begin      tlpdec_addr_l32 <= {ww6dfeb[15: 0] ,fa4dbfd[15: 0]} ;      tlpdec_addr_h32 <= 32'h0000_0000;   end   else if (do20160 && jpd8803 ) begin      tlpdec_addr_l32 <= {gbc9b7f[15: 0] ,pu8333a[15: 0]};      tlpdec_addr_h32 <= {ww6dfeb[15: 0] ,fa4dbfd[15: 0]} ;   end   else if (tlpdec_end ) begin      tlpdec_addr_l32  <= 32'h0000_0000;      tlpdec_addr_h32 <= 32'h0000_0000;   end   else begin      tlpdec_addr_l32  <= tlpdec_addr_l32 ;      tlpdec_addr_h32 <= tlpdec_addr_h32 ;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tlpdec_addr64  <= 1'b0 ;   else if (do20160 && jpd8803 )      tlpdec_addr64  <= 1'b1 ;   else if (tlpdec_end)      tlpdec_addr64  <= 1'b0 ;   else      tlpdec_addr64  <= tlpdec_addr64 ;
end
always@* begin pu8333a<={rxtp_data>>1,ux17adf[0]};xl199d3<=ux17adf[1];qtcce9e<=ux17adf[2];vkb87c6<={max_pl_size>>1,ux17adf[3]};ng3a7a8<=ux17adf[4];ipd3d43<={vve9a0a>>1,ux17adf[5]};bn9ea1d<={ho4d056>>1,ux17adf[6]};ykf50ef<={ic682b2>>1,ux17adf[7]};jea8778<={mr41591>>1,ux17adf[8]};su43bc3<=ux17adf[9];qv1de18<=ux17adf[10];goff10e<=ux17adf[11];ww78620<=ux17adf[12];yxc3100<=ux17adf[13];qv18805<=ux17adf[14];kqc402c<=ux17adf[15];do20160<=ux17adf[16];mec438d<=ux17adf[17];fce340<=ux17adf[18];zx71a03<=ux17adf[19];uk8d01f<=ux17adf[20];ic680f8<=ux17adf[21];nr407c1<=ux17adf[22];gbc9b7f<={xl94a8e>>1,ux17adf[23]};fa4dbfd<={nta5476>>1,ux17adf[24]};ww6dfeb<={vk2a3b7>>1,ux17adf[25]};qt6ff58<={ip51dba>>1,ux17adf[26]};yx7fac5<={xl8edd4>>1,ux17adf[27]};offd62c<={ho76ea6>>1,ux17adf[28]};lqeb164<={dob7532>>1,ux17adf[29]};fa58b22<={dbba993>>1,ux17adf[30]};byc5912<=ux17adf[31];oh2c893<=ux17adf[32];fn6449c<=ux17adf[33];lf224e7<={ri93c07>>1,ux17adf[34]};cb1273e<=ux17adf[35];zm939f4<=ux17adf[36];fc9cfa3<=ux17adf[37];uiea8d8<={kf18da0>>1,ux17adf[38]};ks3e8d5<=ux17adf[39];ls1bb75<={ic6da65>>1,ux17adf[40]};mga3542<={mef0b40>>1,ux17adf[41]};zxfc60f<={go7dc49>>1,ux17adf[42]};xje307e<={dmee249>>1,ux17adf[43]};by58863<={tc>>1,ux17adf[44]};jrb0853<=ux17adf[45];zz8429f<=ux17adf[46];zz816d9<={epde73>>1,ux17adf[47]};twb6ce<={qt6f39d>>1,ux17adf[48]};qt41621<={req_id>>1,ux17adf[49]};zmb10c<={tag>>1,ux17adf[50]};ald9ce0<={zk73b19>>1,ux17adf[51]};mece704<={qi9d8ca>>1,ux17adf[52]};by73821<={nrec650>>1,ux17adf[53]};hq9c10a<={zk63287>>1,ux17adf[54]};uie0853<=ux17adf[55];vk4298<={os56814>>1,ux17adf[56]};mg214c2<=ux17adf[57];mga611<=ux17adf[58];ay53089<=ux17adf[59];ie98448<=ux17adf[60];fnc2241<=ux17adf[61];tw1120f<=ux17adf[62];je8907b<=ux17adf[63];zk483da<=ux17adf[64];yx41ed2<=ux17adf[65];ouf695<=ux17adf[66];th7b4a9<=ux17adf[67];dmda54f<=ux17adf[68];nrd2a7a<=ux17adf[69];oh953d7<=ux17adf[70];uka9ebd<=ux17adf[71];bl4f5e8<=ux17adf[72];sh7af47<=ux17adf[73];thd7a3c<=ux17adf[74];jebd1e7<=ux17adf[75];yxe8f3a<=ux17adf[76];fa479d4<=ux17adf[77];qv3cea2<=ux17adf[78];gbe7515<=ux17adf[79];ng3a8ac<=ux17adf[80];cmd4562<=ux17adf[81];doa2b11<=ux17adf[82];sw1588b<=ux17adf[83];wyac458<=ux17adf[84];su622c1<=ux17adf[85];fc11608<=ux17adf[86];db8b043<=ux17adf[87];ho5821f<=ux17adf[88];uic10fb<=ux17adf[89];gd87d8<=ux17adf[90];ay43ec4<=ux17adf[91];aa1f620<=ux17adf[92];nefb100<=ux17adf[93];jpd8803<=ux17adf[94];goc401e<=ux17adf[95];xy200f0<=ux17adf[96];wy783<=ux17adf[97];xl3c18<=ux17adf[98];do1e0c6<={lf60cc>>1,ux17adf[99]};kqf0632<={pu30667>>1,ux17adf[100]};end
always@* begin db22f5b[2047]<=rxtp_st;db22f5b[2046]<=rxtp_end;db22f5b[2044]<=max_pl_size[0];db22f5b[2040]<=vc_dl_up_fail;db22f5b[2032]<=vve9a0a[0];db22f5b[2016]<=ho4d056[0];db22f5b[2014]<=yk67d2d;db22f5b[1985]<=ic682b2[0];db22f5b[1981]<=ec3e969;db22f5b[1970]<=tu487bb;db22f5b[1927]<=bncf1c;db22f5b[1922]<=mr41591[0];db22f5b[1915]<=jcf4b48;db22f5b[1893]<=ay43dda;db22f5b[1867]<=kd5b146;db22f5b[1861]<=an2c146;db22f5b[1807]<=qg678e7;db22f5b[1804]<=epde73[0];db22f5b[1797]<=swac8c;db22f5b[1782]<=zza5a43;db22f5b[1761]<=tc[0];db22f5b[1739]<=ba1eed0;db22f5b[1686]<=rtd8a34;db22f5b[1674]<=al60a35;db22f5b[1652]<=qg5352c;db22f5b[1625]<=neda0ed;db22f5b[1623]<=zk63287[0];db22f5b[1567]<=ux3c739;db22f5b[1561]<=qt6f39d[0];db22f5b[1558]<=ho76ea6[0];db22f5b[1547]<=su56460;db22f5b[1542]<=ykf01de;db22f5b[1516]<=lf2d21e;db22f5b[1505]<=ng1433c;db22f5b[1490]<=sjb1ad8;db22f5b[1475]<=tj81196;db22f5b[1437]<=ened4d4;db22f5b[1430]<=alf7683;db22f5b[1413]<=ip51dba[0];db22f5b[1409]<=ri93c07[0];db22f5b[1400]<=vxa050c;db22f5b[1373]<=lf60cc[0];db22f5b[1324]<=tuc51a6;db22f5b[1301]<=qi51ac;db22f5b[1256]<=ir9a960;db22f5b[1203]<=ned076a;db22f5b[1200]<=xl94a8e[0];db22f5b[1199]<=yz8ad02;db22f5b[1109]<=cm46b06;db22f5b[1086]<=jpe39cc;db22f5b[1074]<=req_id[0];db22f5b[1068]<=dob7532[0];db22f5b[1047]<=pu2ac6b;db22f5b[1037]<=kf80ef0;db22f5b[1023]<=rxtp_data[0];db22f5b[1007]<=czccfa5;db22f5b[985]<=jc690f7;db22f5b[963]<=oha19e3;db22f5b[933]<=fn6b628;db22f5b[930]<=bna5828;db22f5b[902]<=yz8cb6;db22f5b[880]<=dmee249[0];db22f5b[826]<=gb6a6a5;db22f5b[812]<=epbb41d;db22f5b[811]<=nrec650[0];db22f5b[779]<=xl8edd4[0];db22f5b[771]<=vx9e03b;db22f5b[752]<=ir2867;db22f5b[745]<=bn3ca8;db22f5b[718]<=cb1da9a;db22f5b[706]<=vk2a3b7[0];db22f5b[704]<=fp32780;db22f5b[700]<=wlb40a1;db22f5b[699]<=pu30667[0];db22f5b[686]<=mr60c19;db22f5b[600]<=zz28d32;db22f5b[554]<=bn28d60;db22f5b[503]<=wl399f4;db22f5b[465]<=cmd4b05;db22f5b[440]<=go7dc49[0];db22f5b[405]<=qi9d8ca[0];db22f5b[372]<=qi795;db22f5b[359]<=ng83b53;db22f5b[353]<=nta5476[0];db22f5b[352]<=iea64f0;db22f5b[350]<=os56814[0];db22f5b[343]<=ieac183;db22f5b[251]<=uve733e;db22f5b[220]<=mef0b40[0];db22f5b[202]<=zk73b19[0];db22f5b[186]<=gb600f2;db22f5b[176]<=ayd4c9e;db22f5b[171]<=ri35830;db22f5b[125]<=rv1ce67;db22f5b[110]<=ic6da65[0];db22f5b[101]<=tag[0];db22f5b[93]<=ng8c01e;db22f5b[88]<=dbba993[0];db22f5b[55]<=qi3bc2d;db22f5b[46]<=hd91803;db22f5b[27]<=kf18da0[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule
































`timescale 1 ns / 100 ps
module pcie_x1_tlpgen_x1 (
   
   sys_clk ,
   rst_n ,

   
   txintf_data ,
   txintf_st ,
   txintf_end ,
   txintf_nlfy ,
   txintf_rdy_ack ,
   `ifdef ECRC
      pcie_x1_ecrc_enb ,
   `endif

   
   tlpgen_data ,
   tlpgen_st ,
   tlpgen_end ,
   tlpgen_nlfy , 
   tlpgen_rdy_ack  
   ) ;
input                  sys_clk ;
input                  rst_n ;
input [15:0]           txintf_data ;
input                  txintf_st ;
input                  txintf_end ;
input                  txintf_nlfy ;
input                  txintf_rdy_ack ;

`ifdef ECRC
input               pcie_x1_ecrc_enb ;

`endif
output [15:0]          tlpgen_data ;
output                 tlpgen_st ;
output                 tlpgen_end ;
output                 tlpgen_nlfy ;
output                 tlpgen_rdy_ack ;
wire [31:0]          dmf1810;
wire [15:0]          lf1943a ;

`ifdef ECRC
reg [15:0]           mg3be1a ;
reg                  vidf0d0 ;
reg                  alf8682 ;
reg                  enc3414 ;
reg                  ks1a0a5 ;
reg                  psd0528 ;
reg                  co82943 ;
reg                  ri14a18 ;
reg                  rva50c2 ;
reg                  db28617 ;
reg                  ww430bf ;
reg                  an185f9 ;
reg [31:0]           thc2fcd ;
reg                  enable_crc ;

`endif
reg [15:0]           tlpgen_data ;
reg                  tlpgen_st ;
reg                  tlpgen_end ;
reg                  tlpgen_nlfy ;
reg                  tlpgen_rdy_ack ;

`ifdef ECRC
reg bnafffd ;

`else

`endif
reg [15 : 0] ip7ffef;
reg osfff7c;
reg kqffbe0;
reg gbfdf00;
reg cmef805;
reg [31 : 0] co312d5;
reg [15 : 0] sue014a;
reg [2047:0] db22f5b;
wire [6:0] ux17adf;

`ifdef ECRC

`endif

`ifdef ECRC

`endif

`ifdef ECRC


`else

`endif

localparam ribd6fd = 7,jceb7ea = 32'hfdffca4b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef ECRC


`endif


`ifdef ECRC


`endif


`ifdef ECRC


`else


`endif












`ifdef ECRC
   

`endif













`ifdef ECRC



`endif












`ifdef ECRC

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      mg3be1a    <= 16'd0 ;      vidf0d0      <= 1'b0 ;      alf8682     <= 1'b0 ;      enc3414    <= 1'b0 ;      ks1a0a5 <= 1'b0 ;      psd0528      <= 1'b0 ;      co82943     <= 1'b0 ;      ri14a18    <= 1'b0 ;      rva50c2 <= 1'b0 ;
      db28617     <= 1'b0 ;      ww430bf    <= 1'b0 ;      an185f9 <= 1'b0 ;      thc2fcd         <= 32'h0000 ;   end   else begin      mg3be1a    <= ip7ffef ;      vidf0d0      <= osfff7c ;      alf8682     <= kqffbe0 ;      enc3414    <= gbfdf00 ;      ks1a0a5 <= cmef805 ;
      psd0528      <= vidf0d0 ;      co82943     <= alf8682 ;      ri14a18    <= enc3414 ;      rva50c2 <= ks1a0a5 ;      db28617     <= co82943 ;      ww430bf    <= ri14a18 ;      an185f9 <= rva50c2 ;      thc2fcd         <= co312d5 ;   end
end



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      enable_crc <= 1'b0 ;   else if (osfff7c)      enable_crc <= 1'b1 ;   else if (alf8682)      enable_crc <= 1'b0 ;   else      enable_crc <= enable_crc ;
end






assign lf1943a =  vidf0d0 ? {mg3be1a[15:9], 1'b1, mg3be1a[7:0]} :                  psd0528 ? {mg3be1a[15],1'b1, mg3be1a[13:0]} : mg3be1a ;
pcie_x1_je2a373 #(   .D_WIDTH     ( 16 ) )   ayde7c1(      .sys_clk     ( sys_clk ) ,   .rst_n       ( rst_n ),      .data_in    ( sue014a ),   .enable_crc ( enable_crc ),   .mr4e59e  ( dmf1810 )   ) ;



always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      tlpgen_data <= 16'h00 ;   else if (co82943)      tlpgen_data <= co312d5[31:16] ;   else if (db28617)      tlpgen_data <= thc2fcd[15:0] ;   else      tlpgen_data <= mg3be1a ;
end




always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n)      bnafffd <= 1'b0 ;   else if (vidf0d0)      bnafffd <= ip7ffef[15] & pcie_x1_ecrc_enb ;
end
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      tlpgen_st       <= 1'b0 ;      tlpgen_end      <= 1'b0 ;      tlpgen_nlfy     <= 1'b0 ;      tlpgen_rdy_ack  <= 1'b0 ;   end   else begin      tlpgen_st       <= vidf0d0 ;      tlpgen_end      <= (bnafffd) ? db28617     :  alf8682 ;      tlpgen_nlfy     <= (bnafffd) ? ww430bf    :  enc3414 ;      tlpgen_rdy_ack  <= (bnafffd) ? an185f9 :  ks1a0a5;   end
end

`else




always @(*) begin      tlpgen_data     <= ip7ffef ;      tlpgen_st       <= osfff7c ;      tlpgen_end      <= kqffbe0;      tlpgen_nlfy     <= gbfdf00;      tlpgen_rdy_ack  <= cmef805;
end

`endif


always@* begin ip7ffef<={txintf_data>>1,ux17adf[0]};osfff7c<=ux17adf[1];kqffbe0<=ux17adf[2];gbfdf00<=ux17adf[3];cmef805<=ux17adf[4];co312d5<={dmf1810>>1,ux17adf[5]};sue014a<={lf1943a>>1,ux17adf[6]};end
always@* begin db22f5b[2047]<=txintf_st;db22f5b[2046]<=txintf_end;db22f5b[2044]<=txintf_nlfy;db22f5b[2040]<=txintf_rdy_ack;db22f5b[2033]<=dmf1810[0];db22f5b[2019]<=lf1943a[0];db22f5b[1023]<=txintf_data[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule








































`timescale 1 ns / 100 ps
module pcie_x1_ph9b3b7 
   (
    input wire       sys_clk,            
    input wire       rst_n,              
    
    input wire       tu76fa0,       
    input wire [2:0] cfgec_vcasel,       
    input wire [7:0] mtbe812,          
    input wire       tx_eop_early,       
    input wire       nta04a2,       
    input wire       wl2517,         
    `ifdef X4
       input wire       nt38338,
    `endif

    
    output reg       ph945ed,       
    output reg [7:0] doa2f6f            );
parameter ux17b7b  = `LPEVCC;
wire                      ribdbdd;
reg   [7:0]               ofedeeb;
reg   [7:0]               en6f75c;
reg   [7:0]               dz7bae4;
reg   [7:0]               dzdd726;
reg                       pseb937;
reg  [2:0]                os5c9bb;
reg  [4:0]                vie4dd8;
reg  [4:0]                ep26ec2;
reg  [4:0]                db37615;
reg  [4:0]                cbbb0af;
reg  [4:0]                zxd857d;
reg                       ldc2bef;
reg                       ks15f7e;
reg                       ntafbf0;
reg                       yk7df87;
reg                       qgefc39;
reg                       zx7e1c9;

`ifdef X4

`endif

`ifdef X1

`endif
reg ykf0e4f;
reg [2 : 0] mg87279;
reg [7 : 0] yz393c9;
reg ofc9e4c;
reg th4f265;
reg fa7932f;
reg shc997a;
reg [7 : 0] ww4cbd5;
reg [7 : 0] en65ea9;
reg [7 : 0] xy2f54c;
reg [7 : 0] yx7aa62;
reg ned5314;
reg [2 : 0] mga98a3;
reg [4 : 0] me4c518;
reg [4 : 0] ww628c0;
reg [4 : 0] pu14601;
reg [4 : 0] coa300b;
reg [4 : 0] ir18058;
reg dmc02c5;
reg zm162a;
reg twb152;
reg fa58a93;
reg byc549a;
reg je2a4d2;
reg [2047:0] db22f5b;
wire [23:0] ux17adf;

`ifdef X4

`endif

`ifdef X1

`endif

localparam ribd6fd = 24,jceb7ea = 32'hfdffd28b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X1


`endif







`ifdef X4
   assign lf30e9 = nt38338;

`endif



`ifdef X1
   assign lf30e9 = 1'b1;

`endif




















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ldc2bef      <= 1'b0;      zx7e1c9<= 1'b0;   end   else begin      ldc2bef      <= (mg87279 == 3'b000) ? 1'b1 : 1'b0;      zx7e1c9<= ykf0e4f;   end
end









always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      doa2f6f  <= 8'd0;      pseb937 <= 1'b0;   end   else if (fa7932f) begin      case(mga98a3)         3'd7: begin            if (ww4cbd5[7] || yx7aa62[7] || yz393c9[7]) begin              doa2f6f[7]   <= 1'b1;              doa2f6f[6:0] <= 7'd0;              pseb937     <= 1'b0;            end            else if (ww4cbd5[7] == 1'b0 && je2a4d2 == 1'b0) begin              doa2f6f      <= 8'd0;              pseb937     <= 1'b1;            end         end         3'd6: begin            if (ww4cbd5[6] || yx7aa62[6] || yz393c9[6]) begin              doa2f6f[7]   <= 1'b0;      doa2f6f[6]   <= 1'b1;              doa2f6f[5:0] <= 6'd0;              pseb937     <= 1'b0;            end            else if (ww4cbd5[6] == 1'b0 && je2a4d2 == 1'b0) begin              doa2f6f      <= 8'd0;              pseb937     <= 1'b1;            end         end         3'd5: begin            if (ww4cbd5[5] || yx7aa62[5] || yz393c9[5]) begin              doa2f6f[7:6] <= 2'd0;      doa2f6f[5]   <= 1'b1;              doa2f6f[4:0] <= 5'd0;              pseb937     <= 1'b0;            end            else if (ww4cbd5[5] == 1'b0 && je2a4d2 == 1'b0) begin              doa2f6f      <= 8'd0;              pseb937     <= 1'b1;            end         end         3'd4: begin            if (ww4cbd5[4] || yx7aa62[4] || yz393c9[4]) begin              doa2f6f[7:5] <= 3'd0;      doa2f6f[4]   <= 1'b1;              doa2f6f[3:0] <= 4'd0;              pseb937     <= 1'b0;            end            else if (ww4cbd5[4] == 1'b0 && je2a4d2 == 1'b0) begin              doa2f6f      <= 8'd0;              pseb937     <= 1'b1;            end         end         3'd3: begin            if (ww4cbd5[3] || yx7aa62[3] || yz393c9[3]) begin              doa2f6f[7:4] <= 4'd0;      doa2f6f[3]   <= 1'b1;              doa2f6f[2:0] <= 3'd0;              pseb937     <= 1'b0;            end            else if (ww4cbd5[3] == 1'b0 && je2a4d2 == 1'b0) begin              doa2f6f      <= 8'd0;              pseb937     <= 1'b1;            end         end         3'd2: begin            if (ww4cbd5[2] || yx7aa62[2] || yz393c9[2]) begin              doa2f6f[7:3] <= 5'd0;      doa2f6f[2]   <= 1'b1;              doa2f6f[1:0] <= 2'd0;              pseb937     <= 1'b0;            end            else if (ww4cbd5[2] == 1'b0 && je2a4d2 == 1'b0) begin              doa2f6f      <= 8'd0;              pseb937     <= 1'b1;            end         end         3'd1: begin            if (ww4cbd5[1] || yx7aa62[1] || yz393c9[1]) begin              doa2f6f[7:2] <= 6'd0;      doa2f6f[1]   <= 1'b1;              doa2f6f[0]   <= 1'd0;              pseb937     <= 1'b0;            end            else if (ww4cbd5[1] == 1'b0 && je2a4d2 == 1'b0) begin              doa2f6f      <= 8'd0;              pseb937     <= 1'b1;            end         end         default: begin            if (ww4cbd5[0] || yx7aa62[0] || yz393c9[0]) begin              doa2f6f[7:1] <= 7'd0;      doa2f6f[0]   <= 1'b1;              pseb937     <= 1'b0;            end            else if (ww4cbd5[0] == 1'b0 && je2a4d2 == 1'b0) begin              doa2f6f      <= 8'd0;              pseb937     <= 1'b1;            end         end      endcase   end   else begin      doa2f6f      <= 8'd0;      pseb937     <= 1'b0;   end
end






assign ribdbdd = ofc9e4c | ned5314;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      vie4dd8 <= 5'd0;   end   else if (fa7932f && shc997a && lf30e9) begin      if ((dmc02c5     && coa300b == ux17b7b)) begin         vie4dd8 <= 5'd0;      end      else if (me4c518 == coa300b && lf30e9) begin         vie4dd8 <= me4c518 + 1;      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ep26ec2 <= 5'd0;      db37615 <= 5'd0;      cbbb0af <= 5'd0;      zxd857d <= 5'd0;      ks15f7e <= 1'b0;      ntafbf0 <= 1'b0;      yk7df87 <= 1'b0;      qgefc39 <= 1'b0;
      ofedeeb     <= 'd0;      en6f75c  <= 'd0;      dz7bae4  <= 'd0;      dzdd726  <= 'd0;   end   else if (lf30e9) begin      ep26ec2 <= me4c518;      db37615 <= ww628c0;      cbbb0af <= pu14601;      zxd857d <= coa300b;      ks15f7e <= (fa7932f && ofc9e4c) ? 1'b1: 1'b0;      ntafbf0 <= zm162a;      yk7df87 <= twb152;      qgefc39 <= fa58a93;      en6f75c  <= ww4cbd5;      dz7bae4  <= en65ea9;      dzdd726  <= xy2f54c;                        case(ir18058)         'd7: ofedeeb[7] <= yz393c9[7];         'd6: ofedeeb[6] <= yz393c9[6];         'd5: ofedeeb[5] <= yz393c9[5];         'd4: ofedeeb[4] <= yz393c9[4];         'd3: ofedeeb[3] <= yz393c9[3];         'd2: ofedeeb[2] <= yz393c9[2];         'd1: ofedeeb[1] <= yz393c9[1];         'd0: ofedeeb[0] <= yz393c9[0];      endcase   end
end





always @(*) begin   if (fa7932f && (ofc9e4c || zm162a || twb152  || fa58a93 || (th4f265 && byc549a))) begin      ph945ed = 1'b0;   end   else if (fa7932f) begin      ph945ed = 1'b1;   end   else begin      ph945ed = 1'b0;   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      os5c9bb <= 5'd0;   end   else if (dmc02c5 && lf30e9) begin      os5c9bb <= me4c518[2:0];   end
end
always@* begin ykf0e4f<=ux17adf[0];mg87279<={cfgec_vcasel>>1,ux17adf[1]};yz393c9<={mtbe812>>1,ux17adf[2]};ofc9e4c<=ux17adf[3];th4f265<=ux17adf[4];fa7932f<=ux17adf[5];shc997a<=ux17adf[6];ww4cbd5<={ofedeeb>>1,ux17adf[7]};en65ea9<={en6f75c>>1,ux17adf[8]};xy2f54c<={dz7bae4>>1,ux17adf[9]};yx7aa62<={dzdd726>>1,ux17adf[10]};ned5314<=ux17adf[11];mga98a3<={os5c9bb>>1,ux17adf[12]};me4c518<={vie4dd8>>1,ux17adf[13]};ww628c0<={ep26ec2>>1,ux17adf[14]};pu14601<={db37615>>1,ux17adf[15]};coa300b<={cbbb0af>>1,ux17adf[16]};ir18058<={zxd857d>>1,ux17adf[17]};dmc02c5<=ux17adf[18];zm162a<=ux17adf[19];twb152<=ux17adf[20];fa58a93<=ux17adf[21];byc549a<=ux17adf[22];je2a4d2<=ux17adf[23];end
always@* begin db22f5b[2047]<=cfgec_vcasel[0];db22f5b[2046]<=mtbe812[0];db22f5b[2044]<=tx_eop_early;db22f5b[2040]<=nta04a2;db22f5b[2032]<=wl2517;db22f5b[2017]<=ribdbdd;db22f5b[1987]<=ofedeeb[0];db22f5b[1926]<=en6f75c[0];db22f5b[1818]<=zx7e1c9;db22f5b[1804]<=dz7bae4[0];db22f5b[1614]<=cbbb0af[0];db22f5b[1561]<=dzdd726[0];db22f5b[1251]<=ntafbf0;db22f5b[1180]<=zxd857d[0];db22f5b[1074]<=pseb937;db22f5b[1023]<=tu76fa0;db22f5b[909]<=qgefc39;db22f5b[807]<=db37615[0];db22f5b[625]<=ks15f7e;db22f5b[454]<=yk7df87;db22f5b[403]<=ep26ec2[0];db22f5b[312]<=ldc2bef;db22f5b[201]<=vie4dd8[0];db22f5b[100]<=os5c9bb[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule


































































`timescale 1 ns / 100 ps
module pcie_x1_shd69c8 
   (
    input wire       sys_clk,            
    input wire       rst_n,              
    input wire [7:0] oh3916a,          
    input wire       nrc8b54,         
    input wire       tx_eop_early,       
    input wire       nta04a2,       

    `ifdef X4
       input wire    nt38338,
    `endif

    output reg       wj54ffd,       
    output reg [7:0] doa7fec            );
reg                       tw3ff63;
reg                       ykffb1a;
reg                       offd8d0;
reg                       rtec685;
reg    [1:0]              fa6342f;
parameter ec1a17a = 2'd0;
parameter tud0bd0  = 2'd1;

`ifdef X4

`endif

`ifdef X1

`endif
reg [7 : 0] gd85e82;
reg ba2f415;
reg ofc9e4c;
reg th4f265;
reg mg82aab;
reg sw15558;
reg dbaaac1;
reg [1 : 0] zx5560f;
reg [2047:0] db22f5b;
wire [7:0] ux17adf;

`ifdef X4

`endif

`ifdef X1

`endif

localparam ribd6fd = 8,jceb7ea = 32'hfdffd14b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X1


`endif





`ifdef X4
   assign lf30e9 = nt38338;

`endif



`ifdef X1
   assign lf30e9 = 1'b1;

`endif



















always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      doa7fec <= 8'd0;      fa6342f    <= ec1a17a;   end   else if (lf30e9) begin      case(zx5560f)         ec1a17a:            if (ba2f415) begin               casex(gd85e82)                  8'b1xxx_xxxx: begin                     doa7fec <= 8'b1000_0000;                     fa6342f    <= tud0bd0;                  end                  8'bx1xx_xxxx: begin                     doa7fec <= 8'b0100_0000;                     fa6342f    <= tud0bd0;                  end                  8'bxx1x_xxxx: begin                     doa7fec <= 8'b0010_0000;                     fa6342f    <= tud0bd0;                  end                  8'bxxx1_xxxx: begin                     doa7fec <= 8'b0001_0000;                     fa6342f    <= tud0bd0;                  end                  8'bxxxx_1xxx: begin                     doa7fec <= 8'b0000_1000;                     fa6342f    <= tud0bd0;                  end                  8'bxxxx_x1xx: begin                     doa7fec <= 8'b0000_0100;                     fa6342f    <= tud0bd0;                  end                  8'bxxxx_xx1x: begin                     doa7fec <= 8'b0000_0010;                     fa6342f    <= tud0bd0;                  end                  8'bxxxx_xxx1: begin                     doa7fec <= 8'b0000_0001;                     fa6342f    <= tud0bd0;                  end                  default: begin                     doa7fec <= 8'b0000_0000;                     fa6342f    <= ec1a17a;                  end               endcase            end            else begin               doa7fec <= 8'd0;               fa6342f    <= ec1a17a;            end         tud0bd0: begin            if (ofc9e4c) begin               fa6342f    <= ec1a17a;               doa7fec <= 8'd0;            end            else begin               fa6342f    <= tud0bd0;            end         end         default: begin            fa6342f    <= ec1a17a;         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      tw3ff63 <= 1'b0;      ykffb1a <= 1'b0;      offd8d0 <= 1'b0;      rtec685 <= 1'b0;   end   else if (lf30e9) begin      tw3ff63 <= ofc9e4c;      ykffb1a <= tw3ff63;      offd8d0 <= mg82aab;      rtec685 <= sw15558;   end
end





always @(*) begin   if (ba2f415 && (ofc9e4c || tw3ff63 || mg82aab || sw15558 || (th4f265 && dbaaac1))) begin      wj54ffd = 1'b0;   end   else if (ba2f415) begin      wj54ffd = 1'b1;   end   else begin      wj54ffd = 1'b0;   end
end

always@* begin gd85e82<={oh3916a>>1,ux17adf[0]};ba2f415<=ux17adf[1];ofc9e4c<=ux17adf[2];th4f265<=ux17adf[3];mg82aab<=ux17adf[4];sw15558<=ux17adf[5];dbaaac1<=ux17adf[6];zx5560f<={fa6342f>>1,ux17adf[7]};end
always@* begin db22f5b[2047]<=nrc8b54;db22f5b[2046]<=tx_eop_early;db22f5b[2044]<=nta04a2;db22f5b[2040]<=ykffb1a;db22f5b[2033]<=offd8d0;db22f5b[2019]<=rtec685;db22f5b[1990]<=fa6342f[0];db22f5b[1023]<=oh3916a[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule

















































`timescale 1 ns / 100 ps
module pcie_x1_txrdy_x1 
   (
    
    sys_clk,           
    rst_n,             
    tx_req,            
    tx_data,           
    tx_st,             
    tx_nlfy,           
    txtp_rdy,          
    `ifdef CFG_REG
       cfg_rmux_req,   
    `endif
    vcarb_grant_val,   
    vcarb_grant,       
    pause_enable,      
    vcneg_pend,        

    
    txrdy_clear_rdy,   
    tx_eop_early,      
    tx_rdy             
    );
input                       sys_clk;
input                       rst_n;
input                       tx_req;
input [15:0]                tx_data;
input                       tx_st;
input                       tx_nlfy;
input                       txtp_rdy;

`ifdef CFG_REG
input                    cfg_rmux_req;

`endif
input                       vcarb_grant_val;
input                       vcarb_grant;
input                       pause_enable;
input                       vcneg_pend;
output                      txrdy_clear_rdy;
output                      tx_eop_early;
output                      tx_rdy;
wire                        tx_rdy;
reg                         me62e4d;
reg                         oh17269;
reg                         tx_eop_early;
reg                         czc9a60;
reg   [1:0]                 zk4d305;
reg                         xw6982a;
reg   [10:0]                ww4c152;
reg                         al60a90;
reg                         qi5484;
reg   [11:0]                zm2a420;
reg   [11:0]                ne52102;

`ifndef VC1

`ifdef CFG_REG

`else

`endif

`else

`ifdef CFG_REG

`else

`endif

`endif
reg kf90812;
reg [15 : 0] nt84094;
reg ie24bf4;
reg pu2fd02;
reg mt1299d;
reg hd94ced;
reg mga676e;
reg kf33b70;
reg ie3e603;
reg ofedc20;
reg fn6e104;
reg kd70826;
reg [1 : 0] hd84135;
reg fc209ae;
reg [10 : 0] fc4d72;
reg ux26b93;
reg zm35c9d;
reg [11 : 0] wlae4eb;
reg [11 : 0] os7275c;
reg [2047:0] db22f5b;
wire [18:0] ux17adf;

`ifdef CFG_REG

`endif

`ifndef VC1

`ifdef CFG_REG

`else

`endif

`else

`ifdef CFG_REG

`else

`endif

`endif

localparam ribd6fd = 19,jceb7ea = 32'hfdfff10b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef CFG_REG


`endif


`ifndef VC1


`ifdef CFG_REG


`else


`endif


`else


`ifdef CFG_REG


`else


`endif


`endif






`ifdef CFG_REG



`endif







assign txrdy_clear_rdy = (ofedc20 || (pu2fd02 & ~kd70826)) ? 1'b1 : 1'b0;


`ifndef VC1









always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      oh17269 <= 0;   else begin      if (txrdy_clear_rdy || kf33b70)         oh17269 <= 1'b0;


`ifdef CFG_REG
         else if (!cfg_rmux_req && kf90812 && mt1299d && !ie3e603 && mga676e && hd94ced)            oh17269 <= 1'b1;


`else
         else if (kf90812 && mt1299d && !ie3e603 && mga676e && hd94ced)            oh17269 <= 1'b1;


`endif
   end
end

`else








always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      oh17269      <= 0;   else  begin            if (txrdy_clear_rdy || kf33b70)         oh17269 <= 1'b0;


`ifdef CFG_REG
      else if (!cfg_rmux_req && kf90812 && mt1299d && !ie3e603)         oh17269 <= 1'b1;


`else
      else if (kf90812 && mt1299d && !ie3e603)         oh17269 <= 1'b1;


`endif
   end
end

`endif

assign tx_rdy = fn6e104;



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      al60a90   <= 1'b0;      qi5484   <= 1'b0;      zk4d305 <= 0;      xw6982a  <= 0;      ww4c152 <= 0;   end   else begin      al60a90   <= ie24bf4;      qi5484   <= ux26b93;      zk4d305 <= (ie24bf4)    ? nt84094[14:13] : hd84135;      xw6982a  <= (ux26b93) ? nt84094[15] : fc209ae;      ww4c152 <= (ux26b93 && nt84094[9:0] == 10'd0) ? 11'h400 : {1'b0,nt84094[9:0]};   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      me62e4d  <= 0;   end   else if (os7275c == 12'h06) begin      me62e4d <= 1'b1;   end   else begin      me62e4d  <= 0;   end
end





























always @(*) begin   case (hd84135)      2'b00: zm2a420 =  12'd6;      2'b01: zm2a420 =  12'd8;      2'b10: zm2a420 =  (12'd6 + {fc4d72, 1'b0});       2'b11: zm2a420 =  (12'd8 + {fc4d72, 1'b0});    endcase
end

always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ne52102 <= 0;   end   else if (zm35c9d) begin      ne52102 <= wlae4eb;   end   else if (os7275c >= 12'h04) begin      ne52102 <= os7275c - 1;   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      czc9a60 <= 0;   end   else begin      czc9a60 <= pu2fd02;   end
end
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)      tx_eop_early <= 0;   else begin      if (pu2fd02 & ~kd70826)         tx_eop_early <= 1'b1;      else if (zm35c9d &&  (hd84135 == 2'b00))           tx_eop_early <= 1'b1;      else if (os7275c == 12'h07)         tx_eop_early <= 1'b1;      else         tx_eop_early <= 1'b0;   end
end
always@* begin kf90812<=ux17adf[0];nt84094<={tx_data>>1,ux17adf[1]};ie24bf4<=ux17adf[2];pu2fd02<=ux17adf[3];mt1299d<=ux17adf[4];hd94ced<=ux17adf[5];mga676e<=ux17adf[6];kf33b70<=ux17adf[7];ie3e603<=ux17adf[8];ofedc20<=ux17adf[9];fn6e104<=ux17adf[10];kd70826<=ux17adf[11];hd84135<={zk4d305>>1,ux17adf[12]};fc209ae<=ux17adf[13];fc4d72<={ww4c152>>1,ux17adf[14]};ux26b93<=ux17adf[15];zm35c9d<=ux17adf[16];wlae4eb<={zm2a420>>1,ux17adf[17]};os7275c<={ne52102>>1,ux17adf[18]};end
always@* begin db22f5b[2047]<=tx_data[0];db22f5b[2046]<=tx_st;db22f5b[2044]<=tx_nlfy;db22f5b[2040]<=txtp_rdy;db22f5b[2032]<=vcarb_grant_val;db22f5b[2016]<=vcarb_grant;db22f5b[1985]<=pause_enable;db22f5b[1950]<=zm2a420[0];db22f5b[1923]<=vcneg_pend;db22f5b[1852]<=ne52102[0];db22f5b[1799]<=me62e4d;db22f5b[1551]<=oh17269;db22f5b[1054]<=czc9a60;db22f5b[1023]<=tx_req;db22f5b[975]<=qi5484;db22f5b[487]<=al60a90;db22f5b[243]<=ww4c152[0];db22f5b[121]<=xw6982a;db22f5b[60]<=zk4d305[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule




























































`timescale 1 ns / 100 ps
module pcie_x1_zz13b18 
   (
    input wire               sys_clk,         
    input wire               rst_n,           

    input wire               tu76fa0,    
    input wire [2:0]         cfgec_vcasel,    

    input wire [`NUM_VC-1:0] tx_req,          
    input wire               tx_eop_early,    
    input wire               nta04a2,    
    input wire               txrdy_clear_rdy,
    `ifdef X4
       input wire            nt38338, 
    `endif
    
    
    output wire               vcarb_grant_val, 
    output wire [`NUM_VC-1:0] vcarb_grant          );
wire   [7:0]                goff41a;
wire                        wj54ffd;
wire   [7:0]                doa7fec;
wire                        ph945ed;
wire   [7:0]                doa2f6f;
reg    [7:0]                oh3916a;
reg    [7:0]                mtbe812;
reg    [1:0]                qt4b60a;
reg                         nrc8b54;
reg                         wl2517;
integer                     ykc1567,ksab38;

`define   EVCC   `NUM_VC-1
parameter jp559c0= 2'd0;
parameter coace06 = 2'd1;
parameter ec1a17a = 2'd2;
parameter ux17b7b  = `LPEVCC;

`ifdef X4

`endif

`ifdef X4

`endif
reg ykf0e4f;
reg [2 : 0] mg87279;
reg [`NUM_VC - 1 : 0] kf90812;
reg ofc9e4c;
reg th4f265;
reg gd33eaf;
reg wl9f57c;
reg [7 : 0] gofabe4;
reg zkd5f20;
reg [7 : 0] dbaf902;
reg [1 : 0] xw7c817;
reg ba2f415;
reg fa7932f;
reg [2047:0] db22f5b;
wire [12:0] ux17adf;

`define   EVCC   `NUM_VC-1


`ifdef X4

`endif


`ifdef X4

`endif

localparam ribd6fd = 13,jceb7ea = 32'hfdffea0b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`define   EVCC   `NUM_VC-1


`ifdef X4


`endif


`ifdef X4


`endif








`define   EVCC   `NUM_VC-1

















always @(kf90812) begin      if (ux17b7b == 3'b000) begin      for (ykc1567 = 7; ykc1567 >= 0; ykc1567=ykc1567-1) begin         if (ykc1567 <= `EVCC) begin            oh3916a[ykc1567] = kf90812[ykc1567];         end         else begin            oh3916a[ykc1567] = 1'b0;         end      end   end      else if (`EVCC == ux17b7b) begin      oh3916a   = 0;   end      else begin      for (ykc1567 = 7; ykc1567 >= 0; ykc1567=ykc1567-1) begin         if (ykc1567 <= `EVCC && ykc1567 > (ux17b7b)) begin            oh3916a[ykc1567] = kf90812[ykc1567];         end         else begin            oh3916a[ykc1567] = 1'b0;         end      end   end
end




always @(kf90812) begin      if (ux17b7b == `EVCC) begin      for (ksab38 = 7; ksab38 >= 0; ksab38 = ksab38 -1) begin         if (ksab38 <= ux17b7b) begin            mtbe812[ksab38] = kf90812[ksab38];         end         else begin            mtbe812[ksab38] = 1'b0;         end      end   end      else if (ux17b7b == 3'b000) begin      mtbe812   = 0;   end      else begin      for (ksab38 = 7; ksab38 >= 0; ksab38 = ksab38 -1) begin         if (ksab38 <= ux17b7b) begin            mtbe812[ksab38] = kf90812[ksab38];         end         else begin            mtbe812[ksab38] = 1'b0;         end      end   end
end





generate   if (ux17b7b != `EVCC) begin      pcie_x1_shd69c8 wjc37a0      (              .sys_clk        (sys_clk),       .rst_n          (rst_n),       .oh3916a      (oh3916a),       .nrc8b54     (ba2f415),       .tx_eop_early   (ofc9e4c),       .nta04a2   (th4f265),


`ifdef X4
          .nt38338 (nt38338),


`endif

              .wj54ffd   (wj54ffd),       .doa7fec   (doa7fec)       );   end   else begin      assign wj54ffd = 0;      assign doa7fec = 0;   end
endgenerate





generate   if (ux17b7b != 0) begin      pcie_x1_ph9b3b7 kf12e69         (                    .sys_clk       (sys_clk),          .rst_n         (rst_n),          .tu76fa0  (ykf0e4f),          .cfgec_vcasel  (mg87279),          .mtbe812     (mtbe812),          .tx_eop_early  (ofc9e4c),          .nta04a2  (th4f265),


`ifdef X4
             .nt38338 (nt38338),


`endif
          .wl2517    (fa7932f),                    .ph945ed  (ph945ed),          .doa2f6f  (doa2f6f)          );   end   else begin      assign ph945ed = 0;      assign doa2f6f = 0;   end
endgenerate



assign goff41a  = gofabe4 | dbaf902;
assign vcarb_grant_val  = wl9f57c | zkd5f20;
assign vcarb_grant      = goff41a[`NUM_VC-1:0];







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qt4b60a  <= jp559c0;      nrc8b54 <= 1'b0;      wl2517 <= 1'b0;   end   else begin      case(xw7c817)         jp559c0: begin            case ({|oh3916a,|mtbe812})               2'b10,2'b11: begin                  nrc8b54 <= 1'b1;                  wl2517 <= 1'b0;                  qt4b60a  <= ec1a17a;               end               2'b01: begin                  nrc8b54 <= 1'b0;                  wl2517 <= 1'b1;                  qt4b60a  <= coace06;               end               default: begin                  nrc8b54 <= 1'b0;                  wl2517 <= 1'b0;                  qt4b60a  <= jp559c0;               end            endcase         end         coace06: begin            if (gd33eaf) begin               case ({|oh3916a,|mtbe812})                  2'b10,2'b11: begin                     nrc8b54 <= 1'b1;                     wl2517 <= 1'b0;                     qt4b60a  <= jp559c0;                  end                  2'b01: begin                     nrc8b54 <= 1'b0;                     wl2517 <= 1'b1;                     qt4b60a  <= coace06;                  end                  default: begin                     nrc8b54 <= 1'b0;                     wl2517 <= 1'b1;                     qt4b60a  <= jp559c0;                  end               endcase            end            else begin                  qt4b60a  <= coace06;            end         end         ec1a17a: begin            if (gd33eaf) begin               case ({|oh3916a,|mtbe812})                  2'b10,2'b11: begin                     nrc8b54 <= 1'b1;                     wl2517 <= 1'b0;                     qt4b60a  <= jp559c0;                  end                  2'b01: begin                     nrc8b54 <= 1'b1;                     wl2517 <= 1'b0;                     qt4b60a  <= jp559c0;                  end                  default: begin                     nrc8b54 <= 1'b1;                     wl2517 <= 1'b0;                     qt4b60a  <= jp559c0;                  end               endcase            end            else begin                  qt4b60a  <= ec1a17a;            end         end         default: begin            qt4b60a  <= jp559c0;         end      endcase   end
end
always@* begin ykf0e4f<=ux17adf[0];mg87279<={cfgec_vcasel>>1,ux17adf[1]};kf90812<={tx_req>>1,ux17adf[2]};ofc9e4c<=ux17adf[3];th4f265<=ux17adf[4];gd33eaf<=ux17adf[5];wl9f57c<=ux17adf[6];gofabe4<={doa7fec>>1,ux17adf[7]};zkd5f20<=ux17adf[8];dbaf902<={doa2f6f>>1,ux17adf[9]};xw7c817<={qt4b60a>>1,ux17adf[10]};ba2f415<=ux17adf[11];fa7932f<=ux17adf[12];end
always@* begin db22f5b[2047]<=cfgec_vcasel[0];db22f5b[2046]<=tx_req[0];db22f5b[2044]<=tx_eop_early;db22f5b[2040]<=nta04a2;db22f5b[2032]<=txrdy_clear_rdy;db22f5b[2016]<=wj54ffd;db22f5b[1984]<=doa7fec[0];db22f5b[1921]<=ph945ed;db22f5b[1795]<=doa2f6f[0];db22f5b[1542]<=qt4b60a[0];db22f5b[1036]<=nrc8b54;db22f5b[1023]<=tu76fa0;db22f5b[25]<=wl2517;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule



























































`timescale 1 ns / 100 ps
module pcie_x1_int_msg_x1 
   (
    
    sys_clk,         
    rst_n,           

    int_disable,     
    inta_n,          

    ftl_err_out,     
    nftl_err_out,    
    cor_err_out,     

    bus_num,         
    dev_num,         
    func_num,        

    `ifdef ECRC
      pcie_x1_ecrc_enb,      
    `endif

    int_msg_rd,      
    err_msg_rd,      
    
    tx_ca_ph_infi,   
    tx_ca_pd_infi,   
    tx_ca_ph,        
    tx_ca_pd,        

    msi_tc,          
    msi,             
    msi_enable,      
    mm_enable,       
    mes_uaddr,       
    mes_laddr,       
    mes_data,        
    
    
    err_msg_req,      
    err_msg_data,     
    
    err_msg_ae,       

    int_msg_req,      
    int_msg_data,     
    
    int_msg_ae,       
    int_pending       
    );
parameter R = 1'b0;
parameter ERR_COR      = 2'b00;
parameter ERR_NONFATAL = 2'b01;
parameter ERR_FATAL    = 2'b11;
parameter ARB_IDLE  = 4'd0;
parameter MSI_WAIT  = 4'd3;
parameter MSI_0     = 4'd4;
parameter MSI_1     = 4'd5;
parameter MSI_2     = 4'd6;
parameter MSI_3     = 4'd7;
parameter MSI_4     = 4'd8;
parameter MSI_5     = 4'd9;
parameter MSI_6     = 4'd10;
parameter MSI_7     = 4'd11;
parameter PKT_IDLE    = 2'd0;
parameter PKT_HEADER  = 2'd1;
parameter PKT_ADDR    = 2'd2;
parameter PKT_DATA    = 2'd3;
parameter INTA_IDLE       = 2'd0;
parameter INTA_ASSERT     = 2'd1;
parameter INTA_DEASSERT   = 2'd2;
input                       sys_clk;
input                       rst_n;
input                       int_disable;
input                       inta_n;
input                       ftl_err_out;
input                       nftl_err_out;
input                       cor_err_out;
input  [7:0]                bus_num;
input  [4:0]                dev_num;
input  [2:0]                func_num;

`ifdef ECRC
input                    pcie_x1_ecrc_enb;

`endif
input                       int_msg_rd;
input                       err_msg_rd;
input                       tx_ca_ph_infi;
input                       tx_ca_pd_infi;
input  [7:0]                tx_ca_ph;
input  [11:0]               tx_ca_pd;
input  [7:0]                msi;
input  [2:0]                msi_tc;
input                       msi_enable;
input  [2:0]                mm_enable;
input  [31:0]               mes_uaddr;
input  [31:0]               mes_laddr;
input  [15:0]               mes_data;
output                      err_msg_req;
output [15:0]               err_msg_data;
output                      err_msg_ae;
output                      int_msg_req;
output [15:0]               int_msg_data;
output                      int_msg_ae;
output                      int_pending;
wire                        err_msg_req;
wire [15:0]                 err_msg_data;
reg                         err_msg_ae;
wire                        int_msg_req;
wire [15:0]                 int_msg_data;
wire                        int_msg_ae;
reg                         int_pending;
reg [7:0]                   xybdd51;
reg [7:0]                   jceea8b;
reg [31:0]                  uv7545b;
reg [2:0]                   fpaa2dc;
reg [31:0]                  kd516e6;
reg [2:0]                   rv8b735;
reg [2:0]                   qt5b9af;
reg [3:0]                   qtdcd7d;
reg [7:0]                   nre6bec;
reg [31:0]                  vk35f67;
reg [1:0]                   rvafb3b;
reg [15:0]                  ea7d9df;
reg                         pu20928;
reg                         kq677ce;
reg [2:0]                   sw3be70;
reg                         rgdf380;
reg [1:0]                   vvf9c02;
reg [63:0]                  suce017;
reg [63:0]                  yx700b9;
reg                         kf805cc;
reg [1:0]                   ep2e64;
reg                         ir17324;
reg                         ukb9924;
reg                         mrcc921;
reg                         dz6490d;
reg  [1:0]                  ou2486e [0:31];
reg                         ym24370;
reg  [4:0]                  ec21b81;
reg  [4:0]                  yzdc08;
reg  [2:0]                  vv6e045;
reg  [5:0]                  ip7022e;
reg  [15:0]                 nt81174;
reg [1:0]                   cb8ba6;
reg                         bl45d35;
reg                         mg2e9af;
reg [3:0]                   th74d79;
reg [6:0]                   ng996c5 ;
reg [6:0]                   qgcb62b ;
reg [7:0]                   je3ae5b;
reg                         rg79e5e;
reg                         necf2f3;
wire                        jc7979b;
wire [7:0]                  wwcbcda;
wire [1:0]                  al5e6d0;
wire [4:0]                  pff3684;
wire [2:0]                  vx9b427;
wire                        zkda13e;
wire                        fad09f2;
wire [9:0]                  zz84f92;
wire [15:0]                 zz27c97;
wire [7:0]                  mg3e4bf;
wire [3:0]                  alf25f9;
wire [3:0]                  co92fcd;
wire [31:0]                 co97e69;
wire [31:0]                 fpbf349;
wire [15:0]                 xjf9a4f;
wire [31:0]                 ldcd27f;
wire [31:0]                 ps693fe;
wire                        os49ff3;
wire                        th4ff99;
wire [1:0]                  cz7fcce;
wire [4:0]                  tufe674;
wire [2:0]                  fnf33a3;
wire [7:0]                  ri99d1f;
wire [9:0]                  suce8fa;
wire [31:0]                 vv747d0;
wire [31:0]                 ksa3e86;
wire [4:0]                  wy1f431;
wire [15:0]                 gofa188;
wire [7:0]                  dmd0c41;
wire [31:0]                 hq8620a;
wire [31:0]                 ie31053;
wire                        ks88298;
wire                        ip414c0;
wire                        mga604;
wire                        ay53021;
wire                        fp37cf7;
integer                     db9be6b,psdf35f;
reg ym2105a;

`ifdef ECRC

`else

`endif

`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif
reg gd82d1;
reg cz4168c;
reg rib464;
reg rt5a323;
reg sud191e;
reg [7 : 0] qi21a0b;
reg [4 : 0] qvd058;
reg [2 : 0] cm682c4;
reg pu1e0fd;
reg cmf07ea;
reg pu83f50;
reg qi1fa82;
reg [7 : 0] qtfd411;
reg [11 : 0] ayea08c;
reg [2 : 0] xj50460;
reg [7 : 0] ou82307;
reg ng11839;
reg [2 : 0] je8c1ca;
reg [31 : 0] al60e52;
reg [31 : 0] sj7294;
reg [15 : 0] ux394a5;
reg [7 : 0] hoca52c;
reg [7 : 0] ne52963;
reg [31 : 0] ph94b1b;
reg [2 : 0] bna58de;
reg [31 : 0] an2c6f6;
reg [2 : 0] zk637b5;
reg [2 : 0] je1bdaa;
reg [3 : 0] kqded53;
reg [7 : 0] vvf6a99;
reg [31 : 0] ntb54ce;
reg [1 : 0] bnaa676;
reg [15 : 0] cm533b6;
reg sjb1535;
reg eaced82;
reg [2 : 0] lq76c10;
reg ieb6082;
reg [1 : 0] rvb0411;
reg [63 : 0] ec8208e;
reg [63 : 0] ks10471;
reg ou82389;
reg [1 : 0] ng11c49;
reg lf8e24a;
reg vv71257;
reg ls892be;
reg os495f2;
reg pf4af90;
reg [4 : 0] vi57c86;
reg [4 : 0] anbe433;
reg [2 : 0] ipf219d;
reg [5 : 0] qv90ced;
reg [15 : 0] hq8676c;
reg [1 : 0] kf33b63;
reg aa9db1c;
reg ofed8e0;
reg [3 : 0] dm6c704;
reg [6 : 0] xw6cfc5;
reg [6 : 0] ww67e2a;
reg [7 : 0] pu3f151;
reg do46f8;
reg an237c2;
reg ri1be14;
reg [7 : 0] xwdf0a3;
reg [1 : 0] qtf851a;
reg [4 : 0] dzc28d4;
reg [2 : 0] zm146a6;
reg eca3533;
reg wy1a998;
reg [9 : 0] kqd4cc1;
reg [15 : 0] ksa6608;
reg [7 : 0] ux33040;
reg [3 : 0] gq98205;
reg [3 : 0] mec1029;
reg [31 : 0] ux8148;
reg [31 : 0] ld40a44;
reg [15 : 0] ou5227;
reg [31 : 0] kf29138;
reg [31 : 0] by489c5;
reg sh44e2b;
reg vx2715d;
reg [1 : 0] fp38aee;
reg [4 : 0] vic5777;
reg [2 : 0] mg2bbba;
reg [7 : 0] rg5ddd1;
reg [9 : 0] tueee8a;
reg [31 : 0] ui77453;
reg [31 : 0] jrba299;
reg [4 : 0] ayd14cf;
reg [15 : 0] oh8a679;
reg [7 : 0] qg533cd;
reg [31 : 0] hq99e68;
reg [31 : 0] rgcf342;
reg ps79a13;
reg zxcd09b;
reg ww684de;
reg tu426f1;
reg wjc3919;
reg jr9bc5e;
reg [2047:0] db22f5b;
wire [97:0] ux17adf;

`ifdef ECRC

`endif

`ifdef ECRC

`else

`endif


`ifdef ECP5UM

`else

`ifdef ECP3

`else

`endif

`endif

localparam ribd6fd = 98,jceb7ea = 32'hfdffea0b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef ECRC


`endif


`ifdef ECRC


`else


`endif


`ifdef ECP5UM


`else


`ifdef ECP3


`else


`endif


`endif











`ifdef ECRC



`endif























assign ks88298  =  rib464 & ~vv71257;
assign ip414c0 =  rt5a323 & ~ls892be;
assign mga604  =  sud191e & ~os495f2;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ep2e64  <= 2'b00;      ir17324      <= 1'b0;      ukb9924  <= 1'b0;      mrcc921 <= 1'b0;      dz6490d  <= 1'b0;   end   else begin      ukb9924  <= rib464;      mrcc921 <= rt5a323;      dz6490d  <= sud191e;            if(ps79a13 || zxcd09b || ww684de)         ir17324  <= 1'b1;      else         ir17324  <= 1'b0;          if(ps79a13)        ep2e64 <= ERR_FATAL;     else if(zxcd09b)        ep2e64 <= ERR_NONFATAL;     else if(ww684de)        ep2e64 <= ERR_COR;   end
end





assign wwcbcda  = (ng11839) ? (ou82307[7:0] & ph94b1b[7:0]) : 8'h00;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      xybdd51        <= 8'h00;      jceea8b  <= 8'h00;   end   else begin      jceea8b <= xwdf0a3;
      for (db9be6b = 0 ; db9be6b < 8; db9be6b = db9be6b+1) begin         if(xwdf0a3[db9be6b] && ~ne52963[db9be6b])            xybdd51[db9be6b]  <= 1'b1;         else if(vvf6a99[db9be6b])            xybdd51[db9be6b]  <= 1'b0;      end   end
end







always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cb8ba6      <= INTA_IDLE;      bl45d35     <= 1'b0;      th74d79 <= 4'b0000;      int_pending <= 1'b0;      ym2105a <= 1'b0;   end   else begin      if(bnaa676 == PKT_ADDR)         ym2105a <= 1'b1;      else         ym2105a <= 1'b0;      case(kf33b63)         INTA_IDLE : begin            if(~ng11839 && ~gd82d1 && ~cz4168c) begin               cb8ba6  <= INTA_ASSERT;               bl45d35 <= 1'b1;            end            else if(ofed8e0)               bl45d35 <= 1'b0;         end         INTA_ASSERT : begin            th74d79 <= 4'b0000;            int_pending <= 1'b1;                        if((gd82d1 || cz4168c) && (~aa9db1c && ~ofed8e0 && (jr9bc5e || bnaa676 == PKT_IDLE))) begin               cb8ba6  <= INTA_DEASSERT;               bl45d35 <= 1'b1;            end            else if(ofed8e0)               bl45d35 <= 1'b0;         end         INTA_DEASSERT : begin            th74d79 <= 4'b0100;            int_pending <= 1'b0;            if(ofed8e0)               bl45d35 <= 1'b0;            if(cz4168c)               cb8ba6  <= INTA_IDLE;         end      endcase   end
end


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      qtdcd7d   <= ARB_IDLE;      nre6bec <= 8'h00;      mg2e9af <= 1'b0;      vk35f67  <= {MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0};   end   else begin      mg2e9af    <= aa9db1c;      if(sh44e2b)         vk35f67  <= an2c6f6;      else if(|kqded53[3:2] == 1'b1)            vk35f67  <= {ntb54ce[3:0], ntb54ce[31:4]};      case(kqded53)         ARB_IDLE : begin            if(|hoca52c)               qtdcd7d  <= ntb54ce[3:0];         end         MSI_WAIT : begin            nre6bec  <= 0;            if(ou82389)               qtdcd7d   <= ntb54ce[3:0];         end                                       MSI_0 : begin            qtdcd7d      <= (hoca52c[0]) ? MSI_WAIT : ntb54ce[3:0];            nre6bec[0] <= hoca52c[0];         end         MSI_1 : begin            qtdcd7d      <= (hoca52c[1]) ? MSI_WAIT : ntb54ce[3:0];            nre6bec[1] <= hoca52c[1];         end         MSI_2 : begin            qtdcd7d      <= (hoca52c[2]) ? MSI_WAIT : ntb54ce[3:0];            nre6bec[2] <= hoca52c[2];         end         MSI_3 : begin            qtdcd7d      <= (hoca52c[3]) ? MSI_WAIT : ntb54ce[3:0];            nre6bec[3] <= hoca52c[3];         end         MSI_4 : begin            qtdcd7d      <= (hoca52c[4]) ? MSI_WAIT : ntb54ce[3:0];            nre6bec[4] <= hoca52c[4];         end         MSI_5 : begin            qtdcd7d      <= (hoca52c[5]) ? MSI_WAIT : ntb54ce[3:0];            nre6bec[5] <= hoca52c[5];         end         MSI_6 : begin            qtdcd7d      <= (hoca52c[6]) ? MSI_WAIT : ntb54ce[3:0];            nre6bec[6] <= hoca52c[6];         end         MSI_7 : begin            qtdcd7d      <= (hoca52c[7]) ? MSI_WAIT : ntb54ce[3:0];            nre6bec[7] <= hoca52c[7];         end      endcase   end
end



assign al5e6d0  = (eaced82) ?  2'b11 : 2'b10;
assign pff3684 = 5'b0000;
assign vx9b427   = xj50460;

`ifdef ECRC
  assign zkda13e  = pcie_x1_ecrc_enb;

`else
  assign zkda13e  = 1'b0;

`endif

assign fad09f2    = 1'b0;
assign zz84f92  = 10'h001;
assign zz27c97 = {qi21a0b, qvd058, cm682c4};
assign mg3e4bf         = 8'h00;  
assign alf25f9     = 4'b0000;
assign co92fcd    = 4'b0011;

assign co97e69 = {R, qtf851a, dzc28d4, R, zm146a6, R,R,R,R,   eca3533, wy1a998, 2'b00, R,R, kqd4cc1};
assign fpbf349 = {ksa6608,  ux33040, gq98205, mec1029};
assign cz7fcce     = 2'b01;                         
assign tufe674    = {2'b10, 3'b000};               
assign fnf33a3      = 3'b000;                        
assign ri99d1f = {4'b0011, 2'b00, ng11c49}; 
assign suce8fa     = {R,R,R,R,R, R,R,R,R,R};        

assign vv747d0 = {R, fp38aee, vic5777, R, mg2bbba, R,R,R,R,  eca3533, wy1a998, 2'b00, R,R, tueee8a};
assign ksa3e86 = {ksa6608,  ux33040, rg5ddd1};
assign wy1f431    = {2'b10, 3'b100};               
assign gofa188 = {qi21a0b, qvd058, R, R, R }; 
assign dmd0c41     = {4'b0010, dm6c704}; 


assign hq8620a = {R, fp38aee, ayd14cf, R, mg2bbba, R,R,R,R,  eca3533, wy1a998, 2'b00, R,R, tueee8a};
assign ie31053 = {oh8a679,  ux33040, qg533cd};
assign xjf9a4f = {ux394a5[15:3], lq76c10};

assign ps693fe = {ou5227[7:0], ou5227[15:8], 8'h00, 8'h00};

assign ldcd27f = {ou5227[7:0], ou5227[15:8], 8'h00, 8'h00};








assign th4ff99  = lf8e24a; 
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ym24370      <= 1'b0;      ec21b81    <= 5'b00000;      yzdc08    <= 5'b00000;      vv6e045    <= 3'b000;      ip7022e      <= 6'b000000;      nt81174      <= 16'd0;      err_msg_ae <= 1'b0;            for (psdf35f=0; psdf35f<32; psdf35f=psdf35f+1)         ou2486e[psdf35f]  <= 2'b00;   end   else begin                  if(cmf07ea && (ipf219d == 3'b110))            ym24370 <= 1'b1;      else         ym24370 <= 1'b0;      vv6e045 <= (cmf07ea) ? ipf219d + 3'b001 : ipf219d;      if (vx2715d)         ec21b81 <= vi57c86 + 5'd1 ;      if (pf4af90)         yzdc08 <= anbe433 + 5'd1;      if (vx2715d && !pf4af90)         ip7022e <= qv90ced + 6'd1 ;      else if (pf4af90 && !vx2715d)         ip7022e <= qv90ced - 6'd1 ;
      if (vx2715d)         ou2486e[vi57c86]  <= ng11c49;            if (cmf07ea) begin            case(ipf219d)            3'd0    : nt81174 <= ui77453[31:16];            3'd1    : nt81174 <= ui77453[15:0];            3'd2    : nt81174 <= jrba299[31:16];            3'd3    : nt81174 <= {jrba299[15:2], ou2486e[anbe433]};            default : nt81174 <= 16'd0;          endcase      end                        if (cmf07ea) begin            if((qv90ced == 6'd1) && (ipf219d == 3'd4))             err_msg_ae   <= 1'b1;      end      else                 err_msg_ae   <= 1'b0;
         end
end






always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rvafb3b        <= PKT_IDLE;      ea7d9df        <= 16'd0;      pu20928         <= 1'b0;      kq677ce <= 1'b0;      sw3be70    <= 3'b000;      rgdf380   <= 1'b0;      vvf9c02       <= 2'b00;      suce017    <= 64'd0;      yx700b9    <= 64'd0;      kf805cc  <= 1'b0;   end   else begin      kq677ce <= (|al60e52) ? 1'b1 : 1'b0;      case(bnaa676)         PKT_IDLE : begin                        suce017  <= (|vvf6a99) ? {ux8148[15:0], ld40a44, 16'd0} : {hq99e68[15:0], rgcf342, 16'd0};            ea7d9df      <= (|vvf6a99) ? ux8148[31:16] : hq99e68[31:16];            rgdf380 <= (|vvf6a99) ? 1'b1 : 1'b0;            vvf9c02     <= 2'b01;            yx700b9  <= ks10471 << 16;               kf805cc<= 1'b0;            pu20928       <= 1'b0;            if(|vvf6a99 || ofed8e0) begin               pu20928       <= 1'b1;               rvafb3b      <= PKT_HEADER;            end         end         PKT_HEADER : begin               vvf9c02     <= rvb0411 + 1;            ea7d9df      <= ec8208e[63:48];            suce017  <= ec8208e << 16;                        if(ieb6082)                yx700b9    <= (eaced82) ? {al60e52, sj7294} : {sj7294, kf29138};            else                 yx700b9    <= 64'd0;              if(rvb0411 == 2'b01)               sw3be70  <= bna58de;               if(rvb0411 == 2'b11)               rvafb3b      <= PKT_ADDR;         end         PKT_ADDR : begin               vvf9c02            <= rvb0411 + 1;            ea7d9df             <= ks10471[63:48];            yx700b9         <= ks10471 << 16;            suce017[63:32]  <= by489c5;            if(rvb0411 == 2'b11)  begin               if(ieb6082) begin                   rvafb3b      <= (eaced82) ? PKT_DATA : PKT_IDLE;                  kf805cc<= !eaced82;               end               else                    rvafb3b      <= PKT_IDLE;            end         end         PKT_DATA : begin               vvf9c02     <= rvb0411 + 1;            ea7d9df      <= ec8208e[63:48];            suce017  <= ec8208e << 16;            yx700b9  <= ks10471 << 16;               if(rvb0411 == 2'b01)  begin               rvafb3b      <= PKT_IDLE;               kf805cc<= 1'b1;            end         end      endcase   end
end


always @(*) begin   uv7545b    =  32'h0000_0000;   case(je8c1ca)      3'b000 : begin         uv7545b    =  32'h0000_0001;         end      3'b001 : begin         uv7545b    =  32'h0000_0003;         end      3'b010 : begin         uv7545b    =  32'h0000_000F;         end      3'b011 : begin         uv7545b    =  32'h0000_00FF;         end                                                            default : begin         uv7545b    =  32'h0000_0000;      end   endcase
end


assign os49ff3 = (zk637b5 == je1bdaa) ? 1'b0 : 1'b1;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      kd516e6       <= {MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0};      fpaa2dc       <= 3'b000;      rv8b735      <= 3'b000;      qt5b9af  <= 3'b000;   end   else begin            rv8b735      <= je8c1ca;      qt5b9af  <= zk637b5;      case(je8c1ca)         3'b000 : begin            kd516e6  <= {MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0, MSI_0};            fpaa2dc  <= ux394a5[2:0];         end         3'b001 : begin            kd516e6  <= {MSI_1, MSI_0, MSI_1, MSI_0, MSI_1, MSI_0, MSI_1, MSI_0};            fpaa2dc[2:1] <= ux394a5[2:1];            case(vvf6a99[1:0])               2'b01   : fpaa2dc[0] <= 1'b0;               2'b10   : fpaa2dc[0] <= 1'b1;               default : fpaa2dc[0] <= 1'b0;            endcase         end         3'b010 : begin            kd516e6  <= {MSI_3, MSI_2, MSI_1, MSI_0, MSI_3, MSI_2, MSI_1, MSI_0};            fpaa2dc[2] <= ux394a5[2];            case(vvf6a99[3:0])               4'b0001 : fpaa2dc[1:0] <= 2'h0;               4'b0010 : fpaa2dc[1:0] <= 2'h1;               4'b0100 : fpaa2dc[1:0] <= 2'h2;               4'b1000 : fpaa2dc[1:0] <= 2'h3;               default : fpaa2dc[1:0] <= 2'h0;            endcase         end         3'b011 : begin            kd516e6  <= {MSI_7, MSI_6, MSI_5, MSI_4, MSI_3, MSI_2, MSI_1, MSI_0};            case(vvf6a99)               8'b0000_0001 : fpaa2dc <= 3'h0;               8'b0000_0010 : fpaa2dc <= 3'h1;               8'b0000_0100 : fpaa2dc <= 3'h2;               8'b0000_1000 : fpaa2dc <= 3'h3;               8'b0001_0000 : fpaa2dc <= 3'h4;               8'b0010_0000 : fpaa2dc <= 3'h5;               8'b0100_0000 : fpaa2dc <= 3'h6;               8'b1000_0000 : fpaa2dc <= 3'h7;               default      : fpaa2dc <= 3'h0;            endcase         end                                                               default : begin            kd516e6  <= {MSI_7, MSI_6, MSI_5, MSI_4, MSI_3, MSI_2, MSI_1, MSI_0};            fpaa2dc  <= ux394a5[2:0];         end      endcase   end
end


assign ay53021 = pu1e0fd;

always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      ng996c5 <= 7'd0 ;      qgcb62b <= 7'd0 ;      je3ae5b   <= 8'd0 ;   end   else begin      if (sjb1535)         ng996c5 <= (xw6cfc5 == 7'd81) ? 7'd0 : xw6cfc5 + 7'd1 ;      if (tu426f1)         qgcb62b <= (ww67e2a == 7'd81) ? 7'd0 : ww67e2a + 7'd1 ;      if (sjb1535 && !tu426f1)         je3ae5b <= pu3f151 + 8'd1 ;      else if (tu426f1 && !sjb1535)         je3ae5b <= pu3f151 - 8'd1 ;   end
end



always @(posedge sys_clk , negedge rst_n) begin   if (!rst_n)      rg79e5e <= 1'b0 ;   else if (pu83f50)      rg79e5e <= 1'b1 ;   else if (qtfd411 != 8'h00)      rg79e5e <= 1'b1 ;   else      rg79e5e <= 1'b0 ;
end
always @(posedge sys_clk , negedge rst_n) begin   if (!rst_n)      necf2f3 <= 1'b0 ;   else if (qi1fa82)      necf2f3 <= 1'b1 ;   else if (ayea08c != 8'h00)      necf2f3 <= 1'b1 ;   else      necf2f3 <= 1'b0 ;
end


assign jc7979b = ng11839 ? (do46f8 & an237c2) : do46f8 ;

assign int_msg_req = ((pu3f151 >= 8'd2) && ri1be14) ;

assign int_msg_ae = (|pu3f151[7:1] == 1'b0) ;


assign err_msg_req  = ((qv90ced >= 6'd1) && do46f8);

assign err_msg_data = hq8676c;





pmi_distributed_dpram #(   .pmi_addr_depth       (81),      .pmi_addr_width       (7),       .pmi_data_width       (16),      .pmi_regmode          ("reg"),   .pmi_init_file        ("none"),   .pmi_init_file_format ("binary"),


`ifdef ECP5UM
   .pmi_family           ("ECP5U"),


`else



`ifdef ECP3
      .pmi_family        ("ECP3"),


`else
      .pmi_family        ("EC2"),


`endif



`endif
   .module_type          ("pmi_distributed_dpram"))
   jpcd0d8 (   .WrAddress            (ng996c5),   .Data                 (ea7d9df),   .WrClock              (sys_clk),   .WE                   (pu20928),   .WrClockEn            (1'b1),   .RdAddress            (qgcb62b),   .RdClock              (sys_clk),   .RdClockEn            (ay53021),   .Reset                (~rst_n),   .Q                    (int_msg_data )   );
always@* begin gd82d1<=ux17adf[0];cz4168c<=ux17adf[1];rib464<=ux17adf[2];rt5a323<=ux17adf[3];sud191e<=ux17adf[4];qi21a0b<={bus_num>>1,ux17adf[5]};qvd058<={dev_num>>1,ux17adf[6]};cm682c4<={func_num>>1,ux17adf[7]};pu1e0fd<=ux17adf[8];cmf07ea<=ux17adf[9];pu83f50<=ux17adf[10];qi1fa82<=ux17adf[11];qtfd411<={tx_ca_ph>>1,ux17adf[12]};ayea08c<={tx_ca_pd>>1,ux17adf[13]};xj50460<={msi_tc>>1,ux17adf[14]};ou82307<={msi>>1,ux17adf[15]};ng11839<=ux17adf[16];je8c1ca<={mm_enable>>1,ux17adf[17]};al60e52<={mes_uaddr>>1,ux17adf[18]};sj7294<={mes_laddr>>1,ux17adf[19]};ux394a5<={mes_data>>1,ux17adf[20]};hoca52c<={xybdd51>>1,ux17adf[21]};ne52963<={jceea8b>>1,ux17adf[22]};ph94b1b<={uv7545b>>1,ux17adf[23]};bna58de<={fpaa2dc>>1,ux17adf[24]};an2c6f6<={kd516e6>>1,ux17adf[25]};zk637b5<={rv8b735>>1,ux17adf[26]};je1bdaa<={qt5b9af>>1,ux17adf[27]};kqded53<={qtdcd7d>>1,ux17adf[28]};vvf6a99<={nre6bec>>1,ux17adf[29]};ntb54ce<={vk35f67>>1,ux17adf[30]};bnaa676<={rvafb3b>>1,ux17adf[31]};cm533b6<={ea7d9df>>1,ux17adf[32]};sjb1535<=ux17adf[33];eaced82<=ux17adf[34];lq76c10<={sw3be70>>1,ux17adf[35]};ieb6082<=ux17adf[36];rvb0411<={vvf9c02>>1,ux17adf[37]};ec8208e<={suce017>>1,ux17adf[38]};ks10471<={yx700b9>>1,ux17adf[39]};ou82389<=ux17adf[40];ng11c49<={ep2e64>>1,ux17adf[41]};lf8e24a<=ux17adf[42];vv71257<=ux17adf[43];ls892be<=ux17adf[44];os495f2<=ux17adf[45];pf4af90<=ux17adf[46];vi57c86<={ec21b81>>1,ux17adf[47]};anbe433<={yzdc08>>1,ux17adf[48]};ipf219d<={vv6e045>>1,ux17adf[49]};qv90ced<={ip7022e>>1,ux17adf[50]};hq8676c<={nt81174>>1,ux17adf[51]};kf33b63<={cb8ba6>>1,ux17adf[52]};aa9db1c<=ux17adf[53];ofed8e0<=ux17adf[54];dm6c704<={th74d79>>1,ux17adf[55]};xw6cfc5<={ng996c5>>1,ux17adf[56]};ww67e2a<={qgcb62b>>1,ux17adf[57]};pu3f151<={je3ae5b>>1,ux17adf[58]};do46f8<=ux17adf[59];an237c2<=ux17adf[60];ri1be14<=ux17adf[61];xwdf0a3<={wwcbcda>>1,ux17adf[62]};qtf851a<={al5e6d0>>1,ux17adf[63]};dzc28d4<={pff3684>>1,ux17adf[64]};zm146a6<={vx9b427>>1,ux17adf[65]};eca3533<=ux17adf[66];wy1a998<=ux17adf[67];kqd4cc1<={zz84f92>>1,ux17adf[68]};ksa6608<={zz27c97>>1,ux17adf[69]};ux33040<={mg3e4bf>>1,ux17adf[70]};gq98205<={alf25f9>>1,ux17adf[71]};mec1029<={co92fcd>>1,ux17adf[72]};ux8148<={co97e69>>1,ux17adf[73]};ld40a44<={fpbf349>>1,ux17adf[74]};ou5227<={xjf9a4f>>1,ux17adf[75]};kf29138<={ldcd27f>>1,ux17adf[76]};by489c5<={ps693fe>>1,ux17adf[77]};sh44e2b<=ux17adf[78];vx2715d<=ux17adf[79];fp38aee<={cz7fcce>>1,ux17adf[80]};vic5777<={tufe674>>1,ux17adf[81]};mg2bbba<={fnf33a3>>1,ux17adf[82]};rg5ddd1<={ri99d1f>>1,ux17adf[83]};tueee8a<={suce8fa>>1,ux17adf[84]};ui77453<={vv747d0>>1,ux17adf[85]};jrba299<={ksa3e86>>1,ux17adf[86]};ayd14cf<={wy1f431>>1,ux17adf[87]};oh8a679<={gofa188>>1,ux17adf[88]};qg533cd<={dmd0c41>>1,ux17adf[89]};hq99e68<={hq8620a>>1,ux17adf[90]};rgcf342<={ie31053>>1,ux17adf[91]};ps79a13<=ux17adf[92];zxcd09b<=ux17adf[93];ww684de<=ux17adf[94];tu426f1<=ux17adf[95];wjc3919<=ux17adf[96];jr9bc5e<=ux17adf[97];end
always@* begin db22f5b[2047]<=inta_n;db22f5b[2046]<=ftl_err_out;db22f5b[2044]<=nftl_err_out;db22f5b[2040]<=cor_err_out;db22f5b[2032]<=bus_num[0];db22f5b[2016]<=dev_num[0];db22f5b[1984]<=func_num[0];db22f5b[1980]<=vk35f67[0];db22f5b[1950]<=fpaa2dc[0];db22f5b[1930]<=sw3be70[0];db22f5b[1921]<=int_msg_rd;db22f5b[1912]<=rvafb3b[0];db22f5b[1853]<=kd516e6[0];db22f5b[1818]<=ps693fe[0];db22f5b[1813]<=rgdf380;db22f5b[1806]<=cb8ba6[0];db22f5b[1802]<=rg79e5e;db22f5b[1795]<=err_msg_rd;db22f5b[1777]<=ea7d9df[0];db22f5b[1746]<=ip414c0;db22f5b[1687]<=fp37cf7;db22f5b[1685]<=ri99d1f[0];db22f5b[1659]<=rv8b735[0];db22f5b[1648]<=yzdc08[0];db22f5b[1630]<=mes_uaddr[0];db22f5b[1588]<=os49ff3;db22f5b[1578]<=vvf9c02[0];db22f5b[1564]<=bl45d35;db22f5b[1556]<=necf2f3;db22f5b[1542]<=tx_ca_ph_infi;db22f5b[1511]<=jceea8b[0];db22f5b[1506]<=pu20928;db22f5b[1460]<=ie31053[0];db22f5b[1445]<=mga604;db22f5b[1436]<=ym24370;db22f5b[1389]<=dmd0c41[0];db22f5b[1383]<=mrcc921;db22f5b[1369]<=ir17324;db22f5b[1327]<=ym2105a;db22f5b[1323]<=suce8fa[0];db22f5b[1280]<=zkda13e;db22f5b[1271]<=qt5b9af[0];db22f5b[1249]<=vv6e045[0];db22f5b[1212]<=mes_laddr[0];db22f5b[1197]<=ksa3e86[0];db22f5b[1129]<=th4ff99;db22f5b[1109]<=suce017[0];db22f5b[1080]<=mg2e9af;db22f5b[1064]<=jc7979b;db22f5b[1036]<=tx_ca_pd_infi;db22f5b[1027]<=zz84f92[0];db22f5b[1023]<=int_disable;db22f5b[990]<=nre6bec[0];db22f5b[975]<=uv7545b[0];db22f5b[965]<=kq677ce;db22f5b[909]<=ldcd27f[0];db22f5b[903]<=nt81174[0];db22f5b[901]<=je3ae5b[0];db22f5b[873]<=ks88298;db22f5b[843]<=ay53021;db22f5b[842]<=fnf33a3[0];db22f5b[824]<=ec21b81[0];db22f5b[815]<=mm_enable[0];db22f5b[755]<=xybdd51[0];db22f5b[730]<=hq8620a[0];db22f5b[718]<=dz6490d;db22f5b[694]<=gofa188[0];db22f5b[691]<=ukb9924;db22f5b[684]<=ep2e64[0];db22f5b[640]<=vx9b427[0];db22f5b[598]<=vv747d0[0];db22f5b[513]<=fad09f2;db22f5b[495]<=qtdcd7d[0];db22f5b[454]<=xjf9a4f[0];db22f5b[451]<=ip7022e[0];db22f5b[450]<=qgcb62b[0];db22f5b[421]<=tufe674[0];db22f5b[407]<=msi_enable;db22f5b[377]<=mes_data[0];db22f5b[347]<=wy1f431[0];db22f5b[342]<=kf805cc;db22f5b[320]<=pff3684[0];db22f5b[227]<=fpbf349[0];db22f5b[225]<=ng996c5[0];db22f5b[210]<=cz7fcce[0];db22f5b[203]<=msi[0];db22f5b[171]<=yx700b9[0];db22f5b[160]<=al5e6d0[0];db22f5b[113]<=co97e69[0];db22f5b[112]<=th74d79[0];db22f5b[101]<=msi_tc[0];db22f5b[80]<=wwcbcda[0];db22f5b[56]<=co92fcd[0];db22f5b[50]<=tx_ca_pd[0];db22f5b[28]<=alf25f9[0];db22f5b[25]<=tx_ca_ph[0];db22f5b[14]<=mg3e4bf[0];db22f5b[7]<=zz27c97[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule









































































`timescale 1 ns / 100 ps
module pcie_x1_txintf_x1 
   (
    
    sys_clk,           
    rst_n,             
    cfgec_vcasel,      

    arb_enable,        
    arb_enable2,       
    msi_enable,        
    `ifdef CFG_REG
       cfg_rmux_req,   
       cfg_rmux_ae,    
       cfg_rmux_data,  
    `endif
    `ifdef ECRC
      pcie_x1_ecrc_enb,        
    `endif
    tx_req,            
    tx_data,           
    tx_st,             
    tx_end,            
    tx_nlfy,           
    txtp_rdy,          
    dll_pause_cnt,     
    vcneg_pend,        

    
    txintf_pause_ack,  
    txintf_rdy_ack,    
    `ifdef CFG_REG
       cfg_rmux_rd,    
    `endif
    cfg_cplh_cc,       
    cfg_cpld_cc,       
    cfg_ph_cc,         
    cfg_pd_cc,         

    tx_rdy,            
    txintf_req,        
    txintf_data,       
    txintf_st,         
    txintf_end,        
    txintf_nlfy,       

    f_nf_emsg_sent,    
    rchk_credit_cpl,   
    rchk_credit_p,     
    cfg_rmux_end       

    );
parameter FADDR    = 3;
parameter D_WIDTH  = 16;
localparam ph16f1c = 2'd0;
localparam dob78e7  = 2'd1;
localparam wybc73a    = 2'd2;
localparam zxe39d0    = 2'd3;
input                       sys_clk;
input                       rst_n;
input  [2:0]                cfgec_vcasel;
input                       arb_enable;
input                       arb_enable2;
input                       msi_enable;

`ifdef CFG_REG
input                    cfg_rmux_req;
input                    cfg_rmux_ae;
input [15:0]             cfg_rmux_data;

`endif

`ifdef ECRC
input                    pcie_x1_ecrc_enb;

`endif
input [`NUM_VC-1:0]         tx_req;
input [(`NUM_VC*16)-1:0]    tx_data;
input [`NUM_VC-1:0]         tx_st;
input [`NUM_VC-1:0]         tx_end;
input [`NUM_VC-1:0]         tx_nlfy;
input                       txtp_rdy;
input [FADDR:0]             dll_pause_cnt;
input [`NUM_VC -1:0]        vcneg_pend ;
output                      txintf_pause_ack;
output                      txintf_rdy_ack;

`ifdef CFG_REG
output                   cfg_rmux_rd;

`endif
output                      cfg_cplh_cc;
output                      cfg_cpld_cc;
output                      cfg_ph_cc;
output                      cfg_pd_cc;
output[`NUM_VC-1:0]         tx_rdy;
output                      txintf_req;
output [15:0]               txintf_data;
output                      txintf_st;
output                      txintf_end;
output                      txintf_nlfy;
output                      cfg_rmux_end;
output                      f_nf_emsg_sent;
output                      rchk_credit_cpl;
output                      rchk_credit_p;
wire   [`NUM_VC-1:0]        tx_eop_early;
wire   [`NUM_VC-1:0]        vcarb_grant;
wire   [`NUM_VC-1:0]        txrdy_clear_rdy;
wire                        vcarb_grant_val;

`ifndef VC1
wire                        wj5edeb;

`endif
wire                        nrf6f5d;
wire                        zmb7aee;
wire                        ribd772;
reg    [`NUM_VC-1:0]        jcebb92;
reg    [`NUM_VC-1:0]        tu5dc93;
reg                         txintf_req;
reg    [15:0]               txintf_data;
reg                         txintf_st;
reg                         txintf_end;
reg                         txintf_nlfy;
reg                         tu76fa0;

`ifdef CFG_REG
reg                         hd910a6;
reg                         cfg_rmux_rd;
reg    [1:0]                dm429b8;
reg                         zm14dc2;
reg    [3:0]                aaa6e12;
wire                        xl37091;
wire                        fcb848f;
wire                        thc247a;
wire                        cb123d7;

`endif
reg   [FADDR+2:0]           sj8f5e6;
reg                         pause_enable;
reg   [1:0]                 pfd79ac;
reg                         txintf_pause_ack;
reg                         txintf_rdy_ack;
reg                         ng359cf;
reg                         coace7b;
reg                         cfg_cplh_cc;
reg                         cfg_cpld_cc;
reg                         cfg_ph_cc;
reg                         cfg_pd_cc;
reg                         cfg_rmux_end;
reg                         f_nf_emsg_sent;
reg                         rchk_credit_cpl;
reg                         rchk_credit_p;
reg                         zx5fec1;

`ifndef VC1

`ifdef ECRC

`endif

`else

`endif

`ifdef CFG_REG
reg [D_WIDTH -1:0] tufb079;
reg                fnd83cb,eac1e5f,ksf2f9,lq797c9;

`endif

`ifdef CFG_REG

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef CFG_REG

`else

`endif 

`ifdef CFG_REG
parameter  CR_WAIT  = 2'd0;
parameter  CR_ST    = 2'd1;
parameter  CR_END   = 2'd2;
parameter  CR_IPG   = 2'd3;

`ifdef ECRC

`else

`endif

`else

`endif

`ifdef CFG_REG

`endif

`ifdef X4

`define TXRDY_DEF txrdy

`endif

`ifdef X1

`define TXRDY_DEF pcie_x1_txrdy_x1

`endif

`ifdef CFG_REG

`endif

`ifdef ECRC

`else

`endif
reg [2 : 0] mg87279;
reg hb50da7;
reg ng86d3e;
reg ng11839;
reg [`NUM_VC - 1 : 0] kf90812;
reg [(`NUM_VC * 16) - 1 : 0] nt84094;
reg [`NUM_VC - 1 : 0] ie24bf4;
reg [`NUM_VC - 1 : 0] do25fa0;
reg [`NUM_VC - 1 : 0] pu2fd02;
reg mt1299d;
reg [FADDR : 0] nt9e1f3;
reg [`NUM_VC - 1 : 0] ie3e603;
reg [`NUM_VC - 1 : 0] ofc9e4c;
reg [`NUM_VC - 1 : 0] mga676e;
reg [`NUM_VC - 1 : 0] gd33eaf;
reg hd94ced;
reg ym57d3;
reg ks2be98;
reg dz5f4c1;
reg [`NUM_VC - 1 : 0] kqfa60e;
reg [`NUM_VC - 1 : 0] kdd3071;
reg ykf0e4f;
reg [FADDR + 2 : 0] twe309;
reg kf33b70;
reg [1 : 0] hq8c25f;
reg ld612fa;
reg hd97d7;
reg kd4bebe;
reg [2047:0] db22f5b;
wire [27:0] ux17adf;

`ifdef CFG_REG

`endif

`ifdef ECRC

`endif

`ifdef CFG_REG

`endif

`ifndef VC1

`endif

`ifdef CFG_REG

`endif

`ifndef VC1


`ifdef ECRC

`endif

`else

`endif

`ifdef CFG_REG

`endif

`ifdef CFG_REG

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef CFG_REG

`else

`endif 

`ifdef CFG_REG

`ifdef ECRC

`else

`endif

`else

`endif

`ifdef CFG_REG

`endif

`ifdef X4

`define TXRDY_DEF txrdy

`endif

`ifdef X1

`define TXRDY_DEF pcie_x1_txrdy_x1

`endif


`ifdef CFG_REG

`endif

`ifdef ECRC

`else

`endif

localparam ribd6fd = 28,jceb7ea = 32'hfdffd14b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef CFG_REG


`endif


`ifdef ECRC


`endif


`ifdef CFG_REG


`endif


`ifndef VC1


`endif


`ifdef CFG_REG


`endif


`ifndef VC1


`ifdef ECRC


`endif


`else


`endif


`ifdef CFG_REG


`endif


`ifdef CFG_REG


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef CFG_REG


`else


`endif 


`ifdef CFG_REG


`ifdef ECRC


`else


`endif


`else


`endif


`ifdef CFG_REG


`endif


`ifdef X4


`define TXRDY_DEF txrdy


`endif


`ifdef X1


`define TXRDY_DEF pcie_x1_txrdy_x1


`endif


`ifdef CFG_REG


`endif


`ifdef ECRC


`else


`endif









`ifdef CFG_REG



`endif



`ifdef ECRC



`endif



`ifdef CFG_REG



`endif






`ifndef VC1



`endif




`ifdef CFG_REG



`endif






`ifndef VC1

assign wj5edeb = ((|do25fa0) | (|pu2fd02));
pcie_x1_zz13b18 zkf4daf   (        .sys_clk         (sys_clk),    .rst_n           (rst_n),    .tu76fa0    (ykf0e4f),    .cfgec_vcasel    (mg87279),    .tx_req          (kf90812),    .tx_eop_early    (|ofc9e4c),


`ifdef ECRC
      .pcie_x1_ecrc_enb      (pcie_x1_ecrc_enb),


`endif
    .txrdy_clear_rdy (|gd33eaf),
        .vcarb_grant_val (vcarb_grant_val),    .vcarb_grant     (vcarb_grant)    );

`else

assign vcarb_grant_val = 1'b1;
assign vcarb_grant     = 'd1;

`endif





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      jcebb92 <= 0;      tu5dc93 <= 0;   end   else if (hd94ced) begin      jcebb92 <= mga676e;      tu5dc93 <= kqfa60e;   end
end










`ifdef CFG_REG
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         tufb079  <= 64'd0;         fnd83cb <= 1'b0;         ksf2f9    <= 1'b0;         lq797c9   <= 1'b0;      end      else begin         tufb079  <= cfg_rmux_data;         fnd83cb <= hd910a6;         ksf2f9    <= zm14dc2;         lq797c9   <= cfg_rmux_end;      end   end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      txintf_data <= 0;      txintf_st   <= 0;      txintf_end  <= 0;      txintf_nlfy <= 0;   end


`ifdef CFG_REG
   else if (fnd83cb) begin      txintf_data <= tufb079;      txintf_st   <= ksf2f9;      txintf_end  <= lq797c9;      txintf_nlfy <= 1'b0;   end


`endif
   else begin      case(1'b1)


`ifdef EN_VC0
            kdd3071[0]: begin               txintf_data <= nt84094[15:0];               txintf_st   <= ie24bf4[0];               txintf_end  <= (pu2fd02[0] & do25fa0[0]) ? 1'b0 : do25fa0[0];               txintf_nlfy <= pu2fd02[0];            end


`endif



`ifdef EN_VC1
            kdd3071[1]: begin               txintf_data <= nt84094[2*16-1:16];               txintf_st   <= ie24bf4[1];               txintf_end  <= (pu2fd02[1] & do25fa0[1]) ? 1'b0 : do25fa0[1];               txintf_nlfy <= pu2fd02[1];            end


`endif



`ifdef EN_VC2
            kdd3071[2]: begin               txintf_data <= nt84094[3*16-1:2*16];               txintf_st   <= ie24bf4[2];               txintf_end  <= (pu2fd02[2] & do25fa0[2]) ? 1'b0 : do25fa0[2];               txintf_nlfy <= pu2fd02[2];            end


`endif



`ifdef EN_VC3
            kdd3071[3]: begin               txintf_data <= nt84094[4*16-1:3*16];               txintf_st   <= ie24bf4[3];               txintf_end  <= (pu2fd02[3] & do25fa0[3]) ? 1'b0 : do25fa0[3];               txintf_nlfy <= pu2fd02[3];            end


`endif



`ifdef EN_VC4
            kdd3071[4]: begin               txintf_data <= nt84094[5*16-1:4*16];               txintf_st   <= ie24bf4[4];               txintf_end  <= (pu2fd02[4] & do25fa0[4]) ? 1'b0 : do25fa0[4];               txintf_nlfy <= pu2fd02[4];            end


`endif



`ifdef EN_VC5
            kdd3071[5]: begin               txintf_data <= nt84094[6*16-1:5*16];               txintf_st   <= ie24bf4[5];               txintf_end  <= (pu2fd02[5] & do25fa0[5]) ? 1'b0 : do25fa0[5];               txintf_nlfy <= pu2fd02[5];            end


`endif



`ifdef EN_VC6
            kdd3071[6]: begin               txintf_data <= nt84094[7*16-1:6*16];               txintf_st   <= ie24bf4[6];               txintf_end  <= (pu2fd02[6] & do25fa0[6]) ? 1'b0 : do25fa0[6];               txintf_nlfy <= pu2fd02[6];            end


`endif



`ifdef EN_VC7
            kdd3071[7]: begin               txintf_data <= nt84094[8*16-1:7*16];               txintf_st   <= ie24bf4[7];               txintf_end  <= (pu2fd02[7] & do25fa0[7]) ? 1'b0 : do25fa0[7];               txintf_nlfy <= pu2fd02[7];            end


`endif
         default :  begin            txintf_st   <= 1'b0;            txintf_end  <= 1'b0;            txintf_nlfy <= 1'b0;         end      endcase   end
end





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      txintf_req <= 0;   end   else if (ykf0e4f == 1'b0) begin


`ifdef CFG_REG
      txintf_req <= (|kf90812 | cfg_rmux_req);


`else
      txintf_req <= |kf90812;


`endif 
   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      tu76fa0 <= 0;   end   else if (|ie24bf4) begin      tu76fa0 <= 1'b1;   end   else if (|ofc9e4c) begin      tu76fa0 <= 1'b0;   end
end












`ifdef CFG_REG


assign ribd772 = (tufb079[1:0] != 2'b00) ? 1'b1 : 1'b0;    
assign nrf6f5d   = (cfg_rmux_data[14:13] != 2'b01) ? 1'b1 : 1'b0;  
assign zmb7aee   = (cfg_rmux_data[14:13] == 2'b11) ? 1'b1 : 1'b0;  
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      dm429b8        <= CR_WAIT;      hd910a6  <= 1'b0;      cfg_rmux_rd     <= 1'b0;      zm14dc2     <= 1'b0;      cfg_rmux_end    <= 1'b0;      f_nf_emsg_sent  <= 1'b0;      rchk_credit_cpl <= 1'b0;      rchk_credit_p   <= 1'b0;      zx5fec1       <= 1'b0;   end   else begin      hd910a6  <= 1'b0;      cfg_rmux_rd     <= 1'b0;      zm14dc2     <= 1'b0;      cfg_rmux_end    <= 1'b0;      f_nf_emsg_sent  <= 1'b0;      rchk_credit_cpl <= 1'b0;      rchk_credit_p   <= 1'b0;      zx5fec1       <= 1'b0;      case(dm429b8)         CR_WAIT: begin            if (cfg_rmux_req && mt1299d && !cfg_rmux_ae && |tx_rdy == 1'b0 && kf33b70 == 1'b0) begin               cfg_rmux_rd  <= 1'b1;               dm429b8     <= CR_ST;               zx5fec1    <= 1'b1;              end            else begin               dm429b8     <= CR_WAIT;            end         end         CR_ST: begin            hd910a6  <= 1'b1;            cfg_rmux_rd     <= 1'b1;            zm14dc2     <= 1'b1;            dm429b8        <= CR_END;         end         CR_END: begin            if (fcb848f == 1'b1) begin               cfg_rmux_end    <= 1'b1;               hd910a6  <= 1'b1;               dm429b8        <= CR_IPG;               rchk_credit_cpl <= !hb50da7;                  rchk_credit_p   <= hb50da7;                end            else begin               hd910a6  <= 1'b1;               cfg_rmux_rd     <= 1'b1;               dm429b8        <= CR_END;            end                                                if((aaa6e12 == 4'd4) && hb50da7 && ng86d3e) begin                f_nf_emsg_sent  <= dz5f4c1;              end         end         CR_IPG: begin            if (thc247a == 1'b1) begin               dm429b8        <= CR_WAIT;            end            else begin               dm429b8        <= CR_IPG;            end         end         default: begin            dm429b8     <= CR_WAIT;         end      endcase   end
end
assign cb123d7 = (dm429b8  != CR_WAIT) ? 1'b1 : 1'b0;













assign xl37091 = cfg_rmux_data[14];
assign fcb848f = (aaa6e12 == 4'd1 && dm429b8 == CR_END) ? 1'b1 : 1'b0;
assign thc247a  = (aaa6e12 == 4'd1 && dm429b8 == CR_IPG) ? 1'b1 : 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      aaa6e12 <= 0;   end   else if (zm14dc2) begin            case({hb50da7, ng86d3e})         2'b00,         2'b01 : begin                         aaa6e12 <= (xl37091 == 1'b0) ? 4'd4 : 4'd6;         end         2'b10 : begin                                     if(ng11839)                if(ks2be98)                  aaa6e12 <= 4'd8;               else                  aaa6e12 <= 4'd6;            else                 aaa6e12 <= 4'd6;         end         2'b11 : begin                         aaa6e12 <= 4'd6;         end      endcase   end      else if (cfg_rmux_end) begin


`ifdef ECRC
      aaa6e12 <= (pcie_x1_ecrc_enb) ? 4'd4 : 4'd2;


`else
      aaa6e12 <= 4'd2;


`endif
   end   else if (aaa6e12 != 0) begin      aaa6e12 <= aaa6e12 - 1;   end
end

`else
   assign nrf6f5d     = 1'b0;   assign zmb7aee     = 1'b0;   assign ribd772   = 1'b0;   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         cfg_rmux_end    <= 1'b0;         f_nf_emsg_sent  <= 1'b0;         rchk_credit_cpl <= 1'b0;         rchk_credit_p   <= 1'b0;         zx5fec1       <= 1'b0;      end   end

`endif





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      cfg_ph_cc       <= 1'b0;      cfg_pd_cc       <= 1'b0;      cfg_cplh_cc     <= 1'b0;      cfg_cpld_cc     <= 1'b0;   end


`ifdef CFG_REG
   else begin      cfg_ph_cc       <= 1'b0;      cfg_pd_cc       <= 1'b0;      cfg_cplh_cc     <= 1'b0;      cfg_cpld_cc     <= 1'b0;      if(kd4bebe) begin         if(hb50da7) begin             cfg_ph_cc     <= 1'b1;            if(!ng86d3e && ng11839)                cfg_pd_cc     <= 1'b1;         end      end      else if (!hb50da7 && zm14dc2) begin             cfg_cplh_cc     <= 1'b1;            cfg_cpld_cc     <= cfg_rmux_data[14];      end   end


`endif

end




`ifdef X4



`define TXRDY_DEF txrdy



`endif



`ifdef X1



`define TXRDY_DEF pcie_x1_txrdy_x1



`endif

`TXRDY_DEF qvb4ace [`NUM_VC-1:0]   (        .sys_clk            (sys_clk),    .rst_n              (rst_n),    .tx_req             (tx_req),    .tx_data            (tx_data),    .tx_st              (tx_st),    .tx_nlfy            (tx_nlfy),    .txtp_rdy           (txtp_rdy),


`ifdef CFG_REG
       .cfg_rmux_req    (cfg_rmux_req | cb123d7),


`endif
    .vcarb_grant_val    (vcarb_grant_val),    .vcarb_grant        (vcarb_grant),    .pause_enable       (pause_enable),    .vcneg_pend         (vcneg_pend),        .txrdy_clear_rdy    (txrdy_clear_rdy),    .tx_eop_early       (tx_eop_early),    .tx_rdy             (tx_rdy)    );
























always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      pfd79ac         <= ph16f1c;      sj8f5e6        <= 0;      pause_enable     <= 0;      txintf_pause_ack <= 0;   end   else begin      txintf_pause_ack <= 1'b0;      case(hq8c25f)         ph16f1c: begin            if (|tx_rdy && |gd33eaf) begin               pfd79ac         <= dob78e7;


`ifdef ECRC
               sj8f5e6        <= (pcie_x1_ecrc_enb) ? {nt9e1f3,2'b00} + 3'd4 :  {nt9e1f3,2'b00} + 2'd2;


`else
               sj8f5e6        <= {nt9e1f3,2'b00} + 2'd2;


`endif
               pause_enable     <= 1'b1;               txintf_pause_ack <= 1'b1;            end            else if (|tx_rdy == 1'b0 && |kf90812 == 1'b0 && nt9e1f3 != 0) begin               pfd79ac         <= dob78e7;               sj8f5e6        <= {nt9e1f3,2'b00};               pause_enable     <= 1'b1;               txintf_pause_ack <= 1'b1;            end            else begin               pfd79ac         <= ph16f1c;               pause_enable     <= 1'b0;            end         end         dob78e7: begin            if (twe309 == 0) begin               pfd79ac         <= wybc73a;               pause_enable     <= 1'b0;            end            else begin               pfd79ac         <= dob78e7;               sj8f5e6        <= twe309 - 1'd1;               pause_enable     <= 1'b1;            end         end                  wybc73a: begin            pfd79ac         <= zxe39d0;         end         zxe39d0: begin            pfd79ac         <= ph16f1c;         end         default: begin            pfd79ac         <= ph16f1c;         end      endcase   end
end




always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n)  begin      ng359cf <= 0;      coace7b <= 0;      txintf_rdy_ack  <= 0;   end   else begin      ng359cf <= (mt1299d == 1'b0 && |tx_rdy == 1'b0) ? 1'b1 : 1'b0;      coace7b <= ld612fa;      txintf_rdy_ack  <= ld612fa & ~hd97d7 & (|tx_rdy == 1'b0);   end
end

always@* begin mg87279<={cfgec_vcasel>>1,ux17adf[0]};hb50da7<=ux17adf[1];ng86d3e<=ux17adf[2];ng11839<=ux17adf[3];kf90812<={tx_req>>1,ux17adf[4]};nt84094<={tx_data>>1,ux17adf[5]};ie24bf4<={tx_st>>1,ux17adf[6]};do25fa0<={tx_end>>1,ux17adf[7]};pu2fd02<={tx_nlfy>>1,ux17adf[8]};mt1299d<=ux17adf[9];nt9e1f3<={dll_pause_cnt>>1,ux17adf[10]};ie3e603<={vcneg_pend>>1,ux17adf[11]};ofc9e4c<={tx_eop_early>>1,ux17adf[12]};mga676e<={vcarb_grant>>1,ux17adf[13]};gd33eaf<={txrdy_clear_rdy>>1,ux17adf[14]};hd94ced<=ux17adf[15];ym57d3<=ux17adf[16];ks2be98<=ux17adf[17];dz5f4c1<=ux17adf[18];kqfa60e<={jcebb92>>1,ux17adf[19]};kdd3071<={tu5dc93>>1,ux17adf[20]};ykf0e4f<=ux17adf[21];twe309<={sj8f5e6>>1,ux17adf[22]};kf33b70<=ux17adf[23];hq8c25f<={pfd79ac>>1,ux17adf[24]};ld612fa<=ux17adf[25];hd97d7<=ux17adf[26];kd4bebe<=ux17adf[27];end
always@* begin db22f5b[2047]<=arb_enable;db22f5b[2046]<=arb_enable2;db22f5b[2044]<=msi_enable;db22f5b[2040]<=tx_req[0];db22f5b[2033]<=tx_data[0];db22f5b[2019]<=tx_st[0];db22f5b[1990]<=tx_end[0];db22f5b[1981]<=zx5fec1;db22f5b[1939]<=ribd772;db22f5b[1933]<=tx_nlfy[0];db22f5b[1831]<=jcebb92[0];db22f5b[1819]<=txtp_rdy;db22f5b[1778]<=vcarb_grant_val;db22f5b[1615]<=tu5dc93[0];db22f5b[1591]<=dll_pause_cnt[0];db22f5b[1508]<=nrf6f5d;db22f5b[1271]<=pfd79ac[0];db22f5b[1182]<=tu76fa0;db22f5b[1135]<=vcneg_pend[0];db22f5b[1023]<=cfgec_vcasel[0];db22f5b[990]<=coace7b;db22f5b[969]<=zmb7aee;db22f5b[889]<=txrdy_clear_rdy[0];db22f5b[635]<=pause_enable;db22f5b[495]<=ng359cf;db22f5b[444]<=vcarb_grant[0];db22f5b[317]<=sj8f5e6[0];db22f5b[222]<=tx_eop_early[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule




































































`timescale 1 ns / 100 ps
module pcie_x1_ir85092 #(
   parameter FADDR    = 3,   parameter D_WIDTH  = 64 )
   (
   input wire                  sys_clk,      
   input wire                  rst_n,        

   input wire                  tlp_debug,      
   input wire   [11:0]         zxe9031,   
   input wire   [13:0]         lqfe23b, 
                                                
   
   input wire                  mtab7fe,    
   input wire  [D_WIDTH-1:0]   tlpgen_data,   
   input wire                  tlpgen_st,     
   input wire                  tlpgen_end,    
   input wire                  tlpgen_nlfy,   
   input wire                  tlpgen_rdy_ack,
   `ifdef X4
      input wire               rgf11db ,
      input wire               ls93225,   
   `endif

   
   input wire                  kqdb459,    
   input wire  [2:0]           psda2c8,      
   input wire  [1:0]           cmd1642,      
   input wire                  fp8b211,    
   input wire  [2:0]           ww5908f,      
   input wire  [1:0]           nrc8479,      
   input wire  [(`NUM_VC-1):0]    fa423ce,
   input wire  [(`NUM_VC-1):0]    tw11e73,
   input wire  [(`NUM_VC-1):0]    gd8f39a,
   input wire  [(24*`NUM_VC)-1:0] qv33bed,       
   input wire  [(24*`NUM_VC)-1:0] wy9df6c,      
   input wire  [(24*`NUM_VC)-1:0] goefb60,     

   input wire                  xjc771a,         
   input wire   [2:0]          tx_pmtype,     
   input wire                  gq3b8d7,     
   input wire  [23:0]          tx_vsd_data,   

   
   input wire  [D_WIDTH-1:0]   dfrm_tdata,    
   input wire                  dfrm_tval,     
   input wire                  dfrm_st,       
   input wire                  dfrm_end,      
   input wire                  dfrm_edb,      
   `ifdef X4
      input wire               ir26ef7,     
      input wire  [15:0]       jr377bd,      
      input wire  [31:0]       yzbbdef,     
      input wire  [47:0]       dfrm_ddata,    
      input wire               oh23716,     
   `endif
   `ifdef X1
      input wire  [15:0]       mg21b1b,
      input wire               dfrm_dllp_st,  
      input wire               dfrm_dllp_end, 
   `endif

   
   input wire [3:0]            phy_ltssm_state, 
   input wire                  phy_link_up,   
   input wire                  phy_l0,        
   input wire [`NUM_VC-1:0]    nr40c7a,        
   input wire [(`NUM_VC*3)-1:0] hd63d7,     
   input wire                  rg4818f,       
   input wire [2:0]            max_pl_size,   

   
   input wire                  uk3b68b,

   
   input wire  [`NUM_VC-1:0]   trnc_st,       

   
   input wire                  phy_skpq_val,  
   `ifdef X4
      input wire [1:0]         phy_skpq_nclks,
      input wire               vka2cbc,    
      input wire               ldd2142,    
      input wire [2:0]         phy_cfgln_sum, 
   `endif

   
   
   output wire                txtp_rdy,       

   
   output wire [D_WIDTH-1:0]  tdmux_data,     
   output wire                tdmux_val,      
   output wire                tdmux_st,       
   output wire                tdmux_end,      
   output wire                tdmux_edb,      
   output wire                tdmux_skip,     
   `ifdef X4
      output wire             suf0301,     
      output wire             xlc047,     
   `endif
   `ifdef X1
      output wire             tdmux_dllp_st,  
      output wire             tdmux_dllp_end, 
   `endif

   
   output reg [D_WIDTH-1:0]   rxtp_data,      
   output reg                 rxtp_st,        
   output reg                 rxtp_end,       
   `ifdef X4
      output reg              ipf2c20,      
   `endif

   output wire [22:0]         rib25dd,    
   output wire [1:0]          ie92eeb,  
   output wire                ym97759,  
   output wire                uxbbac8,  
   output wire                jpdd644,   
   output wire [23:0]         rxdp_vsd_data , 
   output wire [2:0]          rxdp_pmd_type,  
   output wire [1:0]          rxdp_dllp_val,  

   
   output wire [`NUM_VC-1:0]  ba8983e,    
   output wire [`NUM_VC-1:0]  qg4c1f3,   
   output wire [`NUM_VC-1:0]  en60f98,  
   output wire                wjc364e,
   output wire                zm1b275,

   
   output wire [`NUM_VC-1:0]  vcneg_pend,      
   output wire                rxtp_bad_tlp,    
   output wire                do3aee2,   
   output wire                uvfd0f9,      
   output wire                ipedf31,  
   output wire                zkda02d,  

   
   output wire                dl_inactive,     
   output wire                dl_init,         
   output wire                dl_active,       
   output wire [`NUM_VC-1:0]  dl_up,           

   
   output wire                tx_rbuf_empty ,  
   output reg                 tx_dllp_pend ,   
   output reg                 rx_tlp_rcvd ,    

   
   output wire [FADDR:0]      dll_pause_cnt,   

   
   output wire                ldf3121       );
wire [D_WIDTH-1:0]    txtp_tdata;
wire [11:0]           wyb38fd;
wire [11:0]           rxtp_seq;
wire [11:0]           ho7cd9c;
wire [2:0]            vi6cfff;
wire [19:0]           ls8cfae;
wire [2:0]            sh6fd8b;
wire [1:0]            vvf62ee;

`ifdef X4
reg osf5cc8;

`endif
reg [11:0]  mtae641;
reg [11:0]  ne7320c;
reg         do99063;

`ifdef X1
reg         rtc831b;
reg         mr418de;
reg [3:0]   zzc6f5;

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif
wire [D_WIDTH-1:0] tw1bd72 ;
wire           medeb93 ;
wire           icf5c99 ;

`ifdef X4
wire        qvae4c9 ;

`endif

`ifdef X1

`define RXTP_MOD pcie_x1_rxtp_x1

`endif

`ifdef X4

`define RXTP_MOD rxtp

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif
reg pu83569;
reg [11 : 0] qia9926;
reg [13 : 0] kf3c096;
reg fc865d2;
reg [D_WIDTH - 1 : 0] mgb3011;
reg uk98089;
reg vic0449;
reg oh224a;
reg vx32e93;
reg wl12d0d;
reg [2 : 0] hq9686d;
reg [1 : 0] sjb436b;
reg oha1b5c;
reg [2 : 0] andae4;
reg [1 : 0] ic6d725;
reg [(`NUM_VC - 1) : 0] nr6b929;
reg [(`NUM_VC - 1) : 0] yk5c94f;
reg [(`NUM_VC - 1) : 0] xwe4a78;
reg [(24 * `NUM_VC) - 1 : 0] oh8799;
reg [(24 * `NUM_VC) - 1 : 0] me43ccc;
reg [(24 * `NUM_VC) - 1 : 0] tw1e660;
reg sj29e13;
reg [2 : 0] ng99817;
reg ld4f09c;
reg [23 : 0] thc2738;
reg [D_WIDTH - 1 : 0] vkad2ca;
reg lq69653;
reg kd4b29b;
reg kq594dd;
reg tuca6e9;
reg [3 : 0] xy30384;
reg db81c22;
reg vid5a59;
reg [`NUM_VC - 1 : 0] zx64981;
reg [(`NUM_VC * 3) - 1 : 0] ie24c0e;
reg su4c930;
reg [2 : 0] vkb87c6;
reg cb25a1;
reg [`NUM_VC - 1 : 0] doe117;
reg eae04b4;
reg [11 : 0] ba8c2bf;
reg [11 : 0] db38fd4;
reg [11 : 0] qge59ed;
reg [2 : 0] irbbbbc;
reg [19 : 0] vk14b0;
reg [2 : 0] uifa9f3;
reg [1 : 0] fca7cc0;
reg [11 : 0] vk9608b;
reg [11 : 0] xlb045a;
reg aa822d6;
reg [D_WIDTH - 1 : 0] db8b58b;
reg jp5ac5f;
reg mrd62ff;
reg [2047:0] db22f5b;
wire [52:0] ux17adf;

`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`define RXTP_MOD pcie_x1_rxtp_x1

`endif

`ifdef X4

`define RXTP_MOD rxtp

`endif


`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

localparam ribd6fd = 53,jceb7ea = 32'hfdffd48b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`define RXTP_MOD pcie_x1_rxtp_x1


`endif


`ifdef X4


`define RXTP_MOD rxtp


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif






`ifdef X4
            always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n)         osf5cc8 <= 1'b0;      else         osf5cc8 <= rgf11db;   end

`endif







pcie_x1_kqde748 ntafa29 (      .sys_clk          ( sys_clk ),   .rst_n            ( rst_n ),   .zxe9031     ( qia9926 ),      .rg4818f          ( su4c930 ),   .nr40c7a           ( zx64981 ),   .hd63d7         ( ie24c0e ),      .phy_ltssm_state  ( xy30384 ),   .phy_link_up      ( db81c22 ),      .trnc_st          ( doe117 ),      .ym97759    ( ym97759 ),   .uxbbac8    ( uxbbac8 ),   .jpdd644     ( jpdd644 ),   .ie92eeb    ( ie92eeb ),   .vi6cfff        ( irbbbbc ),
      .go67ffa         ( go67ffa ),   .ri3ffd1        ( ri3ffd1 ),   .icffe8a    ( icffe8a ),   .osff450    ( osff450 ),      .rxtp_nak         ( rxtp_nak ),   .osd1409     ( osd1409 ),      .dl_inactive      ( dl_inactive ),   .dl_init          ( dl_init ),   .dl_active        ( dl_active ),   .dl_up            ( dl_up ),      .me49bf6       ( me49bf6 ),   .by4dfb1      ( by4dfb1 ),   .sh6fd8b      ( sh6fd8b ),   .pf7ec5d      ( pf7ec5d ),   .vvf62ee      ( vvf62ee ),      .vcneg_pend       ( vcneg_pend )   );







`ifdef X1
   always @(posedge sys_clk or negedge rst_n) begin      if (!rst_n) begin         rtc831b <= 1'b0;         mr418de <= 1'b0;      end      else begin         rtc831b <= tdmux_dllp_st;         mr418de <= rtc831b;      end   end

`endif


always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      mtae641 <= 12'd0;      ne7320c  <= 12'd0;      do99063   <= 1'b0;   end   else begin


`ifdef X1
         if (rtc831b && tdmux_val)            zzc6f5[3:0] <= tdmux_data[3:0];         if (mr418de && tdmux_val)            mtae641 <= {zzc6f5[3:0], tdmux_data[15:8]};


`endif



`ifdef X4
         if (xlc047 && tdmux_val)            mtae641 <= tdmux_data[35:24];


`endif

      ne7320c   <= db38fd4;      do99063    <= ~(xlb045a == vk9608b);      tx_dllp_pend <= aa822d6;   end
end

pcie_x1_god1bf3 #(   .FADDR           ( FADDR ),   .D_WIDTH         ( D_WIDTH ))   aa15d6d (      .sys_clk         ( sys_clk ),   .rst_n           ( rst_n ),      .mtab7fe      ( fc865d2 ),   .tlpgen_data     ( mgb3011 ),   .tlpgen_st       ( uk98089 ),   .tlpgen_end      ( vic0449 ),   .tlpgen_nlfy     ( oh224a ),   .tlpgen_rdy_ack  ( vx32e93 ),


`ifdef X4
      .rgf11db  ( rgf11db ),      .ls93225  ( ls93225 ),


`endif

   .wyb38fd     ( ba8c2bf ),   .tw9c7e8        ( tw9c7e8 ),   .pfe3f43       ( pfe3f43 ),   .ks1fa1f      ( ks1fa1f ),   .wl3671f        ( dl_inactive ),   .dll_pause_cnt   ( dll_pause_cnt ),   .phy_l0          ( vid5a59 ),   .max_pl_size     ( vkb87c6 ),      .txtp_rdy        ( txtp_rdy ),   .ay7dbe6  ( ),   .txtp_tdata      ( txtp_tdata ),   .ene7d55   ( txtp_erly_tval ),   .txtp_st         ( txtp_st ),   .txtp_end        ( txtp_end ),   .txtp_edb        ( txtp_edb ),


`ifdef X4
      .ks10686    ( ks10686 ),      .pu83431    ( pu83431 ),


`endif

   .tx_rbuf_empty   ( tx_rbuf_empty ),   .nre6ce3  ( nre6ce3 ),   .ho7cd9c     ( ho7cd9c ),   .zkda02d  ( zkda02d ),   .ipedf31  ( ipedf31 )   );

pcie_x1_ph2de42 #(   .FADDR                ( FADDR ),   .D_WIDTH              ( D_WIDTH ))   vi7c058 (      .sys_clk                  (sys_clk),   .rst_n                    (rst_n),      .lqfe23b          (kf3c096),   .phy_link_up              (db81c22),   .phy_skpq_val             (eae04b4),


`ifdef X4
      .rgf11db              (osf5cc8) ,      .vka2cbc               (vka2cbc),      .phy_cfgln_sum            (phy_cfgln_sum),      .phy_skpq_nclks           (phy_skpq_nclks),


`endif

      .uk3b68b           (cb25a1),      .kqdb459               (wl12d0d),   .psda2c8                 (hq9686d),   .cmd1642                 (sjb436b),   .fp8b211               (oha1b5c),   .ww5908f                 (andae4),   .nrc8479                 (ic6d725),
   .fa423ce            (nr6b929),   .tw11e73           (yk5c94f),   .gd8f39a          (xwe4a78),   .hd63d7                 (ie24c0e),

`ifdef EN_VC0
   .uice6ab                   (oh8799[23:0]),   .ne73559                  (me43ccc[23:0]),   .ep9aacb                 (tw1e660[23:0]),

`endif



`ifdef EN_VC1
   .xwd565d                   (oh8799[47:24]),   .qvab2eb                  (me43ccc[47:24]),   .su5975c                 (tw1e660[47:24]),

`endif



`ifdef EN_VC2
   .eacbae1                   (oh8799[71:48]),   .lq5d708                  (me43ccc[71:48]),   .byeb843                 (tw1e660[71:48]),

`endif



`ifdef EN_VC3
   .go5c21b                   (oh8799[95:72]),   .nee10d9                  (me43ccc[95:72]),   .wl86cb                 (tw1e660[95:72]),

`endif



`ifdef EN_VC4
   .yk4365c                   (oh8799[119:96]),   .pu1b2e1                  (me43ccc[119:96]),   .end970a                 (tw1e660[119:96]),

`endif



`ifdef EN_VC5
   .wwcb855                   (oh8799[143:120]),   .yk5c2a8                  (me43ccc[143:120]),   .bye1541                 (tw1e660[143:120]),

`endif



`ifdef EN_VC6
   .coaa0b                   (oh8799[167:144]),   .xj55058                  (me43ccc[167:144]),   .pua82c7                 (tw1e660[167:144]),

`endif



`ifdef EN_VC7
   .qt4163b                   (oh8799[191:168]),   .zmb1dc                  (me43ccc[191:168]),   .by58ee3                 (tw1e660[191:168]),

`endif

      .xjc771a                    (sj29e13),   .aldc6b8              (ng99817),   .gq3b8d7                (ld4f09c),   .tx_vsd_data              (thc2738),      .rxtp_nak                 (rxtp_nak),   .osd1409             (osd1409),   .rxtp_ack                 (rxtp_ack),   .rxtp_seq                 (db38fd4),      .me49bf6               (me49bf6),   .by4dfb1              (by4dfb1),   .sh6fd8b              (uifa9f3),   .pf7ec5d              (pf7ec5d),   .vvf62ee              (fca7cc0),   .vcneg_pend               (vcneg_pend),      .txtp_tdata               (txtp_tdata),


`ifdef X1
      .txtp_erly_tval        (txtp_erly_tval),


`endif
   .txtp_st                  (txtp_st),   .txtp_end                 (txtp_end),   .txtp_edb                 (txtp_edb),


`ifdef X4
      .ks10686             (ks10686),      .pu83431             (pu83431),


`endif

         .dll_pause_cnt            (dll_pause_cnt),      .tdmux_data               (tdmux_data),   .tdmux_val                (tdmux_val),   .tdmux_st                 (tdmux_st),   .tdmux_end                (tdmux_end),   .tdmux_edb                (tdmux_edb),   .tdmux_skip               (tdmux_skip),


`ifdef X1
      .tdmux_dllp_st         (tdmux_dllp_st),      .tdmux_dllp_end        (tdmux_dllp_end),


`endif



`ifdef X4
      .suf0301            (suf0301),      .xlc047            (xlc047),


`endif

      .ba8983e              (ba8983e),   .qg4c1f3             (qg4c1f3),   .en60f98            (en60f98),   .wjc364e               (wjc364e),   .zm1b275               (zm1b275),      .go67ffa                 (go67ffa),   .ri3ffd1                (ri3ffd1),   .icffe8a            (icffe8a),   .osff450            (osff450),      .ldf3121             (ldf3121)   );

pcie_x1_sj95b5c aa34673 (      .sys_clk        ( sys_clk ),   .rst_n          ( rst_n ),   


`ifdef X1
      .mg21b1b ( mg21b1b ),      .dfrm_dllp_st   ( dfrm_dllp_st ),


`endif



`ifdef X4
      .mg21b1b  ( dfrm_ddata ),      .oh23716       ( oh23716 ),


`endif

   .ho7cd9c    ( qge59ed ),   .nre6ce3 ( nre6ce3 ),   .wl3671f       ( dl_inactive ),      .rib25dd    ( rib25dd ),   .ie92eeb  ( ie92eeb ),   .ym97759  ( ym97759 ),   .uxbbac8  ( uxbbac8 ),   .jpdd644   ( jpdd644 ),   .rxdp_vsd_data  ( rxdp_vsd_data ),   .rxdp_pmd_type  ( rxdp_pmd_type ),   .rxdp_dllp_val  ( rxdp_dllp_val ),   .wyb38fd    ( wyb38fd ),   .tw9c7e8       ( tw9c7e8 ),   .pfe3f43      ( pfe3f43 ),   .ks1fa1f     ( ks1fa1f ),   .do3aee2  ( do3aee2 ),   .uvfd0f9     ( uvfd0f9 )   );
assign {vi6cfff, ls8cfae} = rib25dd;



`ifdef X4



`endif




`ifdef X1



`define RXTP_MOD pcie_x1_rxtp_x1



`endif



`ifdef X4



`define RXTP_MOD rxtp



`endif

`RXTP_MOD rv3ff9 (      .sys_clk        ( sys_clk ),   .rst_n          ( rst_n ),      .tlp_debug      ( tlp_debug ),   .phy_l0         ( phy_l0 ),   .dl_up          ( dl_up[0] ),   .dfrm_tdata     ( dfrm_tdata ),   .dfrm_tval      ( dfrm_tval ),   .dfrm_st        ( dfrm_st ),   .dfrm_end       ( dfrm_end ),   .dfrm_edb       ( dfrm_edb ),


`ifdef X4
      .dfrm_dwen   ( ir26ef7 ),      .dfrm_seq    ( jr377bd ),      .dfrm_lcrc   ( yzbbdef ),
      .phy_x4_val  ( vka2cbc ),      .phy_x2_val  ( ldd2142 ),      .rxtp_dwen   ( qvae4c9 ),


`endif

      .rxtp_data      ( tw1bd72 ),   .rxtp_st        ( medeb93 ),   .rxtp_end       ( icf5c99 ),   .rxtp_seq       ( rxtp_seq ),   .rxtp_bad_tlp   ( rxtp_bad_tlp ),   .rxtp_ack       ( rxtp_ack ),   .rxtp_nak       ( rxtp_nak ),   .rxtp_duptlp    ( osd1409 )   );
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      rx_tlp_rcvd  <= 1'b0 ;      rxtp_data <= {D_WIDTH{1'd0}} ;      rxtp_st   <= 1'b0 ;      rxtp_end  <= 1'b0 ;


`ifdef X4
         ipf2c20 <= 1'b0 ;


`endif
   end   else begin      rx_tlp_rcvd  <= kd4b29b ;      rxtp_data <= db8b58b ;      rxtp_st   <= jp5ac5f ;      rxtp_end  <= mrd62ff ;


`ifdef X4
         ipf2c20 <= qvae4c9 ;


`endif
   end
end
always@* begin pu83569<=ux17adf[0];qia9926<={zxe9031>>1,ux17adf[1]};kf3c096<={lqfe23b>>1,ux17adf[2]};fc865d2<=ux17adf[3];mgb3011<={tlpgen_data>>1,ux17adf[4]};uk98089<=ux17adf[5];vic0449<=ux17adf[6];oh224a<=ux17adf[7];vx32e93<=ux17adf[8];wl12d0d<=ux17adf[9];hq9686d<={psda2c8>>1,ux17adf[10]};sjb436b<={cmd1642>>1,ux17adf[11]};oha1b5c<=ux17adf[12];andae4<={ww5908f>>1,ux17adf[13]};ic6d725<={nrc8479>>1,ux17adf[14]};nr6b929<={fa423ce>>1,ux17adf[15]};yk5c94f<={tw11e73>>1,ux17adf[16]};xwe4a78<={gd8f39a>>1,ux17adf[17]};oh8799<={qv33bed>>1,ux17adf[18]};me43ccc<={wy9df6c>>1,ux17adf[19]};tw1e660<={goefb60>>1,ux17adf[20]};sj29e13<=ux17adf[21];ng99817<={tx_pmtype>>1,ux17adf[22]};ld4f09c<=ux17adf[23];thc2738<={tx_vsd_data>>1,ux17adf[24]};vkad2ca<={dfrm_tdata>>1,ux17adf[25]};lq69653<=ux17adf[26];kd4b29b<=ux17adf[27];kq594dd<=ux17adf[28];tuca6e9<=ux17adf[29];xy30384<={phy_ltssm_state>>1,ux17adf[30]};db81c22<=ux17adf[31];vid5a59<=ux17adf[32];zx64981<={nr40c7a>>1,ux17adf[33]};ie24c0e<={hd63d7>>1,ux17adf[34]};su4c930<=ux17adf[35];vkb87c6<={max_pl_size>>1,ux17adf[36]};cb25a1<=ux17adf[37];doe117<={trnc_st>>1,ux17adf[38]};eae04b4<=ux17adf[39];ba8c2bf<={wyb38fd>>1,ux17adf[40]};db38fd4<={rxtp_seq>>1,ux17adf[41]};qge59ed<={ho7cd9c>>1,ux17adf[42]};irbbbbc<={vi6cfff>>1,ux17adf[43]};vk14b0<={ls8cfae>>1,ux17adf[44]};uifa9f3<={sh6fd8b>>1,ux17adf[45]};fca7cc0<={vvf62ee>>1,ux17adf[46]};vk9608b<={mtae641>>1,ux17adf[47]};xlb045a<={ne7320c>>1,ux17adf[48]};aa822d6<=ux17adf[49];db8b58b<={tw1bd72>>1,ux17adf[50]};jp5ac5f<=ux17adf[51];mrd62ff<=ux17adf[52];end
always@* begin db22f5b[2047]<=zxe9031[0];db22f5b[2046]<=lqfe23b[0];db22f5b[2044]<=mtab7fe;db22f5b[2040]<=tlpgen_data[0];db22f5b[2032]<=tlpgen_st;db22f5b[2018]<=ho7cd9c[0];db22f5b[2017]<=tlpgen_end;db22f5b[1989]<=vi6cfff[0];db22f5b[1987]<=tlpgen_nlfy;db22f5b[1931]<=ls8cfae[0];db22f5b[1927]<=tlpgen_rdy_ack;db22f5b[1865]<=tw11e73[0];db22f5b[1859]<=nr40c7a[0];db22f5b[1815]<=sh6fd8b[0];db22f5b[1806]<=kqdb459;db22f5b[1682]<=gd8f39a[0];db22f5b[1671]<=hd63d7[0];db22f5b[1582]<=vvf62ee[0];db22f5b[1565]<=psda2c8[0];db22f5b[1488]<=phy_link_up;db22f5b[1485]<=medeb93;db22f5b[1326]<=dfrm_tval;db22f5b[1317]<=qv33bed[0];db22f5b[1295]<=rg4818f;db22f5b[1210]<=dfrm_end;db22f5b[1189]<=gq3b8d7;db22f5b[1172]<=goefb60[0];db22f5b[1116]<=mtae641[0];db22f5b[1087]<=uk3b68b;db22f5b[1082]<=cmd1642[0];db22f5b[1023]<=tlp_debug;db22f5b[1009]<=rxtp_seq[0];db22f5b[932]<=fa423ce[0];db22f5b[929]<=phy_l0;db22f5b[922]<=icf5c99;db22f5b[744]<=phy_ltssm_state[0];db22f5b[742]<=tw1bd72[0];db22f5b[663]<=dfrm_tdata[0];db22f5b[605]<=dfrm_st;db22f5b[594]<=tx_pmtype[0];db22f5b[586]<=wy9df6c[0];db22f5b[543]<=max_pl_size[0];db22f5b[504]<=wyb38fd[0];db22f5b[466]<=nrc8479[0];db22f5b[372]<=dfrm_edb;db22f5b[371]<=do99063;db22f5b[331]<=tx_vsd_data[0];db22f5b[297]<=xjc771a;db22f5b[252]<=phy_skpq_val;db22f5b[233]<=ww5908f[0];db22f5b[185]<=ne7320c[0];db22f5b[126]<=trnc_st[0];db22f5b[116]<=fp8b211;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule




























































`timescale 1 ns / 100 ps
module pcie_x1_anbe1c3 #(
   parameter FADDR    = 6,   parameter D_WIDTH  = 64 )
   (
   
   input wire                sys_clk ,         
   input wire                rst_n ,           

   
   
   input wire [31:0]         yk7dd7f , 
   input wire [31:0]         rgeebf9 , 
   input wire [31:0]         gb75fcb ,
   input wire [31:0]         bnafe5d , 
   input wire [31:0]         ip7f2ef , 
   input wire [31:0]         vvf977d , 
   input wire [31:0]         oscbbee , 
   input wire [31:0]         ne5df70 , 
   input wire [31:0]         meefb82 , 
   input wire [31:0]         qg7dc11 , 
   input wire [31:0]         faee089 , 
   input wire [31:0]         kd7044a , 
   input wire [31:0]         aa82254 , 
   input wire                load_id ,            
   
   input wire [31:0]         ph2d142 , 
   input wire [31:0]         os68a17 , 
   input wire [9:0]          fn450b8 ,  
   input wire [9:0]          rv285c6 ,  
   input wire [9:0]          fa42e37 ,  
   input wire [9:0]          qv171ba ,  
   input wire [9:0]          hqb8dd4 ,  
   input wire [9:0]          mrc6ea3 ,  
   input wire [9:0]          vx3751c ,  
   input wire [9:0]          rvba8e7 ,  

   
   input wire [31:0]         icd473e , 
   
   input wire [31:0]         alc3d44 , 
   input wire [31:0]         ba1ea24 , 
   input wire [31:0]         ykf5123 , 
   input wire [31:0]         jea8918 , 
   `ifdef GEN2
      input wire [31:0]      qt448c2 , 
   `endif
   
   input wire [31:0]         kfbb8eb , 
   input wire [31:0]         gbdc75c , 

   
   `ifdef CFG_VCC
      input wire [31:0]      jra58e0 , 
   `endif

   input wire [(8*`NUM_VC)-1:0]    an8a0cc,      
   input wire [(8*`NUM_VC)-1:0]    ld50665,     
   input wire [(12*`NUM_VC)-1:0]   jr1997b,      
   input wire [(12*`NUM_VC)-1:0]   ipccbde,     
   input wire [6:0]                ls2f7ac,  
   input wire [10:0]               hb7bd62,  
   input wire [6:0]                godeb16, 
   input wire [10:0]               mef58b1, 
   input wire [11:0]               ec5913,    
   input wire                      tlp_debug ,      

   input wire                      inta_n,          
   input wire [7:0]                msi,             
   input wire [2:0]                msi_tc,          
   input wire [`NUM_VC-1:0]        tx_req,          
   input wire [(`NUM_VC*D_WIDTH) -1:0]  tx_data,         
   input wire [`NUM_VC-1:0]        tx_st,           
   input wire [`NUM_VC-1:0]        tx_end,          
   input wire [`NUM_VC-1:0]        tx_nlfy,         
   `ifdef X4
      input wire [`NUM_VC-1:0]     rg58e31,         
      input wire                   ipf2c20 ,      
      input wire                   mg10f56,
      input wire                   aa87ab0,
   `endif
   
   input wire                      phy_link_up,
   input wire                      sh60c2e ,
   input wire                      hd6174 ,
   input wire [2:0]                je30ba7 ,
   input wire [2:0]                phy_cfgln_sum,   
   input wire                      dfrm_perr , 
   input wire [FADDR:0]            dll_pause_cnt,   
   input wire                      txtp_rdy ,       
   input wire [D_WIDTH-1:0]        rxtp_data ,      
   input wire                      rxtp_st ,        
   input wire                      rxtp_end ,       
   input wire                      rxtp_bad_tlp,    
   input wire                      do3aee2,   
   input wire                      uvfd0f9,      
   input wire                      ipedf31,  
   input wire                      zkda02d , 
   input wire                      ym97759,   
   input wire                      uxbbac8,   
   input wire                      jpdd644,    
   input wire [1:0]                ie92eeb,   
   input wire [2:0]                phbf50c,   
   input wire [19:0]               wwfa867,   
   input wire [`NUM_VC-1:0]        dl_up ,
   input wire                      dl_active,  
   input wire                      dl_inactive,
   input wire [`NUM_VC -1:0]       vcneg_pend ,     
   input wire                      phy_l0_l0s,      
   input wire                      wjc364e,
   input wire                      zm1b275,
   input wire [`NUM_VC-1:0]        ba8983e,  
   input wire [`NUM_VC-1:0]        qg4c1f3,
   input wire [`NUM_VC-1:0]        en60f98,
   input wire [`NUM_VC-1:0]        bn81991,   
   input wire [`NUM_VC-1:0]        phcc8f,   
   input wire [`NUM_VC-1:0]        zk6647f,  
   input wire [`NUM_VC-1:0]        lf323fa,  
   input wire [`NUM_VC-1:0]        gb7f5f4,    
   input wire [`NUM_VC-1:0]        cmfafa5,    
   input wire [`NUM_VC-1:0]        nph_processed,   
   input wire [`NUM_VC-1:0]        npd_processed,   

   input wire [(8*`NUM_VC)-1:0]    vx28f1f,          
   input wire [(8*`NUM_VC)-1:0]    ho478fe,         

   `ifdef ECRC
      `ifdef AER
         output wire               pcie_x1_ecrc_gen_enb , 
         output wire               pcie_x1_ecrc_chk_enb , 
      `else
         input wire                pcie_x1_ecrc_gen_enb , 
         input wire                pcie_x1_ecrc_chk_enb , 
      `endif
   `endif

   
   `ifdef AER
      input wire [127:0]           err_tlp_header , 
                                                    
   `endif
   input wire                      cmpln_tout ,     
   input wire                      cmpltr_abort_np ,
   input wire                      cmpltr_abort_p , 
   input wire                      unexp_cmpln ,    
   input wire                      ur_np_ext ,      
   input wire                      ur_p_ext ,       
   input wire                      np_req_pend ,    
   input wire                      pme_status ,     
   input wire                      term_all_cfg,
   input wire                      tj221ea,
   `ifdef GEN2
      input wire                   flr_rdy_in ,     
   `endif

   
   input wire [11:0]               ADR_I ,    
   input wire [31:0]               DAT_I ,    
   input wire                      WE_I ,     
   input wire                      STB_I ,    
   
   
   output wire [31:0]              RDAT_O ,   
   output wire                     ACK_O ,    
   output wire                     mtab7fe , 
   output wire [D_WIDTH-1:0]       tlpgen_data , 
   output wire                     tlpgen_st ,  
   output wire                     tlpgen_end , 
   output wire                     tlpgen_nlfy , 
   output wire                     tlpgen_rdy_ack , 
   output wire                     uk3b68b , 
   output wire [`NUM_VC-1:0]       tx_rdy,   
   output wire [(`NUM_VC*9)-1:0]   tx_ca_ph,
   output wire [(`NUM_VC*13)-1:0]  tx_ca_pd,
   output wire [(`NUM_VC*9)-1:0]   fnc7a69,
   output wire [(`NUM_VC*13)-1:0]  rv3d34e,
   output wire [(`NUM_VC*9)-1:0]   tx_ca_cplh,
   output wire [(`NUM_VC*13)-1:0]  fa4d3b6,
   output reg                      rv3725d,
   output reg                      ieb92ef,
   output wire [(`NUM_VC*D_WIDTH)-1:0]  rx_data , 
   output wire [`NUM_VC-1:0]       rx_st ,  
   output wire [`NUM_VC-1:0]       rx_end ,
   `ifdef ECRC
      output wire [`NUM_VC-1:0]    rx_pcie_x1_ecrc_err , 
   `endif
   output wire [`NUM_VC-1:0]       rx_us_req , 
   output wire [`NUM_VC-1:0]       rx_malf_tlp , 
   output wire [6:0]               rx_bar_hit ,      
   `ifdef X4
      output wire                  rgf11db , 
      output wire                  ls93225 , 
      output wire                  tx_val,
      output wire [`NUM_VC-1:0]    ea49c76 ,
   `endif
   
   output wire [7:0]               bus_num ,         
   output wire [4:0]               dev_num ,         
   output wire [2:0]               func_num ,        
   output wire [1:0]               pm_power_state ,  
   output wire                     pme_en ,          
   output wire [2:0]               mm_enable ,       
   output wire                     msi_enable ,      
   output wire [31:0]              mes_laddr ,       
   output wire [31:0]              mes_uaddr ,       
   output wire [15:0]              mes_data ,        
   output wire [5:0]               cmd_reg_out ,     
   output wire [14:0]              dev_cntl_out ,    
   output wire [7:0]               lnk_cntl_out ,    
   output wire                     ftl_err_out ,     
   output wire                     nftl_err_out ,    
   output wire                     cor_err_out ,     
   `ifdef GEN2
      output wire  [4:0]           dev_cntl_2_out ,  
      output reg                   initiate_flr ,    
   `endif

   output wire [2:0]               max_pl_size ,     
   output wire                     ext_sync ,        
   output wire                     pu1e020 ,    
   output wire                     cmf0102 ,     
   output wire [2:0]               cfgcs_losel ,     
   
   output wire [`NUM_VC -1:0]      me56173 , 
   output wire [(`NUM_VC*3)-1:0]   hd63d7,
   output wire [(`NUM_VC*8)-1:0]   jr322ef,

   output wire [`NUM_VC -1:0]      trnc_st,
   output wire                     kqdb459,  
   output wire [2:0]               psda2c8,   
   output wire [1:0]               cmd1642,    
   output wire                     fp8b211,
   output wire [2:0]               ww5908f, 
   output wire [1:0]               nrc8479,
   output wire [`NUM_VC -1:0]      fa423ce,
   output wire [`NUM_VC -1:0]      tw11e73,
   output wire [`NUM_VC -1:0]      gd8f39a,

   output wire [(24*`NUM_VC)-1:0]  qv33bed,  
   output wire [(24*`NUM_VC)-1:0]  wy9df6c,
   output wire [(24*`NUM_VC)-1:0]  goefb60
   ) ;
wire [D_WIDTH -1:0]         tlpdec_data ;
wire [2:0]                  tlpdec_tc ;
wire [(`NUM_VC*8)-1:0]      cfgec_tvmap ;
wire [2:0]                  zx6e96a ;
wire [2:0]                  bn2d5fe ;
wire [2:0]                  zzbfdeb ;
wire [2:0]                  xybd794 ;
wire [2:0]                  wjf289c ;
wire [2:0]                  lf1393a ;
wire [2:0]                  jr275d2 ;
wire [2:0]                  bnba596 ;
wire [2:0]                  cfgec_vcasel ;
wire [D_WIDTH -1:0]         txintf_data;
wire [D_WIDTH -1:0]         cfg_rmux_data ;
wire [31:0]                 lqe19dc ;
wire [31:0]                 dbcee2 ;
wire [31:0]                 go67717 ;
wire [31:0]                 mg3b8b8 ;
wire [31:0]                 wjdc5c0 ;
wire [31:0]                 mre2e05 ;
wire [31:0]                 oh1702d ;
wire [31:0]                 rib816c ;
wire [31:0]                 jcc0b62 ;
wire [31:0]                 ym5b13 ;
wire [31:0]                 rv2d899 ;
wire [31:0]                 by6c4ce ;
wire [31:0]                 go62673 ;
wire [31:0]                 ph13398 ;
wire [31:0]                 tlpdec_addr_l32 ;
wire [31:0]                 tlpdec_addr_h32 ;
wire [D_WIDTH-1:0]          ux805bb ;
wire [6:0]                  bar_hit ;
wire                        ble3f94 ;
wire                        co1fca7 ;
wire [15:0]                 wwef7fd ;
wire [(`NUM_VC*D_WIDTH)-1:0] bye4ee4 ;
wire [`NUM_VC -1:0]         bn27722 ;
wire [`NUM_VC -1:0]         ym3b916 ;

`ifdef ECRC
wire [`NUM_VC -1:0]      ofdc8b0 ;

`endif
wire [`NUM_VC -1:0]         vie4584 ;
wire [`NUM_VC -1:0]         jr22c23 ;
wire                        tlpdec_cfgrd ;
wire                        cfg_rmux_rd;
wire                        lf847f7;
wire                        mt23fbe;
wire                        cfg_rmux_end;
wire                        jcfefa9;
wire  [D_WIDTH-1:0]         kfbea54;
wire                        int_msg_rd;
wire                        err_msg_rd;
wire                        int_msg_req;
wire  [D_WIDTH-1:0]         int_msg_data;
wire                        int_msg_ae;
wire                        int_pending;
wire                        int_disable ;
wire                        err_msg_req;
wire  [D_WIDTH-1:0]         err_msg_data;
wire                        err_msg_ae;
reg                         arb_enable;
reg                         arb_enable2;
reg [1:0]                   zzbf11f;
reg                         cfg_rmux_req;
reg                         goc47fd;
reg                         yz23fe8     ;
reg                         ec1ff45   ;
reg                         wwffa29     ;
reg                         yxfd148   ;
wire                        nr4f43e ;
wire                        kd7a1f7 ;
wire                        f_nf_emsg_sent;
wire                        rchk_credit_p;
wire                        rchk_credit_cpl;
wire                        tlpdec_rvcd_sts_ur;
wire                        tlpdec_rvcd_sts_ca;
wire                        ng35745 ;
wire                        anaba2a ;
wire                        txintf_end ;
wire                        txintf_nlfy ;
wire    [`NUM_VC-1:0]       vc_rcvd;
wire                        ph_rcvd;
wire                        pd_rcvd;
wire                        nph_rcvd;
wire                        npd_rcvd;
wire   [8:0]                credits_rcvd;
wire                        malf_pkt_ph;
wire                        malf_pkt_pd;
wire                        malf_pkt_nph;
wire                        malf_pkt_npd;
wire                        fc_overflow;

`ifdef X4
wire                     tlp_erly_st ;
wire [`NUM_VC -1:0]      lfa5901 ;
wire                     cb2c80e;
wire                     nr64074;
wire                     vk203a7;
wire                     hq1d3b;
reg                      jee9db ;

`endif
localparam ARB_IDLE     = 2'b00;
localparam lsa76d7 = 2'b01;
localparam aa3b6ba = 2'b10;

`ifdef GEN2
reg [2:0] godb5d1 ;
reg       sh41830 ;
reg       nrd7443 ;
reg       drop_resp ;
wire      qgd10f7 ;
localparam ks887b9 = 3'd0 ;
localparam go43dc8   = 3'd1 ;
localparam xy1ee40   = 3'd2 ;
localparam uvf7203   = 3'd3 ;
localparam gqb901d   = 3'd4 ;
localparam blc80e8   = 3'd5 ;
localparam pf40746      = 3'd6 ;
localparam tj3a36      = 3'd7 ;

`endif

`ifndef CFG_REG
wire  cfg_hit;
wire  s2e_cnt_err;

`endif

`ifdef X4

`define INTMSG_DEF int_msg

`define TXINTF_DEF txintf

`define TLPGEN_DEF tlpgen

`define TLPDEC_DEF tlpdec

`define RXINTF_DEF rxintf

`endif

`ifdef X1

`define INTMSG_DEF pcie_x1_int_msg_x1

`define TXINTF_DEF pcie_x1_txintf_x1

`define TLPGEN_DEF pcie_x1_tlpgen_x1

`define TLPDEC_DEF pcie_x1_tlpdec_x1

`define RXINTF_DEF pcie_x1_rxintf_x1

`endif

`ifdef X4

`endif

`ifdef GEN2

`else

`endif

`ifdef CFG_REG

`ifdef ECRC

`endif

`ifdef X4

`endif

`else

`endif

`ifdef X4

`endif

`ifdef CFG_REG

`ifdef X4

`endif

`endif

`ifdef ECR

`endif

`ifdef X4

`endif

`ifdef CFG_REG

`endif

`ifdef X4

`endif
reg kq46dac ;
reg ep36d60 ;

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif
wire ecb6b04  = txintf_end & ~kq46dac ;
wire wj60839 = txintf_nlfy & ~ep36d60 ;

`ifdef X4
wire cb7312 = hq1d3b & ~jee9db;

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef AER

`endif

`ifdef AER

`endif

`ifdef CFG_REG

`ifdef EN_BAR0

`endif

`ifdef EN_BAR1

`endif

`ifdef EN_BAR2

`endif

`ifdef EN_BAR3

`endif

`ifdef EN_BAR4

`endif

`ifdef EN_BAR5

`endif

`ifdef EN_ER_BAR

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`else

`endif

`ifdef ECRC

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef VC1

`else 

`ifdef X4

`endif

`ifdef ECRC

`endif

`endif

`ifdef X1
reg vidf0d0 ;
reg psd0528 ;
reg ir95b05 ;
reg vkad82c ;

`endif

`ifdef X4

`endif

`ifdef ENDPOINT_COMP

`else 

`endif

`ifdef CFG_REG

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef CFG_VCC

`endif

`ifdef ECRC

`endif

`ifdef AER

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef GEN2

`endif

`ifdef ECRC

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef EN_VC0

`ifdef CFG_VCC

`else

`endif

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`else

`endif

`ifdef GEN2

`ifdef X4

`endif

`ifdef X1

`endif

`endif

`ifdef DEBUG
wire        ho6c162, en60b13, wy589c, an2c4e1, yk6270d, db13868, ls9c347, bye1a3b;
wire        and1da,  ea68ed4,  by476a0,  mg3b503,  zkda819,  icd40cb,  bna0659,  fp32cf;
wire [D_WIDTH-1:0] cmcb3ff, yk59ff9, xwcffc8, ip7fe42, osff214, rtf90a1, ldc850e, ps42876;
wire        ri143b2,   uxa1d93,   vkec9c,   rg764e2,   jeb2713,   xy9389b,   pu9c4db,   ipe26db;
wire        fp136dc,  zz9b6e6,  eadb736,  sudb9b0,  gbdcd81,  lde6c0c,  gd36067,  bnb033d;
wire        jr819ee, bncf77, qg67bbf, vx3ddf9, tueefcf, ui77e7b, fpbf3d8, xjf9ec7;
wire [D_WIDTH-1:0] fn7b1fb, xjd8fdf, rtc7efe, hq3f7f6, lqfbfb3, nedfd9a, rgfecd3, ldf669a;
wire        mgb34d7,   wl9a6b9,   ipd35cc,   wl9ae64,   nrd7325,   ieb992e,   uvcc971,   pf64b8d;
wire        hq25c6e,  uk2e372,  bl71b90,  ks8dc87,  nr6e439,  ui721ce,  ir90e71,  uk8738c;

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X4
wire     kf39c61, icce30d, xj71869, fc8c34f, vv61a7a, epd3d6, lq69eb4, hb4f5a2;
wire     of7ad17, mrd68bc, gdb45e5, vka2f2c, ir17963, ymbcb1d, qge58e9, qv2c748;

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`endif  //End of DEBUG
reg [31 : 0] yx416d9;
reg [31 : 0] lsb6cc;
reg [31 : 0] uv5b663;
reg [31 : 0] qgdb31c;
reg [31 : 0] mrd98e0;
reg [31 : 0] gbcc704;
reg [31 : 0] by63824;
reg [31 : 0] fp1c123;
reg [31 : 0] eae091f;
reg [31 : 0] xy48f8;
reg [31 : 0] gq247c3;
reg [31 : 0] sj23e19;
reg [31 : 0] ie1f0cd;
reg ec218d0;
reg [31 : 0] rv8484d;
reg [31 : 0] ks2426f;
reg [9 : 0] wy21379;
reg [9 : 0] rv9bc9;
reg [9 : 0] ps4de4f;
reg [9 : 0] al6f27b;
reg [9 : 0] vi793dc;
reg [9 : 0] qtc9ee2;
reg [9 : 0] jp4f715;
reg [9 : 0] fn7b8af;
reg [31 : 0] shdc57e;
reg [31 : 0] zz8ed0b;
reg [31 : 0] xw7685e;
reg [31 : 0] cbb42f2;
reg [31 : 0] qva1794;
reg [31 : 0] pfd7bf5;
reg [31 : 0] dobdfaf;
reg [(8 * `NUM_VC) - 1 : 0] fp221ed;
reg [(8 * `NUM_VC) - 1 : 0] ec10f6e;
reg [(12 * `NUM_VC) - 1 : 0] lf3db80;
reg [(12 * `NUM_VC) - 1 : 0] shedc07;
reg [6 : 0] gb701e6;
reg [10 : 0] wl80f34;
reg [6 : 0] an79a5;
reg [10 : 0] cb3cd2c;
reg [11 : 0] oh33a1f;
reg pu83569;
reg cz4168c;
reg [7 : 0] ou82307;
reg [2 : 0] xj50460;
reg [`NUM_VC - 1 : 0] kf90812;
reg [(`NUM_VC * D_WIDTH) - 1 : 0] nt84094;
reg [`NUM_VC - 1 : 0] ie24bf4;
reg [`NUM_VC - 1 : 0] do25fa0;
reg [`NUM_VC - 1 : 0] pu2fd02;
reg db81c22;
reg zz37725;
reg wlbb92f;
reg [2 : 0] yxdc97c;
reg [2 : 0] ui5cc8e;
reg xwe4be4;
reg [FADDR : 0] nt9e1f3;
reg mt1299d;
reg [D_WIDTH - 1 : 0] pu8333a;
reg xl199d3;
reg qtcce9e;
reg ng2f912;
reg zk7c893;
reg zke449b;
reg ph224db;
reg ir126de;
reg ip708bb;
reg rv845dd;
reg jr22eee;
reg [1 : 0] qv17777;
reg [2 : 0] xl9492f;
reg [19 : 0] mta497e;
reg [`NUM_VC - 1 : 0] uk1ab4b;
reg tw25f22;
reg fc3076f;
reg [`NUM_VC - 1 : 0] ie3e603;
reg al65e74;
reg ic77026;
reg pub8131;
reg [`NUM_VC - 1 : 0] ri2f3a4;
reg [`NUM_VC - 1 : 0] by79d22;
reg [`NUM_VC - 1 : 0] osce913;
reg [`NUM_VC - 1 : 0] bn131ee;
reg [`NUM_VC - 1 : 0] qi98f76;
reg [`NUM_VC - 1 : 0] nrc7bb0;
reg [`NUM_VC - 1 : 0] db3dd86;
reg [`NUM_VC - 1 : 0] fpb0ddb;
reg [`NUM_VC - 1 : 0] ri86edf;
reg [`NUM_VC - 1 : 0] jr376fa;
reg [`NUM_VC - 1 : 0] yzbb7d7;
reg [(8 * `NUM_VC) - 1 : 0] cmfaf4a;
reg [(8 * `NUM_VC) - 1 : 0] vvd7a50;
reg ykde8b1;
reg byf4589;
reg hqa2c4a;
reg bn16253;
reg sjb129e;
reg ng894f4;
reg hb4a7a2;
reg nef1611;
reg os49b3a;
reg hd9e8b9;
reg [11 : 0] rg4d9d1;
reg [31 : 0] ps6ce8b;
reg kq6745a;
reg tw3a2d0;
reg [2 : 0] icc1daa;
reg [(`NUM_VC * 8) - 1 : 0] nee186a;
reg [2 : 0] lq76a8a;
reg [2 : 0] lfb5452;
reg [2 : 0] lfaa296;
reg [2 : 0] gb514b6;
reg [2 : 0] kf8a5b5;
reg [2 : 0] lq52dad;
reg [2 : 0] xy96d6b;
reg [2 : 0] oub6b5b;
reg [2 : 0] mg87279;
reg [D_WIDTH - 1 : 0] ip7ffef;
reg [D_WIDTH - 1 : 0] thd8ef4;
reg [31 : 0] ldc77a6;
reg [31 : 0] ou3bd37;
reg [31 : 0] kqde9b8;
reg [31 : 0] tuf4dc1;
reg [31 : 0] yma6e0b;
reg [31 : 0] hd37059;
reg [31 : 0] hqb82cf;
reg [31 : 0] goc167a;
reg [31 : 0] xyb3d0;
reg [31 : 0] kq59e83;
reg [31 : 0] pscf418;
reg [31 : 0] al7a0c3;
reg [31 : 0] hod061d;
reg [31 : 0] ri830eb;
reg [31 : 0] nr5a3be;
reg [31 : 0] med1df6;
reg [D_WIDTH - 1 : 0] xweb765;
reg [6 : 0] gda46c5;
reg xje943a;
reg dz4a1d7;
reg [15 : 0] an8545f;
reg [(`NUM_VC * D_WIDTH) - 1 : 0] rt55dab;
reg [`NUM_VC - 1 : 0] qvaed5e;
reg [`NUM_VC - 1 : 0] xw76af5;
reg [`NUM_VC - 1 : 0] dbb57aa;
reg [`NUM_VC - 1 : 0] yzabd56;
reg en6a5b4;
reg qva190d;
reg phaad68;
reg os56b47;
reg xlb5a39;
reg fcad1cf;
reg [D_WIDTH - 1 : 0] ne473d8;
reg pu1e0fd;
reg cmf07ea;
reg jp7b0eb;
reg [D_WIDTH - 1 : 0] qtc3aff;
reg an1d7fc;
reg rgebfe5;
reg gd82d1;
reg uiff95f;
reg [D_WIDTH - 1 : 0] aye57c7;
reg uk2be39;
reg hb50da7;
reg ng86d3e;
reg [1 : 0] zxc7275;
reg yz393af;
reg ofc9d7c;
reg sh4ebe5;
reg uv75f2c;
reg jraf965;
reg tu7cb2f;
reg vk936f4;
reg xl9b7a2;
reg ip65ec4;
reg do2f624;
reg vv7b122;
reg vvd8917;
reg ykc48be;
reg ou245f1;
reg fp22f89;
reg kqffbe0;
reg gbfdf00;
reg [`NUM_VC - 1 : 0] faf13ed;
reg ng89f6a;
reg ld4fb53;
reg os7da9e;
reg qted4f1;
reg [8 : 0] yx6a78d;
reg ea53c6c;
reg vx9e361;
reg zkf1b0e;
reg uk8d873;
reg fc1b16c;
reg bl61ccb;
reg zme65e;
reg by732f3;
reg ls9979b;
reg [2047:0] db22f5b;
wire [195:0] ux17adf;

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif

`ifndef CFG_REG

`endif

`ifdef X4

`define INTMSG_DEF int_msg

`define TXINTF_DEF txintf

`define TLPGEN_DEF tlpgen

`define TLPDEC_DEF tlpdec

`define RXINTF_DEF rxintf

`endif

`ifdef X1

`define INTMSG_DEF pcie_x1_int_msg_x1

`define TXINTF_DEF pcie_x1_txintf_x1

`define TLPGEN_DEF pcie_x1_tlpgen_x1

`define TLPDEC_DEF pcie_x1_tlpdec_x1

`define RXINTF_DEF pcie_x1_rxintf_x1

`endif

`ifdef X4

`endif

`ifdef GEN2

`else

`endif

`ifdef CFG_REG


`ifdef ECRC

`endif

`ifdef X4

`endif

`else

`endif


`ifdef X4

`endif

`ifdef CFG_REG

`ifdef X4

`endif

`endif

`ifdef ECR

`endif

`ifdef X4

`endif

`ifdef CFG_REG

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif


`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif


`ifdef X4

`endif


`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef AER

`endif

`ifdef AER

`endif

`ifdef CFG_REG


`ifdef EN_BAR0

`endif

`ifdef EN_BAR1

`endif

`ifdef EN_BAR2

`endif

`ifdef EN_BAR3

`endif

`ifdef EN_BAR4

`endif

`ifdef EN_BAR5

`endif

`ifdef EN_ER_BAR

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`else

`endif


`ifdef ECRC

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef VC1

`else 

`ifdef X4

`endif

`ifdef ECRC

`endif

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ENDPOINT_COMP

`else 

`endif

`ifdef CFG_REG


`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef CFG_VCC

`endif

`ifdef ECRC

`endif

`ifdef AER

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef GEN2

`endif

`ifdef ECRC

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef EN_VC0

`ifdef CFG_VCC

`else

`endif

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`else

`endif

`ifdef GEN2

`ifdef X4

`endif

`ifdef X1

`endif

`endif

`ifdef DEBUG

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`ifdef X4

`ifdef EN_VC0

`endif

`ifdef EN_VC1

`endif

`ifdef EN_VC2

`endif

`ifdef EN_VC3

`endif

`ifdef EN_VC4

`endif

`ifdef EN_VC5

`endif

`ifdef EN_VC6

`endif

`ifdef EN_VC7

`endif

`endif

`endif  //End of DEBUG

localparam ribd6fd = 196,jceb7ea = 32'hfdffd48b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef GEN2


`endif


`ifndef CFG_REG


`endif


`ifdef X4


`define INTMSG_DEF int_msg


`define TXINTF_DEF txintf


`define TLPGEN_DEF tlpgen


`define TLPDEC_DEF tlpdec


`define RXINTF_DEF rxintf


`endif


`ifdef X1


`define INTMSG_DEF pcie_x1_int_msg_x1


`define TXINTF_DEF pcie_x1_txintf_x1


`define TLPGEN_DEF pcie_x1_tlpgen_x1


`define TLPDEC_DEF pcie_x1_tlpdec_x1


`define RXINTF_DEF pcie_x1_rxintf_x1


`endif


`ifdef X4


`endif


`ifdef GEN2


`else


`endif


`ifdef CFG_REG


`ifdef ECRC


`endif


`ifdef X4


`endif


`else


`endif


`ifdef X4


`endif


`ifdef CFG_REG


`ifdef X4


`endif


`endif


`ifdef ECR


`endif


`ifdef X4


`endif


`ifdef CFG_REG


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef X1


`endif 


`ifdef X4


`endif 


`ifdef AER


`endif


`ifdef AER


`endif


`ifdef CFG_REG


`ifdef EN_BAR0


`endif


`ifdef EN_BAR1


`endif


`ifdef EN_BAR2


`endif


`ifdef EN_BAR3


`endif


`ifdef EN_BAR4


`endif


`ifdef EN_BAR5


`endif


`ifdef EN_ER_BAR


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`else


`endif


`ifdef ECRC


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef VC1


`else 


`ifdef X4


`endif


`ifdef ECRC


`endif


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef ENDPOINT_COMP


`else 


`endif


`ifdef CFG_REG


`ifdef GEN2


`endif


`ifdef CFG_VCC


`endif


`ifdef CFG_VCC


`endif


`ifdef ECRC


`endif


`ifdef AER


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef GEN2


`endif


`ifdef ECRC


`else


`endif


`ifdef GEN2


`endif


`ifdef CFG_VCC


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef EN_VC0


`ifdef CFG_VCC


`else


`endif


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`else


`endif


`ifdef GEN2


`ifdef X4


`endif


`ifdef X1


`endif


`endif


`ifdef DEBUG


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`ifdef X4


`ifdef EN_VC0


`endif


`ifdef EN_VC1


`endif


`ifdef EN_VC2


`endif


`ifdef EN_VC3


`endif


`ifdef EN_VC4


`endif


`ifdef EN_VC5


`endif


`ifdef EN_VC6


`endif


`ifdef EN_VC7


`endif


`endif


`endif  //End of DEBUG





`ifdef ECRC



`endif





`ifdef X4



`endif




`ifdef GEN2



`endif




`ifndef CFG_REG



`endif




`ifdef X4



`define INTMSG_DEF int_msg



`define TXINTF_DEF txintf



`define TLPGEN_DEF tlpgen



`define TLPDEC_DEF tlpdec



`define RXINTF_DEF rxintf



`endif



`ifdef X1



`define INTMSG_DEF pcie_x1_int_msg_x1



`define TXINTF_DEF pcie_x1_txintf_x1



`define TLPGEN_DEF pcie_x1_tlpgen_x1



`define TLPDEC_DEF pcie_x1_tlpdec_x1



`define RXINTF_DEF pcie_x1_rxintf_x1



`endif






assign cfg_rmux_data = (!hb50da7) ? ne473d8 : (ng86d3e) ? aye57c7 : qtc3aff;
assign cfg_rmux_ae   = (!hb50da7) ? fcad1cf   : (ng86d3e) ? uk2be39   : an1d7fc;

`ifdef X4
   assign sud11c1 = (!hb50da7) ? cb2c80e : (ng86d3e) ? vk203a7 : nr64074;

`endif



assign mt23fbe   = (hb50da7) ? 1'b0 : qva190d;
assign int_msg_rd    = (hb50da7 && !ng86d3e) ? qva190d : 1'b0;
assign err_msg_rd    = (hb50da7 &&  ng86d3e) ? qva190d : 1'b0;
always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      zzbf11f        <= ARB_IDLE;      cfg_rmux_req  <= 1'b0;      arb_enable    <= 1'b0;      arb_enable2   <= 1'b0;   end   else begin      case(zxc7275)         ARB_IDLE : begin            if(phaad68) begin               cfg_rmux_req  <= 1'b1;               arb_enable    <= 1'b0;               zzbf11f        <= lsa76d7;            end            else if(jp7b0eb || uiff95f) begin               cfg_rmux_req  <= 1'b1;               arb_enable    <= 1'b1;               zzbf11f        <= aa3b6ba;               case({jp7b0eb, uiff95f})                  2'b11 : arb_enable2   <= !ng86d3e;                  2'b01 : arb_enable2   <= 1'b1;                  2'b10 : arb_enable2   <= 1'b0;               endcase            end         end         lsa76d7 : begin            if(xlb5a39) begin               if(jp7b0eb || uiff95f) begin                  arb_enable    <= 1'b1;                  zzbf11f        <= aa3b6ba;                  case({jp7b0eb, uiff95f})                     2'b11 : arb_enable2   <= !ng86d3e;                     2'b01 : arb_enable2   <= 1'b1;                     2'b10 : arb_enable2   <= 1'b0;                  endcase               end               else if(!phaad68) begin                  zzbf11f        <= ARB_IDLE;                  cfg_rmux_req  <= 1'b0;               end            end         end         aa3b6ba : begin            if(xlb5a39) begin               if(phaad68) begin                  arb_enable    <= 1'b0;                  zzbf11f        <= lsa76d7;               end               else if(jp7b0eb || uiff95f) begin                   case({jp7b0eb, uiff95f})                     2'b11 : arb_enable2   <= !ng86d3e;                     2'b01 : arb_enable2   <= 1'b1;                     2'b10 : arb_enable2   <= 1'b0;                  endcase               end               else begin                  zzbf11f        <= ARB_IDLE;                  cfg_rmux_req  <= 1'b0;               end            end         end      endcase   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      yz23fe8   <= 1'b0;      ec1ff45 <= 1'b0;      wwffa29   <= 1'b0;      yxfd148 <= 1'b0;      rv3725d      <= 1'b0;      ieb92ef    <= 1'b0;   end   else begin      yz23fe8   <= do2f624;      ec1ff45 <= vv7b122;      wwffa29   <= sh4ebe5;      yxfd148 <= uv75f2c;      rv3725d      <= jraf965;      ieb92ef    <= tu7cb2f;   end
end





`ifdef GEN2
   assign int_disable = (cmd_reg_out[5] | nrd7443) ;


`else
   assign int_disable = cmd_reg_out[5] ;


`endif




`ifdef CFG_REG

`INTMSG_DEF wj7f284 (        .sys_clk              (sys_clk),    .rst_n                (rst_n),    .int_disable          (int_disable),    .inta_n               (inta_n),    .ftl_err_out          (ftl_err_out),    .nftl_err_out         (nftl_err_out),    .cor_err_out          (cor_err_out),    .bus_num              (bus_num),    .dev_num              (dev_num),    .func_num             (func_num),


`ifdef ECRC
       .pcie_x1_ecrc_enb          (pcie_x1_ecrc_gen_enb),


`endif

    .int_msg_rd           (int_msg_rd),    .err_msg_rd           (err_msg_rd),    .tx_ca_ph_infi        (tx_ca_ph[8]),    .tx_ca_pd_infi        (tx_ca_pd[12]),    .tx_ca_ph             (tx_ca_ph[7:0]),    .tx_ca_pd             (tx_ca_pd[11:0]),    .msi_tc               (msi_tc),    .msi                  (msi),    .msi_enable           (msi_enable),    .mm_enable            (mm_enable),    .mes_uaddr            (mes_uaddr),    .mes_laddr            (mes_laddr),    .mes_data             (mes_data),
    


`ifdef X4
      .err_msg_dwen       (vk203a7),      .int_msg_dwen       (nr64074),


`endif
   .err_msg_req           (err_msg_req),   .err_msg_data          (err_msg_data),   .err_msg_ae            (err_msg_ae),   .int_msg_req           (int_msg_req),   .int_msg_data          (int_msg_data),   .int_msg_ae            (int_msg_ae),   .int_pending           (int_pending)  );

`else
   assign err_msg_req   = 1'b0;   assign err_msg_data  = 16'b0;   assign err_msg_ae    = 1'b0;   assign int_msg_req   = 1'b0;   assign int_msg_data  = 16'b0;   assign int_msg_ae    = 1'b0;   assign int_pending   = 1'b0;

`endif





`TXINTF_DEF #(    .FADDR    ( FADDR ) ,    .D_WIDTH  ( D_WIDTH )    )    yzab0be (        .sys_clk              ( sys_clk ),    .rst_n                ( rst_n ),    .cfgec_vcasel         ( cfgec_vcasel ),


`ifdef X4
       .phy_cfgln_sum     ( phy_cfgln_sum ),


`endif
    .arb_enable           ( arb_enable ),    .arb_enable2          ( arb_enable2 ),    .msi_enable           ( msi_enable ),


`ifdef CFG_REG
       .cfg_rmux_req      ( cfg_rmux_req ),       .cfg_rmux_ae       ( cfg_rmux_ae ),       .cfg_rmux_data     ( cfg_rmux_data ),


`ifdef X4
          .cfg_rmux_dwen  ( sud11c1 ),


`endif



`endif



`ifdef ECR
       .pcie_x1_ecrc_enb          ( pcie_x1_ecrc_gen_enb ) ,


`endif
    .tx_req               ( tx_req ),    .tx_data              ( tx_data ),    .tx_st                ( tx_st ),    .tx_end               ( tx_end ),    .tx_nlfy              ( tx_nlfy ),


`ifdef X4
       .tx_dwen           ( rg58e31 ),


`endif
    .txtp_rdy             ( txtp_rdy ),    .dll_pause_cnt        ( dll_pause_cnt ),    .vcneg_pend           ( vcneg_pend ),        .txintf_pause_ack     ( uk3b68b ),    .txintf_rdy_ack       ( txintf_rdy_ack ),


`ifdef CFG_REG
       .cfg_rmux_rd       ( cfg_rmux_rd ),


`endif

    .cfg_cplh_cc          ( cfg_cplh_cc ),    .cfg_cpld_cc          ( cfg_cpld_cc ),    .cfg_ph_cc            ( cfg_ph_cc ),    .cfg_pd_cc            ( cfg_pd_cc ),    .tx_rdy               ( tx_rdy ),    .txintf_req           ( mtab7fe ),    .txintf_data          ( txintf_data ),    .txintf_st            ( txintf_st ),    .txintf_end           ( txintf_end ),    .txintf_nlfy          ( txintf_nlfy ),


`ifdef X4
       .txintf_dwen       ( hq1d3b ),       .txintf_val        ( nt38338 ),


`endif

    .f_nf_emsg_sent       ( f_nf_emsg_sent ),    .rchk_credit_cpl      ( rchk_credit_cpl ),    .rchk_credit_p        ( rchk_credit_p ),    .cfg_rmux_end         ( cfg_rmux_end)    );
always @(posedge sys_clk, negedge rst_n) begin   if (!rst_n) begin      kq46dac  <= 1'b0 ;      ep36d60 <= 1'b0 ;


`ifdef X4
         jee9db <= 1'b0 ;


`endif
   end


`ifdef X4
      else if (nt38338) begin         kq46dac  <= kqffbe0 ;         ep36d60 <= gbfdf00 ;         jee9db <= hq1d3b ;      end


`endif



`ifdef X1
      else begin         kq46dac  <= kqffbe0 ;         ep36d60 <= gbfdf00 ;      end


`endif

end

`ifdef X4
   assign tx_val = nt38338;

`endif





`TLPGEN_DEF meea71c (      .sys_clk        ( sys_clk ) ,   .rst_n          ( rst_n ) ,      .txintf_data    ( txintf_data ) ,   .txintf_st      ( txintf_st ) ,   .txintf_end     ( ecb6b04 ) ,   .txintf_nlfy    ( wj60839 ) ,


`ifdef X4
      .txintf_dwen ( cb7312 ) ,      .txintf_val  ( nt38338 ) ,


`endif
   .txintf_rdy_ack ( txintf_rdy_ack ) ,


`ifdef ECRC
      .pcie_x1_ecrc_enb    ( pcie_x1_ecrc_gen_enb ) ,


`endif

   


`ifdef X4
      .tlpgen_tval ( rgf11db ) ,      .tlpgen_dwen ( ls93225 ) ,


`endif
   .tlpgen_data    ( tlpgen_data ) ,   .tlpgen_st      ( tlpgen_st ) ,   .tlpgen_end     ( tlpgen_end ) ,   .tlpgen_nlfy    ( tlpgen_nlfy ) ,   .tlpgen_rdy_ack ( tlpgen_rdy_ack )   ) ;



`TLPDEC_DEF bld825e (      .sys_clk            ( sys_clk ) ,   .rst_n              ( rst_n ) ,      .rxtp_data          ( rxtp_data ) ,   .rxtp_st            ( rxtp_st ) ,   .rxtp_end           ( rxtp_end ) ,


`ifdef X4
      .rxtp_dwen       ( ipf2c20 ) ,


`endif

   .max_pl_size        ( max_pl_size ) ,


`ifdef ECRC
      .pcie_x1_ecrc_enb        ( pcie_x1_ecrc_chk_enb ) ,


`endif

   .vc_dl_up_fail      ( vc_dl_up_fail ) ,      .tlpdec_data        ( tlpdec_data ) ,   .tlpdec_st          ( tlpdec_st ) ,   .tlpdec_end         ( tlpdec_end ) ,   .tlpdec_tc          ( tlpdec_tc ) ,


`ifdef X4
      .tlpdec_dwen     ( baefca ) ,      .tlp_dwen_reg2   ( me77e52 ) ,


`endif

   .tlpdec_cfgrd       ( tlpdec_cfgrd ) ,   .tlpdec_cfgwr       ( tlpdec_cfgwr ) ,   .tlpdec_memrw       ( tlpdec_memrw ) ,   .tlpdec_iorw        ( tlpdec_iorw ) ,   .tlpdec_rvcd_sts_ur ( tlpdec_rvcd_sts_ur ) ,   .tlpdec_rvcd_sts_ca ( tlpdec_rvcd_sts_ca ) ,   .tlpdec_addr_l32    ( tlpdec_addr_l32 ) ,   .tlpdec_addr_h32    ( tlpdec_addr_h32 ) ,   .tlpdec_addr64      ( tlpdec_addr64 ) ,   .s2e_cnt_err        ( s2e_cnt_err ) ,


`ifdef ECRC
      .tlpdec_pcie_x1_ecrc_err ( tlpdec_pcie_x1_ecrc_err ) ,      .crc_ok_out      ( do1f4f ) ,


`endif
   .tlpdec_pois_tlp    ( tlpdec_pois_tlp ) ,   .tlpdec_us_req      ( tlpdec_us_req ) ,   .tlpdec_malf_tlp    ( tlpdec_malf_tlp ),
   .tlp_st_reg2        ( rt4f606 ),   .tlp_end_reg2       ( rt7b037 ),   .tlp_data_reg2      ( ux805bb )
   ) ;




pcie_x1_co2411b lf6ffb(      .sys_clk                  (sys_clk),   .rst_n                    (rst_n),   .dl_inactive              (fc3076f),   .me56173                    (me56173),   .zzaaef7                     (hd63d7),   .tx_st                    (ie24bf4),   .tx_end                   (do25fa0),   .tx_nlfy                  (pu2fd02),   .tx_data                  (nt84094),


`ifdef X4
      .nt38338            (nt38338),


`endif
   .cfg_ph_cc                (cfg_ph_cc),   .cfg_pd_cc                (cfg_pd_cc),   .cfg_cplh_cc              (cfg_cplh_cc),   .cfg_cpld_cc              (cfg_cpld_cc),   .ym97759            (ip708bb),   .uxbbac8            (rv845dd),   .jpdd644             (jr22eee),   .ie92eeb            (qv17777),   .phbf50c            (xl9492f),   .wwfa867            (mta497e),      .ie31e3d          (nr4f43e),   .tx_ca_ph                 (tx_ca_ph),   .tx_ca_pd                 (tx_ca_pd),   .fnc7a69                (fnc7a69),   .rv3d34e                (rv3d34e),   .tx_ca_cplh               (tx_ca_cplh),   .fa4d3b6               (fa4d3b6)   ) ;



pcie_x1_kqc4b17 bnb529c(         .sys_clk                  (sys_clk),   .rst_n                    (rst_n),      .an8a0cc               (fp221ed),   .ld50665              (ec10f6e),   .xy8332f             ({(8*`NUM_VC){1'b0}}),   .jr1997b               (lf3db80),   .ipccbde              (shedc07),   .wj65ef5             ({(12*`NUM_VC){1'b0}}),   .ls2f7ac           (gb701e6),   .hb7bd62           (wl80f34),   .godeb16          (an79a5),   .mef58b1          (cb3cd2c),   .ukac589         (7'd1),   .cm62c49         (11'd1),   .ec5913             (oh33a1f),
   .vcneg_pend               (ie3e603),   .pf644cc             (ext_sync),   .phy_l0_l0s               (al65e74),   .wjc364e               (ic77026),   .zm1b275               (pub8131),   .ba8983e              (ri2f3a4),   .qg4c1f3             (by79d22),   .en60f98            (osce913),   .bn81991            (bn131ee),   .phcc8f            (qi98f76),   .zk6647f           (nrc7bb0),   .lf323fa           (db3dd86),   .ph91fd7          ({(`NUM_VC){1'b0}}),   .an8febe          ({(`NUM_VC){1'b0}}),   .gb7f5f4             (fpb0ddb),   .cmfafa5             (ri86edf),   .nph_processed            (jr376fa),   .npd_processed            (yzbb7d7),   .dmf4a3c           ({(`NUM_VC){1'b0}}),   .dba51e3           ({(`NUM_VC){1'b0}}),


`ifdef X1
      .ble3f94     ((xje943a & ~s2e_cnt_err)),      .co1fca7     ((dz4a1d7 & ~s2e_cnt_err)),


`endif 



`ifdef X4
      .ble3f94     (xje943a),      .co1fca7     (dz4a1d7),


`endif 
   .hofe539         (1'b0),    .vx28f1f                   (cmfaf4a),   .ho478fe                  (vvd7a50),   .gd3c7f2                 ({(8*`NUM_VC){1'b1}}),


`ifdef AER
       .vc_rcvd                  (faf13ed),   .ph_rcvd                  (ng89f6a),   .pd_rcvd                  (ld4fb53),   .nph_rcvd                 (os7da9e),   .npd_rcvd                 (qted4f1),   .credits_rcvd             (yx6a78d),   .malf_pkt_ph              (ea53c6c),   .malf_pkt_pd              (vx9e361),   .malf_pkt_nph             (zkf1b0e),   .malf_pkt_npd             (uk8d873),

`endif

      .kqdb459               (kqdb459),   .psda2c8                 (psda2c8),   .cmd1642                 (cmd1642),   .fp8b211               (fp8b211),   .ww5908f                 (ww5908f),   .nrc8479                 (nrc8479),   .fa423ce            (fa423ce),   .tw11e73           (tw11e73),   .gd8f39a          (gd8f39a),


`ifdef AER
      .fc_overflow              (fc_overflow),


`endif
   .qv33bed                     (qv33bed),   .wy9df6c                    (wy9df6c),   .goefb60                   (goefb60)
   ) ;




`ifdef CFG_REG

pcie_x1_th74f0c vvcd838 (      .sys_clk            ( sys_clk ) ,   .rst_n              ( rst_n ) ,


`ifdef EN_BAR0
      .lqe19dc        ( ldc77a6 ) ,      .dbcee2       ( ou3bd37 ) ,


`endif



`ifdef EN_BAR1
      .go67717        ( kqde9b8 ) ,      .mg3b8b8       ( tuf4dc1 ) ,


`endif



`ifdef EN_BAR2
      .wjdc5c0        ( yma6e0b ) ,      .mre2e05       ( hd37059 ) ,


`endif



`ifdef EN_BAR3
      .oh1702d        ( hqb82cf ) ,      .rib816c       ( goc167a ) ,


`endif



`ifdef EN_BAR4
      .jcc0b62        ( xyb3d0 ) ,      .ym5b13       ( kq59e83 ) ,


`endif



`ifdef EN_BAR5
      .rv2d899        ( pscf418 ) ,      .by6c4ce       ( al7a0c3 ) ,


`endif



`ifdef EN_ER_BAR
      .go62673      ( hod061d ) ,      .ph13398     ( ri830eb ) ,


`endif

   


`ifdef X4
      .bar_hit        ( bar_hit ),      .eace632    ( eace632 ),


`endif



`ifdef X1
      .bar_hit        ( bar_hit ),      .bar_fail       ( bar_fail ),


`endif

      .tlpdec_memrw       ( tlpdec_memrw ) ,   .tlpdec_iorw        ( tlpdec_iorw ) ,   .tlpdec_addr_l32    ( nr5a3be ) ,   .tlpdec_addr_h32    ( med1df6 ) ,   .tlpdec_addr64      ( tlpdec_addr64 )   );

`else
   assign bar_hit    = 7'b0;   assign bar_fail   = 1'b0;

`endif






`RXINTF_DEF ng2fa16 (      .sys_clk            ( sys_clk ) ,   .rst_n              ( rst_n ) ,      .tlpdec_data        ( tlpdec_data ) ,   .tlpdec_st          ( tlpdec_st ) ,   .tlpdec_end         ( tlpdec_end ) ,   .tlpdec_cfgrd       ( tlpdec_cfgrd ) ,


`ifdef ECRC
      .tlpdec_pcie_x1_ecrc_err ( tlpdec_pcie_x1_ecrc_err ),


`endif
   .tlpdec_us_req      ( tlpdec_us_req ),   .tlpdec_malf_tlp    ( tlpdec_malf_tlp ),
      .dl_up              ( dl_up ),   


`ifdef X1
      .cfg_hit         ( (cfg_hit & ~s2e_cnt_err) ) ,      .bar_fail        ( bar_fail ) ,


`endif



`ifdef X4
      .cfg_hit         ( cfg_hit ) ,      .bar_hit_val     ( eace632 ) ,      .tlpdec_dwen     ( baefca ) ,      .tlpdec_tc       ( tlpdec_tc ) ,      .rx_dwen         ( lfa5901 ) ,


`endif
   .bar_hit            ( bar_hit ) ,   .fc_overflow        (fc_overflow),      .trnc_st            ( trnc_st ) ,   .vc_dl_up_fail      ( vc_dl_up_fail ) ,   .cfgec_tvmap        ( cfgec_tvmap ) ,   .rx_bar_hit         ( rx_bar_hit ) ,
   .rx_data            ( bye4ee4 ),   .rx_st              ( bn27722 ),   .rx_end             ( ym3b916 ),


`ifdef ECRC
      .rx_pcie_x1_ecrc_err     ( ofdc8b0 ),


`endif
   .rx_us_req          ( vie4584 ),   .rx_malf_tlp        ( jr22c23 ),      .vc_rcvd         (vc_rcvd),   .ph_rcvd         (ph_rcvd),   .pd_rcvd         (pd_rcvd),   .nph_rcvd        (nph_rcvd),   .npd_rcvd        (npd_rcvd),   .credits_rcvd    (credits_rcvd),   .malf_pkt_ph     (malf_pkt_ph),   .malf_pkt_pd     (malf_pkt_pd),   .malf_pkt_nph    (malf_pkt_nph),   .malf_pkt_npd    (malf_pkt_npd)   );


assign rx_data[D_WIDTH-1:0]     = pu83569 ? pu8333a : rt55dab[D_WIDTH-1:0] ;
assign rx_st[0]          = pu83569 ? xl199d3 : qvaed5e[0] ;
assign rx_end[0]         = pu83569 ? qtcce9e : xw76af5[0] ;

`ifdef X4
   assign ea49c76[0]     = pu83569 ? ipf2c20 : lfa5901[0] ;

`endif



`ifdef ECRC
   assign rx_pcie_x1_ecrc_err[0] = pu83569 ? 1'b0 : ofdc8b0[0] ;

`endif

assign rx_us_req[0]      = pu83569 ? 1'b0 : dbb57aa[0] ;
assign rx_malf_tlp[0]    = pu83569 ? 1'b0 : yzabd56[0] ;


`ifdef VC1



`else 
   assign rx_data[(`NUM_VC*D_WIDTH)-1:D_WIDTH]  = rt55dab[(`NUM_VC*D_WIDTH)-1:D_WIDTH] ;   assign rx_st[`NUM_VC-1:1]          = qvaed5e[`NUM_VC-1:1] ;   assign rx_end[`NUM_VC-1:1]         = xw76af5[`NUM_VC-1:1] ;


`ifdef X4
      assign ea49c76[`NUM_VC-1:1]     = lfa5901[`NUM_VC-1:1] ;


`endif



`ifdef ECRC
      assign rx_pcie_x1_ecrc_err[`NUM_VC-1:1] = ofdc8b0[`NUM_VC-1:1] ;


`endif
   assign rx_us_req[`NUM_VC-1:1]      = dbb57aa[`NUM_VC-1:1] ;   assign rx_malf_tlp[`NUM_VC-1:1]    = yzabd56[`NUM_VC-1:1] ;

`endif






`ifdef X1
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         vidf0d0 <= 1'b0 ;         psd0528 <= 1'b0 ;         ir95b05 <= 1'b0 ;      end      else begin         vidf0d0 <= txintf_st ;         psd0528 <= vidf0d0 ;         ir95b05 <= psd0528 ;      end   end   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         vkad82c <= 1'b0 ;      else if (txintf_st && ip7ffef[12:8] == 5'b01010)         vkad82c <= 1'b1 ;      else if (kqffbe0)         vkad82c <= 1'b0 ;   end      assign ng35745 = vidf0d0 & (ip7ffef[14] == 1'b1) ;      assign anaba2a = (vkad82c & ir95b05 & (ip7ffef[15:13] == 3'b100));

`endif



`ifdef X4
      assign ng35745 = txintf_st & (ip7ffef[46] == 1'b1) ;      assign anaba2a = txintf_st & (ip7ffef[60:56] == 5'b01010) & (ip7ffef[15:13] == 3'b100);

`endif



assign wwef7fd[15] = tlpdec_pois_tlp ;


assign wwef7fd[14] = ip65ec4 & cmd_reg_out[4] ;


assign wwef7fd[13] = vvd8917 ;


assign wwef7fd[12] = ykc48be ;


assign wwef7fd[11] = fp22f89 ;

assign wwef7fd[8] = (ou245f1 | tlpdec_pois_tlp) & cmd_reg_out[4] ;

assign wwef7fd[3] = rgebfe5 ;



`ifdef ENDPOINT_COMP
   assign kd7a1f7 = 1'b0 ;

`else 
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n)         goc47fd <= 1'b0 ;      else         goc47fd <= uk1ab4b[0] ;   end   assign kd7a1f7 = ofc9d7c & ~uk1ab4b[0] ;

`endif




`ifdef CFG_REG
   pcie_x1_pf7e44a #(      .D_WIDTH  ( D_WIDTH ))      lfb54ba (                  .yk7dd7f ( yx416d9 )  ,      .rgeebf9 ( lsb6cc )  ,      .gb75fcb ( uv5b663 )  ,      .bnafe5d ( qgdb31c )  ,      .ip7f2ef ( mrd98e0 )  ,      .vvf977d ( gbcc704 )  ,      .oscbbee ( by63824 )  ,      .ne5df70 ( fp1c123 )  ,      .meefb82 ( eae091f )  ,      .qg7dc11 ( xy48f8 )  ,      .faee089 ( gq247c3 )  ,      .kd7044a ( sj23e19 )  ,      .aa82254 ( ie1f0cd )  ,      .load_id      ( ec218d0 ) ,            .ph2d142      ( rv8484d )  ,      .os68a17      ( ks2426f )  ,      .fn450b8 ( wy21379 )  ,      .rv285c6 ( rv9bc9 )  ,      .fa42e37 ( ps4de4f )  ,      .qv171ba ( al6f27b )  ,      .hqb8dd4 ( vi793dc )  ,      .mrc6ea3 ( qtc9ee2 )  ,      .vx3751c ( jp4f715 )  ,      .rvba8e7 ( fn7b8af )  ,            .icd473e ( shdc57e )  ,            .alc3d44 ( zz8ed0b )  ,      .ba1ea24 ( xw7685e )  ,      .ykf5123 ( cbb42f2 )  ,      .jea8918 ( qva1794 )  ,


`ifdef GEN2
         .qt448c2 ( qt448c2 )  ,


`endif
            .kfbb8eb ( pfd7bf5 )  ,      .gbdc75c ( dobdfaf )  ,      


`ifdef CFG_VCC
         .jra58e0 ( jra58e0 )  ,


`endif

            .sys_clk           ( sys_clk ) ,      .rst_n             ( rst_n ),            .tlp_data          ( xweb765 ),      .tlp_st            ( rt4f606 ),      .tlp_end           ( rt7b037 ),      .tlp_erly_st       ( tlp_erly_st ),      .tx_ca_cplh        ( tx_ca_cplh[7:0] ),      .tx_ca_cplh_infi   ( tx_ca_cplh[8] ),            .phy_link_up      ( db81c22 ) ,      .sh60c2e    ( zz37725 ) ,      .hd6174 ( wlbb92f ) ,      .je30ba7        ( yxdc97c ) ,      .dfrm_perr        ( xwe4be4 ) ,      .dl_active        ( tw25f22 ) ,
            .rxtp_bad_tlp      ( ng2f912 ),      .do3aee2     ( zk7c893 ),      .uvfd0f9        ( zke449b ),      .ipedf31    ( ph224db ),      .zkda02d    ( ir126de ),      .nr4f43e    ( vk936f4 ),      .jcd0fbd        ( fc1b16c ),      .kd7a1f7     ( xl9b7a2 ),



`ifdef CFG_VCC
         .yxc6575 ( ie3e603 ),


`endif




`ifdef ECRC
         .tlp_pcie_x1_ecrc_ok    ( do1f4f ) ,         .pcie_x1_ecrc_gen_enb   ( pcie_x1_ecrc_gen_enb ) ,         .pcie_x1_ecrc_chk_enb   ( pcie_x1_ecrc_chk_enb ) ,


`endif

      


`ifdef AER
         .err_tlp_header ( err_tlp_header ) ,


`endif
      .wwef7fd        ( an8545f ),      .cmpln_tout        ( ykde8b1 ),      .cmpltr_abort_np   ( byf4589 ),      .cmpltr_abort_p    ( hqa2c4a ),      .unexp_cmpln       ( bn16253 ),      .ur_np_ext         ( sjb129e ) ,      .ur_p_ext          ( ng894f4 ) ,      .np_req_pend       ( hb4a7a2 ),      .pme_status        ( nef1611 ) ,      .term_all_cfg      ( os49b3a ) ,      .tj221ea    ( hd9e8b9 ) ,


`ifdef X4
         .mg10f56   ( mg10f56 ) ,         .aa87ab0   ( aa87ab0 ) ,


`endif



`ifdef X1
         .mg10f56   ( 1'b0 ) ,         .aa87ab0   ( 1'b1 ) ,


`endif



`ifdef GEN2
         .sh41830            ( sh41830 ) ,         .drop_resp      ( drop_resp ) ,


`endif

            .cfg_rmux_rd       ( os56b47 ) ,
            .tlpdec_data       ( tlpdec_data ),      .tlpdec_st         ( tlpdec_st ),      .tlpdec_end        ( tlpdec_end ),


`ifdef ECRC
         .tlpdec_pcie_x1_ecrc_err( tlpdec_pcie_x1_ecrc_err ),


`else
         .tlpdec_pcie_x1_ecrc_err( 1'b0 ),


`endif
      .tlpdec_pois_tlp   ( tlpdec_pois_tlp ),      .tlpdec_us_req     ( tlpdec_us_req ),      .tlpdec_malf_tlp   ( tlpdec_malf_tlp ),      .s2e_cnt_err       ( s2e_cnt_err ) ,
            .ADR_I             ( rg4d9d1 ) ,      .DAT_I             ( ps6ce8b ),      .WE_I              ( kq6745a ),      .STB_I             ( tw3a2d0 ),
            .RDAT_O            ( RDAT_O ),      .ACK_O             ( ACK_O ),
            .rt7bfe8            ( lqe19dc ),      .jcdff46            ( go67717 ),      .kqffa33            ( wjdc5c0 ),      .gbfd198            ( oh1702d ),      .ale8cc4            ( jcc0b62 ),      .ui46624            ( rv2d899 ),      .kf33121            ( go62673 ),
      .ykfae93       ( dbcee2 ),      .pfd7498       ( mg3b8b8 ),      .bnba4c6       ( mre2e05 ),      .rtd2637       ( rib816c ),      .pu931be       ( ym5b13 ),      .ym98df2       ( by6c4ce ),      .yxc6f90       ( ph13398 ),      .cfg_hit           ( cfg_hit ),      .nph_processed     ( ble3f94 ) ,      .npd_processed     ( co1fca7 ) ,      .bus_num           ( bus_num ) ,      .dev_num           ( dev_num ) ,      .func_num          ( func_num ) ,      .pm_power_state    ( pm_power_state ) ,      .pme_en            ( pme_en ) ,      .mm_enable         ( mm_enable ) ,      .msi_enable        ( msi_enable ) ,      .mes_laddr         ( mes_laddr ) ,      .mes_uaddr         ( mes_uaddr ) ,      .mes_data          ( mes_data ) ,      .cmd_reg_out       ( cmd_reg_out ),      .dev_cntl_out      ( dev_cntl_out ),      .lnk_cntl_out      ( lnk_cntl_out ),      .ftl_err_out       ( ftl_err_out ),      .nftl_err_out      ( nftl_err_out ),      .cor_err_out       ( cor_err_out ),


`ifdef GEN2
         .dev_cntl_2_out ( dev_cntl_2_out ),         .initiate_flr   ( qgd10f7 ),


`endif

      .sj8780      ( max_pl_size ),      .su43c04        ( ext_sync ),      .pu1e020      ( pu1e020 ),      .cmf0102       ( cmf0102 ),      .cfgcs_losel       ( cfgcs_losel ) ,



`ifdef CFG_VCC
         .rv32bad        ( ) ,         .gd95d6e      ( ) ,         .gdaeb74       ( gdaeb74 ) ,         .cfgec_vcasel      ( cfgec_vcasel ) ,


`ifdef EN_VC0
            .xyadd2d  ( cfgec_tvmap[7:0] ) ,            .zx6e96a   ( zx6e96a ) ,            .th74b57  ( th74b57 ) ,


`endif



`ifdef EN_VC1
            .bna5abf  ( cfgec_tvmap[15:8] ) ,            .bn2d5fe   ( bn2d5fe ) ,            .ip6aff7  ( ip6aff7 ) ,


`endif



`ifdef EN_VC2
            .lq57fbd  ( cfgec_tvmap[23:16] ) ,            .zzbfdeb   ( zzbfdeb ) ,            .vifef5e  ( vifef5e ) ,


`endif



`ifdef EN_VC3
            .qtf7af2  ( cfgec_tvmap[31:24] ) ,            .xybd794   ( xybd794 ) ,            .faebca2  (  faebca2 ) ,


`endif



`ifdef EN_VC4
            .of5e513  ( cfgec_tvmap[39:32] ) ,            .wjf289c   ( wjf289c ) ,            .vx944e4  (  vx944e4 ) ,


`endif



`ifdef EN_VC5
            .zma2727  ( cfgec_tvmap[47:40] ) ,            .lf1393a   ( lf1393a ) ,            .xy9c9d7  ( xy9c9d7 ) ,


`endif



`ifdef EN_VC6
            .pse4eba  ( cfgec_tvmap[55:48] ) ,            .jr275d2   ( jr275d2 ) ,            .ls3ae96  ( ls3ae96 ) ,


`endif



`ifdef EN_VC7
            .pfd74b2  ( cfgec_tvmap[63:56] ) ,            .bnba596   ( bnba596 ) ,            .rtd2cb7  ( rtd2cb7 ) ,


`endif



`endif

            .cfg_rmux_req         ( lf847f7 ),      .cfg_rmux_data        ( kfbea54 ),


`ifdef X4
         .sud11c1     ( cb2c80e ),


`endif
      .cfg_rmux_ae          ( jcfefa9 )      );


`ifdef X4
      assign  tlp_erly_st = (xl199d3 & (pu8333a[60:56] == 5'b00100)) ;


`endif



`ifdef X1
      assign  tlp_erly_st = (xl199d3 & (pu8333a[12:8] == 5'b00100)) ;


`endif


   assign  jr322ef = nee186a ;


`ifdef EN_VC0



`ifdef CFG_VCC
         assign me56173[0]          = th74b57 ;         assign hd63d7[2:0]     = lq76a8a;


`else
         assign me56173[0]          = 1'b1 ;         assign hd63d7[2:0]     = 3'b000;


`endif



`endif



`ifdef EN_VC1
      assign me56173[1]          = ip6aff7 ;      assign hd63d7[5:3]     = lfb5452;


`endif



`ifdef EN_VC2
      assign me56173[2]          = vifef5e ;      assign hd63d7[8:6]     = lfaa296;


`endif



`ifdef EN_VC3
      assign me56173[3]          = faebca2 ;      assign hd63d7[11:9]    = gb514b6;


`endif



`ifdef EN_VC4
      assign me56173[4]          = vx944e4 ;      assign hd63d7[14:12]   = kf8a5b5;


`endif



`ifdef EN_VC5
      assign me56173[5]          = xy9c9d7 ;      assign hd63d7[17:15]   = lq52dad;


`endif



`ifdef EN_VC6
      assign me56173[6]          = ls3ae96 ;      assign hd63d7[20:18]   = xy96d6b;


`endif



`ifdef EN_VC7
      assign me56173[7]          = rtd2cb7 ;      assign hd63d7[23:21]   = oub6b5b;


`endif



`else
   assign cfg_hit             = 1'b0;   assign cfgcs_losel         = 3'b111;   assign hd63d7[2:0]       = 3'b000;   assign cfgec_vcasel        = 3'b0;   assign ext_sync            = 1'b0;   assign pu1e020        = 1'b0;   assign max_pl_size         = 3'b010;   assign msi_enable          = 1'b0;   assign ble3f94   = 1'b0;   assign co1fca7   = 1'b0;   assign cmf0102         = 1'b0;   assign s2e_cnt_err         = 1'b0;   assign me56173[0]            = 1'b1;

`endif




`ifdef GEN2
   always @(posedge sys_clk, negedge rst_n) begin      if (!rst_n) begin         godb5d1       <= ks887b9 ;         initiate_flr <= 1'b0 ;         nrd7443  <= 1'b0 ;         sh41830          <= 1'b0 ;         drop_resp    <= 1'b0 ;      end      else begin         initiate_flr  <= qgd10f7 ;         case (godb5d1)                    ks887b9 : begin               sh41830       <= 1'b0 ;               drop_resp <= 1'b0 ;       if (qgd10f7) begin                  godb5d1 <= go43dc8 ;          if (rgebfe5)                     nrd7443 <= 1'b1 ;               end               else                  godb5d1 <= ks887b9 ;            end        go43dc8 : begin               godb5d1 <= xy1ee40 ;            end    xy1ee40 : begin


`ifdef X4
                  godb5d1 <= blc80e8 ;


`endif



`ifdef X1
                  godb5d1 <= uvf7203 ;


`endif
            end    uvf7203 : begin               godb5d1 <= gqb901d ;            end    gqb901d : begin               godb5d1 <= blc80e8 ;            end            blc80e8 : begin       if (an1d7fc && fcad1cf) begin                  godb5d1 <= pf40746 ;                  nrd7443 <= 1'b0 ;                  drop_resp   <= 1'b1 ;       end               else                  godb5d1 <= blc80e8 ;            end            pf40746 : begin       if (flr_rdy_in) begin                  godb5d1 <= tj3a36 ;                  sh41830    <= 1'b1 ;       end               else                  godb5d1 <= pf40746 ;            end        tj3a36 : begin               godb5d1     <= ks887b9 ;            end            default : begin               godb5d1      <= ks887b9 ;               sh41830         <= 1'b0 ;               nrd7443 <= 1'b0 ;               drop_resp   <= 1'b0 ;            end         endcase      end   end

`endif






`ifdef DEBUG



`ifdef EN_VC0
   assign and1da          = kf90812[0];   assign ho6c162          = tx_rdy[0];   assign ri143b2           = ie24bf4[0];   assign fp136dc          = do25fa0[0];   assign jr819ee         = pu2fd02[0];   assign cmcb3ff         = nt84094[1*D_WIDTH-1:0*D_WIDTH];   assign mgb34d7           = rx_st[0];   assign hq25c6e          = rx_end[0];   assign fn7b1fb         = rx_data[1*D_WIDTH-1:0*D_WIDTH];

`endif



`ifdef EN_VC1
   assign ea68ed4          = kf90812[1];   assign en60b13          = tx_rdy[1];   assign uxa1d93           = ie24bf4[1];   assign zz9b6e6          = do25fa0[1];   assign bncf77         = pu2fd02[1];   assign yk59ff9         = nt84094[2*D_WIDTH-1:1*D_WIDTH];   assign wl9a6b9           = rx_st[1];   assign uk2e372          = rx_end[1];   assign xjd8fdf         = rx_data[2*D_WIDTH-1:1*D_WIDTH];

`endif



`ifdef EN_VC2
   assign by476a0          = kf90812[2];   assign wy589c          = tx_rdy[2];   assign vkec9c           = ie24bf4[2];   assign eadb736          = do25fa0[2];   assign qg67bbf         = pu2fd02[2];   assign xwcffc8         = nt84094[3*D_WIDTH-1:2*D_WIDTH];   assign ipd35cc           = rx_st[2];   assign bl71b90          = rx_end[2];   assign rtc7efe         = rx_data[3*D_WIDTH-1:2*D_WIDTH];

`endif



`ifdef EN_VC3
   assign mg3b503          = kf90812[3];   assign an2c4e1          = tx_rdy[3];   assign rg764e2           = ie24bf4[3];   assign sudb9b0          = do25fa0[3];   assign vx3ddf9         = pu2fd02[3];   assign ip7fe42         = nt84094[4*D_WIDTH-1:3*D_WIDTH];   assign wl9ae64           = rx_st[3];   assign ks8dc87          = rx_end[3];   assign hq3f7f6         = rx_data[4*D_WIDTH-1:3*D_WIDTH];

`endif



`ifdef EN_VC4
   assign zkda819          = kf90812[4];   assign yk6270d          = tx_rdy[4];   assign jeb2713           = ie24bf4[4];   assign gbdcd81          = do25fa0[4];   assign tueefcf         = pu2fd02[4];   assign osff214         = nt84094[5*D_WIDTH-1:4*D_WIDTH];   assign nrd7325           = rx_st[4];   assign nr6e439          = rx_end[4];   assign lqfbfb3         = rx_data[5*D_WIDTH-1:4*D_WIDTH];

`endif



`ifdef EN_VC5
   assign icd40cb          = kf90812[5];   assign db13868          = tx_rdy[5];   assign xy9389b           = ie24bf4[5];   assign lde6c0c          = do25fa0[5];   assign ui77e7b         = pu2fd02[5];   assign rtf90a1         = nt84094[6*D_WIDTH-1:5*D_WIDTH];   assign ieb992e           = rx_st[5];   assign ui721ce          = rx_end[5];   assign nedfd9a         = rx_data[6*D_WIDTH-1:5*D_WIDTH];

`endif



`ifdef EN_VC6
   assign bna0659          = kf90812[6];   assign ls9c347          = tx_rdy[6];   assign pu9c4db           = ie24bf4[6];   assign gd36067          = do25fa0[6];   assign fpbf3d8         = pu2fd02[6];   assign ldc850e         = nt84094[7*D_WIDTH-1:6*D_WIDTH];   assign uvcc971           = rx_st[6];   assign ir90e71          = rx_end[6];   assign rgfecd3         = rx_data[7*D_WIDTH-1:6*D_WIDTH];

`endif



`ifdef EN_VC7
   assign fp32cf          = kf90812[7];   assign bye1a3b          = tx_rdy[7];   assign ipe26db           = ie24bf4[7];   assign bnb033d          = do25fa0[7];   assign xjf9ec7         = pu2fd02[7];   assign ps42876         = nt84094[8*D_WIDTH-1:7*D_WIDTH];   assign pf64b8d           = rx_st[7];   assign uk8738c          = rx_end[7];   assign ldf669a         = rx_data[8*D_WIDTH-1:7*D_WIDTH];

`endif




`ifdef X4



`ifdef EN_VC0
      assign kf39c61         = rg58e31[0];      assign of7ad17         = ea49c76[0];


`endif



`ifdef EN_VC1
      assign icce30d         = rg58e31[1];      assign mrd68bc         = ea49c76[1];


`endif



`ifdef EN_VC2
      assign xj71869         = rg58e31[2];      assign gdb45e5         = ea49c76[2];


`endif



`ifdef EN_VC3
      assign fc8c34f         = rg58e31[3];      assign vka2f2c         = ea49c76[3];


`endif



`ifdef EN_VC4
      assign vv61a7a         = rg58e31[4];      assign ir17963         = ea49c76[4];


`endif



`ifdef EN_VC5
      assign epd3d6         = rg58e31[5];      assign ymbcb1d         = ea49c76[5];


`endif



`ifdef EN_VC6
      assign lq69eb4         = rg58e31[6];      assign qge58e9         = ea49c76[6];


`endif



`ifdef EN_VC7
      assign hb4f5a2         = rg58e31[7];      assign qv2c748         = ea49c76[7];


`endif



`endif




`endif  //End of DEBUG


always@* begin yx416d9<={yk7dd7f>>1,ux17adf[0]};lsb6cc<={rgeebf9>>1,ux17adf[1]};uv5b663<={gb75fcb>>1,ux17adf[2]};qgdb31c<={bnafe5d>>1,ux17adf[3]};mrd98e0<={ip7f2ef>>1,ux17adf[4]};gbcc704<={vvf977d>>1,ux17adf[5]};by63824<={oscbbee>>1,ux17adf[6]};fp1c123<={ne5df70>>1,ux17adf[7]};eae091f<={meefb82>>1,ux17adf[8]};xy48f8<={qg7dc11>>1,ux17adf[9]};gq247c3<={faee089>>1,ux17adf[10]};sj23e19<={kd7044a>>1,ux17adf[11]};ie1f0cd<={aa82254>>1,ux17adf[12]};ec218d0<=ux17adf[13];rv8484d<={ph2d142>>1,ux17adf[14]};ks2426f<={os68a17>>1,ux17adf[15]};wy21379<={fn450b8>>1,ux17adf[16]};rv9bc9<={rv285c6>>1,ux17adf[17]};ps4de4f<={fa42e37>>1,ux17adf[18]};al6f27b<={qv171ba>>1,ux17adf[19]};vi793dc<={hqb8dd4>>1,ux17adf[20]};qtc9ee2<={mrc6ea3>>1,ux17adf[21]};jp4f715<={vx3751c>>1,ux17adf[22]};fn7b8af<={rvba8e7>>1,ux17adf[23]};shdc57e<={icd473e>>1,ux17adf[24]};zz8ed0b<={alc3d44>>1,ux17adf[25]};xw7685e<={ba1ea24>>1,ux17adf[26]};cbb42f2<={ykf5123>>1,ux17adf[27]};qva1794<={jea8918>>1,ux17adf[28]};pfd7bf5<={kfbb8eb>>1,ux17adf[29]};dobdfaf<={gbdc75c>>1,ux17adf[30]};fp221ed<={an8a0cc>>1,ux17adf[31]};ec10f6e<={ld50665>>1,ux17adf[32]};lf3db80<={jr1997b>>1,ux17adf[33]};shedc07<={ipccbde>>1,ux17adf[34]};gb701e6<={ls2f7ac>>1,ux17adf[35]};wl80f34<={hb7bd62>>1,ux17adf[36]};an79a5<={godeb16>>1,ux17adf[37]};cb3cd2c<={mef58b1>>1,ux17adf[38]};oh33a1f<={ec5913>>1,ux17adf[39]};pu83569<=ux17adf[40];cz4168c<=ux17adf[41];ou82307<={msi>>1,ux17adf[42]};xj50460<={msi_tc>>1,ux17adf[43]};kf90812<={tx_req>>1,ux17adf[44]};nt84094<={tx_data>>1,ux17adf[45]};ie24bf4<={tx_st>>1,ux17adf[46]};do25fa0<={tx_end>>1,ux17adf[47]};pu2fd02<={tx_nlfy>>1,ux17adf[48]};db81c22<=ux17adf[49];zz37725<=ux17adf[50];wlbb92f<=ux17adf[51];yxdc97c<={je30ba7>>1,ux17adf[52]};ui5cc8e<={phy_cfgln_sum>>1,ux17adf[53]};xwe4be4<=ux17adf[54];nt9e1f3<={dll_pause_cnt>>1,ux17adf[55]};mt1299d<=ux17adf[56];pu8333a<={rxtp_data>>1,ux17adf[57]};xl199d3<=ux17adf[58];qtcce9e<=ux17adf[59];ng2f912<=ux17adf[60];zk7c893<=ux17adf[61];zke449b<=ux17adf[62];ph224db<=ux17adf[63];ir126de<=ux17adf[64];ip708bb<=ux17adf[65];rv845dd<=ux17adf[66];jr22eee<=ux17adf[67];qv17777<={ie92eeb>>1,ux17adf[68]};xl9492f<={phbf50c>>1,ux17adf[69]};mta497e<={wwfa867>>1,ux17adf[70]};uk1ab4b<={dl_up>>1,ux17adf[71]};tw25f22<=ux17adf[72];fc3076f<=ux17adf[73];ie3e603<={vcneg_pend>>1,ux17adf[74]};al65e74<=ux17adf[75];ic77026<=ux17adf[76];pub8131<=ux17adf[77];ri2f3a4<={ba8983e>>1,ux17adf[78]};by79d22<={qg4c1f3>>1,ux17adf[79]};osce913<={en60f98>>1,ux17adf[80]};bn131ee<={bn81991>>1,ux17adf[81]};qi98f76<={phcc8f>>1,ux17adf[82]};nrc7bb0<={zk6647f>>1,ux17adf[83]};db3dd86<={lf323fa>>1,ux17adf[84]};fpb0ddb<={gb7f5f4>>1,ux17adf[85]};ri86edf<={cmfafa5>>1,ux17adf[86]};jr376fa<={nph_processed>>1,ux17adf[87]};yzbb7d7<={npd_processed>>1,ux17adf[88]};cmfaf4a<={vx28f1f>>1,ux17adf[89]};vvd7a50<={ho478fe>>1,ux17adf[90]};ykde8b1<=ux17adf[91];byf4589<=ux17adf[92];hqa2c4a<=ux17adf[93];bn16253<=ux17adf[94];sjb129e<=ux17adf[95];ng894f4<=ux17adf[96];hb4a7a2<=ux17adf[97];nef1611<=ux17adf[98];os49b3a<=ux17adf[99];hd9e8b9<=ux17adf[100];rg4d9d1<={ADR_I>>1,ux17adf[101]};ps6ce8b<={DAT_I>>1,ux17adf[102]};kq6745a<=ux17adf[103];tw3a2d0<=ux17adf[104];icc1daa<={tlpdec_tc>>1,ux17adf[105]};nee186a<={cfgec_tvmap>>1,ux17adf[106]};lq76a8a<={zx6e96a>>1,ux17adf[107]};lfb5452<={bn2d5fe>>1,ux17adf[108]};lfaa296<={zzbfdeb>>1,ux17adf[109]};gb514b6<={xybd794>>1,ux17adf[110]};kf8a5b5<={wjf289c>>1,ux17adf[111]};lq52dad<={lf1393a>>1,ux17adf[112]};xy96d6b<={jr275d2>>1,ux17adf[113]};oub6b5b<={bnba596>>1,ux17adf[114]};mg87279<={cfgec_vcasel>>1,ux17adf[115]};ip7ffef<={txintf_data>>1,ux17adf[116]};thd8ef4<={cfg_rmux_data>>1,ux17adf[117]};ldc77a6<={lqe19dc>>1,ux17adf[118]};ou3bd37<={dbcee2>>1,ux17adf[119]};kqde9b8<={go67717>>1,ux17adf[120]};tuf4dc1<={mg3b8b8>>1,ux17adf[121]};yma6e0b<={wjdc5c0>>1,ux17adf[122]};hd37059<={mre2e05>>1,ux17adf[123]};hqb82cf<={oh1702d>>1,ux17adf[124]};goc167a<={rib816c>>1,ux17adf[125]};xyb3d0<={jcc0b62>>1,ux17adf[126]};kq59e83<={ym5b13>>1,ux17adf[127]};pscf418<={rv2d899>>1,ux17adf[128]};al7a0c3<={by6c4ce>>1,ux17adf[129]};hod061d<={go62673>>1,ux17adf[130]};ri830eb<={ph13398>>1,ux17adf[131]};nr5a3be<={tlpdec_addr_l32>>1,ux17adf[132]};med1df6<={tlpdec_addr_h32>>1,ux17adf[133]};xweb765<={ux805bb>>1,ux17adf[134]};gda46c5<={bar_hit>>1,ux17adf[135]};xje943a<=ux17adf[136];dz4a1d7<=ux17adf[137];an8545f<={wwef7fd>>1,ux17adf[138]};rt55dab<={bye4ee4>>1,ux17adf[139]};qvaed5e<={bn27722>>1,ux17adf[140]};xw76af5<={ym3b916>>1,ux17adf[141]};dbb57aa<={vie4584>>1,ux17adf[142]};yzabd56<={jr22c23>>1,ux17adf[143]};en6a5b4<=ux17adf[144];qva190d<=ux17adf[145];phaad68<=ux17adf[146];os56b47<=ux17adf[147];xlb5a39<=ux17adf[148];fcad1cf<=ux17adf[149];ne473d8<={kfbea54>>1,ux17adf[150]};pu1e0fd<=ux17adf[151];cmf07ea<=ux17adf[152];jp7b0eb<=ux17adf[153];qtc3aff<={int_msg_data>>1,ux17adf[154]};an1d7fc<=ux17adf[155];rgebfe5<=ux17adf[156];gd82d1<=ux17adf[157];uiff95f<=ux17adf[158];aye57c7<={err_msg_data>>1,ux17adf[159]};uk2be39<=ux17adf[160];hb50da7<=ux17adf[161];ng86d3e<=ux17adf[162];zxc7275<={zzbf11f>>1,ux17adf[163]};yz393af<=ux17adf[164];ofc9d7c<=ux17adf[165];sh4ebe5<=ux17adf[166];uv75f2c<=ux17adf[167];jraf965<=ux17adf[168];tu7cb2f<=ux17adf[169];vk936f4<=ux17adf[170];xl9b7a2<=ux17adf[171];ip65ec4<=ux17adf[172];do2f624<=ux17adf[173];vv7b122<=ux17adf[174];vvd8917<=ux17adf[
175];ykc48be<=ux17adf[176];ou245f1<=ux17adf[177];fp22f89<=ux17adf[178];kqffbe0<=ux17adf[179];gbfdf00<=ux17adf[180];faf13ed<={vc_rcvd>>1,ux17adf[181]};ng89f6a<=ux17adf[182];ld4fb53<=ux17adf[183];os7da9e<=ux17adf[184];qted4f1<=ux17adf[185];yx6a78d<={credits_rcvd>>1,ux17adf[186]};ea53c6c<=ux17adf[187];vx9e361<=ux17adf[188];zkf1b0e<=ux17adf[189];uk8d873<=ux17adf[190];fc1b16c<=ux17adf[191];bl61ccb<=ux17adf[192];zme65e<=ux17adf[193];by732f3<=ux17adf[194];ls9979b<=ux17adf[195];end
always@* begin db22f5b[2047]<=rgeebf9[0];db22f5b[2046]<=gb75fcb[0];db22f5b[2044]<=bnafe5d[0];db22f5b[2040]<=ip7f2ef[0];db22f5b[2032]<=vvf977d[0];db22f5b[2018]<=msi[0];db22f5b[2017]<=oscbbee[0];db22f5b[1989]<=msi_tc[0];db22f5b[1987]<=ne5df70[0];db22f5b[1947]<=ADR_I[0];db22f5b[1934]<=err_msg_ae;db22f5b[1931]<=tx_req[0];db22f5b[1927]<=meefb82[0];db22f5b[1893]<=xybd794[0];db22f5b[1891]<=ec1ff45;db22f5b[1880]<=credits_rcvd[0];db22f5b[1865]<=fn450b8[0];db22f5b[1859]<=jr1997b[0];db22f5b[1857]<=tlpdec_rvcd_sts_ca;db22f5b[1847]<=DAT_I[0];db22f5b[1844]<=phy_cfgln_sum[0];db22f5b[1829]<=go67717[0];db22f5b[1821]<=arb_enable;db22f5b[1815]<=tx_data[0];db22f5b[1806]<=qg7dc11[0];db22f5b[1779]<=pme_status;db22f5b[1772]<=zx6e96a[0];db22f5b[1739]<=wjf289c[0];db22f5b[1735]<=wwffa29;db22f5b[1719]<=cmpltr_abort_p;db22f5b[1717]<=npd_processed[0];db22f5b[1712]<=malf_pkt_ph;db22f5b[1702]<=tlpdec_addr_l32[0];db22f5b[1696]<=bn27722[0];db22f5b[1682]<=rv285c6[0];db22f5b[1674]<=rxtp_st;db22f5b[1671]<=ipccbde[0];db22f5b[1667]<=ng35745;db22f5b[1646]<=WE_I;db22f5b[1640]<=dfrm_perr;db22f5b[1628]<=bnba596[0];db22f5b[1611]<=int_msg_rd;db22f5b[1610]<=mg3b8b8[0];db22f5b[1603]<=qg4c1f3[0];db22f5b[1595]<=arb_enable2;db22f5b[1594]<=kd7a1f7;db22f5b[1582]<=tx_st[0];db22f5b[1565]<=faee089[0];db22f5b[1564]<=kq46dac;db22f5b[1510]<=term_all_cfg;db22f5b[1507]<=err_msg_req;db22f5b[1497]<=bn2d5fe[0];db22f5b[1488]<=an8a0cc[0];db22f5b[1485]<=hd6174;db22f5b[1481]<=lqe19dc[0];db22f5b[1468]<=ur_p_ext;db22f5b[1453]<=cmpln_tout;db22f5b[1449]<=go62673[0];db22f5b[1431]<=lf1393a[0];db22f5b[1422]<=yxfd148;db22f5b[1415]<=malf_pkt_npd;db22f5b[1391]<=unexp_cmpln;db22f5b[1387]<=vx28f1f[0];db22f5b[1386]<=rv2d899[0];db22f5b[1377]<=malf_pkt_pd;db22f5b[1357]<=tlpdec_addr_h32[0];db22f5b[1345]<=ym3b916[0];db22f5b[1333]<=bar_hit[0];db22f5b[1326]<=ba1ea24[0];db22f5b[1317]<=fa42e37[0];db22f5b[1300]<=rxtp_end;db22f5b[1297]<=ym97759;db22f5b[1295]<=ls2f7ac[0];db22f5b[1287]<=anaba2a;db22f5b[1286]<=jr22c23[0];db22f5b[1245]<=STB_I;db22f5b[1236]<=co1fca7;db22f5b[1233]<=dll_pause_cnt[0];db22f5b[1212]<=int_msg_ae;db22f5b[1210]<=jea8918[0];db22f5b[1209]<=cfgec_vcasel[0];db22f5b[1197]<=rib816c[0];db22f5b[1189]<=rvba8e7[0];db22f5b[1175]<=err_msg_rd;db22f5b[1173]<=wjdc5c0[0];db22f5b[1172]<=hqb8dd4[0];db22f5b[1158]<=en60f98[0];db22f5b[1142]<=zzbf11f[0];db22f5b[1140]<=f_nf_emsg_sent;db22f5b[1124]<=phy_l0_l0s;db22f5b[1116]<=tx_end[0];db22f5b[1105]<=do3aee2;db22f5b[1094]<=dl_up[0];db22f5b[1092]<=jpdd644;db22f5b[1087]<=godeb16[0];db22f5b[1082]<=kd7044a[0];db22f5b[1080]<=ep36d60;db22f5b[1077]<=zk6647f[0];db22f5b[1053]<=txintf_nlfy;db22f5b[1049]<=cfg_rmux_rd;db22f5b[1023]<=yk7dd7f[0];db22f5b[1009]<=inta_n;db22f5b[973]<=tj221ea;db22f5b[967]<=err_msg_data[0];db22f5b[946]<=zzbfdeb[0];db22f5b[945]<=yz23fe8;db22f5b[940]<=npd_rcvd;db22f5b[932]<=os68a17[0];db22f5b[929]<=ld50665[0];db22f5b[928]<=tlpdec_rvcd_sts_ur;db22f5b[922]<=je30ba7[0];db22f5b[914]<=dbcee2[0];db22f5b[889]<=np_req_pend;db22f5b[886]<=cfgec_tvmap[0];db22f5b[859]<=cmpltr_abort_np;db22f5b[858]<=nph_processed[0];db22f5b[851]<=ph13398[0];db22f5b[848]<=bye4ee4[0];db22f5b[837]<=rxtp_data[0];db22f5b[814]<=jr275d2[0];db22f5b[805]<=kfbea54[0];db22f5b[801]<=ba8983e[0];db22f5b[797]<=nr4f43e;db22f5b[782]<=fc_overflow;db22f5b[753]<=int_disable;db22f5b[744]<=gbdc75c[0];db22f5b[742]<=sh60c2e;db22f5b[740]<=cfg_rmux_data[0];db22f5b[734]<=ur_np_ext;db22f5b[726]<=ho478fe[0];db22f5b[724]<=by6c4ce[0];db22f5b[707]<=malf_pkt_nph;db22f5b[693]<=ym5b13[0];db22f5b[666]<=ux805bb[0];db22f5b[663]<=alc3d44[0];db22f5b[648]<=zkda02d;db22f5b[643]<=vie4584[0];db22f5b[618]<=ble3f94;db22f5b[606]<=int_msg_data[0];db22f5b[605]<=ykf5123[0];db22f5b[598]<=oh1702d[0];db22f5b[594]<=vx3751c[0];db22f5b[586]<=qv171ba[0];db22f5b[562]<=vcneg_pend[0];db22f5b[552]<=rxtp_bad_tlp;db22f5b[547]<=wwfa867[0];db22f5b[546]<=uxbbac8;db22f5b[543]<=hb7bd62[0];db22f5b[538]<=phcc8f[0];db22f5b[526]<=txintf_end;db22f5b[524]<=tlpdec_cfgrd;db22f5b[504]<=tlp_debug;db22f5b[472]<=goc47fd;db22f5b[470]<=nph_rcvd;db22f5b[466]<=ph2d142[0];db22f5b[464]<=rchk_credit_cpl;db22f5b[443]<=tlpdec_tc[0];db22f5b[429]<=cmfafa5[0];db22f5b[424]<=wwef7fd[0];db22f5b[418]<=txtp_rdy;db22f5b[402]<=jcfefa9;db22f5b[400]<=zm1b275;db22f5b[376]<=int_pending;db22f5b[372]<=kfbb8eb[0];db22f5b[371]<=phy_link_up;db22f5b[370]<=txintf_data[0];db22f5b[346]<=jcc0b62[0];db22f5b[331]<=icd473e[0];db22f5b[324]<=ipedf31;db22f5b[303]<=int_msg_req;db22f5b[299]<=mre2e05[0];db22f5b[297]<=mrc6ea3[0];db22f5b[281]<=dl_inactive;db22f5b[273]<=phbf50c[0];db22f5b[269]<=bn81991[0];db22f5b[252]<=ec5913[0];db22f5b[236]<=cfg_rmux_req;db22f5b[235]<=pd_rcvd;db22f5b[233]<=load_id;db22f5b[232]<=rchk_credit_p;db22f5b[225]<=wj60839;db22f5b[214]<=gb7f5f4[0];db22f5b[201]<=cfg_rmux_end;db22f5b[200]<=wjc364e;db22f5b[185]<=tx_nlfy[0];db22f5b[162]<=uvfd0f9;db22f5b[140]<=dl_active;db22f5b[136]<=ie92eeb[0];db22f5b[126]<=mef58b1[0];db22f5b[117]<=ph_rcvd;db22f5b[116]<=aa82254[0];db22f5b[112]<=ecb6b04;db22f5b[107]<=lf323fa[0];db22f5b[100]<=mt23fbe;db22f5b[58]<=vc_rcvd[0];db22f5b[50]<=lf847f7;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_oh8ad06 (
                f_clk ,
                s_clk ,
                rst_n ,
                in_fclk,
                out_sclk
               );
parameter WIDTH = 1 ;
input              f_clk ;
input              s_clk ;
input              rst_n ;
input  [WIDTH-1:0] in_fclk ;
output [WIDTH-1:0] out_sclk ;
reg [WIDTH-1:0]   qgeff86 ;
reg [WIDTH-1:0]   nefe18c ;
reg [WIDTH-1:0]   zm86319 ;
reg [WIDTH-1:0]   xy8c659 ;
reg [WIDTH-1:0]   xl19652 ;
wire [WIDTH-1:0]  ww594b9 ;
wire [WIDTH-1:0]  out_sclk ;
integer db9be6b ;
reg [WIDTH - 1 : 0] ipc96c0;
reg [WIDTH - 1 : 0] yx5b025;
reg [WIDTH - 1 : 0] jcc0967;
reg [WIDTH - 1 : 0] xy259db;
reg [WIDTH - 1 : 0] yk676d4;
reg [WIDTH - 1 : 0] godb501;
reg [WIDTH - 1 : 0] kqd4043;
reg [2047:0] db22f5b;
wire [6:0] ux17adf;

localparam ribd6fd = 7,jceb7ea = 32'hfdfff10b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;








always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      qgeff86 <= {WIDTH{1'b0}};   else      for (db9be6b = 0; db9be6b <= WIDTH-1; db9be6b = db9be6b+1) begin         qgeff86[db9be6b] <= (kqd4043[db9be6b]== 1'b1) ? yx5b025[db9be6b] : ipc96c0[db9be6b];      end
end


always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      xy8c659 <= {WIDTH{1'b0}};   else      xy8c659 <= yx5b025;
end

always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      xl19652 <= {WIDTH{1'b0}};   else      xl19652 <= yk676d4;
end

assign out_sclk  = godb501 ;


always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      nefe18c <= {WIDTH{1'b0}};   else      nefe18c <= godb501;
end

always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      zm86319 <= {WIDTH{1'b0}};   else      zm86319 <= jcc0967;
end



assign ww594b9  = yx5b025 ^ xy259db;
always@* begin ipc96c0<={in_fclk>>1,ux17adf[0]};yx5b025<={qgeff86>>1,ux17adf[1]};jcc0967<={nefe18c>>1,ux17adf[2]};xy259db<={zm86319>>1,ux17adf[3]};yk676d4<={xy8c659>>1,ux17adf[4]};godb501<={xl19652>>1,ux17adf[5]};kqd4043<={ww594b9>>1,ux17adf[6]};end
always@* begin db22f5b[2047]<=qgeff86[0];db22f5b[2046]<=nefe18c[0];db22f5b[2044]<=zm86319[0];db22f5b[2040]<=xy8c659[0];db22f5b[2032]<=xl19652[0];db22f5b[2016]<=ww594b9[0];db22f5b[1023]<=in_fclk[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






























`timescale 1 ns / 100 ps
module pcie_x1_pipe_x1 (
   
   rst_n,              
   sys_clk,            
   
   pclk,               
   rx_data,            
   rx_data_k,          
   rx_valid,           
   rx_elec_idle,       
   rx_status,          
   phy_status,         

   
   phy_disable_scr,    
   phy_inv_polar,      
   phy_eidle_tx,       
   phy_godet_rx,       
   phy_sloopback,      
   phy_snd_beacon,     
   phy_data,           
   phy_kcntl,          
   phy_fndisp,         
   phy_ltssm_state,    
   l0s_tx_state,       
   l1_state,           
   l2_state,           

   
   force_lsm_active,   
   force_rec_ei,       
   force_phy_status,   

   
   
   tx_data,            
   tx_data_k,          
   tx_elec_idle,       
   tx_compliance,      
   rx_polarity,        
   tx_detect_rx_lb,    
   reset_n,            
   power_down,         

   
   asb_data,           
   asb_kcntl,          
   asb_err,            
   asb_eidle_rx,       
   asb_detdone_rx,     
   asb_detres_rx,      
   asb_beacon_rx,      
   asb_lane_sync,      
   asb_dskew_rx        
   );

`ifdef LW1
parameter LANE_WIDTH = 1 ;

`else

`ifdef LW2
parameter LANE_WIDTH = 2 ;

`else

`ifdef LW4
parameter LANE_WIDTH = 4 ;

`else
parameter LANE_WIDTH = 1 ;

`endif

`endif

`endif

`ifdef X4
parameter D_WIDTH = 64 ;

`endif

`ifdef X1
parameter D_WIDTH = 16 ;

`endif
parameter K27_7 = 8'hFB ;
parameter K28_0 = 8'h1C ;
parameter K28_2 = 8'h5C ;
parameter K28_3 = 8'h7C ;
parameter K28_5 = 8'hBC ;
parameter K29_7 = 8'hFD ;
parameter K30_7 = 8'hFE ;
parameter K23_7 = 8'hF7 ;
parameter K28_1 = 8'h3C ;
parameter D5_2  = 8'h45 ;
parameter D10_2 = 8'h4A ;
parameter D21_5 = 8'hB5 ;
parameter D26_5 = 8'hBA ;
parameter COM = K28_5 ;
parameter STP = K27_7 ;
parameter SDP = K28_2 ;
parameter END = K29_7 ;
parameter EDB = K30_7 ;
parameter SKP = K28_0 ;
parameter IDL = K28_3 ;
parameter PAD = K23_7 ;
parameter FTS = K28_1 ;
parameter OS_WIDTH      = 4 ;
parameter OS_T1_LIP_LAP = 4'd0 ;
parameter OS_T2_LIP_LAP = 4'd1 ;
parameter OS_COMPLI     = 4'd2 ;
parameter OS_T1         = 4'd3 ;
parameter OS_T2         = 4'd4 ;
parameter OS_IDLE       = 4'd5 ;
parameter OS_EIDLE      = 4'd6 ;
parameter OS_NFTS       = 4'd7 ;
parameter OS_BEACON     = 4'd8 ;
parameter DSM_WIDTH    = 2 ;
parameter PSM_WIDTH    = 2 ;
parameter RSM_WIDTH    = 2 ;
parameter L0SM_WIDTH   = 2 ;
parameter L0sTSM_WIDTH = 2 ;
parameter L0sRSM_WIDTH = 2 ;
parameter L1SM_WIDTH   = 1 ;
parameter L2SM_WIDTH   = 1 ;
parameter DISM_WIDTH   = 2 ;
parameter LBSM_WIDTH   = 2 ;
parameter HRSM_WIDTH   = 1 ;
parameter CFGSM_WIDTH  = 2 ;
parameter MSM_WIDTH    = 3 ;
parameter DETECT    = 4'd0 ;
parameter POLLING   = 4'd1 ;
parameter CONFIG    = 4'd2 ;
parameter L0        = 4'd3 ;
parameter L0s       = 4'd4 ;
parameter L1        = 4'd5 ;
parameter L2        = 4'd6 ;
parameter RECOVERY  = 4'd7 ;
parameter LOOPBACK  = 4'd8 ;
parameter HOTRST    = 4'd9 ;
parameter DISABLED  = 4'd10 ;

`ifdef VC1
parameter FADDR = 3 ;

`else 

`ifdef VC2
parameter FADDR = 3 ;

`else 

`ifdef VC3 
parameter FADDR = 5 ;

`else

`ifdef VC4
parameter FADDR = 5 ;

`else
parameter FADDR = 6 ;

`endif

`endif

`endif

`endif
localparam fncd47f     = 2'd2 ;
localparam shfdfe0     = 2'd1 ;
localparam uieff05 = 2'd2 ;
localparam ne63021 = 3'd3 ;
input                     sys_clk;
input                     rst_n;
input                     pclk;
input [LANE_WIDTH*8-1:0]  rx_data;
input [LANE_WIDTH-1:0]    rx_data_k;
input [LANE_WIDTH-1:0]    rx_valid;
input [LANE_WIDTH-1:0]    rx_elec_idle;
input [LANE_WIDTH*3-1:0]  rx_status;
input                     phy_status;
input [LANE_WIDTH-1:0]    phy_disable_scr;
input [LANE_WIDTH-1:0]    phy_inv_polar;
input [LANE_WIDTH-1:0]    phy_eidle_tx;
input [LANE_WIDTH-1:0]    phy_godet_rx;
input [LANE_WIDTH-1:0]    phy_sloopback;
input [LANE_WIDTH-1:0]    phy_snd_beacon;
input [LANE_WIDTH*8-1:0]  phy_data;
input [LANE_WIDTH-1:0]    phy_kcntl;
input [LANE_WIDTH-1:0]    phy_fndisp;
input [MSM_WIDTH:0]       phy_ltssm_state;
input [L0sTSM_WIDTH:0]    l0s_tx_state;
input [L1SM_WIDTH:0]      l1_state;
input [L2SM_WIDTH:0]      l2_state;
input                     force_lsm_active;
input                     force_rec_ei;
input                     force_phy_status;
output [LANE_WIDTH*8-1:0] tx_data;
output [LANE_WIDTH-1:0]   tx_data_k;
output                    tx_detect_rx_lb;
output [LANE_WIDTH-1:0]   tx_elec_idle;
output [LANE_WIDTH-1:0]   tx_compliance;
output [LANE_WIDTH-1:0]   rx_polarity;
output                    reset_n;
output [1:0]              power_down;
output [LANE_WIDTH*8-1:0] asb_data;
output [LANE_WIDTH-1:0]   asb_kcntl;
output [LANE_WIDTH-1:0]   asb_err;
output [LANE_WIDTH-1:0]   asb_eidle_rx;
output [LANE_WIDTH-1:0]   asb_detdone_rx;
output [LANE_WIDTH-1:0]   asb_detres_rx;
output [LANE_WIDTH-1:0]   asb_beacon_rx;
output [LANE_WIDTH-1:0]   asb_lane_sync;
output                    asb_dskew_rx;
wire                      gqa349e;
wire                      mg1a4f0;
wire                      hbd2780;
reg [1:0]                 ng93c06              ;
reg [1:0]                 ph9e033              ;
reg [1:0]                 power_down;
reg                       qv80cf0;
reg                       fp6785;
reg                       ux33c2f;
reg                       fp9e17c;
wire   [7:0]              ayf0be6;
wire                      ep85f31;
parameter P0  = 2'b00;
parameter P0s = 2'b10;
parameter P1  = 2'b10;
parameter P2  = 2'b11;
reg ks8d6f1, jp6b788 ;

`ifdef ECP3

`else 

`endif 
reg [LANE_WIDTH * 8 - 1 : 0] osde235;
reg [LANE_WIDTH - 1 : 0] ks88d42;
reg [LANE_WIDTH - 1 : 0] do35088;
reg [LANE_WIDTH - 1 : 0] by42213;
reg [LANE_WIDTH * 3 - 1 : 0] mg884db;
reg xw426d8;
reg [LANE_WIDTH - 1 : 0] fp9b61e;
reg [LANE_WIDTH - 1 : 0] pfd87b0;
reg [LANE_WIDTH - 1 : 0] ng1ec3c;
reg [LANE_WIDTH - 1 : 0] bnb0f1f;
reg [LANE_WIDTH - 1 : 0] ep3c7f8;
reg [LANE_WIDTH - 1 : 0] ec1fe27;
reg [LANE_WIDTH * 8 - 1 : 0] czf89c9;
reg [LANE_WIDTH - 1 : 0] bn27269;
reg [LANE_WIDTH - 1 : 0] enc9a74;
reg [MSM_WIDTH : 0] xy30384;
reg [L0sTSM_WIDTH : 0] th74a94;
reg [L1SM_WIDTH : 0] do2a53f;
reg [L2SM_WIDTH : 0] lf94fd3;
reg twa7e9e;
reg ri3f4f3;
reg mefa79b;
reg ald3cd9;
reg ph9e6cd;
reg fnf366e;
reg [1 : 0] tj9b377;
reg [1 : 0] kdd9bbe;
reg rtcddf4;
reg rt6efa7;
reg ea77d3f;
reg gdbe9f8;
reg [7 : 0] zkf4fc4;
reg vka7e23;
reg hq3f11b;
reg mrf88db;
reg [2047:0] db22f5b;
wire [34:0] ux17adf;

`ifdef LW1

`else

`ifdef LW2

`else

`ifdef LW4

`else

`endif

`endif

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef VC1

`else 

`ifdef VC2

`else 

`ifdef VC3 

`else

`ifdef VC4

`else

`endif

`endif

`endif

`endif


`ifdef ECP3

`else 

`endif 

localparam ribd6fd = 35,jceb7ea = 32'hfdfff02b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW1


`else


`ifdef LW2


`else


`ifdef LW4


`else


`endif


`endif


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef VC1


`else 


`ifdef VC2


`else 


`ifdef VC3 


`else


`ifdef VC4


`else


`endif


`endif


`endif


`endif


`ifdef ECP3


`else 


`endif 






































`ifdef LW1



`else



`ifdef LW2



`else



`ifdef LW4



`else



`endif



`endif



`endif





`ifdef X4



`endif



`ifdef X1



`endif









`ifdef VC1
   

`else 



`ifdef VC2
      


`else 



`ifdef VC3 
         


`else



`ifdef VC4
            


`else
            


`endif



`endif



`endif



`endif


















assign tx_data       = czf89c9;
assign tx_data_k     = bn27269;
assign tx_elec_idle  = ng1ec3c;
assign tx_compliance = enc9a74;
assign rx_polarity   = pfd87b0;
assign reset_n       = rst_n;




assign mg1a4f0 = (mg884db == 3'b011) ? 1'b1 : 1'b0;
pcie_x1_oh8ad06 #(2) ofe2aa5   (   .f_clk(pclk) ,   .s_clk(sys_clk) ,   .rst_n (rst_n),   .in_fclk({xw426d8,ph9e6cd}),   .out_sclk({gqa349e,hbd2780})   );
assign asb_detdone_rx = ald3cd9;
assign asb_detres_rx  =  (mefa79b) ? 1'b1 : fnf366e;



always @(posedge pclk or negedge rst_n) begin   if (!rst_n)      qv80cf0 <= 1'b0;   else if (xw426d8)      qv80cf0 <= 1'b0;   else if (bnb0f1f)      qv80cf0 <= 1'b1;
end
always @(posedge pclk or negedge rst_n) begin   if (!rst_n) begin      ks8d6f1 <= 1'b0;      jp6b788 <= 1'b0;   end   else begin      ks8d6f1 <= ep3c7f8;      jp6b788 <= hq3f11b;   end
end
assign tx_detect_rx_lb = (rtcddf4 | mrf88db);




assign asb_data      = osde235;
assign asb_kcntl     = ks88d42;






assign asb_lane_sync = (twa7e9e) ? 1'b1 : do35088;
assign asb_dskew_rx  = 1'b1 ;  

`ifdef ECP3
      assign asb_eidle_rx  = (rt6efa7) ? 1'b0 : (ri3f4f3) ? 1'b1 : ~do35088;

`else 
   assign asb_eidle_rx  = (rt6efa7) ? 1'b0 : (ri3f4f3) ? 1'b1 : by42213;

`endif 

assign asb_beacon_rx = (power_down == P2 && by42213 == 1'b0) ? 1'b1 : 1'b0;





assign asb_err       = (mg884db == 3'b100 | mg884db == 3'b101 | mg884db == 3'b110 | mg884db == 3'b111) ? 1'b1 : 1'b0;





always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ng93c06   <= P1;   end   else begin      case(xy30384)         L0s:            if (th74a94 == ne63021) begin               ng93c06   <= P0s;            end         DISABLED,         DETECT:               ng93c06   <= P1;         L1:            if (do2a53f == fncd47f) begin               ng93c06   <= P1;            end         L2:            if (lf94fd3 == shfdfe0 || lf94fd3 == uieff05 ) begin               ng93c06   <= P2;            end         default:               ng93c06   <= P0;      endcase   end
end

always @(posedge pclk or negedge rst_n) begin   if (!rst_n) begin      ph9e033 <= P1;      power_down     <= P1;   end   else begin      ph9e033 <= tj9b377;      power_down     <= kdd9bbe;   end
end







assign  ayf0be6  = asb_data;
assign  ep85f31 = asb_kcntl;
always @(posedge pclk or negedge rst_n) begin   if (!rst_n) begin      fp6785  <= 1'b0;      ux33c2f        <= 1'b0;      fp9e17c    <= 1'b0;   end   else begin      ux33c2f <= (zkf4fc4 == COM) && vka7e23;      if(rt6efa7) begin            if(ea77d3f || (xy30384 != 'd1))            fp6785  <= 1'b0;      end      else if(ea77d3f && (xy30384 == 'd1) && ~gdbe9f8)          fp6785  <= 1'b1;            if(xy30384 != 'd1)          fp9e17c  <= 1'b0;      else if(rt6efa7)            fp9e17c  <= 1'b1;   end
end
always@* begin osde235<={rx_data>>1,ux17adf[0]};ks88d42<={rx_data_k>>1,ux17adf[1]};do35088<={rx_valid>>1,ux17adf[2]};by42213<={rx_elec_idle>>1,ux17adf[3]};mg884db<={rx_status>>1,ux17adf[4]};xw426d8<=ux17adf[5];fp9b61e<={phy_disable_scr>>1,ux17adf[6]};pfd87b0<={phy_inv_polar>>1,ux17adf[7]};ng1ec3c<={phy_eidle_tx>>1,ux17adf[8]};bnb0f1f<={phy_godet_rx>>1,ux17adf[9]};ep3c7f8<={phy_sloopback>>1,ux17adf[10]};ec1fe27<={phy_snd_beacon>>1,ux17adf[11]};czf89c9<={phy_data>>1,ux17adf[12]};bn27269<={phy_kcntl>>1,ux17adf[13]};enc9a74<={phy_fndisp>>1,ux17adf[14]};xy30384<={phy_ltssm_state>>1,ux17adf[15]};th74a94<={l0s_tx_state>>1,ux17adf[16]};do2a53f<={l1_state>>1,ux17adf[17]};lf94fd3<={l2_state>>1,ux17adf[18]};twa7e9e<=ux17adf[19];ri3f4f3<=ux17adf[20];mefa79b<=ux17adf[21];ald3cd9<=ux17adf[22];ph9e6cd<=ux17adf[23];fnf366e<=ux17adf[24];tj9b377<={ng93c06>>1,ux17adf[25]};kdd9bbe<={ph9e033>>1,ux17adf[26]};rtcddf4<=ux17adf[27];rt6efa7<=ux17adf[28];ea77d3f<=ux17adf[29];gdbe9f8<=ux17adf[30];zkf4fc4<={ayf0be6>>1,ux17adf[31]};vka7e23<=ux17adf[32];hq3f11b<=ux17adf[33];mrf88db<=ux17adf[34];end
always@* begin db22f5b[2047]<=rx_data_k[0];db22f5b[2046]<=rx_valid[0];db22f5b[2044]<=rx_elec_idle[0];db22f5b[2041]<=rx_status[0];db22f5b[2035]<=phy_status;db22f5b[2022]<=phy_disable_scr[0];db22f5b[1996]<=phy_inv_polar[0];db22f5b[1945]<=phy_eidle_tx[0];db22f5b[1843]<=phy_godet_rx[0];db22f5b[1746]<=l2_state[0];db22f5b[1685]<=force_phy_status;db22f5b[1645]<=phy_fndisp[0];db22f5b[1638]<=phy_sloopback[0];db22f5b[1605]<=ks8d6f1;db22f5b[1445]<=force_lsm_active;db22f5b[1425]<=ayf0be6[0];db22f5b[1380]<=ux33c2f;db22f5b[1369]<=qv80cf0;db22f5b[1322]<=gqa349e;db22f5b[1242]<=phy_ltssm_state[0];db22f5b[1229]<=phy_snd_beacon[0];db22f5b[1195]<=hbd2780;db22f5b[1162]<=jp6b788;db22f5b[1023]<=rx_data[0];db22f5b[873]<=l1_state[0];db22f5b[842]<=force_rec_ei;db22f5b[822]<=phy_kcntl[0];db22f5b[802]<=ep85f31;db22f5b[712]<=fp9e17c;db22f5b[690]<=fp6785;db22f5b[684]<=ph9e033[0];db22f5b[597]<=mg1a4f0;db22f5b[436]<=l0s_tx_state[0];db22f5b[411]<=phy_data[0];db22f5b[342]<=ng93c06[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule
































































`define         	DEV_ADDR_WIDTH   13

`define	            DEV_DATA_WIDTH   32

`define          	WB_ADDR_WIDTH    13

`define	            WB_DATA_WIDTH    32

`timescale 1 ns / 100 ps
module pcie_x1_hq11ed8	
(
	
	RST_I,
	CLK_I,

	ADR_I,
	DAT_I,
	SEL_I,
	WE_I,
	STB_I,
	CYC_I,

	DAT_O,
	ACK_O,
	IRQ_O,
	
	
	CHAIN_RDAT_in,
	CHAIN_ACK_in,

	
    tj8e259,
	hb712cf,
	do8967e,
	en4b3f2,
	os59f95,
	vicfca8,
	th7e542,
	enf2a17,
	gd950bc,
	jea85e5,
	tu42f2b
);
input                       RST_I;
input                          CLK_I;
input  [(`WB_DATA_WIDTH/8)-1:0] SEL_I;
input                          WE_I;
input                          STB_I;
input                          CYC_I;
input  [`WB_DATA_WIDTH-1:0 ]   DAT_I;
input  [`WB_ADDR_WIDTH-1:0 ]   ADR_I;
input  [`DEV_DATA_WIDTH-1:0 ]  CHAIN_RDAT_in;
input                       CHAIN_ACK_in;
input                          tj8e259;
input  [`DEV_DATA_WIDTH-1:0 ]  do8967e;
input  [`DEV_DATA_WIDTH-1:0 ]  en4b3f2;
input                          gd950bc;
input                          jea85e5;
input               tu42f2b;
output                         ACK_O;
output [`WB_DATA_WIDTH-1:0 ]   DAT_O;
output   IRQ_O;
output [`DEV_ADDR_WIDTH-1:0 ]  hb712cf;
output [`DEV_DATA_WIDTH-1:0 ]  os59f95;
output [(`DEV_DATA_WIDTH/8)-1:0] vicfca8;
output                         th7e542;
output                         enf2a17;
reg                            qvb48c6;
reg                            cba4635;
reg                            mt231ad;
reg [`DEV_ADDR_WIDTH-1:0 ]     kf18d6c;
reg [`DEV_DATA_WIDTH-1:0 ]     qtc6b64;
reg                            th7e542;
reg [`DEV_ADDR_WIDTH-1:0 ]     hb712cf;
reg [`DEV_DATA_WIDTH-1:0 ]     os59f95;
reg                            enf2a17;
reg                            ym24696;
reg                            gd234b1;
reg [`DEV_DATA_WIDTH-1:0 ]     mg1a58c;
reg                            hbd2c60;
wire                       ri96307;
wire [`WB_DATA_WIDTH-1:0 ]     DAT_O;
wire                           ACK_O;
wire                       IRQ_O;
wire [(`DEV_DATA_WIDTH/8)-1:0] vicfca8;
reg [`WB_ADDR_WIDTH - 1 : 0] rg4d9d1;
reg [`WB_DATA_WIDTH - 1 : 0] ps6ce8b;
reg [(`WB_DATA_WIDTH / 8) - 1 : 0] vxaa953;
reg kq6745a;
reg tw3a2d0;
reg tw2a7e7;
reg [`DEV_DATA_WIDTH - 1 : 0] qg53f3a;
reg mt9f9d1;
reg [`DEV_DATA_WIDTH - 1 : 0] ldfce8d;
reg [`DEV_DATA_WIDTH - 1 : 0] she746f;
reg fc3a37c;
reg uid1be3;
reg mg8df18;
reg cz6f8c1;
reg ps7c60d;
reg vve306a;
reg [`DEV_ADDR_WIDTH - 1 : 0] ep18356;
reg [`DEV_DATA_WIDTH - 1 : 0] wwc1ab5;
reg and5a9;
reg gb6ad4c;
reg [`DEV_DATA_WIDTH - 1 : 0] ui56a65;
reg tjb5329;
reg uka994e;
reg [2047:0] db22f5b;
wire [22:0] ux17adf;

localparam ribd6fd = 23,jceb7ea = 32'hfdffda0b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;































always @(posedge tj8e259 or negedge RST_I) begin   if(!RST_I) begin      qvb48c6  <= 0;      cba4635 <= 0;      mt231ad  <= 0;      kf18d6c    <= {(`DEV_ADDR_WIDTH){1'b0}};      qtc6b64    <= {(`DEV_DATA_WIDTH){1'b0}};      th7e542    <= 0;      hb712cf      <= {(`DEV_ADDR_WIDTH){1'b0}};      os59f95      <= {(`DEV_DATA_WIDTH){1'b0}};   end   else begin      qvb48c6  <= tw3a2d0;      cba4635 <= cz6f8c1;      mt231ad  <= kq6745a;      kf18d6c    <= rg4d9d1;      qtc6b64    <= ps6ce8b;      th7e542    <= vve306a;      hb712cf      <= ep18356;      os59f95      <= wwc1ab5;   end
end


always @(posedge tj8e259 or negedge RST_I) begin   if(!RST_I) begin      enf2a17   <= 0;   end      else if (cz6f8c1 && !ps7c60d)begin      enf2a17   <= 1'b1;   end   else if (cz6f8c1 && (fc3a37c || uid1be3))begin      enf2a17   <= 1'b0;   end
end

always @(posedge CLK_I or negedge RST_I) begin   if(!RST_I) begin      ym24696        <= 0;      gd234b1       <= 0;   end   else begin      ym24696        <= fc3a37c | uid1be3;      gd234b1       <= and5a9;   end
end

always @(posedge CLK_I or negedge RST_I) begin   if(!RST_I) begin      mg1a58c        <= {(`WB_DATA_WIDTH){1'b0}};   end   else begin      mg1a58c        <= (uid1be3) ? she746f :                        (fc3a37c) ? ldfce8d : ui56a65;   end
end

always @( posedge CLK_I or negedge RST_I )  if ( !RST_I )    hbd2c60 <= 0;  else    hbd2c60 <= tw3a2d0;
assign ri96307 = ( ( tw3a2d0 || tjb5329 ) && tw2a7e7 );
assign DAT_O =  ( uka994e == 1 )? ui56a65  : qg53f3a;
assign ACK_O =  ( uka994e == 1 )? gb6ad4c : mt9f9d1;
assign IRQ_O =  mg8df18;

always@* begin rg4d9d1<={ADR_I>>1,ux17adf[0]};ps6ce8b<={DAT_I>>1,ux17adf[1]};vxaa953<={SEL_I>>1,ux17adf[2]};kq6745a<=ux17adf[3];tw3a2d0<=ux17adf[4];tw2a7e7<=ux17adf[5];qg53f3a<={CHAIN_RDAT_in>>1,ux17adf[6]};mt9f9d1<=ux17adf[7];ldfce8d<={do8967e>>1,ux17adf[8]};she746f<={en4b3f2>>1,ux17adf[9]};fc3a37c<=ux17adf[10];uid1be3<=ux17adf[11];mg8df18<=ux17adf[12];cz6f8c1<=ux17adf[13];ps7c60d<=ux17adf[14];vve306a<=ux17adf[15];ep18356<={kf18d6c>>1,ux17adf[16]};wwc1ab5<={qtc6b64>>1,ux17adf[17]};and5a9<=ux17adf[18];gb6ad4c<=ux17adf[19];ui56a65<={mg1a58c>>1,ux17adf[20]};tjb5329<=ux17adf[21];uka994e<=ux17adf[22];end
always@* begin db22f5b[2047]<=DAT_I[0];db22f5b[2046]<=SEL_I[0];db22f5b[2044]<=WE_I;db22f5b[2040]<=STB_I;db22f5b[2032]<=CYC_I;db22f5b[2016]<=CHAIN_RDAT_in[0];db22f5b[1984]<=CHAIN_ACK_in;db22f5b[1921]<=do8967e[0];db22f5b[1795]<=en4b3f2[0];db22f5b[1776]<=hbd2c60;db22f5b[1758]<=ym24696;db22f5b[1542]<=gd950bc;db22f5b[1505]<=ri96307;db22f5b[1468]<=gd234b1;db22f5b[1037]<=jea85e5;db22f5b[1023]<=ADR_I[0];db22f5b[888]<=mg1a58c[0];db22f5b[879]<=qtc6b64[0];db22f5b[439]<=kf18d6c[0];db22f5b[219]<=mt231ad;db22f5b[109]<=cba4635;db22f5b[54]<=qvb48c6;db22f5b[27]<=tu42f2b;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule






























`timescale 1 ns / 100 ps
module dpcie_x1_mca3f3(

input                         sys_clk,      
input                         rst_n,        


input       [12:0]            ADR_I,           
input       [31:0]            DAT_I,           
input                         WE_I,            
input                         STB_I,           


input                         tx_dllp_sent,    
input       [1:0]             rv27fe2,     
input       [2:0]             ba3ff17,       
input       [23:0]            kqff8ba,     


input       [4:0]             phy_ltssm_state, 
`ifdef LW4
input       [3:0]             ipe2e86,   
input       [3:0]             asb_eidle_rx,    
input       [3:0]             asb_detdone_rx,  
input       [3:0]             asb_detres_rx,   
`else
input                         ipe2e86,   

input                         asb_eidle_rx,    
input                         asb_detdone_rx,  
input                         asb_detres_rx,   
`endif



input                         dl_inactive,     
input                         dl_init,         
input                         dl_active,       
input                         dl_up,           
 





output reg  [31:0]            RDAT_O,          
output reg                    ACK_O,           



output reg  [1:0]             tx_dllp_val,       
output wire [2:0]             tx_pmtype,       
output wire [23:0]            tx_vsd_data,     


output wire                   force_lsm_active, 
output wire                   force_rec_ei,     
output wire                   force_phy_status, 
output wire                   force_disable_scr,

output wire                   tlp_debug,       
output wire                   hl_snd_beacon,   
output wire                   hl_disable_scr,  
output wire                   hl_gto_dis,      
output wire                   hl_gto_det,      
output wire                   hl_gto_hrst,     
output wire                   hl_gto_l0stx,    
output wire                   hl_gto_l1,       
output wire                   hl_gto_l2,       
output wire                   hl_gto_l0stxfts, 
`ifdef LW4
output wire [3:0]             hl_gto_lbk,      
`else
output wire                   hl_gto_lbk,      
`endif
output wire                   hl_gto_rcvry,    
output wire                   hl_gto_cfg,      
output wire                   no_pcie_train,   


output wire [4:0]             N_FTS_INC,       
output wire [9:0]             SKP_INS_CNT,     
output wire [13:0]            lqfe23b, 


output wire [6:0]             ls2f7ac, 
output wire [10:0]            hb7bd62,
output wire [6:0]             godeb16,
output wire [10:0]            mef58b1,
output wire [6:0]             ukac589,
output wire [10:0]            cm62c49,
output wire [11:0]            ec5913,


output wire [7:0]             LINK_NUM           ) ;
reg  [31:0]          sh65541;
reg  [31:0]          je2aa0d;
reg  [31:0]          vv5506b;
reg  [31:0]          zma835f;
reg  [31:0]          sh41afb;
reg  [31:0]          uxd7dd;
reg  [31:0]          ld6beec;
reg  [31:0]          ld5f767;
reg  [31:0]          xwfbb3e;
reg  [31:0]          hbdd9f2;
reg                  pu20928;
reg                  qg67cb6;
reg                  sw3e5b1;
reg                  wjf2d89;
reg                  tw96c4c;
reg                  ieb6263;
reg                  qvb1319;
reg                  xy898cc;
reg                  kq4c663;
reg                  ho63318;
reg                  xl198c2;

`ifdef LW4

`else

`endif

`ifdef LW4

`else  // For X1 -- 12, 16, 20 bits are used

`endif
reg [12 : 0] rg4d9d1;
reg [31 : 0] ps6ce8b;
reg kq6745a;
reg tw3a2d0;
reg jr168ae;
reg [1 : 0] irb4577;
reg [2 : 0] lsa2bbc;
reg [23 : 0] ec15de3;
reg [4 : 0] xy30384;
reg fc3076f;
reg swbc628;
reg tw25f22;
reg uk1ab4b;
reg [31 : 0] vic5034;
reg [31 : 0] ph281a2;
reg [31 : 0] rt40d17;
reg [31 : 0] nt68bf;
reg [31 : 0] aa345fe;
reg [31 : 0] zma2ff0;
reg [31 : 0] oh17f83;
reg [31 : 0] xlbfc1d;
reg [31 : 0] fafe0ee;
reg sjb1535;
reg do83b98;
reg an1dcc2;
reg neee614;
reg vi730a2;
reg ou98513;
reg blc2899;
reg je144ce;
reg hqa2673;
reg xl1339a;
reg ls99cd6;
reg [2047:0] db22f5b;
wire [32:0] ux17adf;

`ifdef LW4

`else

`endif

`ifdef LW4

`else  // For X1 -- 12, 16, 20 bits are used

`endif

localparam ribd6fd = 33,jceb7ea = 32'hfdfff10b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef LW4


`else


`endif


`ifdef LW4


`else  // For X1 -- 12, 16, 20 bits are used


`endif





















assign  tx_pmtype         = vic5034[2:0];
assign  tx_vsd_data       = vic5034[26:3];


`ifdef LW4
   assign  hl_gto_lbk        = rt40d17[21:18];

`else
   assign  hl_gto_lbk        = rt40d17[18];

`endif

assign  tlp_debug         = rt40d17[17];  
assign  hl_snd_beacon     = rt40d17[16];  
assign  force_lsm_active  = rt40d17[15];  
assign  force_rec_ei      = rt40d17[14];  
assign  force_phy_status  = rt40d17[13];  
assign  force_disable_scr = rt40d17[12];  
assign  hl_disable_scr    = rt40d17[11];
assign  hl_gto_dis        = rt40d17[10];
assign  hl_gto_det        = rt40d17[9];
assign  hl_gto_hrst       = rt40d17[8];
assign  hl_gto_l0stx      = rt40d17[7];
assign  hl_gto_l1         = rt40d17[6];
assign  hl_gto_l2         = rt40d17[5];
assign  hl_gto_l0stxfts   = rt40d17[4];

assign  hl_gto_rcvry      = rt40d17[2];
assign  hl_gto_cfg        = rt40d17[1];
assign  no_pcie_train     = rt40d17[0];

assign  N_FTS_INC         = nt68bf[14:10];
assign  SKP_INS_CNT       = nt68bf[9:0];
assign  lqfe23b   = nt68bf[29:16];


assign  ls2f7ac    = aa345fe[17:11];
assign  hb7bd62    = aa345fe[10:0];
assign  godeb16   = zma2ff0[17:11];
assign  mef58b1   = zma2ff0[10:0];
assign  ukac589  = oh17f83[17:11];
assign  cm62c49  = oh17f83[10:0];
assign  ec5913      = xlbfc1d[11:0];

assign  LINK_NUM          = fafe0ee[7:0];



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      sh65541    <= 32'd0;      je2aa0d    <= 32'd0;      vv5506b      <= 32'd0;      zma835f          <= 32'd0;            sh41afb       <= {2'b11,`ACKNAK_LAT_TIME, 1'b1, 5'd10, `SKP_INS_CNT};      uxd7dd         <= 32'hFFFFFFFF;      ld6beec         <= 32'hFFFFFFFF;      ld5f767         <= 32'hFFFFFFFF;      xwfbb3e      <= 32'hFFFFFFFF;      hbdd9f2     <= 0;      tx_dllp_val     <= 2'b00;   end   else  begin            sh65541[7:3]  <= 0;      sh65541[31:9] <= 0;      je2aa0d[29:27]<= 0;            vv5506b[31:24]  <= 0;            zma835f[31:22]      <= 0;      sh41afb[15]      <= 1'b1;      sh41afb[31:30]   <= 2'b11;      uxd7dd[31:18]     <= 14'b11_1111_1111_1111;      ld6beec[31:18]     <= 14'b11_1111_1111_1111;      ld5f767[31:18]     <= 14'b11_1111_1111_1111;      xwfbb3e[31:12]  <= 20'hFFFFF;      hbdd9f2[31:16] <= 0;
            if(irb4577[0]) begin             sh65541[30]  <= 1'b1;         sh65541[2:0] <= lsa2bbc;      end      else if(sjb1535 && do83b98)           sh65541[30]  <= 1'b0;      if(irb4577[1]) begin             sh65541[31]   <= 1'b1;         sh65541[26:3] <= ec15de3;      end      else if(sjb1535 && do83b98)           sh65541[31]  <= 1'b0;      if(jr168ae) begin         je2aa0d[31:30] <= 2'b00;      end      else if(sjb1535 && an1dcc2) begin         je2aa0d[31:30] <= ps6ce8b[31:30];           je2aa0d[26:3]  <= ps6ce8b[26:3];            je2aa0d[2:0]   <= ps6ce8b[2:0];          end            if(|vic5034[31:30])          tx_dllp_val  <= 2'b00;      else if(sjb1535 && an1dcc2)         tx_dllp_val  <= ps6ce8b[31:30];            vv5506b[11:7]    <= xy30384;      vv5506b[6:3]     <= {fc3076f, swbc628, tw25f22, uk1ab4b};            


`ifdef LW4
         vv5506b[23:20]       <= ipe2e86;                  if(asb_detdone_rx[3])            vv5506b[19]    <= asb_detres_rx[3];         else if(sjb1535 && neee614 && ps6ce8b[19])              vv5506b[19]    <= 1'b0;         if(asb_detdone_rx[2])            vv5506b[18]    <= asb_detres_rx[2];         else if(sjb1535 && neee614 && ps6ce8b[18])              vv5506b[18]    <= 1'b0;         if(asb_detdone_rx[1])            vv5506b[17]    <= asb_detres_rx[1];         else if(sjb1535 && neee614 && ps6ce8b[17])              vv5506b[17]    <= 1'b0;         if(asb_detdone_rx[0])            vv5506b[16]    <= asb_detres_rx[0];         else if(sjb1535 && neee614 && ps6ce8b[16])              vv5506b[16]    <= 1'b0;                  if(asb_eidle_rx[3])            vv5506b[15]    <= 1'b1;         else if(sjb1535 && neee614 && ps6ce8b[15])             vv5506b[15]    <= 1'b0;         if(asb_eidle_rx[2])            vv5506b[14]    <= 1'b1;         else if(sjb1535 && neee614 && ps6ce8b[14])             vv5506b[14]    <= 1'b0;         if(asb_eidle_rx[1])            vv5506b[13]    <= 1'b1;         else if(sjb1535 && neee614 && ps6ce8b[13])             vv5506b[13]    <= 1'b0;         if(asb_eidle_rx[0])            vv5506b[12]    <= 1'b1;         else if(sjb1535 && neee614 && ps6ce8b[12])             vv5506b[12]    <= 1'b0;


`else  // For X1 -- 12, 16, 20 bits are used
         vv5506b[20]       <= ipe2e86;                  if(asb_detdone_rx)             vv5506b[16]    <= asb_detres_rx;         else if(sjb1535 && neee614 && ps6ce8b[16])              vv5506b[16]    <= 1'b0;                  if(asb_eidle_rx)            vv5506b[12]    <= 1'b1;         else if(sjb1535 && neee614 && ps6ce8b[12])             vv5506b[12]    <= 1'b0;


`endif

                        if(sjb1535 && vi730a2)         zma835f[21:0]     <= ps6ce8b[21:0];                                    if(sjb1535 && ou98513) begin         sh41afb[29:16]  <= ps6ce8b[29:16];         sh41afb[14:10]  <= ps6ce8b[14:10];         sh41afb[9:0]    <= ps6ce8b[9:0];      end                  if(sjb1535 && blc2899) begin         uxd7dd[17:11]     <= ps6ce8b[17:11];          uxd7dd[10:0]      <= ps6ce8b[10:0];        end      if(sjb1535 && je144ce) begin         ld6beec[17:11]     <= ps6ce8b[17:11];          ld6beec[10:0]      <= ps6ce8b[10:0];        end      if(sjb1535 && hqa2673) begin         ld5f767[17:11]     <= ps6ce8b[17:11];          ld5f767[10:0]      <= ps6ce8b[10:0];        end      if(sjb1535 && xl1339a) begin         xwfbb3e[11:0]    <= ps6ce8b[11:0];        end            if(sjb1535 && ls99cd6) begin         hbdd9f2[15:0]     <= ps6ce8b[15:0];      end   end
end



always @(posedge sys_clk or negedge rst_n) begin   if (!rst_n) begin      ACK_O       <= 1'b0;      RDAT_O      <= 32'd0;      qg67cb6 <= 1'b0;      sw3e5b1 <= 1'b0;      wjf2d89   <= 1'b0;         tw96c4c       <= 1'b0;      ieb6263    <= 1'b0;      qvb1319      <= 1'b0;      xy898cc      <= 1'b0;      kq4c663      <= 1'b0;      ho63318   <= 1'b0;      xl198c2  <= 1'b0;   end   else  begin      if(sjb1535)         pu20928    <= 1'b0;      else         pu20928    <= kq6745a & tw3a2d0 && rg4d9d1[12];      if(ACK_O)         ACK_O    <= 1'b0;      else         ACK_O    <= tw3a2d0 && rg4d9d1[12];      qg67cb6 <= 1'b0;      sw3e5b1 <= 1'b0;      wjf2d89   <= 1'b0;         tw96c4c       <= 1'b0;      ieb6263    <= 1'b0;      qvb1319      <= 1'b0;      xy898cc      <= 1'b0;      kq4c663      <= 1'b0;      ho63318   <= 1'b0;      xl198c2  <= 1'b0;      case(rg4d9d1[11:0])         12'h000 : begin            qg67cb6 <= 1'b1;            RDAT_O      <= sh65541;         end         12'h004 : begin            sw3e5b1 <= 1'b1;            RDAT_O      <= vic5034;         end         12'h008 : begin            wjf2d89   <= 1'b1;               RDAT_O      <= ph281a2;         end         12'h00C : begin            tw96c4c       <= 1'b1;            RDAT_O      <= rt40d17;         end         12'h010 : begin            ieb6263    <= 1'b1;            RDAT_O      <= nt68bf;         end         12'h014 : begin            qvb1319      <= 1'b1;            RDAT_O      <= aa345fe;         end         12'h018 : begin            xy898cc      <= 1'b1;            RDAT_O      <= zma2ff0;         end         12'h01C : begin            kq4c663      <= 1'b1;            RDAT_O      <= oh17f83;         end         12'h020 : begin            ho63318   <= 1'b1;            RDAT_O      <= xlbfc1d;         end         12'h024 : begin            xl198c2  <= 1'b1;            RDAT_O      <= fafe0ee;         end      endcase   end
end
always@* begin rg4d9d1<={ADR_I>>1,ux17adf[0]};ps6ce8b<={DAT_I>>1,ux17adf[1]};kq6745a<=ux17adf[2];tw3a2d0<=ux17adf[3];jr168ae<=ux17adf[4];irb4577<={rv27fe2>>1,ux17adf[5]};lsa2bbc<={ba3ff17>>1,ux17adf[6]};ec15de3<={kqff8ba>>1,ux17adf[7]};xy30384<={phy_ltssm_state>>1,ux17adf[8]};fc3076f<=ux17adf[9];swbc628<=ux17adf[10];tw25f22<=ux17adf[11];uk1ab4b<=ux17adf[12];vic5034<={je2aa0d>>1,ux17adf[13]};ph281a2<={vv5506b>>1,ux17adf[14]};rt40d17<={zma835f>>1,ux17adf[15]};nt68bf<={sh41afb>>1,ux17adf[16]};aa345fe<={uxd7dd>>1,ux17adf[17]};zma2ff0<={ld6beec>>1,ux17adf[18]};oh17f83<={ld5f767>>1,ux17adf[19]};xlbfc1d<={xwfbb3e>>1,ux17adf[20]};fafe0ee<={hbdd9f2>>1,ux17adf[21]};sjb1535<=ux17adf[22];do83b98<=ux17adf[23];an1dcc2<=ux17adf[24];neee614<=ux17adf[25];vi730a2<=ux17adf[26];ou98513<=ux17adf[27];blc2899<=ux17adf[28];je144ce<=ux17adf[29];hqa2673<=ux17adf[30];xl1339a<=ux17adf[31];ls99cd6<=ux17adf[32];end
always@* begin db22f5b[2047]<=DAT_I[0];db22f5b[2046]<=WE_I;db22f5b[2044]<=STB_I;db22f5b[2040]<=tx_dllp_sent;db22f5b[2032]<=rv27fe2[0];db22f5b[2016]<=ba3ff17[0];db22f5b[1985]<=kqff8ba[0];db22f5b[1950]<=uxd7dd[0];db22f5b[1930]<=qg67cb6;db22f5b[1923]<=phy_ltssm_state[0];db22f5b[1852]<=ld6beec[0];db22f5b[1813]<=sw3e5b1;db22f5b[1799]<=dl_inactive;db22f5b[1656]<=ld5f767[0];db22f5b[1578]<=wjf2d89;db22f5b[1551]<=dl_init;db22f5b[1345]<=kq4c663;db22f5b[1285]<=xl198c2;db22f5b[1265]<=xwfbb3e[0];db22f5b[1108]<=tw96c4c;db22f5b[1054]<=dl_active;db22f5b[1023]<=ADR_I[0];db22f5b[975]<=sh41afb[0];db22f5b[965]<=pu20928;db22f5b[672]<=xy898cc;db22f5b[642]<=ho63318;db22f5b[487]<=zma835f[0];db22f5b[482]<=hbdd9f2[0];db22f5b[336]<=qvb1319;db22f5b[243]<=vv5506b[0];db22f5b[168]<=ieb6263;db22f5b[121]<=je2aa0d[0];db22f5b[60]<=dl_up;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























































`timescale 1 ns / 100 ps
module pcie_x1_sync1p (
                f_clk ,
                s_clk ,
                rst_n ,
                in_fclk,
                out_sclk
               );
parameter WIDTH = 1 ;
input              f_clk ;
input              s_clk ;
input              rst_n ;
input  [WIDTH-1:0] in_fclk ;
output [WIDTH-1:0] out_sclk ;
reg [WIDTH-1:0]    qgeff86 ;
reg [WIDTH-1:0]    nefe18c ;
reg [WIDTH-1:0]    zm86319 ;
reg [WIDTH-1:0]    xy8c659 ;
reg [WIDTH-1:0]    xl19652 ;
reg [WIDTH-1:0]    zxe6729 ;
wire [WIDTH-1:0]   ww594b9 ;
wire [WIDTH-1:0]   out_sclk ;
reg [WIDTH - 1 : 0] ipc96c0;
reg [WIDTH - 1 : 0] yx5b025;
reg [WIDTH - 1 : 0] jcc0967;
reg [WIDTH - 1 : 0] xy259db;
reg [WIDTH - 1 : 0] yk676d4;
reg [WIDTH - 1 : 0] godb501;
reg [WIDTH - 1 : 0] zz387da;
reg [WIDTH - 1 : 0] kqd4043;
reg [2047:0] db22f5b;
wire [7:0] ux17adf;

localparam ribd6fd = 8,jceb7ea = 32'hfdffe0cb;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;








always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      qgeff86 <= {WIDTH{1'b0}};   else      qgeff86 <= kqd4043 | ipc96c0;
end

always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      xy8c659 <= {WIDTH{1'b0}};   else      xy8c659 <= yx5b025;
end

always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      xl19652 <= {WIDTH{1'b0}};   else      xl19652 <= yk676d4;
end

always @(posedge s_clk or negedge rst_n) begin   if (!rst_n)      zxe6729 <= {WIDTH{1'b0}};   else         zxe6729 <= godb501;
end

assign out_sclk  = godb501 & ~zz387da;


always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      nefe18c <= {WIDTH{1'b0}};   else      nefe18c <= godb501;
end

always @(posedge f_clk or negedge rst_n) begin   if (!rst_n)      zm86319 <= {WIDTH{1'b0}};   else      zm86319 <= jcc0967;
end




assign ww594b9  = yx5b025 & ~xy259db;
always@* begin ipc96c0<={in_fclk>>1,ux17adf[0]};yx5b025<={qgeff86>>1,ux17adf[1]};jcc0967<={nefe18c>>1,ux17adf[2]};xy259db<={zm86319>>1,ux17adf[3]};yk676d4<={xy8c659>>1,ux17adf[4]};godb501<={xl19652>>1,ux17adf[5]};zz387da<={zxe6729>>1,ux17adf[6]};kqd4043<={ww594b9>>1,ux17adf[7]};end
always@* begin db22f5b[2047]<=qgeff86[0];db22f5b[2046]<=nefe18c[0];db22f5b[2044]<=zm86319[0];db22f5b[2040]<=xy8c659[0];db22f5b[2033]<=xl19652[0];db22f5b[2018]<=zxe6729[0];db22f5b[1988]<=ww594b9[0];db22f5b[1023]<=in_fclk[0];end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule





























`timescale 1 ns / 100 ps
module pcie_x1_qi10e94 #(
   parameter LANE_WIDTH = 4,   parameter D_WIDTH    = 64 )
   (
   input wire                sys_clk_250,     
   input wire                sys_clk_125,     
   input wire                rst_n,           

   input wire                term_all_cfg,    
   input wire                inta_n, 
   input wire  [7:0]         msi, 
   input wire  [2:0]         msi_tc,

   `ifdef WISHBONE
      
      input wire             RST_I,           
      input wire             CLK_I,           
      input wire [3:0]       SEL_I,           
      input wire             WE_I,            
      input wire             STB_I,           
      input wire             CYC_I,           
      input wire [31:0]      DAT_I,           
      input wire [12:0]      ADR_I,           
      input wire [31:0]      CHAIN_RDAT_in,   
      input wire             CHAIN_ACK_in,    
   `else
      input wire [9:0]       SKP_INS_CNT,     
      input wire [13:0]      lqfe23b, 

      input wire [6:0]       ls2f7ac,  
      input wire [10:0]      hb7bd62,  
      input wire [6:0]       godeb16, 
      input wire [10:0]      mef58b1, 
      input wire [11:0]      ec5913,    

      input wire             tlp_debug,       
      input wire             force_lsm_active, 
      input wire             force_rec_ei,     
      input wire             force_phy_status, 
      input wire             force_disable_scr,

      input wire             hl_snd_beacon,    
      input wire             hl_disable_scr,   
      input wire             hl_gto_dis,       
      input wire             hl_gto_det,       
      input wire             hl_gto_hrst,      
      input wire             hl_gto_l0stx,     
      input wire             hl_gto_l1,        
      input wire             hl_gto_l2,        
      input wire             hl_gto_l0stxfts,  
      input wire [LANE_WIDTH-1:0] hl_gto_lbk,  
      input wire             hl_gto_rcvry,     
      input wire             hl_gto_cfg,       
      input wire             no_pcie_train,    

      
      input wire  [1:0]      tx_dllp_val,      
      input wire  [2:0]      tx_pmtype,        
      input wire  [23:0]     tx_vsd_data,      
   `endif
   
   
   `ifdef ID_INTF
      input wire [15:0]      vendor_id ,      
      input wire [15:0]      device_id ,      
      input wire [7:0]       rev_id ,         
      input wire [23:0]      class_code ,     
      input wire [15:0]      subsys_ven_id ,  
      input wire [15:0]      subsys_id ,      
      input wire             load_id ,        
   `else
      input wire [31:0]      yk7dd7f ,   
      input wire [31:0]      rgeebf9 ,   
      input wire [31:0]      faee089 ,   
   `endif
   input wire [31:0]         gb75fcb ,   
   input wire [31:0]         bnafe5d ,   
   input wire [31:0]         ip7f2ef ,   
   input wire [31:0]         vvf977d ,   
   input wire [31:0]         oscbbee ,   
   input wire [31:0]         ne5df70 ,   
   input wire [31:0]         meefb82 ,   
   input wire [31:0]         qg7dc11 ,   
   input wire [31:0]         kd7044a ,   
   input wire [31:0]         aa82254 ,   
   
   input wire [31:0]         ph2d142 ,      
   input wire [31:0]         os68a17 ,      
   input wire [9:0]          fn450b8 , 
   input wire [9:0]          rv285c6 , 
   input wire [9:0]          fa42e37 , 
   input wire [9:0]          qv171ba , 
   input wire [9:0]          hqb8dd4 , 
   input wire [9:0]          mrc6ea3 , 
   input wire [9:0]          vx3751c , 
   input wire [9:0]          rvba8e7 , 
   
   input wire [31:0]         icd473e ,      
   
   input wire [31:0]         alc3d44 ,      
   input wire [31:0]         ba1ea24 ,      
   input wire [31:0]         ykf5123 ,      
   input wire [31:0]         jea8918 ,      
   `ifdef GEN2
      input wire [31:0]      qt448c2 ,      
   `endif
   
   input wire [31:0]         kfbb8eb ,   
   input wire [31:0]         gbdc75c ,   
   
   `ifdef CFG_VCC
      input wire [31:0]      jra58e0 ,   
   `endif

   
   input wire [7:0]          ls89c7e,      
   input wire [7:0]          uv4e3f3,     
   input wire [11:0]         pf71f9d,      
   input wire [11:0]         ux8fcef,     
   input wire                tx_req_vc0,          
   input wire [D_WIDTH-1:0]  tx_data_vc0,       
   input wire                tx_st_vc0,           
   input wire                tx_end_vc0,          
   input wire                tx_nlfy_vc0,         
   input wire                ph_buf_status_vc0,   
   input wire                pd_buf_status_vc0,   
   input wire                nph_buf_status_vc0,  
   input wire                npd_buf_status_vc0,  
   input wire                ph_processed_vc0,    
   input wire                pd_processed_vc0,    
   input wire                nph_processed_vc0,   
   input wire                npd_processed_vc0,   
   input wire [7:0]          pd_num_vc0,          
   input wire [7:0]          npd_num_vc0,         
   `ifdef X4
      input wire             tx_dwen_vc0,         
   `endif

   
   `ifdef X1
      input wire  [7:0]     rxp_data,        
      input wire            rxp_data_k,      
      input wire            rxp_valid,       
      input wire            rxp_elec_idle,   
      input wire  [2:0]     rxp_status,      
   `endif
   `ifdef X4
      input wire  [7:0]      rxp_data_ln0,        
      input wire             rxp_data_k_ln0,      
      input wire             rxp_valid_ln0,       
      input wire             rxp_elec_idle_ln0,   
      input wire  [2:0]      rxp_status_ln0,      

      input wire  [7:0]      rxp_data_ln1,        
      input wire             rxp_data_k_ln1,      
      input wire             rxp_valid_ln1,       
      input wire             rxp_elec_idle_ln1,   
      input wire  [2:0]      rxp_status_ln1,      

      input wire  [7:0]      rxp_data_ln2,        
      input wire             rxp_data_k_ln2,      
      input wire             rxp_valid_ln2,       
      input wire             rxp_elec_idle_ln2,   
      input wire  [2:0]      rxp_status_ln2,      

      input wire  [7:0]      rxp_data_ln3,        
      input wire             rxp_data_k_ln3,      
      input wire             rxp_valid_ln3,       
      input wire             rxp_elec_idle_ln3,   
      input wire  [2:0]      rxp_status_ln3,      
   `endif
   input wire                phy_status,      

   `ifdef AER
      `ifdef ECRC
         output wire         pcie_x1_ecrc_gen_enb , 
         output wire         pcie_x1_ecrc_chk_enb , 
      `endif
   `endif
   
   `ifdef AER
      input wire [127:0]     err_tlp_header , 
                                              
   `endif
   input wire                cmpln_tout ,     
   input wire                cmpltr_abort_np ,
   input wire                cmpltr_abort_p , 
   input wire                unexp_cmpln ,    
   input wire                ur_np_ext ,      
   input wire                ur_p_ext ,       
   input wire                np_req_pend ,    
   input wire                pme_status ,     
   `ifdef GEN2
      input wire             flr_rdy_in ,     
   `endif

   
   input wire  [D_WIDTH-1:0]   tx_lbk_data,   
   input wire  [D_WIDTH/8-1:0] tx_lbk_kcntl,  
   output wire                 tx_lbk_rdy,    
   output wire [D_WIDTH-1:0]   rx_lbk_data,   
   output wire [D_WIDTH/8-1:0] rx_lbk_kcntl,  
   `ifdef WISHBONE
      
      output wire            ACK_O,           
      output wire            IRQ_O,           
      output wire [31:0]     DAT_O,           
   `else
      
      output wire            tx_dllp_sent,    
      output wire [2:0]      rxdp_pmd_type,   
      output wire [23:0]     rxdp_vsd_data ,  
      output wire [1:0]      rxdp_dllp_val,   
   `endif

   `ifdef X1
      output wire [7:0]     txp_data,        
      output wire           txp_data_k,      
      output wire           txp_elec_idle,   
      output wire           txp_compliance,  
      output wire           rxp_polarity,    
   `endif
   `ifdef X4
      output wire [7:0]      txp_data_ln0,        
      output wire            txp_data_k_ln0,      
      output wire            txp_elec_idle_ln0,   
      output wire            txp_compliance_ln0,  
      output wire            rxp_polarity_ln0,    

      output wire [7:0]      txp_data_ln1,        
      output wire            txp_data_k_ln1,      
      output wire            txp_elec_idle_ln1,   
      output wire            txp_compliance_ln1,  
      output wire            rxp_polarity_ln1,    

      output wire [7:0]      txp_data_ln2,        
      output wire            txp_data_k_ln2,      
      output wire            txp_elec_idle_ln2,   
      output wire            txp_compliance_ln2,  
      output wire            rxp_polarity_ln2,    

      output wire [7:0]      txp_data_ln3,        
      output wire            txp_data_k_ln3,      
      output wire            txp_elec_idle_ln3,   
      output wire            txp_compliance_ln3,  
      output wire            rxp_polarity_ln3,    
   `endif
   output wire               txp_detect_rx_lb,
   output wire               reset_n,         
   output wire [1:0]         power_down,      

   output wire               phy_pol_compliance,
   output wire               phy_realign_req, 
   output wire [2:0]         phy_cfgln_sum,   
   output wire [3:0]         phy_ltssm_state, 
   output wire [2:0]         phy_ltssm_substate, 
   `ifdef X1
       output wire           me72c69,   
   `endif
   `ifdef X4
      output wire [3:0]      phy_cfgln,       
      output wire            pcie_x1_mca_aligned,     
      output wire            tx_val,          
   `endif
   output wire [7:0]         fa690a8,    
   output wire               tx_rdy_vc0,      
   output wire [8:0]         tx_ca_ph_vc0,    
   output wire [12:0]        tx_ca_pd_vc0,    
   output wire [8:0]         tx_ca_nph_vc0,   
   output wire [12:0]        tx_ca_npd_vc0,   
   output wire [8:0]         tx_ca_cplh_vc0,  
   output wire [12:0]        tx_ca_cpld_vc0,  
   output wire               tx_ca_p_recheck_vc0, 
   output wire               tx_ca_cpl_recheck_vc0, 
   output wire [D_WIDTH-1:0] rx_data_vc0,  
   output wire               rx_st_vc0,       
   output wire               rx_end_vc0,      
   `ifdef ECRC
      output wire            rx_pcie_x1_ecrc_err_vc0 ,
   `endif
   output wire               rx_us_req_vc0 ,  
   output wire               rx_malf_tlp_vc0 ,
   `ifdef X4
         output wire         rx_dwen_vc0,         
   `endif
   output wire [6:0]         rx_bar_hit ,     

   output wire [2:0]         mm_enable ,     
   output wire               msi_enable ,    

   
   output wire [7:0]         bus_num ,        
   output wire [4:0]         dev_num ,        
   output wire [2:0]         func_num ,       
   output wire [1:0]         pm_power_state , 
   output wire               pme_en ,         
   output wire [5:0]         cmd_reg_out ,    
   output wire [14:0]        dev_cntl_out ,   
   output wire [7:0]         lnk_cntl_out ,   
   `ifdef GEN2
      output wire [4:0]      dev_cntl_2_out , 
      output wire            initiate_flr ,   
   `endif

   
   output wire              tx_rbuf_empty,   
   output wire              tx_dllp_pend,    
   output wire              rx_tlp_rcvd,     

   
   output wire               dl_inactive,     
   output wire               dl_init,         
   output wire               dl_active,       
   output wire               dl_up              ) 
   `ifdef X1
      `ifdef ECP5UM
         
      `else
         `ifdef ECP3
            
         `else
            
         `endif
      `endif
      
      
   `endif
   `ifdef X4
      `ifdef ECP5UM
         
      `else
         `ifdef ECP3
            
         `else
            
         `endif
      `endif
      
      
   `endif
;

`ifdef X1

`define PHY_INST pcie_x1_phy_x1

`define PIPE_INST pcie_x1_pipe_x1
parameter FADDR = 3;

`endif

`ifdef X4

`define PHY_INST phy

`define PIPE_INST pipe
parameter FADDR = 6;

`endif
wire [D_WIDTH-1:0]           tdmux_data ;
wire [D_WIDTH-1:0]           dfrm_tdata ;
wire [15:0]                  jr377bd ;
wire [31:0]                  yzbbdef ;
wire [D_WIDTH-1:0]           tlpgen_data ;
wire [D_WIDTH-1:0]           tlpdec_data ;
wire [D_WIDTH-1:0]           rxtp_data ;
wire [D_WIDTH-1:0]           dfrm_ddata ;
wire [2:0]                   psda2c8;
wire [1:0]                   cmd1642;
wire [2:0]                   ww5908f;
wire [1:0]                   nrc8479;
wire [(`NUM_VC-1):0]         fa423ce;
wire [(`NUM_VC-1):0]         tw11e73;
wire [(`NUM_VC-1):0]         gd8f39a;
wire [(24*`NUM_VC)-1:0]      qv33bed;
wire [(24*`NUM_VC)-1:0]      wy9df6c;
wire [(24*`NUM_VC)-1:0]      goefb60;
wire [`NUM_VC-1:0]           ba8983e ;
wire [`NUM_VC-1:0]           qg4c1f3 ;
wire [`NUM_VC-1:0]           en60f98 ;
wire [2:0]                   phbf50c ;
wire [19:0]                  wwfa867 ;
wire [1:0]                   ie92eeb ;
wire [`NUM_VC-1:0]           vcneg_pend ;
wire [`NUM_VC-1:0]           nr40c7a ;
wire [(`NUM_VC*3)-1:0]       hd63d7;
wire [(`NUM_VC*8)-1:0]       jr322ef ;
wire [2:0]                   je30ba7 ;
wire [2:0]                   cfgcs_losel;
wire [2:0]                   max_pl_size;
wire                         ext_sync;
wire                         rg4818f;
wire                         pu1e020;
wire [FADDR:0]               dll_pause_cnt;
wire [D_WIDTH/2-1:0]         phy_data;
wire [D_WIDTH/16-1:0]        phy_kcntl;
wire [D_WIDTH/2-1:0]         asb_data;
wire [D_WIDTH/16-1:0]        asb_kcntl;
wire [2:0]                   phy_l0s_tx_state;
wire [1:0]                   phy_l1_state;
wire [1:0]                   phy_l2_state;
wire                         phy_disable_scr;
wire                         phy_sloopback;
wire                         phy_snd_beacon;

`ifdef X4
wire [3:0]                asb_skip_found;
wire [3:0]                asb_err;
wire [3:0]                skip_added;
wire [3:0]                skip_removed;
wire [3:0]                phy_inv_polar;
wire [3:0]                phy_eidle_tx;
wire [3:0]                phy_godet_rx;
wire [3:0]                phy_fndisp;
wire [3:0]                asb_eidle_rx;
wire [3:0]                asb_detdone_rx;
wire [3:0]                asb_detres_rx;
wire [3:0]                asb_beacon_rx;
wire [3:0]                asb_lane_sync;

`endif
wire [(8*`NUM_VC)-1:0]      an8a0cc;
wire [(8*`NUM_VC)-1:0]      ld50665;
wire [(12*`NUM_VC)-1:0]     jr1997b;
wire [(12*`NUM_VC)-1:0]     ipccbde;
wire [`NUM_VC -1:0]         tx_req;
wire [(`NUM_VC*D_WIDTH)-1:0] tx_data;
wire [`NUM_VC -1:0]         tx_st;
wire [`NUM_VC -1:0]         tx_end;
wire [`NUM_VC -1:0]         tx_nlfy;
wire [`NUM_VC -1:0]         bn81991;
wire [`NUM_VC -1:0]         phcc8f;
wire [`NUM_VC -1:0]         zk6647f;
wire [`NUM_VC -1:0]         lf323fa;
wire [`NUM_VC -1:0]         gb7f5f4;
wire [`NUM_VC -1:0]         cmfafa5;
wire [`NUM_VC -1:0]         nph_processed;
wire [`NUM_VC -1:0]         npd_processed;
wire [(8*`NUM_VC)-1:0]      vx28f1f;
wire [(8*`NUM_VC)-1:0]      ho478fe;
wire [`NUM_VC -1:0]         tx_rdy;
wire [(`NUM_VC*9)-1:0]      tx_ca_ph;
wire [(`NUM_VC*13)-1:0]     tx_ca_pd;
wire [(`NUM_VC*9)-1:0]      fnc7a69;
wire [(`NUM_VC*13)-1:0]     rv3d34e;
wire [(`NUM_VC*9)-1:0]      tx_ca_cplh;
wire [(`NUM_VC*13)-1:0]     fa4d3b6;
wire [(`NUM_VC*D_WIDTH)-1:0] rx_data;
wire [`NUM_VC -1:0]         rx_st;
wire [`NUM_VC -1:0]         rx_end;

`ifdef ECRC
wire [`NUM_VC -1:0]      rx_pcie_x1_ecrc_err ;

`endif
wire [`NUM_VC -1:0]         rx_us_req ;
wire [`NUM_VC -1:0]         rx_malf_tlp ;
wire [`NUM_VC -1:0]         co1508e ;
wire [`NUM_VC -1:0]         trnc_st     ;

`ifdef X4
wire [`NUM_VC -1:0]      rg58e31;
wire [`NUM_VC -1:0]      ea49c76;
wire [1:0]               phy_skpq_nclks;
wire                     phy_skpq_val;
reg  [3:0]               jr8b6be;
reg  [3:0]               en5b5f7 ;
reg  [3:0]               tudafbc ;

`endif
wire [12:0]                 hb712cf;
wire [31:0]                 os59f95;
wire                    vicfca8;
wire                    th7e542;
wire                    enf2a17;
wire [31:0]                 do8967e;
wire [31:0]                 en4b3f2;
wire                        gd950bc;
wire                        jea85e5;
wire    tu42f2b;

`ifdef WISHBONE
wire [9:0]                  SKP_INS_CNT;
wire [13:0]                 lqfe23b;
wire [6:0]                  ls2f7ac;
wire [10:0]                 hb7bd62;
wire [6:0]                  godeb16;
wire [10:0]                 mef58b1;
wire [11:0]                 ec5913;
wire  [1:0]                 tx_dllp_val;
wire [2:0]                  tx_pmtype;
wire  [23:0]                tx_vsd_data;
wire [2:0]                  rxdp_pmd_type;
wire [23:0]                 rxdp_vsd_data;
wire [1:0]                  rxdp_dllp_val;

`ifdef X4
wire [3:0]               hl_gto_lbk;

`endif

`else

`endif

`ifdef X4

`endif

`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else 

`ifdef DOWN_X2

`else 

`endif 

`endif 

`endif 

`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else 

`ifdef DOWN_X2

`else 

`endif 

`endif 

`endif  

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else

`endif

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif

`ifdef ID_INTF

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef X4

`ifdef DOWN_X2

`else

`ifdef DOWN_X1

`else

`ifdef FORCE_REG_X1

`else

`endif

`endif

`endif

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif

`ifdef WISHBONE

`ifdef X1

`endif

`ifdef X4

`endif

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif
reg os49b3a;
reg cz4168c;
reg [7 : 0] ou82307;
reg [2 : 0] xj50460;
reg [31 : 0] uv5b663;
reg [31 : 0] qgdb31c;
reg [31 : 0] mrd98e0;
reg [31 : 0] gbcc704;
reg [31 : 0] by63824;
reg [31 : 0] fp1c123;
reg [31 : 0] eae091f;
reg [31 : 0] xy48f8;
reg [31 : 0] sj23e19;
reg [31 : 0] ie1f0cd;
reg [31 : 0] rv8484d;
reg [31 : 0] ks2426f;
reg [9 : 0] wy21379;
reg [9 : 0] rv9bc9;
reg [9 : 0] ps4de4f;
reg [9 : 0] al6f27b;
reg [9 : 0] vi793dc;
reg [9 : 0] qtc9ee2;
reg [9 : 0] jp4f715;
reg [9 : 0] fn7b8af;
reg [31 : 0] shdc57e;
reg [31 : 0] zz8ed0b;
reg [31 : 0] xw7685e;
reg [31 : 0] cbb42f2;
reg [31 : 0] qva1794;
reg [31 : 0] pfd7bf5;
reg [31 : 0] dobdfaf;
reg [7 : 0] ngb7297;
reg [7 : 0] cob94bb;
reg [11 : 0] tuca5d8;
reg [11 : 0] fa52ec3;
reg aa9761b;
reg [D_WIDTH - 1 : 0] ldd86c5;
reg czc362f;
reg vk1b17d;
reg bld8bea;
reg vic5f56;
reg ri2fab3;
reg ea7d59b;
reg iceacd8;
reg kq566c1;
reg ksb3608;
reg hd9b041;
reg thd820e;
reg [7 : 0] mec1077;
reg [7 : 0] ux83b8;
reg xw426d8;
reg ykde8b1;
reg byf4589;
reg hqa2c4a;
reg bn16253;
reg sjb129e;
reg ng894f4;
reg hb4a7a2;
reg nef1611;
reg [D_WIDTH - 1 : 0] gq15d1a;
reg [D_WIDTH / 8 - 1 : 0] xj74685;
reg [D_WIDTH - 1 : 0] hqbd894;
reg [D_WIDTH - 1 : 0] vkad2ca;
reg [15 : 0] of7acaf;
reg [31 : 0] mrd657c;
reg [D_WIDTH - 1 : 0] mgb3011;
reg [D_WIDTH - 1 : 0] wlbeec2;
reg [D_WIDTH - 1 : 0] pu8333a;
reg [D_WIDTH - 1 : 0] vka76fa;
reg [2 : 0] hq9686d;
reg [1 : 0] sjb436b;
reg [2 : 0] andae4;
reg [1 : 0] ic6d725;
reg [(`NUM_VC - 1) : 0] nr6b929;
reg [(`NUM_VC - 1) : 0] yk5c94f;
reg [(`NUM_VC - 1) : 0] xwe4a78;
reg [(24 * `NUM_VC) - 1 : 0] oh8799;
reg [(24 * `NUM_VC) - 1 : 0] me43ccc;
reg [(24 * `NUM_VC) - 1 : 0] tw1e660;
reg [`NUM_VC - 1 : 0] ri2f3a4;
reg [`NUM_VC - 1 : 0] by79d22;
reg [`NUM_VC - 1 : 0] osce913;
reg [2 : 0] xl9492f;
reg [19 : 0] mta497e;
reg [1 : 0] qv17777;
reg [`NUM_VC - 1 : 0] ie3e603;
reg [`NUM_VC - 1 : 0] zx64981;
reg [(`NUM_VC * 3) - 1 : 0] ie24c0e;
reg [(`NUM_VC * 8) - 1 : 0] kqce389;
reg [2 : 0] yxdc97c;
reg [2 : 0] enf25fa;
reg [2 : 0] vkb87c6;
reg qv363ca;
reg su4c930;
reg nr4ff91;
reg [FADDR : 0] nt9e1f3;
reg [D_WIDTH / 2 - 1 : 0] czf89c9;
reg [D_WIDTH / 16 - 1 : 0] bn27269;
reg [D_WIDTH / 2 - 1 : 0] zx6bb34;
reg [D_WIDTH / 16 - 1 : 0] vvecd3a;
reg [2 : 0] mgb631a;
reg [1 : 0] wlb18d1;
reg [1 : 0] xy8c68d;
reg fp9b61e;
reg ep3c7f8;
reg ec1fe27;
reg [(8 * `NUM_VC) - 1 : 0] fp221ed;
reg [(8 * `NUM_VC) - 1 : 0] ec10f6e;
reg [(12 * `NUM_VC) - 1 : 0] lf3db80;
reg [(12 * `NUM_VC) - 1 : 0] shedc07;
reg [`NUM_VC - 1 : 0] kf90812;
reg [(`NUM_VC * D_WIDTH) - 1 : 0] nt84094;
reg [`NUM_VC - 1 : 0] ie24bf4;
reg [`NUM_VC - 1 : 0] do25fa0;
reg [`NUM_VC - 1 : 0] pu2fd02;
reg [`NUM_VC - 1 : 0] bn131ee;
reg [`NUM_VC - 1 : 0] qi98f76;
reg [`NUM_VC - 1 : 0] nrc7bb0;
reg [`NUM_VC - 1 : 0] db3dd86;
reg [`NUM_VC - 1 : 0] fpb0ddb;
reg [`NUM_VC - 1 : 0] ri86edf;
reg [`NUM_VC - 1 : 0] jr376fa;
reg [`NUM_VC - 1 : 0] yzbb7d7;
reg [(8 * `NUM_VC) - 1 : 0] cmfaf4a;
reg [(8 * `NUM_VC) - 1 : 0] vvd7a50;
reg [`NUM_VC - 1 : 0] je891e7;
reg [(`NUM_VC * 9) - 1 : 0] qtfd411;
reg [(`NUM_VC * 13) - 1 : 0] ayea08c;
reg [(`NUM_VC * 9) - 1 : 0] kf3ce9a;
reg [(`NUM_VC * 13) - 1 : 0] kde74d5;
reg [(`NUM_VC * 9) - 1 : 0] rvc86c;
reg [(`NUM_VC * 13) - 1 : 0] end3563;
reg [(`NUM_VC * D_WIDTH) - 1 : 0] osde235;
reg [`NUM_VC - 1 : 0] ymac72a;
reg [`NUM_VC - 1 : 0] jc63951;
reg [`NUM_VC - 1 : 0] rv1ca8b;
reg [`NUM_VC - 1 : 0] sue545e;
reg [`NUM_VC - 1 : 0] je2a2f1;
reg [`NUM_VC - 1 : 0] doe117;
reg [12 : 0] nt8bc55;
reg [31 : 0] gb5e2ae;
reg jcf1574;
reg ux8aba2;
reg ld55d14;
reg [31 : 0] ldfce8d;
reg [31 : 0] she746f;
reg fc3a37c;
reg uid1be3;
reg mg8df18;
reg [2047:0] db22f5b;
wire [148:0] ux17adf;

`ifdef X1

`define PHY_INST pcie_x1_phy_x1

`define PIPE_INST pcie_x1_pipe_x1

`endif

`ifdef X4

`define PHY_INST phy

`define PIPE_INST pipe

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef WISHBONE

`ifdef X4

`endif

`else

`endif

`ifdef X4

`endif


`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else 

`ifdef DOWN_X2

`else 

`endif 

`endif 

`endif 

`ifdef X1

`endif 

`ifdef X4

`ifdef DOWN_X1

`else 

`ifdef DOWN_X2

`else 

`endif 

`endif 

`endif  

`ifdef X1

`endif 

`ifdef X4

`endif 

`ifdef X4

`endif 

`ifdef X1

`endif 


`ifdef X4

`ifdef DOWN_X1

`else

`endif

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif


`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X4

`endif


`ifdef ID_INTF

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef X4

`ifdef DOWN_X2

`else

`ifdef DOWN_X1

`else

`ifdef FORCE_REG_X1

`else

`endif

`endif

`endif

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif

`ifdef WISHBONE


`ifdef X1

`endif

`ifdef X4

`endif


`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

localparam ribd6fd = 149,jceb7ea = 32'hfdffc70b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef X1


`define PHY_INST pcie_x1_phy_x1


`define PIPE_INST pcie_x1_pipe_x1


`endif


`ifdef X4


`define PHY_INST phy


`define PIPE_INST pipe


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef WISHBONE


`ifdef X4


`endif


`else


`endif


`ifdef X4


`endif


`ifdef X1


`endif 


`ifdef X4


`ifdef DOWN_X1


`else 


`ifdef DOWN_X2


`else 


`endif 


`endif 


`endif 


`ifdef X1


`endif 


`ifdef X4


`ifdef DOWN_X1


`else 


`ifdef DOWN_X2


`else 


`endif 


`endif 


`endif  


`ifdef X1


`endif 


`ifdef X4


`endif 


`ifdef X4


`endif 


`ifdef X1


`endif 


`ifdef X4


`ifdef DOWN_X1


`else


`endif


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X4


`endif


`ifdef ID_INTF


`else


`endif


`ifdef GEN2


`endif


`ifdef CFG_VCC


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef AER


`endif


`ifdef GEN2


`endif


`ifdef X4


`ifdef DOWN_X2


`else


`ifdef DOWN_X1


`else


`ifdef FORCE_REG_X1


`else


`endif


`endif


`endif


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef GEN2


`endif


`ifdef WISHBONE


`ifdef X1


`endif


`ifdef X4


`endif


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif








`ifdef X1



`define PHY_INST pcie_x1_phy_x1



`define PIPE_INST pcie_x1_pipe_x1



`endif



`ifdef X4



`define PHY_INST phy



`define PIPE_INST pipe



`endif






`ifdef X4



`endif






























`ifdef ECRC
   

`endif







`ifdef X4
            


`endif





`ifdef WISHBONE
                                       


`ifdef X4



`endif



`else



`endif













`ifdef X4
   assign vka2cbc = yxdc97c[2];   assign ldd2142 = yxdc97c[1];

`endif




`PIPE_INST #(   .LANE_WIDTH       ( LANE_WIDTH ) ,   .D_WIDTH          ( D_WIDTH )   )   qv188e2 (      .sys_clk             (sys_clk_125),   .rst_n               (rst_n),      .pclk                (sys_clk_250),


`ifdef X1
      .rx_data          (rxp_data),      .rx_data_k        (rxp_data_k),      .rx_valid         (rxp_valid),      .rx_elec_idle     (rxp_elec_idle),      .rx_status        (rxp_status),


`endif 



`ifdef X4



`ifdef DOWN_X1
         .rx_data          ( {rxp_data_ln0, 8'd0, 8'd0, 8'd0} ),         .rx_data_k        ( {rxp_data_k_ln0, 1'b0, 1'b0, 1'b0} ),         .rx_valid         ( {rxp_valid_ln0, 1'b0, 1'b0, 1'b0} ),         .rx_elec_idle     ( {rxp_elec_idle_ln0, 1'b1, 1'b1, 1'b1} ),         .rx_status        ( {rxp_status_ln0, 3'd0, 3'd0, 3'd0} ),


`else 



`ifdef DOWN_X2
            .rx_data          ( {rxp_data_ln0, rxp_data_ln1, 8'd0, 8'd0} ),            .rx_data_k        ( {rxp_data_k_ln0, rxp_data_k_ln1, 1'b0, 1'b0} ),            .rx_valid         ( {rxp_valid_ln0, rxp_valid_ln1, 1'b0, 1'b0} ),            .rx_elec_idle     ( {rxp_elec_idle_ln0, rxp_elec_idle_ln1, 1'b1, 1'b1} ),            .rx_status        ( {rxp_status_ln0, rxp_status_ln1, 3'd0, 3'd0} ),


`else 
            .rx_data          ( {rxp_data_ln0, rxp_data_ln1, rxp_data_ln2, rxp_data_ln3} ),            .rx_data_k        ( {rxp_data_k_ln0, rxp_data_k_ln1, rxp_data_k_ln2, rxp_data_k_ln3} ),            .rx_valid         ( {rxp_valid_ln0, rxp_valid_ln1, rxp_valid_ln2, rxp_valid_ln3} ),            .rx_elec_idle     ( {rxp_elec_idle_ln0, rxp_elec_idle_ln1, rxp_elec_idle_ln2, rxp_elec_idle_ln3} ),            .rx_status        ( {rxp_status_ln0, rxp_status_ln1, rxp_status_ln2, rxp_status_ln3} ),


`endif 



`endif 



`endif 
   .phy_status          (phy_status),
      .phy_inv_polar       (phy_inv_polar),   .phy_godet_rx        (phy_godet_rx),   .phy_fndisp          (phy_fndisp),


`ifdef X1
      .phy_disable_scr  (phy_disable_scr),      .phy_sloopback    (phy_sloopback),      .phy_snd_beacon   (phy_snd_beacon),      .phy_data         (phy_data),      .phy_kcntl        (phy_kcntl),      .phy_eidle_tx     (phy_eidle_tx),


`endif 



`ifdef X4
      .phy_disable_scr     ({4{phy_disable_scr}}),      .phy_sloopback       ({4{phy_sloopback}}),      .phy_snd_beacon      ({4{phy_snd_beacon}}),


`ifdef DOWN_X1
         .phy_data         ({phy_data[31:24], 8'd0, 8'd0, 8'd0}),         .phy_kcntl        ({phy_kcntl[3], 1'b0, 1'b0, 1'b0}),         .phy_eidle_tx     ({phy_eidle_tx[3], 1'b1, 1'b1, 1'b1}),


`else 



`ifdef DOWN_X2
            .phy_data         ({phy_data[31:16], 8'd0, 8'd0}),            .phy_kcntl        ({phy_kcntl[3:2], 1'b0, 1'b0}),            .phy_eidle_tx     ({phy_eidle_tx[3:2], 1'b1, 1'b1}),


`else 
            .phy_data         (phy_data),            .phy_kcntl        (phy_kcntl),            .phy_eidle_tx     (phy_eidle_tx),


`endif 



`endif 



`endif  
   .phy_ltssm_state     (phy_ltssm_state),   .l0s_tx_state        (phy_l0s_tx_state),   .l1_state            (phy_l1_state),   .l2_state            (phy_l2_state),
      .force_lsm_active     (force_lsm_active),   .force_rec_ei         (force_rec_ei),   .force_phy_status     (force_phy_status),      


`ifdef X1
      .tx_data          (txp_data),      .tx_data_k        (txp_data_k),      .tx_elec_idle     (txp_elec_idle),      .tx_compliance    (txp_compliance),      .rx_polarity      (rxp_polarity),


`endif 



`ifdef X4
      .tx_data          ({txp_data_ln0, txp_data_ln1, txp_data_ln2,txp_data_ln3}),      .tx_data_k        ({txp_data_k_ln0, txp_data_k_ln1, txp_data_k_ln2, txp_data_k_ln3}),      .tx_elec_idle     ({txp_elec_idle_ln0, txp_elec_idle_ln1, txp_elec_idle_ln2, txp_elec_idle_ln3}),      .tx_compliance    ({txp_compliance_ln0, txp_compliance_ln1, txp_compliance_ln2, txp_compliance_ln3}),      .rx_polarity      ({rxp_polarity_ln3, rxp_polarity_ln2, rxp_polarity_ln1, rxp_polarity_ln0}),


`endif 
   .tx_detect_rx_lb     (txp_detect_rx_lb),   .reset_n             (reset_n),   .power_down          (power_down),
   


`ifdef X4
      .asb_skip_found   (asb_skip_found),      .skip_added       (skip_added),      .skip_removed     (skip_removed),


`endif 



`ifdef X1
      .asb_dskew_rx     (asb_dskew_rx),


`endif 
   .asb_data            (asb_data),   .asb_kcntl           (asb_kcntl),   .asb_err             (asb_err),   .asb_eidle_rx        (asb_eidle_rx),   .asb_detdone_rx      (asb_detdone_rx),   .asb_detres_rx       (asb_detres_rx),   .asb_beacon_rx       (asb_beacon_rx),   .asb_lane_sync       (asb_lane_sync)   );



`PHY_INST # (   .LANE_WIDTH       ( LANE_WIDTH ) ,   .D_WIDTH          ( D_WIDTH )   )   fn61a5c (      .clk_250_tx       (sys_clk_250),   .clk_250_rx       (sys_clk_250),   .sys_clk          (sys_clk_125),   .rst_n            (rst_n),
   .normal_time      (1'b1),   .reduce_idlecnt   (1'b0),


`ifdef X4



`ifdef DOWN_X1
         .phy_pcie_x1_mca_disable  (1'b1),


`else
         .phy_pcie_x1_mca_disable  (1'b0),


`endif



`endif

      .LINK_NUM         (8'h5A),   .N_FTS_INC        (5'd10),   .SKP_INS_CNT      (SKP_INS_CNT),   .TX_EIDL_CNT      (4'h2),
   


`ifdef X1
      .asb_dskew_rx  (asb_dskew_rx),      .asb_err       (asb_err),


`endif



`ifdef X4
      .asb_skip_found(asb_skip_found),      .skip_added    (skip_added),      .skip_removed  (skip_removed),      .asb_err       (jr8b6be),


`endif
   .asb_data         (asb_data),   .asb_kcntl        (asb_kcntl),   .asb_eidle_rx     (asb_eidle_rx),   .asb_detdone_rx   (asb_detdone_rx),   .asb_detres_rx    (asb_detres_rx),   .asb_beacon_rx    (asb_beacon_rx),   .asb_lane_sync    (asb_lane_sync),
      .force_disable_scr(force_disable_scr),   .hl_snd_beacon    (hl_snd_beacon),   .hl_disable_scr   (hl_disable_scr),   .hl_gto_dis       (hl_gto_dis),   .hl_gto_det       (hl_gto_det),   .hl_gto_hrst      (hl_gto_hrst),   .hl_gto_l0stx     (hl_gto_l0stx),   .hl_gto_l1        (hl_gto_l1),   .hl_gto_l2        (hl_gto_l2),   .hl_gto_l0stxfts  (hl_gto_l0stxfts),


`ifdef X1
      .hl_gto_lbk    (hl_gto_lbk),


`endif



`ifdef X4
      .hl_gto_lbk    ({hl_gto_lbk[0],hl_gto_lbk[1],hl_gto_lbk[2],hl_gto_lbk[3]}),


`endif
   .hl_gto_rcvry     (hl_gto_rcvry),   .hl_gto_cfg       (hl_gto_cfg),   .cfgcs_losel      (cfgcs_losel),   .cfg_rtrn_lnk     (cmf0102) ,   .dll_rtrn_lnk     (ipedf31) ,   .ext_sync         (ext_sync),   .no_pcie_train    (no_pcie_train),
      .tdmux_data       (tdmux_data),   .tdmux_st         (tdmux_st),   .tdmux_end        (tdmux_end),   .tdmux_edb        (tdmux_edb),   .tdmux_skp        (tdmux_skip),


`ifdef X1
      .tdmux_dllp_st (tdmux_dllp_st),      .tdmux_dllp_end(tdmux_dllp_end),


`endif



`ifdef X4
      .tdmux_val     (tdmux_val),      .tdmux_dwen    (suf0301),      .tdmux_dllp    (xlc047),


`endif

       .tx_lbk_data      (tx_lbk_data),   .tx_lbk_kcntl     (tx_lbk_kcntl),      .tx_lbk_rdy       (tx_lbk_rdy),   .rx_lbk_data      (rx_lbk_data),   .rx_lbk_kcntl     (rx_lbk_kcntl),   .phy_realign_req  (phy_realign_req),   .phy_ltssm_state  (phy_ltssm_state),   .phy_ltssm_substate (phy_ltssm_substate),   .phy_cfgln_sum    (phy_cfgln_sum),   .phy_cfgln        (phy_cfgln),   .pol_compliance   (phy_pol_compliance),
   


`ifdef X1
      .phy_skpq_nclks(),      .phy_skpq_val  (phy_skpq_val),


`endif



`ifdef X4
      .phy_skpq_nclks(phy_skpq_nclks),      .phy_skpq_val  (phy_skpq_val),      .pcie_x1_mca_aligned   (pcie_x1_mca_aligned),


`endif

      .phy_neg_lnkw     (je30ba7),   .phy_trn_err      (sh60c2e),   .phy_lnk_trn      (hd6174),
      .phy_disable_scr  (phy_disable_scr),   .phy_sloopback    (phy_sloopback),   .phy_inv_polar    (phy_inv_polar),   .phy_eidle_tx     (phy_eidle_tx),   .phy_godet_rx     (phy_godet_rx),   .phy_snd_beacon   (phy_snd_beacon),   .phy_data         (phy_data),   .phy_kcntl        (phy_kcntl),   .phy_fndisp       (phy_fndisp),   .phy_linkup       (phy_link_up),   .phy_l0           (phy_l0),   .phy_l0s_tx_state (phy_l0s_tx_state),   .phy_l1_state     (phy_l1_state),   .phy_l2_state     (phy_l2_state),   .phy_l0_l0s       (phy_l0_l0s),
      .dfrm_ddata       (dfrm_ddata),   .dfrm_tdata       (dfrm_tdata),   .dfrm_tval        (dfrm_tval),   .dfrm_st          (dfrm_st),   .dfrm_end         (dfrm_end),   .dfrm_edb         (dfrm_edb),


`ifdef X1
      .dfrm_dllp_st  (dfrm_dllp_st),      .dfrm_dllp_end (dfrm_dllp_end),


`endif



`ifdef X4
      .dfrm_dval     (oh23716),      .dfrm_dwen     (ir26ef7),      .dfrm_seq      (jr377bd),      .dfrm_lcrc     (yzbbdef),


`endif
   .dfrm_perr        (dfrm_perr)    );


`ifdef X1
    assign me72c69 = phy_cfgln;

`endif




assign rg4818f = ~nr4ff91 ;
assign dl_up   = je2a2f1[0];
pcie_x1_ir85092  #(   .FADDR           (FADDR),   .D_WIDTH         ( D_WIDTH ) )   ir3c4ac (      .sys_clk        (sys_clk_125),   .rst_n          (rst_n),         .tlp_debug        (tlp_debug),   .zxe9031     (12'd4095),   .lqfe23b  (lqfe23b),      .mtab7fe     (mtab7fe),   .tlpgen_data    (mgb3011),   .tlpgen_st      (tlpgen_st),   .tlpgen_end     (tlpgen_end),   .tlpgen_nlfy    (tlpgen_nlfy),   .tlpgen_rdy_ack (tlpgen_rdy_ack),   .kqdb459     (kqdb459),   .psda2c8       (hq9686d),   .cmd1642       (sjb436b),   .fp8b211     (fp8b211),   .ww5908f       (andae4),   .nrc8479       (ic6d725),   .fa423ce   (nr6b929),   .tw11e73  (yk5c94f),   .gd8f39a (xwe4a78),
   .qv33bed           (oh8799),   .wy9df6c          (me43ccc),   .goefb60         (tw1e660),      .dfrm_tdata     (vkad2ca),   .dfrm_tval      (dfrm_tval),   .dfrm_st        (dfrm_st),   .dfrm_end       (dfrm_end),   .dfrm_edb       (dfrm_edb),


`ifdef X1
      .mg21b1b (vka76fa),      .dfrm_dllp_st   (dfrm_dllp_st),      .dfrm_dllp_end  (dfrm_dllp_end),


`endif



`ifdef X4
      .dfrm_ddata     (vka76fa[63:16]),      .oh23716      (oh23716),      .ir26ef7      (ir26ef7),      .jr377bd       (of7acaf),      .yzbbdef      (mrd657c),
      .phy_cfgln_sum  (phy_cfgln_sum),      .vka2cbc     (vka2cbc),      .ldd2142     (ldd2142),      .phy_skpq_nclks (phy_skpq_nclks),      .rgf11db    (rgf11db),      .ls93225    (ls93225),


`endif
   .phy_ltssm_state(phy_ltssm_state),   .phy_link_up    (phy_link_up),   .phy_l0         (phy_l0),   .nr40c7a         (zx64981),   .hd63d7       (ie24c0e),   .rg4818f        (su4c930),   .max_pl_size    (vkb87c6),   .phy_skpq_val   (phy_skpq_val),   .uk3b68b (uk3b68b),   .trnc_st        (doe117),      .xjc771a          (tx_dllp_val[0]),   .tx_pmtype      (tx_pmtype[2:0]),   .gq3b8d7      (tx_dllp_val[1]),   .tx_vsd_data    (tx_vsd_data),         .txtp_rdy       (txtp_rdy),      .tdmux_data     (tdmux_data),   .tdmux_st       (tdmux_st),   .tdmux_end      (tdmux_end),   .tdmux_edb      (tdmux_edb),   .tdmux_skip     (tdmux_skip),


`ifdef X1
      .tdmux_val      (),      .tdmux_dllp_st  (tdmux_dllp_st),      .tdmux_dllp_end (tdmux_dllp_end),


`endif



`ifdef X4
      .tdmux_val   (tdmux_val),      .ipf2c20   (ipf2c20),      .suf0301  (suf0301),      .xlc047  (xlc047),


`endif

      .rxtp_data      (rxtp_data),   .rxtp_st        (rxtp_st),   .rxtp_end       (rxtp_end),   .ym97759  (ym97759),   .uxbbac8  (uxbbac8),   .jpdd644   (jpdd644),   .ie92eeb  (ie92eeb),   .rib25dd    ({phbf50c, wwfa867}),   .rxdp_vsd_data  (rxdp_vsd_data) ,   .rxdp_pmd_type  (rxdp_pmd_type[2:0]),   .rxdp_dllp_val  (rxdp_dllp_val),      .wjc364e     (wjc364e),   .zm1b275     (zm1b275),   .ba8983e    (ba8983e),   .qg4c1f3   (qg4c1f3),   .en60f98  (en60f98),      .vcneg_pend     (vcneg_pend),   .do3aee2  (do3aee2),   .uvfd0f9     (uvfd0f9),   .rxtp_bad_tlp   (rxtp_bad_tlp),   .ipedf31 (ipedf31),   .zkda02d (zkda02d),      .dl_inactive    (dl_inactive),   .dl_init        (dl_init),   .dl_active      (dl_active),   .dl_up          (co1508e),
      .tx_rbuf_empty  (tx_rbuf_empty),   .tx_dllp_pend   (tx_dllp_pend),   .rx_tlp_rcvd    (rx_tlp_rcvd),      .dll_pause_cnt  (dll_pause_cnt),      .ldf3121   (tx_dllp_sent)    );




`ifdef X4
      always @(posedge sys_clk_250 or negedge rst_n) begin      if (!rst_n) begin         en5b5f7 <= 4'h0 ;         tudafbc <= 4'h0 ;      end      else begin         en5b5f7 <= phy_cfgln ;         tudafbc <= en5b5f7 ;      end   end      always @(posedge sys_clk_250 or negedge rst_n) begin      if (!rst_n)         jr8b6be <= 4'd0;      else         jr8b6be <= (asb_err & tudafbc);   end

`endif


pcie_x1_anbe1c3  #(   .FADDR                ( FADDR ),   .D_WIDTH              ( D_WIDTH ) )   phafb27 (      .sys_clk              ( sys_clk_125 ),   .rst_n                ( rst_n ),      


`ifdef ID_INTF
      .yk7dd7f      ( {device_id,vendor_id} )  ,      .rgeebf9      ( {class_code,rev_id} )  ,      .faee089      ( {subsys_id,subsys_ven_id} )  ,      .load_id           ( load_id )  ,


`else
      .yk7dd7f      ( yk7dd7f )  ,      .rgeebf9      ( rgeebf9 )  ,      .faee089      ( faee089 )  ,      .load_id           ( 1'b1 )  ,


`endif

   .gb75fcb         ( uv5b663 )  ,   .bnafe5d         ( qgdb31c )  ,   .ip7f2ef         ( mrd98e0 )  ,   .vvf977d         ( gbcc704 )  ,   .oscbbee         ( by63824 )  ,   .ne5df70         ( fp1c123 )  ,   .meefb82         ( eae091f )  ,   .qg7dc11         ( xy48f8 )  ,   .kd7044a         ( sj23e19 )  ,   .aa82254         ( ie1f0cd )  ,      .ph2d142         ( rv8484d )  ,   .os68a17         ( ks2426f )  ,   .fn450b8    ( wy21379 )  ,   .rv285c6    ( rv9bc9 )  ,   .fa42e37    ( ps4de4f )  ,   .qv171ba    ( al6f27b )  ,   .hqb8dd4    ( vi793dc )  ,   .mrc6ea3    ( qtc9ee2 )  ,   .vx3751c    ( jp4f715 )  ,   .rvba8e7    ( fn7b8af )  ,      .icd473e         ( shdc57e )  ,      .alc3d44         ( zz8ed0b )  ,   .ba1ea24         ( xw7685e )  ,   .ykf5123         ( cbb42f2 )  ,   .jea8918         ( qva1794 )  ,


`ifdef GEN2
      .qt448c2      ( qt448c2 )  ,


`endif
      .kfbb8eb         ( pfd7bf5 )  ,   .gbdc75c         ( dobdfaf )  ,   


`ifdef CFG_VCC
      .jra58e0      ( jra58e0 )  ,


`endif

      .an8a0cc           ( fp221ed ),   .ld50665          ( ec10f6e ),   .jr1997b           ( lf3db80 ),   .ipccbde          ( shedc07 ),   .ls2f7ac       ( ls2f7ac ),   .hb7bd62       ( hb7bd62 ),   .godeb16      ( godeb16 ),   .mef58b1      ( mef58b1 ),   .ec5913         ( ec5913 ),
   .tlp_debug            ( tlp_debug ),
   .inta_n               ( cz4168c ),   .msi                  ( ou82307 ),   .msi_tc               ( xj50460 ),      .tx_req               ( kf90812 ),   .tx_data              ( nt84094 ),   .tx_st                ( ie24bf4 ),   .tx_end               ( do25fa0 ),   .tx_nlfy              ( pu2fd02 ),
      .phy_link_up          ( phy_link_up ),   .sh60c2e        ( sh60c2e ),   .hd6174     ( hd6174 ),   .je30ba7            ( yxdc97c ),   .dfrm_perr            ( dfrm_perr ),   .phy_cfgln_sum        ( phy_cfgln_sum ),
      .dll_pause_cnt        ( nt9e1f3 ),   .txtp_rdy             ( txtp_rdy ),   .rxtp_data            ( pu8333a ),   .rxtp_st              ( rxtp_st ),   .rxtp_end             ( rxtp_end ),


`ifdef X4
      .rg58e31           ( rg58e31 ),      .ipf2c20         ( ipf2c20 ),


`endif

   .rxtp_bad_tlp         ( rxtp_bad_tlp ),   .do3aee2        ( do3aee2 ),   .uvfd0f9           ( uvfd0f9 ),   .ipedf31       ( ipedf31 ),   .zkda02d       ( zkda02d ),
   .ym97759        ( ym97759 ),   .uxbbac8        ( uxbbac8 ),   .jpdd644         ( jpdd644 ),   .ie92eeb        ( qv17777 ),   .phbf50c        ( xl9492f ),   .wwfa867        ( mta497e ),   .dl_up                ( je2a2f1 ),   .dl_active            ( dl_active ),   .dl_inactive          ( dl_inactive ),
   .vcneg_pend           ( ie3e603 ),   .phy_l0_l0s           ( phy_l0_l0s ),   .wjc364e           ( wjc364e ),   .zm1b275           ( zm1b275 ),   .ba8983e          ( ri2f3a4 ),   .qg4c1f3         ( by79d22 ),   .en60f98        ( osce913 ),   .bn81991        ( bn131ee ),   .phcc8f        ( qi98f76 ),   .zk6647f       ( nrc7bb0 ),   .lf323fa       ( db3dd86 ),   .gb7f5f4         ( fpb0ddb ),   .cmfafa5         ( ri86edf ),   .nph_processed        ( jr376fa ),   .npd_processed        ( yzbb7d7 ),   .vx28f1f               ( cmfaf4a ),   .ho478fe              ( vvd7a50 ),


`ifdef ECRC
      .pcie_x1_ecrc_gen_enb      ( pcie_x1_ecrc_gen_enb ) ,      .pcie_x1_ecrc_chk_enb      ( pcie_x1_ecrc_chk_enb ) ,


`endif

   


`ifdef AER
      .err_tlp_header    ( err_tlp_header ),


`endif
   .cmpln_tout           ( ykde8b1 ),   .cmpltr_abort_np      ( byf4589 ),   .cmpltr_abort_p       ( hqa2c4a ),   .unexp_cmpln          ( bn16253 ),   .ur_np_ext            ( sjb129e ) ,   .ur_p_ext             ( ng894f4 ) ,   .np_req_pend          ( hb4a7a2 ),   .pme_status           ( nef1611 ),   .term_all_cfg         ( os49b3a ),         .tj221ea    ( 1'b0 ),


`ifdef GEN2
      .flr_rdy_in        ( flr_rdy_in ),


`endif



`ifdef X4



`ifdef DOWN_X2
         .mg10f56      ( 1'b1 ),         .aa87ab0      ( 1'b0 ),


`else
         .mg10f56      ( 1'b0 ),


`ifdef DOWN_X1
            .aa87ab0      ( 1'b1 ),


`else



`ifdef FORCE_REG_X1
               .aa87ab0   ( 1'b1 ),


`else
               .aa87ab0   ( 1'b0 ),


`endif



`endif



`endif



`endif

      .ADR_I                ( nt8bc55[11:0] ) ,   .DAT_I                ( gb5e2ae ),   .WE_I                 ( ux8aba2 ),   .STB_I                ( ld55d14 & ~nt8bc55[12] ),
      .RDAT_O               ( do8967e ),   .ACK_O                ( gd950bc ),
      .mtab7fe           ( mtab7fe ),   .tlpgen_data          ( tlpgen_data ),   .tlpgen_st            ( tlpgen_st ),   .tlpgen_end           ( tlpgen_end ),   .tlpgen_nlfy          ( tlpgen_nlfy ),   .tlpgen_rdy_ack       ( tlpgen_rdy_ack ),   .uk3b68b       ( uk3b68b ),      .tx_rdy               ( tx_rdy ),   .tx_ca_ph             ( tx_ca_ph ),   .tx_ca_pd             ( tx_ca_pd ),   .fnc7a69            ( fnc7a69 ),   .rv3d34e            ( rv3d34e ),   .tx_ca_cplh           ( tx_ca_cplh ),   .fa4d3b6           ( fa4d3b6 ),   .rv3725d      ( tx_ca_p_recheck_vc0 ),   .ieb92ef    ( tx_ca_cpl_recheck_vc0 ),      .rx_data              ( rx_data ),   .rx_st                ( rx_st ),   .rx_end               ( rx_end ),


`ifdef ECRC
      .rx_pcie_x1_ecrc_err       ( rx_pcie_x1_ecrc_err ),


`endif
   .rx_us_req            ( rx_us_req ),   .rx_malf_tlp          ( rx_malf_tlp ),   .rx_bar_hit           ( rx_bar_hit ),


`ifdef X4
      .rgf11db       ( rgf11db ),      .ls93225       ( ls93225 ),      .tx_val            ( tx_val ),      .ea49c76           ( ea49c76 ),


`endif

   .bus_num              ( bus_num ) ,   .dev_num              ( dev_num ) ,   .func_num             ( func_num ) ,   .pm_power_state       ( pm_power_state ) ,   .pme_en               ( pme_en ) ,   .mm_enable            ( mm_enable ) ,   .msi_enable           ( msi_enable ) ,   .mes_laddr            (  ) ,   .mes_uaddr            (  ) ,   .mes_data             (  ) ,   .cmd_reg_out          ( cmd_reg_out ),   .dev_cntl_out         ( dev_cntl_out ),   .lnk_cntl_out         ( lnk_cntl_out ),   .ftl_err_out          (  ),   .nftl_err_out         (  ),   .cor_err_out          (  ),


`ifdef GEN2
      .dev_cntl_2_out    ( dev_cntl_2_out ),      .initiate_flr      ( initiate_flr ),


`endif

   .max_pl_size          ( max_pl_size ),   .ext_sync             ( ext_sync ),   .pu1e020         ( pu1e020 ),   .cmf0102          ( cmf0102 ),   .cfgcs_losel          ( cfgcs_losel ),   .me56173                ( nr40c7a ),   .hd63d7             ( hd63d7 ),   .jr322ef         ( jr322ef ),   .trnc_st              ( trnc_st ),   .kqdb459           ( kqdb459 ),   .psda2c8             ( psda2c8 ),   .cmd1642             ( cmd1642 ),   .fp8b211           ( fp8b211 ),   .ww5908f             ( ww5908f ),   .nrc8479             ( nrc8479 ),   .fa423ce        ( fa423ce ),   .tw11e73       ( tw11e73 ),   .gd8f39a      ( gd8f39a ),   .qv33bed                 ( qv33bed ),   .wy9df6c                ( wy9df6c ),   .goefb60               ( goefb60 )    );




`ifdef WISHBONE
   dpcie_x1_mca3f3 su43119   (      .sys_clk              (sys_clk_125),   .rst_n                (rst_n ),      .ADR_I                (nt8bc55[12:0]) ,   .DAT_I                (gb5e2ae),   .WE_I                 (ux8aba2),   .STB_I                (ld55d14),
      .tx_dllp_sent         (tx_dllp_sent),   .rv27fe2          (rxdp_dllp_val),   .ba3ff17            (rxdp_pmd_type),   .kqff8ba          (rxdp_vsd_data) ,      .phy_ltssm_state      ({1'b0,phy_ltssm_state}),


`ifdef X1
      .ipe2e86     (rxp_valid),


`endif



`ifdef X4
      .ipe2e86     ({rxp_valid_ln0, rxp_valid_ln1, rxp_valid_ln2, rxp_valid_ln3}),


`endif
   .asb_eidle_rx         (asb_eidle_rx),   .asb_detdone_rx       (asb_detdone_rx),   .asb_detres_rx        (asb_detres_rx),      .dl_inactive          (dl_inactive),   .dl_init              (dl_init),   .dl_active            (dl_active),   .dl_up                (dl_up),
         .RDAT_O               (en4b3f2),   .ACK_O                (jea85e5),
      .tx_dllp_val          (tx_dllp_val),   .tx_pmtype            (tx_pmtype),   .tx_vsd_data          (tx_vsd_data),      .tlp_debug            (tlp_debug),   .hl_snd_beacon        (hl_snd_beacon),   .force_lsm_active     (force_lsm_active),   .force_rec_ei         (force_rec_ei),   .force_phy_status     (force_phy_status),   .force_disable_scr    (force_disable_scr),   .hl_disable_scr       (hl_disable_scr),   .hl_gto_dis           (hl_gto_dis),   .hl_gto_det           (hl_gto_det),   .hl_gto_hrst          (hl_gto_hrst),   .hl_gto_l0stx         (hl_gto_l0stx),   .hl_gto_l1            (hl_gto_l1),   .hl_gto_l2            (hl_gto_l2),   .hl_gto_l0stxfts      (hl_gto_l0stxfts),   .hl_gto_lbk           (hl_gto_lbk),   .hl_gto_rcvry         (hl_gto_rcvry),   .hl_gto_cfg           (hl_gto_cfg),   .no_pcie_train        (no_pcie_train),

   .N_FTS_INC            (),   .SKP_INS_CNT          (SKP_INS_CNT),   .lqfe23b      (lqfe23b),   .ls2f7ac       (ls2f7ac),   .hb7bd62       (hb7bd62),   .godeb16      (godeb16),   .mef58b1      (mef58b1),   .ukac589     ( ),   .cm62c49     ( ),   .ec5913         (ec5913),   .LINK_NUM             ()  );   pcie_x1_hq11ed8 kdf8295   (      .RST_I                ( RST_I ),   .CLK_I                ( CLK_I ),   .ADR_I                ( ADR_I ),   .DAT_I                ( DAT_I ),   .SEL_I                ( SEL_I ),   .WE_I                 ( WE_I ),   .STB_I                ( STB_I ),   .CYC_I                ( CYC_I ),   .DAT_O                ( DAT_O ),   .ACK_O                ( ACK_O ),   .IRQ_O                ( IRQ_O ),
      .CHAIN_RDAT_in        ( CHAIN_RDAT_in ),   .CHAIN_ACK_in         ( CHAIN_ACK_in ),      .tj8e259              ( sys_clk_125 ),   .hb712cf           ( hb712cf ),   .do8967e         ( ldfce8d ),   .en4b3f2         ( she746f ),   .os59f95           ( os59f95 ),   .vicfca8       ( ),   .th7e542         ( th7e542 ),   .enf2a17         ( enf2a17 ),   .gd950bc          ( fc3a37c ),   .jea85e5          ( uid1be3 ),   .tu42f2b            ( 1'b0 )   );

`endif




      assign an8a0cc           = ngb7297;   assign ld50665          = cob94bb;   assign jr1997b           = tuca5d8;   assign ipccbde          = fa52ec3;   assign tx_req               = aa9761b;   assign tx_data              = ldd86c5;   assign tx_st                = czc362f;   assign tx_end               = vk1b17d;   assign tx_nlfy              = bld8bea;   assign bn81991        = vic5f56;   assign phcc8f        = ri2fab3;   assign zk6647f       = ea7d59b;   assign lf323fa       = iceacd8;   assign gb7f5f4         = kq566c1;   assign cmfafa5         = ksb3608;   assign nph_processed        = hd9b041;   assign npd_processed        = thd820e;   assign vx28f1f               = mec1077;   assign ho478fe              = ux83b8;
      assign fa690a8         = kqce389;   assign tx_rdy_vc0           = je891e7[0];   assign tx_ca_ph_vc0         = qtfd411;   assign tx_ca_pd_vc0         = ayea08c;   assign tx_ca_nph_vc0        = kf3ce9a;   assign tx_ca_npd_vc0        = kde74d5;   assign tx_ca_cplh_vc0       = rvc86c;   assign tx_ca_cpld_vc0       = end3563;   assign rx_data_vc0          = osde235;   assign rx_st_vc0            = ymac72a[0];   assign rx_end_vc0           = jc63951[0];


`ifdef ECRC
      assign rx_pcie_x1_ecrc_err_vc0   = rx_pcie_x1_ecrc_err[0];


`endif
   assign rx_us_req_vc0        = rv1ca8b[0];   assign rx_malf_tlp_vc0      = sue545e[0];



`ifdef X4
   assign rg58e31 = tx_dwen_vc0;   assign rx_dwen_vc0 = ea49c76[0];


`endif


always@* begin os49b3a<=ux17adf[0];cz4168c<=ux17adf[1];ou82307<={msi>>1,ux17adf[2]};xj50460<={msi_tc>>1,ux17adf[3]};uv5b663<={gb75fcb>>1,ux17adf[4]};qgdb31c<={bnafe5d>>1,ux17adf[5]};mrd98e0<={ip7f2ef>>1,ux17adf[6]};gbcc704<={vvf977d>>1,ux17adf[7]};by63824<={oscbbee>>1,ux17adf[8]};fp1c123<={ne5df70>>1,ux17adf[9]};eae091f<={meefb82>>1,ux17adf[10]};xy48f8<={qg7dc11>>1,ux17adf[11]};sj23e19<={kd7044a>>1,ux17adf[12]};ie1f0cd<={aa82254>>1,ux17adf[13]};rv8484d<={ph2d142>>1,ux17adf[14]};ks2426f<={os68a17>>1,ux17adf[15]};wy21379<={fn450b8>>1,ux17adf[16]};rv9bc9<={rv285c6>>1,ux17adf[17]};ps4de4f<={fa42e37>>1,ux17adf[18]};al6f27b<={qv171ba>>1,ux17adf[19]};vi793dc<={hqb8dd4>>1,ux17adf[20]};qtc9ee2<={mrc6ea3>>1,ux17adf[21]};jp4f715<={vx3751c>>1,ux17adf[22]};fn7b8af<={rvba8e7>>1,ux17adf[23]};shdc57e<={icd473e>>1,ux17adf[24]};zz8ed0b<={alc3d44>>1,ux17adf[25]};xw7685e<={ba1ea24>>1,ux17adf[26]};cbb42f2<={ykf5123>>1,ux17adf[27]};qva1794<={jea8918>>1,ux17adf[28]};pfd7bf5<={kfbb8eb>>1,ux17adf[29]};dobdfaf<={gbdc75c>>1,ux17adf[30]};ngb7297<={ls89c7e>>1,ux17adf[31]};cob94bb<={uv4e3f3>>1,ux17adf[32]};tuca5d8<={pf71f9d>>1,ux17adf[33]};fa52ec3<={ux8fcef>>1,ux17adf[34]};aa9761b<=ux17adf[35];ldd86c5<={tx_data_vc0>>1,ux17adf[36]};czc362f<=ux17adf[37];vk1b17d<=ux17adf[38];bld8bea<=ux17adf[39];vic5f56<=ux17adf[40];ri2fab3<=ux17adf[41];ea7d59b<=ux17adf[42];iceacd8<=ux17adf[43];kq566c1<=ux17adf[44];ksb3608<=ux17adf[45];hd9b041<=ux17adf[46];thd820e<=ux17adf[47];mec1077<={pd_num_vc0>>1,ux17adf[48]};ux83b8<={npd_num_vc0>>1,ux17adf[49]};xw426d8<=ux17adf[50];ykde8b1<=ux17adf[51];byf4589<=ux17adf[52];hqa2c4a<=ux17adf[53];bn16253<=ux17adf[54];sjb129e<=ux17adf[55];ng894f4<=ux17adf[56];hb4a7a2<=ux17adf[57];nef1611<=ux17adf[58];gq15d1a<={tx_lbk_data>>1,ux17adf[59]};xj74685<={tx_lbk_kcntl>>1,ux17adf[60]};hqbd894<={tdmux_data>>1,ux17adf[61]};vkad2ca<={dfrm_tdata>>1,ux17adf[62]};of7acaf<={jr377bd>>1,ux17adf[63]};mrd657c<={yzbbdef>>1,ux17adf[64]};mgb3011<={tlpgen_data>>1,ux17adf[65]};wlbeec2<={tlpdec_data>>1,ux17adf[66]};pu8333a<={rxtp_data>>1,ux17adf[67]};vka76fa<={dfrm_ddata>>1,ux17adf[68]};hq9686d<={psda2c8>>1,ux17adf[69]};sjb436b<={cmd1642>>1,ux17adf[70]};andae4<={ww5908f>>1,ux17adf[71]};ic6d725<={nrc8479>>1,ux17adf[72]};nr6b929<={fa423ce>>1,ux17adf[73]};yk5c94f<={tw11e73>>1,ux17adf[74]};xwe4a78<={gd8f39a>>1,ux17adf[75]};oh8799<={qv33bed>>1,ux17adf[76]};me43ccc<={wy9df6c>>1,ux17adf[77]};tw1e660<={goefb60>>1,ux17adf[78]};ri2f3a4<={ba8983e>>1,ux17adf[79]};by79d22<={qg4c1f3>>1,ux17adf[80]};osce913<={en60f98>>1,ux17adf[81]};xl9492f<={phbf50c>>1,ux17adf[82]};mta497e<={wwfa867>>1,ux17adf[83]};qv17777<={ie92eeb>>1,ux17adf[84]};ie3e603<={vcneg_pend>>1,ux17adf[85]};zx64981<={nr40c7a>>1,ux17adf[86]};ie24c0e<={hd63d7>>1,ux17adf[87]};kqce389<={jr322ef>>1,ux17adf[88]};yxdc97c<={je30ba7>>1,ux17adf[89]};enf25fa<={cfgcs_losel>>1,ux17adf[90]};vkb87c6<={max_pl_size>>1,ux17adf[91]};qv363ca<=ux17adf[92];su4c930<=ux17adf[93];nr4ff91<=ux17adf[94];nt9e1f3<={dll_pause_cnt>>1,ux17adf[95]};czf89c9<={phy_data>>1,ux17adf[96]};bn27269<={phy_kcntl>>1,ux17adf[97]};zx6bb34<={asb_data>>1,ux17adf[98]};vvecd3a<={asb_kcntl>>1,ux17adf[99]};mgb631a<={phy_l0s_tx_state>>1,ux17adf[100]};wlb18d1<={phy_l1_state>>1,ux17adf[101]};xy8c68d<={phy_l2_state>>1,ux17adf[102]};fp9b61e<=ux17adf[103];ep3c7f8<=ux17adf[104];ec1fe27<=ux17adf[105];fp221ed<={an8a0cc>>1,ux17adf[106]};ec10f6e<={ld50665>>1,ux17adf[107]};lf3db80<={jr1997b>>1,ux17adf[108]};shedc07<={ipccbde>>1,ux17adf[109]};kf90812<={tx_req>>1,ux17adf[110]};nt84094<={tx_data>>1,ux17adf[111]};ie24bf4<={tx_st>>1,ux17adf[112]};do25fa0<={tx_end>>1,ux17adf[113]};pu2fd02<={tx_nlfy>>1,ux17adf[114]};bn131ee<={bn81991>>1,ux17adf[115]};qi98f76<={phcc8f>>1,ux17adf[116]};nrc7bb0<={zk6647f>>1,ux17adf[117]};db3dd86<={lf323fa>>1,ux17adf[118]};fpb0ddb<={gb7f5f4>>1,ux17adf[119]};ri86edf<={cmfafa5>>1,ux17adf[120]};jr376fa<={nph_processed>>1,ux17adf[121]};yzbb7d7<={npd_processed>>1,ux17adf[122]};cmfaf4a<={vx28f1f>>1,ux17adf[123]};vvd7a50<={ho478fe>>1,ux17adf[124]};je891e7<={tx_rdy>>1,ux17adf[125]};qtfd411<={tx_ca_ph>>1,ux17adf[126]};ayea08c<={tx_ca_pd>>1,ux17adf[127]};kf3ce9a<={fnc7a69>>1,ux17adf[128]};kde74d5<={rv3d34e>>1,ux17adf[129]};rvc86c<={tx_ca_cplh>>1,ux17adf[130]};end3563<={fa4d3b6>>1,ux17adf[131]};osde235<={rx_data>>1,ux17adf[132]};ymac72a<={rx_st>>1,ux17adf[133]};jc63951<={rx_end>>1,ux17adf[134]};rv1ca8b<={rx_us_req>>1,ux17adf[135]};sue545e<={rx_malf_tlp>>1,ux17adf[136]};je2a2f1<={co1508e>>1,ux17adf[137]};doe117<={trnc_st>>1,ux17adf[138]};nt8bc55<={hb712cf>>1,ux17adf[139]};gb5e2ae<={os59f95>>1,ux17adf[140]};jcf1574<=ux17adf[141];ux8aba2<=ux17adf[142];ld55d14<=ux17adf[143];ldfce8d<={do8967e>>1,ux17adf[144]};she746f<={en4b3f2>>1,ux17adf[145]};fc3a37c<=ux17adf[146];uid1be3<=ux17adf[147];mg8df18<=ux17adf[148];end
always@* begin db22f5b[2047]<=inta_n;db22f5b[2046]<=msi[0];db22f5b[2044]<=msi_tc[0];db22f5b[2040]<=gb75fcb[0];db22f5b[2032]<=bnafe5d[0];db22f5b[2016]<=ip7f2ef[0];db22f5b[2014]<=cmd1642[0];db22f5b[1985]<=vvf977d[0];db22f5b[1981]<=ww5908f[0];db22f5b[1970]<=qv33bed[0];db22f5b[1927]<=dfrm_tdata[0];db22f5b[1922]<=oscbbee[0];db22f5b[1915]<=nrc8479[0];db22f5b[1898]<=os59f95[0];db22f5b[1893]<=wy9df6c[0];db22f5b[1890]<=phy_snd_beacon;db22f5b[1867]<=qv171ba[0];db22f5b[1861]<=max_pl_size[0];db22f5b[1807]<=jr377bd[0];db22f5b[1804]<=npd_processed_vc0;db22f5b[1797]<=ne5df70[0];db22f5b[1782]<=fa423ce[0];db22f5b[1761]<=ph_processed_vc0;db22f5b[1749]<=vicfca8;db22f5b[1739]<=goefb60[0];db22f5b[1738]<=lf323fa[0];db22f5b[1733]<=an8a0cc[0];db22f5b[1708]<=do8967e[0];db22f5b[1686]<=hqb8dd4[0];db22f5b[1675]<=fa4d3b6[0];db22f5b[1674]<=ext_sync;db22f5b[1652]<=hd63d7[0];db22f5b[1625]<=en60f98[0];db22f5b[1623]<=unexp_cmpln;db22f5b[1617]<=nph_processed[0];db22f5b[1579]<=ipccbde[0];db22f5b[1567]<=yzbbdef[0];db22f5b[1561]<=pd_num_vc0[0];db22f5b[1558]<=jea8918[0];db22f5b[1547]<=meefb82[0];db22f5b[1542]<=tx_data_vc0[0];db22f5b[1516]<=tw11e73[0];db22f5b[1505]<=tx_lbk_kcntl[0];db22f5b[1498]<=trnc_st[0];db22f5b[1496]<=phy_disable_scr;db22f5b[1490]<=rv285c6[0];db22f5b[1475]<=pd_processed_vc0;db22f5b[1458]<=phcc8f[0];db22f5b[1451]<=th7e542;db22f5b[1437]<=vcneg_pend[0];db22f5b[1430]<=ba8983e[0];db22f5b[1428]<=gb7f5f4[0];db22f5b[1418]<=ld50665[0];db22f5b[1413]<=ba1ea24[0];db22f5b[1409]<=ux8fcef[0];db22f5b[1400]<=pme_status;db22f5b[1398]<=phy_l1_state[0];db22f5b[1388]<=tx_nlfy[0];db22f5b[1378]<=jea85e5;db22f5b[1373]<=asb_kcntl[0];db22f5b[1368]<=en4b3f2[0];db22f5b[1324]<=mrc6ea3[0];db22f5b[1306]<=tx_rdy[0];db22f5b[1303]<=rx_data[0];db22f5b[1301]<=rg4818f;db22f5b[1256]<=jr322ef[0];db22f5b[1203]<=phbf50c[0];db22f5b[1200]<=rvba8e7[0];db22f5b[1199]<=ur_np_ext;db22f5b[1187]<=npd_processed[0];db22f5b[1128]<=tx_ca_pd[0];db22f5b[1117]<=rx_end[0];db22f5b[1110]<=tx_req[0];db22f5b[1109]<=dll_pause_cnt[0];db22f5b[1086]<=tlpgen_data[0];db22f5b[1074]<=npd_num_vc0[0];db22f5b[1068]<=kfbb8eb[0];db22f5b[1047]<=qg7dc11[0];db22f5b[1037]<=tx_st_vc0;db22f5b[1023]<=term_all_cfg;db22f5b[1007]<=psda2c8[0];db22f5b[985]<=gd8f39a[0];db22f5b[963]<=tdmux_data[0];db22f5b[949]<=hb712cf[0];db22f5b[945]<=phy_sloopback;db22f5b[933]<=fa42e37[0];db22f5b[930]<=cfgcs_losel[0];db22f5b[902]<=nph_processed_vc0;db22f5b[880]<=npd_buf_status_vc0;db22f5b[869]<=zk6647f[0];db22f5b[854]<=enf2a17;db22f5b[837]<=tx_ca_cplh[0];db22f5b[826]<=nr40c7a[0];db22f5b[812]<=qg4c1f3[0];db22f5b[811]<=cmpltr_abort_p;db22f5b[808]<=cmfafa5[0];db22f5b[789]<=jr1997b[0];db22f5b[779]<=ykf5123[0];db22f5b[771]<=tx_req_vc0;db22f5b[752]<=tx_lbk_data[0];db22f5b[749]<=co1508e[0];db22f5b[748]<=phy_l2_state[0];db22f5b[745]<=fn450b8[0];db22f5b[729]<=bn81991[0];db22f5b[718]<=ie92eeb[0];db22f5b[709]<=tu42f2b;db22f5b[706]<=alc3d44[0];db22f5b[704]<=pf71f9d[0];db22f5b[700]<=np_req_pend;db22f5b[699]<=phy_l0s_tx_state[0];db22f5b[694]<=tx_end[0];db22f5b[689]<=gd950bc;db22f5b[686]<=asb_data[0];db22f5b[653]<=ho478fe[0];db22f5b[600]<=vx3751c[0];db22f5b[564]<=tx_ca_ph[0];db22f5b[558]<=rx_st[0];db22f5b[554]<=pu1e020;db22f5b[503]<=dfrm_ddata[0];db22f5b[465]<=je30ba7[0];db22f5b[440]<=nph_buf_status_vc0;db22f5b[418]<=rv3d34e[0];db22f5b[405]<=cmpltr_abort_np;db22f5b[374]<=rx_malf_tlp[0];db22f5b[372]<=os68a17[0];db22f5b[359]<=wwfa867[0];db22f5b[353]<=icd473e[0];db22f5b[352]<=uv4e3f3[0];db22f5b[350]<=ur_p_ext;db22f5b[347]<=tx_st[0];db22f5b[343]<=phy_kcntl[0];db22f5b[326]<=vx28f1f[0];db22f5b[251]<=rxtp_data[0];db22f5b[220]<=pd_buf_status_vc0;db22f5b[209]<=fnc7a69[0];db22f5b[202]<=cmpln_tout;db22f5b[187]<=rx_us_req[0];db22f5b[186]<=ph2d142[0];db22f5b[176]<=ls89c7e[0];db22f5b[173]<=tx_data[0];db22f5b[171]<=phy_data[0];db22f5b[125]<=tlpdec_data[0];db22f5b[110]<=ph_buf_status_vc0;db22f5b[101]<=phy_status;db22f5b[93]<=aa82254[0];db22f5b[88]<=gbdc75c[0];db22f5b[55]<=tx_nlfy_vc0;db22f5b[46]<=kd7044a[0];db22f5b[27]<=tx_end_vc0;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule































`timescale 1 ns / 100 ps
module pcie_x1_pcie_core_wrap #(
   parameter LANE_WIDTH = 4,   parameter D_WIDTH    = 64 )
   (
   input wire                sys_clk_250,     
   input wire                sys_clk_125,     
   input wire                rst_n,           

   input wire                inta_n, 
   input wire  [7:0]         msi, 

   `ifdef WISHBONE
      
      input wire             RST_I,           
      input wire             CLK_I,           
      input wire [3:0]       SEL_I,           
      input wire             WE_I,            
      input wire             STB_I,           
      input wire             CYC_I,           
      input wire [31:0]      DAT_I,           
      input wire [12:0]      ADR_I,           
      input wire [31:0]      CHAIN_RDAT_in,   
      input wire             CHAIN_ACK_in,    
   `else
      input wire             force_lsm_active, 
      input wire             force_rec_ei,     
      input wire             force_phy_status, 
      input wire             force_disable_scr,

      input wire             hl_snd_beacon,    
      input wire             hl_disable_scr,   
      input wire             hl_gto_dis,       
      input wire             hl_gto_det,       
      input wire             hl_gto_hrst,      
      input wire             hl_gto_l0stx,     
      input wire             hl_gto_l1,        
      input wire             hl_gto_l2,        
      input wire             hl_gto_l0stxfts,  
      input wire [LANE_WIDTH-1:0] hl_gto_lbk,       
      input wire             hl_gto_rcvry,     
      input wire             hl_gto_cfg,       
      input wire             no_pcie_train,    

      
      input wire  [1:0]      tx_dllp_val,      
      input wire  [2:0]      tx_pmtype,        
      input wire  [23:0]     tx_vsd_data,      
   `endif
   `ifdef ID_INTF
      input wire [15:0]      vendor_id ,      
      input wire [15:0]      device_id ,      
      input wire [7:0]       rev_id ,         
      input wire [23:0]      class_code ,     
      input wire [15:0]      subsys_ven_id ,  
      input wire [15:0]      subsys_id ,      
      input wire             load_id ,        
   `endif
   
   input wire                tx_req_vc0,          
   input wire [D_WIDTH-1:0]  tx_data_vc0,         
   input wire                tx_st_vc0,           
   input wire                tx_end_vc0,          
   input wire                tx_nlfy_vc0,         
   input wire                ph_buf_status_vc0,   
   input wire                pd_buf_status_vc0,   
   input wire                nph_buf_status_vc0,  
   input wire                npd_buf_status_vc0,  
   input wire                ph_processed_vc0,    
   input wire                pd_processed_vc0,    
   input wire                nph_processed_vc0,   
   input wire                npd_processed_vc0,   
   input wire [7:0]          pd_num_vc0,          
   input wire [7:0]          npd_num_vc0,         
   `ifdef X4
      input wire             tx_dwen_vc0,         
   `endif  

   
   `ifdef X1
      input wire  [7:0]     rxp_data,        
      input wire            rxp_data_k,      
      input wire            rxp_valid,       
      input wire            rxp_elec_idle,   
      input wire  [2:0]     rxp_status,      
   `endif
   `ifdef X4
      input wire  [7:0]      rxp_data_ln0,        
      input wire             rxp_data_k_ln0,      
      input wire             rxp_valid_ln0,       
      input wire             rxp_elec_idle_ln0,   
      input wire  [2:0]      rxp_status_ln0,      

      input wire  [7:0]      rxp_data_ln1,        
      input wire             rxp_data_k_ln1,      
      input wire             rxp_valid_ln1,       
      input wire             rxp_elec_idle_ln1,   
      input wire  [2:0]      rxp_status_ln1,      

      input wire  [7:0]      rxp_data_ln2,        
      input wire             rxp_data_k_ln2,      
      input wire             rxp_valid_ln2,       
      input wire             rxp_elec_idle_ln2,   
      input wire  [2:0]      rxp_status_ln2,      

      input wire  [7:0]      rxp_data_ln3,        
      input wire             rxp_data_k_ln3,      
      input wire             rxp_valid_ln3,       
      input wire             rxp_elec_idle_ln3,   
      input wire  [2:0]      rxp_status_ln3,      
   `endif
   input wire                phy_status,      

   `ifdef AER
      `ifdef ECRC
         output wire         pcie_x1_ecrc_gen_enb , 
         output wire         pcie_x1_ecrc_chk_enb , 
      `endif
   `endif

   
   `ifdef AER
      input [127:0]          err_tlp_header , 
                                              
   `endif

   input wire                cmpln_tout ,     
   input wire                cmpltr_abort_np ,
   input wire                cmpltr_abort_p , 
   input wire                unexp_cmpln ,    
   input wire                ur_np_ext ,      
   input wire                ur_p_ext ,       
   input wire                np_req_pend ,    
   input wire                pme_status ,     
   `ifdef GEN2
      input wire             flr_rdy_in ,     
   `endif

   
   input wire  [D_WIDTH-1:0]   tx_lbk_data,   
   input wire  [D_WIDTH/8-1:0] tx_lbk_kcntl,  

   output wire                  tx_lbk_rdy,   
   output wire [D_WIDTH-1:0]    rx_lbk_data,  
   output wire [D_WIDTH/8-1:0]  rx_lbk_kcntl, 
   `ifdef WISHBONE
      
      output wire            ACK_O,           
      output wire            IRQ_O,           
      output wire [31:0]     DAT_O,           
   `else
      
      output wire            tx_dllp_sent,    
      output wire [2:0]      rxdp_pmd_type,   
      output wire [23:0]     rxdp_vsd_data ,  
      output wire [1:0]      rxdp_dllp_val,   
   `endif

   `ifdef X1
      output wire [7:0]     txp_data,        
      output wire           txp_data_k,      
      output wire           txp_elec_idle,   
      output wire           txp_compliance,  
      output wire           rxp_polarity,    
   `endif
   `ifdef X4
      output wire [7:0]      txp_data_ln0,        
      output wire            txp_data_k_ln0,      
      output wire            txp_elec_idle_ln0,   
      output wire            txp_compliance_ln0,  
      output wire            rxp_polarity_ln0,    

      output wire [7:0]      txp_data_ln1,        
      output wire            txp_data_k_ln1,      
      output wire            txp_elec_idle_ln1,   
      output wire            txp_compliance_ln1,  
      output wire            rxp_polarity_ln1,    

      output wire [7:0]      txp_data_ln2,        
      output wire            txp_data_k_ln2,      
      output wire            txp_elec_idle_ln2,   
      output wire            txp_compliance_ln2,  
      output wire            rxp_polarity_ln2,    

      output wire [7:0]      txp_data_ln3,        
      output wire            txp_data_k_ln3,      
      output wire            txp_elec_idle_ln3,   
      output wire            txp_compliance_ln3,  
      output wire            rxp_polarity_ln3,    
   `endif
   output wire               txp_detect_rx_lb,
   output wire               reset_n,         
   output wire [1:0]         power_down,      

   output wire               phy_pol_compliance,
   output wire [3:0]         phy_ltssm_state, 
   `ifdef X4
      output wire [2:0]      phy_cfgln_sum,   
      output wire [3:0]      phy_cfgln,       
      output wire            tx_val,          
   `endif
   output wire               tx_rdy_vc0,      
   output wire [8:0]         tx_ca_ph_vc0,    
   output wire [12:0]        tx_ca_pd_vc0,    
   output wire [8:0]         tx_ca_nph_vc0,   
   output wire [12:0]        tx_ca_npd_vc0,   
   output wire [8:0]         tx_ca_cplh_vc0,  
   output wire [12:0]        tx_ca_cpld_vc0,  
   output wire               tx_ca_p_recheck_vc0, 
   output wire               tx_ca_cpl_recheck_vc0, 
   output wire [D_WIDTH-1:0] rx_data_vc0,     
   output wire               rx_st_vc0,       
   output wire               rx_end_vc0,      
   `ifdef X4
      output wire            rx_dwen_vc0,     
   `endif
   `ifdef ECRC
      output wire            rx_pcie_x1_ecrc_err_vc0 ,
   `endif
   output wire               rx_us_req_vc0 ,  
   output wire               rx_malf_tlp_vc0 ,

   output wire [6:0]         rx_bar_hit ,     

   output wire [2:0]         mm_enable ,     
   output wire               msi_enable ,    

   
   output wire [7:0]         bus_num ,        
   output wire [4:0]         dev_num ,        
   output wire [2:0]         func_num ,       
   output wire [1:0]         pm_power_state , 
   output wire               pme_en ,         
   output wire [5:0]         cmd_reg_out ,    
   output wire [14:0]        dev_cntl_out ,   
   output wire [7:0]         lnk_cntl_out ,   
   `ifdef GEN2
      output wire [4:0]      dev_cntl_2_out , 
      output wire            initiate_flr ,   
   `endif

   
   output wire               tx_rbuf_empty,   
   output wire               tx_dllp_pend,    
   output wire               rx_tlp_rcvd,     

   
   output wire               dl_inactive,     
   output wire               dl_init,         
   output wire               dl_active,       
   output wire               dl_up              ) ;

`ifdef WISHBONE

`else

`endif

`ifdef ID_INTF

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef AER

`ifdef ECRC

`endif

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef WISHBONE

`else

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif
reg rst_n_split;
reg cz4168c;
reg [7 : 0] ou82307;
reg aa9761b;
reg [D_WIDTH - 1 : 0] ldd86c5;
reg czc362f;
reg vk1b17d;
reg bld8bea;
reg vic5f56;
reg ri2fab3;
reg ea7d59b;
reg iceacd8;
reg kq566c1;
reg ksb3608;
reg hd9b041;
reg thd820e;
reg [7 : 0] mec1077;
reg [7 : 0] ux83b8;
reg xw426d8;
reg ykde8b1;
reg byf4589;
reg hqa2c4a;
reg bn16253;
reg sjb129e;
reg ng894f4;
reg hb4a7a2;
reg nef1611;
reg [D_WIDTH - 1 : 0] gq15d1a;
reg [D_WIDTH / 8 - 1 : 0] xj74685;
reg [2047:0] db22f5b;
wire [28:0] ux17adf;


`ifdef WISHBONE

`else

`endif

`ifdef ID_INTF

`else

`endif

`ifdef GEN2

`endif

`ifdef CFG_VCC

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef AER

`ifdef ECRC

`endif

`endif

`ifdef AER

`endif

`ifdef GEN2

`endif

`ifdef WISHBONE

`else

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef X1

`endif

`ifdef X4

`endif

`ifdef ECRC

`endif

`ifdef X4

`endif

`ifdef GEN2

`endif

localparam ribd6fd = 29,jceb7ea = 32'hfdffca4b;
localparam [31:0] qt5bf52 = jceb7ea;
localparam ipfd4ab = jceb7ea & 4'hf;
localparam [11:0] dm52ae0 = 'h7ff;
wire [(1 << ipfd4ab) -1:0] gdab81d;
reg [ribd6fd-1:0] uie0769;
reg [ipfd4ab-1:0] kf1da4e [0:1];
reg [ipfd4ab-1:0] xw693a5;
reg ay49d2b;
integer kd4e959;
integer jp74acc;


`ifdef WISHBONE


`else


`endif


`ifdef ID_INTF


`else


`endif


`ifdef GEN2


`endif


`ifdef CFG_VCC


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef AER


`ifdef ECRC


`endif


`endif


`ifdef AER


`endif


`ifdef GEN2


`endif


`ifdef WISHBONE


`else


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef X1


`endif


`ifdef X4


`endif


`ifdef ECRC


`endif


`ifdef X4


`endif


`ifdef GEN2


`endif






pcie_x1_qi10e94 #(   .LANE_WIDTH       ( LANE_WIDTH ) ,   .D_WIDTH          ( D_WIDTH )   )   ou8d4b6(      .sys_clk_250                ( sys_clk_250 ) ,   .sys_clk_125                ( sys_clk_125 ) ,   .rst_n                      ( rst_n_split ),   .term_all_cfg               ( `TERM_ALL_CFG ),   .inta_n                     ( cz4168c ),   .msi                        ( ou82307 ),   .msi_tc                     ( 3'b000 ),   


`ifdef WISHBONE
            .RST_I                   ( rst_n_split ),      .CLK_I                   ( CLK_I ),      .ADR_I                   ( ADR_I ),      .DAT_I                   ( DAT_I ),      .SEL_I                   ( SEL_I ),      .WE_I                    ( WE_I ),      .STB_I                   ( STB_I ),      .CYC_I                   ( CYC_I ),      .CHAIN_RDAT_in           ( CHAIN_RDAT_in ),      .CHAIN_ACK_in            ( CHAIN_ACK_in ),


`else
      .SKP_INS_CNT             ( `SKP_INS_CNT ),      .lqfe23b         ( `ACKNAK_LAT_TIME ),      .ls2f7ac          ( `UPDATE_FREQ_PH ),      .hb7bd62          ( `UPDATE_FREQ_PD ),      .godeb16         ( `UPDATE_FREQ_NPH ),      .mef58b1         ( `UPDATE_FREQ_NPD ),      .ec5913            ( `UPDATE_TIMER ),
      .tlp_debug               ( `TLP_DEBUG ),      .force_lsm_active        ( force_lsm_active ),      .force_rec_ei            ( force_rec_ei ),      .force_phy_status        ( force_phy_status ),      .force_disable_scr       ( force_disable_scr ),      .hl_snd_beacon           ( hl_snd_beacon ),      .hl_disable_scr          ( hl_disable_scr ),      .hl_gto_dis              ( hl_gto_dis ),      .hl_gto_det              ( hl_gto_det ),      .hl_gto_hrst             ( hl_gto_hrst ),      .hl_gto_l0stx            ( hl_gto_l0stx ),      .hl_gto_l1               ( hl_gto_l1 ),      .hl_gto_l2               ( hl_gto_l2 ),      .hl_gto_l0stxfts         ( hl_gto_l0stxfts ),      .hl_gto_lbk              ( hl_gto_lbk ),      .hl_gto_rcvry            ( hl_gto_rcvry ),      .hl_gto_cfg              ( hl_gto_cfg ),      .no_pcie_train           ( no_pcie_train ),
            .tx_dllp_val             ( tx_dllp_val ),      .tx_pmtype               ( tx_pmtype ),      .tx_vsd_data             ( tx_vsd_data ),


`endif

      


`ifdef ID_INTF
      .vendor_id               ( vendor_id ),      .device_id               ( device_id ),      .rev_id                  ( rev_id ),      .class_code              ( class_code ),      .subsys_ven_id           ( subsys_ven_id ),      .subsys_id               ( subsys_id ),      .load_id                 ( load_id ),


`else
      .yk7dd7f            ( `INIT_REG_000 ) ,      .rgeebf9            ( `INIT_REG_008 ) ,      .faee089            ( `INIT_REG_02C ) ,


`endif
   .gb75fcb               ( `INIT_REG_00C ) ,   .bnafe5d               ( `INIT_REG_010 ) ,   .ip7f2ef               ( `INIT_REG_014 ) ,   .vvf977d               ( `INIT_REG_018 ) ,   .oscbbee               ( `INIT_REG_01C ) ,   .ne5df70               ( `INIT_REG_020 ) ,   .meefb82               ( `INIT_REG_024 ) ,   .qg7dc11               ( `INIT_REG_028 ) ,   .kd7044a               ( `INIT_REG_030 ) ,   .aa82254               ( `INIT_REG_03C ) ,      .ph2d142               ( `INIT_REG_050 ) ,   .os68a17               ( `INIT_REG_054 ) ,   .fn450b8          ( `INIT_PM_DS_DATA_0 ) ,   .rv285c6          ( `INIT_PM_DS_DATA_1 ) ,   .fa42e37          ( `INIT_PM_DS_DATA_2 ) ,   .qv171ba          ( `INIT_PM_DS_DATA_3 ) ,   .hqb8dd4          ( `INIT_PM_DS_DATA_4 ) ,   .mrc6ea3          ( `INIT_PM_DS_DATA_5 ) ,   .vx3751c          ( `INIT_PM_DS_DATA_6 ) ,   .rvba8e7          ( `INIT_PM_DS_DATA_7 ) ,      .icd473e               ( `INIT_REG_070 ) ,      .alc3d44               ( `INIT_REG_090 ) ,   .ba1ea24               ( `INIT_REG_094 ) ,   .ykf5123               ( `INIT_REG_09C ) ,   .jea8918               ( `INIT_REG_0A0 ) ,


`ifdef GEN2
      .qt448c2            ( `INIT_REG_0B4 ) ,


`endif
      .kfbb8eb               ( `INIT_REG_104 ) ,   .gbdc75c               ( `INIT_REG_108 ) ,   


`ifdef CFG_VCC
      .jra58e0            ( `INIT_REG_10C ) ,


`endif

   .ls89c7e          ( `INIT_PH_FC_VC0 ),   .uv4e3f3         ( `INIT_NPH_FC_VC0 ),   .pf71f9d          ( `INIT_PD_FC_VC0 ),   .ux8fcef         ( `INIT_NPD_FC_VC0 ),   .tx_req_vc0              ( aa9761b ),   .tx_data_vc0             ( ldd86c5 ),   .tx_st_vc0               ( czc362f ),   .tx_end_vc0              ( vk1b17d ),   .tx_nlfy_vc0             ( bld8bea ),   .ph_buf_status_vc0       ( vic5f56 ),   .pd_buf_status_vc0       ( ri2fab3 ),   .nph_buf_status_vc0      ( ea7d59b ),   .npd_buf_status_vc0      ( iceacd8 ),   .ph_processed_vc0        ( kq566c1 ),   .pd_processed_vc0        ( ksb3608 ),   .nph_processed_vc0       ( hd9b041 ),   .npd_processed_vc0       ( thd820e ),   .pd_num_vc0              ( mec1077 ),   .npd_num_vc0             ( ux83b8 ),


`ifdef X4
      .tx_dwen_vc0          ( tx_dwen_vc0 ),


`endif

    


`ifdef X1
      .rxp_data             ( rxp_data ),      .rxp_data_k           ( rxp_data_k ),      .rxp_valid            ( rxp_valid ),      .rxp_elec_idle        ( rxp_elec_idle ),      .rxp_status           ( rxp_status ),


`endif



`ifdef X4
      .rxp_data_ln0         ( rxp_data_ln0 ),      .rxp_data_k_ln0       ( rxp_data_k_ln0 ),      .rxp_valid_ln0        ( rxp_valid_ln0 ),      .rxp_elec_idle_ln0    ( rxp_elec_idle_ln0 ),      .rxp_status_ln0       ( rxp_status_ln0 ),
      .rxp_data_ln1         ( rxp_data_ln1 ),      .rxp_data_k_ln1       ( rxp_data_k_ln1 ),      .rxp_valid_ln1        ( rxp_valid_ln1 ),      .rxp_elec_idle_ln1    ( rxp_elec_idle_ln1 ),      .rxp_status_ln1       ( rxp_status_ln1 ),
      .rxp_data_ln2         ( rxp_data_ln2 ),      .rxp_data_k_ln2       ( rxp_data_k_ln2 ),      .rxp_valid_ln2        ( rxp_valid_ln2 ),      .rxp_elec_idle_ln2    ( rxp_elec_idle_ln2 ),      .rxp_status_ln2       ( rxp_status_ln2 ),
      .rxp_data_ln3         ( rxp_data_ln3 ),      .rxp_data_k_ln3       ( rxp_data_k_ln3 ),      .rxp_valid_ln3        ( rxp_valid_ln3 ),      .rxp_elec_idle_ln3    ( rxp_elec_idle_ln3 ),      .rxp_status_ln3       ( rxp_status_ln3 ),


`endif
   .phy_status              ( xw426d8),



`ifdef AER



`ifdef ECRC
         .pcie_x1_ecrc_gen_enb         ( pcie_x1_ecrc_gen_enb ) ,         .pcie_x1_ecrc_chk_enb         ( pcie_x1_ecrc_chk_enb ) ,


`endif



`endif
   


`ifdef AER
      .err_tlp_header          ( err_tlp_header ),


`endif
   .cmpln_tout                 ( ykde8b1 ),   .cmpltr_abort_np            ( byf4589 ),   .cmpltr_abort_p             ( hqa2c4a ),   .unexp_cmpln                ( bn16253 ),   .ur_np_ext                  ( sjb129e ) ,   .ur_p_ext                   ( ng894f4 ) ,   .np_req_pend                ( hb4a7a2 ),   .pme_status                 ( nef1611 ),


`ifdef GEN2
      .flr_rdy_in              ( flr_rdy_in ),


`endif

      .tx_lbk_data                ( gq15d1a ),   .tx_lbk_kcntl               ( xj74685 ),   .tx_lbk_rdy                 ( tx_lbk_rdy ),   .rx_lbk_data                ( rx_lbk_data ),   .rx_lbk_kcntl               ( rx_lbk_kcntl ),


`ifdef WISHBONE
            .DAT_O                   ( DAT_O ),      .ACK_O                   ( ACK_O ),      .IRQ_O                   ( IRQ_O ),


`else
            .tx_dllp_sent            ( tx_dllp_sent ),      .rxdp_pmd_type           ( rxdp_pmd_type ),      .rxdp_vsd_data           ( rxdp_vsd_data ),      .rxdp_dllp_val           ( rxdp_dllp_val ),


`endif




`ifdef X1
      .txp_data               ( txp_data ),      .txp_data_k             ( txp_data_k ),      .txp_elec_idle          ( txp_elec_idle ),      .txp_compliance         ( txp_compliance ),      .rxp_polarity           ( rxp_polarity ),


`endif



`ifdef X4
      .txp_data_ln0               ( txp_data_ln0 ),      .txp_data_k_ln0             ( txp_data_k_ln0 ),      .txp_elec_idle_ln0          ( txp_elec_idle_ln0 ),      .txp_compliance_ln0         ( txp_compliance_ln0 ),      .rxp_polarity_ln0           ( rxp_polarity_ln0 ),
      .txp_data_ln1               ( txp_data_ln1 ),      .txp_data_k_ln1             ( txp_data_k_ln1 ),      .txp_elec_idle_ln1          ( txp_elec_idle_ln1 ),      .txp_compliance_ln1         ( txp_compliance_ln1 ),      .rxp_polarity_ln1           ( rxp_polarity_ln1 ),
      .txp_data_ln2               ( txp_data_ln2 ),      .txp_data_k_ln2             ( txp_data_k_ln2 ),      .txp_elec_idle_ln2          ( txp_elec_idle_ln2 ),      .txp_compliance_ln2         ( txp_compliance_ln2 ),      .rxp_polarity_ln2           ( rxp_polarity_ln2 ),
      .txp_data_ln3               ( txp_data_ln3 ),      .txp_data_k_ln3             ( txp_data_k_ln3 ),      .txp_elec_idle_ln3          ( txp_elec_idle_ln3 ),      .txp_compliance_ln3         ( txp_compliance_ln3 ),      .rxp_polarity_ln3           ( rxp_polarity_ln3 ),


`endif
   .txp_detect_rx_lb           ( txp_detect_rx_lb ),   .reset_n                    ( reset_n ),   .power_down                 ( power_down ),
      .phy_realign_req            (  ),   .phy_ltssm_state            ( phy_ltssm_state ),   .phy_ltssm_substate         (  ),   .phy_pol_compliance         ( phy_pol_compliance ),



`ifdef X1
      .phy_cfgln_sum           (  ),      .me72c69        (  ),


`endif



`ifdef X4
      .phy_cfgln_sum           ( phy_cfgln_sum ),      .phy_cfgln               ( phy_cfgln ),      .pcie_x1_mca_aligned             (  ),      .tx_val                  ( tx_val ),


`endif

   .fa690a8               ( ),   .tx_rdy_vc0                 ( tx_rdy_vc0),   .tx_ca_ph_vc0               ( tx_ca_ph_vc0),   .tx_ca_pd_vc0               ( tx_ca_pd_vc0),   .tx_ca_nph_vc0              ( tx_ca_nph_vc0),   .tx_ca_npd_vc0              ( tx_ca_npd_vc0),   .tx_ca_cplh_vc0             ( tx_ca_cplh_vc0),   .tx_ca_cpld_vc0             ( tx_ca_cpld_vc0),   .tx_ca_p_recheck_vc0        ( tx_ca_p_recheck_vc0 ),   .tx_ca_cpl_recheck_vc0      ( tx_ca_cpl_recheck_vc0 ),   .rx_data_vc0                ( rx_data_vc0),   .rx_st_vc0                  ( rx_st_vc0),   .rx_end_vc0                 ( rx_end_vc0),


`ifdef ECRC
      .rx_pcie_x1_ecrc_err_vc0         ( rx_pcie_x1_ecrc_err_vc0 ),


`endif
   .rx_us_req_vc0              ( rx_us_req_vc0 ),   .rx_malf_tlp_vc0            ( rx_malf_tlp_vc0 ),


`ifdef X4
      .rx_dwen_vc0             ( rx_dwen_vc0),


`endif

   .rx_bar_hit                 ( rx_bar_hit ),   .mm_enable                  ( mm_enable ) ,   .msi_enable                 ( msi_enable ) ,
      .bus_num                    ( bus_num ) ,   .dev_num                    ( dev_num ) ,   .func_num                   ( func_num ) ,   .pm_power_state             ( pm_power_state ) ,   .pme_en                     ( pme_en ) ,   .cmd_reg_out                ( cmd_reg_out ),   .dev_cntl_out               ( dev_cntl_out ),   .lnk_cntl_out               ( lnk_cntl_out ),


`ifdef GEN2
      .dev_cntl_2_out          ( dev_cntl_2_out ),      .initiate_flr            ( initiate_flr ),


`endif

      .tx_rbuf_empty              ( tx_rbuf_empty ),   .tx_dllp_pend               ( tx_dllp_pend ),   .rx_tlp_rcvd                ( rx_tlp_rcvd ),      .dl_inactive                ( dl_inactive ),   .dl_init                    ( dl_init ),   .dl_active                  ( dl_active ),   .dl_up                      ( dl_up )   );
always@* begin rst_n_split<=ux17adf[0];cz4168c<=ux17adf[1];ou82307<={msi>>1,ux17adf[2]};aa9761b<=ux17adf[3];ldd86c5<={tx_data_vc0>>1,ux17adf[4]};czc362f<=ux17adf[5];vk1b17d<=ux17adf[6];bld8bea<=ux17adf[7];vic5f56<=ux17adf[8];ri2fab3<=ux17adf[9];ea7d59b<=ux17adf[10];iceacd8<=ux17adf[11];kq566c1<=ux17adf[12];ksb3608<=ux17adf[13];hd9b041<=ux17adf[14];thd820e<=ux17adf[15];mec1077<={pd_num_vc0>>1,ux17adf[16]};ux83b8<={npd_num_vc0>>1,ux17adf[17]};xw426d8<=ux17adf[18];ykde8b1<=ux17adf[19];byf4589<=ux17adf[20];hqa2c4a<=ux17adf[21];bn16253<=ux17adf[22];sjb129e<=ux17adf[23];ng894f4<=ux17adf[24];hb4a7a2<=ux17adf[25];nef1611<=ux17adf[26];gq15d1a<={tx_lbk_data>>1,ux17adf[27]};xj74685<={tx_lbk_kcntl>>1,ux17adf[28]};end
always@* begin db22f5b[2047]<=inta_n;db22f5b[2046]<=msi[0];db22f5b[2044]<=tx_req_vc0;db22f5b[2040]<=tx_data_vc0[0];db22f5b[2033]<=tx_st_vc0;db22f5b[2019]<=tx_end_vc0;db22f5b[2011]<=npd_processed_vc0;db22f5b[1991]<=tx_nlfy_vc0;db22f5b[1974]<=pd_num_vc0[0];db22f5b[1935]<=ph_buf_status_vc0;db22f5b[1900]<=npd_num_vc0[0];db22f5b[1823]<=pd_buf_status_vc0;db22f5b[1753]<=phy_status;db22f5b[1738]<=cmpltr_abort_p;db22f5b[1619]<=ur_p_ext;db22f5b[1598]<=nph_buf_status_vc0;db22f5b[1458]<=cmpln_tout;db22f5b[1428]<=unexp_cmpln;db22f5b[1338]<=tx_lbk_kcntl[0];db22f5b[1191]<=np_req_pend;db22f5b[1149]<=npd_buf_status_vc0;db22f5b[1023]<=rst_n;db22f5b[1005]<=nph_processed_vc0;db22f5b[869]<=cmpltr_abort_np;db22f5b[809]<=ur_np_ext;db22f5b[669]<=tx_lbk_data[0];db22f5b[502]<=pd_processed_vc0;db22f5b[334]<=pme_status;db22f5b[251]<=ph_processed_vc0;end         assign gdab81d = db22f5b,ux17adf = uie0769; initial begin kd4e959 = $fopen(".fred"); $fdisplay( kd4e959, "%3h\n%3h", (qt5bf52 >> 4) & dm52ae0, (qt5bf52 >> (ipfd4ab+4)) & dm52ae0 ); $fclose(kd4e959); $readmemh(".fred", kf1da4e); end always @ (gdab81d) begin xw693a5 = kf1da4e[1]; for (jp74acc=0; jp74acc<ribd6fd; jp74acc=jp74acc+1) begin uie0769[jp74acc] = gdab81d[xw693a5]; ay49d2b = ^(xw693a5 & kf1da4e[0]); xw693a5 = {xw693a5, ay49d2b}; end end 
endmodule


